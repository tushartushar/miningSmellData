Implementation smell,Namespace,Class,File,Method,Description
Long Method,Org.BouncyCastle.Asn1.Tests,X509NameTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509NameTest.cs,PerformTest,The method has 361 lines of code.
Long Method,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has 161 lines of code.
Long Method,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The method has 289 lines of code.
Long Method,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The method has 309 lines of code.
Long Method,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The method has 366 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The method has 101 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The method has 143 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The method has 307 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The method has 108 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST28147Test.cs,PerformTest,The method has 134 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The method has 209 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,NaccacheSternTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NaccacheSternTest.cs,PerformTest,The method has 136 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The method has 189 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The method has 205 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tls.Tests,DtlsTestSuite,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsTestSuite.cs,AddVersionTests,The method has 117 lines of code.
Long Method,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestSuite,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestSuite.cs,AddVersionTests,The method has 110 lines of code.
Long Method,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,doTestECDsa,The method has 133 lines of code.
Long Method,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,doTestRsa,The method has 138 lines of code.
Long Method,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,PerformTest,The method has 173 lines of code.
Long Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The method has 263 lines of code.
Long Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,PerformTest,The method has 163 lines of code.
Long Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,PerformTest,The method has 173 lines of code.
Long Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The method has 416 lines of code.
Long Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The method has 236 lines of code.
Long Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest1,The method has 165 lines of code.
Long Method,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The method has 159 lines of code.
Long Method,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The method has 110 lines of code.
Long Method,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The method has 227 lines of code.
Long Method,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The method has 130 lines of code.
Long Method,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The method has 138 lines of code.
Long Method,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The method has 173 lines of code.
Long Method,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The method has 358 lines of code.
Long Method,Org.BouncyCastle.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CMacTest.cs,PerformTest,The method has 136 lines of code.
Long Method,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The method has 107 lines of code.
Long Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The method has 127 lines of code.
Long Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation2,The method has 101 lines of code.
Long Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The method has 109 lines of code.
Long Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation3,The method has 115 lines of code.
Long Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The method has 110 lines of code.
Long Method,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The method has 126 lines of code.
Long Method,Org.BouncyCastle.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DESedeTest.cs,doTest,The method has 107 lines of code.
Long Method,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestGP,The method has 158 lines of code.
Long Method,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The method has 153 lines of code.
Long Method,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,PerformTest,The method has 140 lines of code.
Long Method,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The method has 119 lines of code.
Long Method,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The method has 182 lines of code.
Long Method,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The method has 396 lines of code.
Long Method,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The method has 192 lines of code.
Long Method,Org.BouncyCastle.Tests,X509StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509StoreTest.cs,PerformTest,The method has 231 lines of code.
Long Method,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCertLoading,The method has 394 lines of code.
Complex Method,Org.BouncyCastle.Asn1.Tests,AttributeTableUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AttributeTableUnitTest.cs,PerformTest,Cyclomatic complexity of the method is 17
Complex Method,Org.BouncyCastle.Asn1.Tests,CmsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CMSTest.cs,EnvelopedTest,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,CheckCertificate,Cyclomatic complexity of the method is 19
Complex Method,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,CheckAttributeCertificate,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Asn1.Tests,GeneralNameTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GeneralNameTest.cs,PerformTest,Cyclomatic complexity of the method is 12
Complex Method,Org.BouncyCastle.Asn1.Tests,GeneralizedTimeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GeneralizedTimeTest.cs,PerformTest,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Asn1.Tests,LDSSecurityObjectUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\LDSSecurityObjectUnitTest.cs,CheckStatement,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Asn1.Tests,SemanticsInformationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SemanticsInformationUnitTest.cs,CheckStatement,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Asn1.Tests,SignerLocationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SignerLocationUnitTest.cs,CheckValues,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Asn1.Tests,StringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\StringTest.cs,PerformTest,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Asn1.Tests,X509NameTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509NameTest.cs,PerformTest,Cyclomatic complexity of the method is 41
Complex Method,Org.BouncyCastle.Asn1.Tests,X9Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X9Test.cs,EncodePublicKey,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Crypto.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESTest.cs,Perform,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest1,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest2,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,Cyclomatic complexity of the method is 13
Complex Method,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Crypto.Tests,DigestRandomNumberTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestRandomNumberTest.cs,doCountTest,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,CheckTestCase,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Crypto.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST28147Test.cs,PerformTest,Cyclomatic complexity of the method is 13
Complex Method,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest4,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest5,Cyclomatic complexity of the method is 12
Complex Method,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigest,Cyclomatic complexity of the method is 12
Complex Method,Org.BouncyCastle.Crypto.Tests,MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MacTest.cs,Perform,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Crypto.Tests,NaccacheSternTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NaccacheSternTest.cs,PerformTest,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Crypto.Tests,OpenBsdBCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OpenBsdBCryptTest.cs,PerformTest,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,Cyclomatic complexity of the method is 12
Complex Method,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,rfc5054AppendixBTestVectors,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test1,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test2,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,doTestECDsa,Cyclomatic complexity of the method is 17
Complex Method,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,doTestRsa,Cyclomatic complexity of the method is 17
Complex Method,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,PerformTest,Cyclomatic complexity of the method is 22
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Examples,ClearSignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\ClearSignedFileProcessor.cs,SignFile,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedFileProcessor.cs,DecryptFile,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,DecryptFile,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Examples,PublicKeyRingDump,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\PublicKeyRingDump.cs,GetAlgorithm,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpArmoredTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPArmoredTest.cs,PerformTest,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,Cyclomatic complexity of the method is 21
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,PerformTest,Cyclomatic complexity of the method is 15
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,PerformTest,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,Cyclomatic complexity of the method is 26
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,Cyclomatic complexity of the method is 22
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestMissingSubpackets,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest1,Cyclomatic complexity of the method is 35
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest2,Cyclomatic complexity of the method is 15
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest3,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest5,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,TestRevocation,Cyclomatic complexity of the method is 12
Complex Method,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest8,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,Cyclomatic complexity of the method is 35
Complex Method,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,basicStoreTest,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,MeasureChiSquared,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Tests,AesSicTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESSICTest.cs,PerformTest,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Tests,AttrCertSelectorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertSelectorTest.cs,TestSelector,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,equalityAndHashCodeTest,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithCert,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,Cyclomatic complexity of the method is 13
Complex Method,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,Cyclomatic complexity of the method is 14
Complex Method,Org.BouncyCastle.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CMacTest.cs,PerformTest,Cyclomatic complexity of the method is 14
Complex Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation1,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation2,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation3,Cyclomatic complexity of the method is 15
Complex Method,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,pkcs7Test,Cyclomatic complexity of the method is 11
Complex Method,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestGP,Cyclomatic complexity of the method is 12
Complex Method,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Tests,FipsDesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\FIPSDESTest.cs,doTest,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,Cyclomatic complexity of the method is 9
Complex Method,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PSSTest.cs,PerformTest,Cyclomatic complexity of the method is 8
Complex Method,Org.BouncyCastle.Tests,PkixNameConstraintsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixNameConstraintsTest.cs,TestConstraints,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Tests,PkixNameConstraintsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixNameConstraintsTest.cs,TestConstraints,Cyclomatic complexity of the method is 10
Complex Method,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,Cyclomatic complexity of the method is 27
Complex Method,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,Cyclomatic complexity of the method is 16
Complex Method,Org.BouncyCastle.Tests,X509CertificatePairTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509CertificatePairTest.cs,PerformTest,Cyclomatic complexity of the method is 15
Complex Method,Org.BouncyCastle.Tests,X509StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509StoreTest.cs,PerformTest,Cyclomatic complexity of the method is 35
Complex Method,Org.BouncyCastle.Tsp.Tests,ParseTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\ParseTest.cs,requestParse,Cyclomatic complexity of the method is 10
Long Parameter List,Org.BouncyCastle.Asn1.Tests,BiometricDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BiometricDataUnitTest.cs,CheckConstruction,The method has 5 parameters. Parameters: bd' dataType' hashAlgorithm' dataHash' dataUri
Long Parameter List,Org.BouncyCastle.Asn1.Tests,BiometricDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BiometricDataUnitTest.cs,CheckValues,The method has 5 parameters. Parameters: bd' dataType' algID' dataHash' sourceDataURI
Long Parameter List,Org.BouncyCastle.Asn1.Tests,IssuingDistributionPointUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\IssuingDistributionPointTest.cs,checkPoint,The method has 7 parameters. Parameters: size' distributionPoint' onlyContainsUserCerts' onlyContainsCACerts' onlySomeReasons' indirectCRL' onlyContainsAttributeCerts
Long Parameter List,Org.BouncyCastle.Asn1.Tests,IssuingDistributionPointUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\IssuingDistributionPointTest.cs,checkValues,The method has 7 parameters. Parameters: point' distributionPoint' onlyContainsUserCerts' onlyContainsCACerts' onlySomeReasons' indirectCRL' onlyContainsAttributeCerts
Long Parameter List,Org.BouncyCastle.Asn1.Tests,PersonalDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PersonalDataUnitTest.cs,checkConstruction,The method has 7 parameters. Parameters: data' nameOrPseudonym' nameDistinguisher' dateOfBirth' placeOfBirth' gender' postalAddress
Long Parameter List,Org.BouncyCastle.Asn1.Tests,PersonalDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PersonalDataUnitTest.cs,checkValues,The method has 7 parameters. Parameters: data' nameOrPseudonym' nameDistinguisher' dateOfBirth' placeOfBirth' gender' postalAddress
Long Parameter List,Org.BouncyCastle.Asn1.Tests,ProcurationSyntaxUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ProcurationSyntaxUnitTest.cs,checkConstruction,The method has 5 parameters. Parameters: procuration' country' typeOfSubstitution' thirdPerson' certRef
Long Parameter List,Org.BouncyCastle.Asn1.Tests,ProcurationSyntaxUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ProcurationSyntaxUnitTest.cs,checkValues,The method has 5 parameters. Parameters: procuration' country' typeOfSubstitution' thirdPerson' certRef
Long Parameter List,Org.BouncyCastle.Asn1.Tests,ProfessionInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ProfessionInfoUnitTest.cs,checkConstruction,The method has 6 parameters. Parameters: profInfo' auth' professionItems' professionOids' registrationNumber' addProfInfo
Long Parameter List,Org.BouncyCastle.Asn1.Tests,ProfessionInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ProfessionInfoUnitTest.cs,checkValues,The method has 6 parameters. Parameters: profInfo' auth' professionItems' professionOids' registrationNumber' addProfInfo
Long Parameter List,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,MakeCertificate,The method has 5 parameters. Parameters: subKP' _subDN' issKP' _issDN' _ca
Long Parameter List,Org.BouncyCastle.Crypto.Prng.Test,DrbgTestVector,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\DrbgTestVector.cs,DrbgTestVector,The method has 6 parameters. Parameters: digest' eSource' predictionResistance' nonce' securityStrength' expected
Long Parameter List,Org.BouncyCastle.Crypto.Prng.Test,DrbgTestVector,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\DrbgTestVector.cs,DrbgTestVector,The method has 7 parameters. Parameters: cipher' keySizeInBits' eSource' predictionResistance' nonce' securityStrength' expected
Long Parameter List,Org.BouncyCastle.Crypto.Prng.Test,X931TestVector,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\X931TestVector.cs,X931TestVector,The method has 6 parameters. Parameters: engine' entropyProvider' key' dateTimeVector' predictionResistant' expected
Long Parameter List,Org.BouncyCastle.Crypto.Tests,BlockCipherMonteCarloTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BlockCipherMonteCarloTest.cs,BlockCipherMonteCarloTest,The method has 6 parameters. Parameters: id' iterations' engine' param' input' output
Long Parameter List,Org.BouncyCastle.Crypto.Tests,BlockCipherVectorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BlockCipherVectorTest.cs,BlockCipherVectorTest,The method has 5 parameters. Parameters: id' engine' param' input' output
Long Parameter List,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,checkVectors,The method has 9 parameters. Parameters: count' ccm' k' macSize' n' a' p' t' c
Long Parameter List,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,checkVectors,The method has 11 parameters. Parameters: count' ccm' additionalDataType' k' macSize' n' a' sa' p' t' c
Long Parameter List,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest1,The method has 6 parameters. Parameters: rounds' parameters' v0' v192' v256' v448
Long Parameter List,Org.BouncyCastle.Crypto.Tests,CTSTester,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,CTSTester,The method has 6 parameters. Parameters: enclosingInstance' id' cipher' parameters' input' output
Long Parameter List,Org.BouncyCastle.Crypto.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESedeTest.cs,WrapTest,The method has 5 parameters. Parameters: id' kek' iv' input' output
Long Parameter List,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,DoTestHMacDetECDsa,The method has 6 parameters. Parameters: detSigner' digest' data' privKey' r' s
Long Parameter List,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,vectorTest,The method has 5 parameters. Parameters: digest' count' resBuf' input' expected
Long Parameter List,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,checkVectors,The method has 8 parameters. Parameters: count' k' macSize' n' a' p' t' c
Long Parameter List,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,checkVectors,The method has 10 parameters. Parameters: count' additionalDataType' k' macSize' n' a' sa' p' t' c
Long Parameter List,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,runCheckVectors,The method has 8 parameters. Parameters: count' encEax' decEax' additionalDataType' sa' p' t' c
Long Parameter List,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RunTestCase,The method has 9 parameters. Parameters: encM' decM' testName' K' IV' A' P' C' T
Long Parameter List,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RunTestCase,The method has 10 parameters. Parameters: encM' decM' testName' K' IV' A' SA' P' C' T
Long Parameter List,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,CheckTestCase,The method has 7 parameters. Parameters: encCipher' decCipher' testName' SA' P' C' T
Long Parameter List,Org.BouncyCastle.Crypto.Tests,TestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GMacTest.cs,TestCase,The method has 5 parameters. Parameters: name' key' iv' ad' tag
Long Parameter List,Org.BouncyCastle.Crypto.Tests,HCFamilyTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyTest.cs,HCTest,The method has 5 parameters. Parameters: hc' test' key' IV' expected
Long Parameter List,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestMac,The method has 5 parameters. Parameters: digest' keys' data' expected' truncExpected
Long Parameter List,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,EncDec,The method has 6 parameters. Parameters: label' pubParameters' privParameters' seed' input' output
Long Parameter List,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,OaepVecTest,The method has 7 parameters. Parameters: keySize' no' pubParam' privParam' seed' input' output
Long Parameter List,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,CheckTestCase,The method has 6 parameters. Parameters: encCipher' decCipher' testName' macLengthBytes' P' C
Long Parameter List,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,UpdateCiphers,The method has 6 parameters. Parameters: c1' c2' S' i' includeAAD' includePlaintext
Long Parameter List,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,testSig,The method has 6 parameters. Parameters: id' pub' prv' slt' msg' sig
Long Parameter List,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,doTestSig,The method has 6 parameters. Parameters: id' pub' prv' slt' msg' sig
Long Parameter List,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,Run1,The method has 5 parameters. Parameters: id' password' salt' iCount' result
Long Parameter List,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,Run2,The method has 5 parameters. Parameters: id' password' salt' iCount' result
Long Parameter List,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,Run3,The method has 5 parameters. Parameters: id' password' salt' iCount' result
Long Parameter List,Org.BouncyCastle.Crypto.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PbeTest,The method has 5 parameters. Parameters: enclosingInstance' id' cipher' sample' keySize
Long Parameter List,Org.BouncyCastle.Crypto.Tests,RC2WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RC2WrapTest.cs,wrapTest,The method has 5 parameters. Parameters: id' paramsWrap' paramsUnwrap' inBytes' outBytes
Long Parameter List,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,doWrapTest,The method has 7 parameters. Parameters: id' engine' kek' iv' rand' inBytes' outBytes
Long Parameter List,Org.BouncyCastle.Crypto.Tests,Case,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SkeinDigestTest.cs,Case,The method has 5 parameters. Parameters: blockSize' outputSize' message' key' digest
Long Parameter List,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,CheckReset,The method has 5 parameters. Parameters: cipher' cipherParams' encrypt' pretext' posttext
Long Parameter List,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test1,The method has 6 parameters. Parameters: rounds' parameters' v0' v192' v256' v448
Long Parameter List,Org.BouncyCastle.Crypto.Tests,SerpentTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SerpentTest.cs,DoEax,The method has 6 parameters. Parameters: key' iv' pt' aad' tagLength' expected
Long Parameter List,Org.BouncyCastle.Crypto.Tests,MyShakeDigest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,MyDoFinal,The method has 5 parameters. Parameters: output' outOff' outLen' partialByte' partialBits
Long Parameter List,Org.BouncyCastle.Crypto.Tests,StreamCipherVectorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherVectorTest.cs,StreamCipherVectorTest,The method has 5 parameters. Parameters: id' cipher' param' input' output
Long Parameter List,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestUtilities.cs,LoadSignerCredentials,The method has 5 parameters. Parameters: context' supportedSignatureAlgorithms' signatureAlgorithm' certResource' keyResource
Long Parameter List,Org.BouncyCastle.Ocsp.Tests,OcspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTestUtil.cs,MakeCertificate,The method has 5 parameters. Parameters: _subKP' _subDN' _issKP' _issDN' _ca
Long Parameter List,Org.BouncyCastle.Ocsp.Tests,OcspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTestUtil.cs,MakeECDsaCertificate,The method has 5 parameters. Parameters: _subKP' _subDN' _issKP' _issDN' _ca
Long Parameter List,Org.BouncyCastle.Ocsp.Tests,OcspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTestUtil.cs,MakeCertificate,The method has 6 parameters. Parameters: _subKP' _subDN' _issKP' _issDN' algorithm' _ca
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,ByteArrayHandler,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\ByteArrayHandler.cs,Encrypt,The method has 5 parameters. Parameters: clearData' passPhrase' fileName' algorithm' armor
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,ClearSignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\ClearSignedFileProcessor.cs,SignFile,The method has 5 parameters. Parameters: fileName' keyIn' outputStream' pass' digestName
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DetachedSignatureProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DetachedSignatureProcessor.cs,CreateSignature,The method has 5 parameters. Parameters: inputFileName' keyFileName' outputFileName' pass' armor
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DetachedSignatureProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DetachedSignatureProcessor.cs,CreateSignature,The method has 5 parameters. Parameters: fileName' keyIn' outputStream' pass' armor
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DirectKeySignature,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DirectKeySignature.cs,SignPublicKey,The method has 6 parameters. Parameters: secretKey' secretKeyPass' keyToBeSigned' notationName' notationValue' armor
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,ExportKeyPair,The method has 7 parameters. Parameters: secretOut' publicOut' dsaKp' elgKp' identity' passPhrase' armor
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedFileProcessor.cs,EncryptFile,The method has 5 parameters. Parameters: outputFileName' inputFileName' encKeyFileName' armor' withIntegrityCheck
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedFileProcessor.cs,EncryptFile,The method has 5 parameters. Parameters: outputStream' fileName' encKey' armor' withIntegrityCheck
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,EncryptFile,The method has 5 parameters. Parameters: outputFileName' inputFileName' encKeyFileName' armor' withIntegrityCheck
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,EncryptFile,The method has 5 parameters. Parameters: outputStream' fileName' encKey' armor' withIntegrityCheck
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,PbeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\PbeFileProcessor.cs,EncryptFile,The method has 5 parameters. Parameters: outputFileName' inputFileName' passPhrase' armor' withIntegrityCheck
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,PbeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\PbeFileProcessor.cs,EncryptFile,The method has 5 parameters. Parameters: outputStream' fileName' passPhrase' armor' withIntegrityCheck
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,RsaKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\RsaKeyRingGenerator.cs,ExportKeyPair,The method has 7 parameters. Parameters: secretOut' publicOut' publicKey' privateKey' identity' passPhrase' armor
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Examples,SignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\SignedFileProcessor.cs,SignFile,The method has 6 parameters. Parameters: fileName' keyIn' outputStream' pass' armor' compress
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestTextSig,The method has 6 parameters. Parameters: encAlgorithm' hashAlgorithm' pubKey' privKey' data' canonicalData
Long Parameter List,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestTextSigV3,The method has 6 parameters. Parameters: encAlgorithm' hashAlgorithm' pubKey' privKey' data' canonicalData
Long Parameter List,Org.BouncyCastle.Security.Tests,TestParameterUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestParameterUtil.cs,doTestCreateKeyParameter,The method has 5 parameters. Parameters: algorithm' oid' keyBits' expectedType' random
Long Parameter List,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapTest,The method has 5 parameters. Parameters: id' wrappingAlgorithm' kek' inBytes' outBytes
Long Parameter List,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestAlgorithm,The method has 5 parameters. Parameters: name' keyBytes' iv' plainText' cipherText
Long Parameter List,Org.BouncyCastle.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DESedeTest.cs,wrapTest,The method has 6 parameters. Parameters: alg' id' kek' iv' input' output
Long Parameter List,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestGP,The method has 5 parameters. Parameters: algName' size' privateValueSize' g' p
Long Parameter List,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,checkSignature,The method has 8 parameters. Parameters: size' sKey' vKey' sgr' k' message' r' s
Long Parameter List,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,Test,The method has 5 parameters. Parameters: _name' _data' _explicit' _accept' _debug
Long Parameter List,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,Test,The method has 6 parameters. Parameters: _name' _data' _ipolset' _explicit' _accept' _debug
Long Parameter List,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,makePbeCipherUsingParam,The method has 5 parameters. Parameters: algorithm' forEncryption' password' salt' iterationCount
Long Parameter List,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,makePbeCipherWithoutParam,The method has 5 parameters. Parameters: algorithm' forEncryption' password' salt' iterationCount
Long Parameter List,Org.BouncyCastle.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,Pkcs12Test,The method has 5 parameters. Parameters: baseAlgorithm' algorithm' digest' keySize' ivSize
Long Parameter List,Org.BouncyCastle.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PSSTest.cs,rawModeTest,The method has 5 parameters. Parameters: sigName' digestOID' privKey' pubKey' random
Long Parameter List,Org.BouncyCastle.Tests,PkixNameConstraintsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixNameConstraintsTest.cs,TestConstraints,The method has 8 parameters. Parameters: nameType' testName' testNameIsConstraint' testNameIsNotConstraint' testNames1' testNames2' testUnion' testInterSection
Long Parameter List,Org.BouncyCastle.Tests,PkixNameConstraintsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixNameConstraintsTest.cs,TestConstraints,The method has 8 parameters. Parameters: nameType' testName' testNameIsConstraint' testNameIsNotConstraint' testNames1' testNames2' testUnion' testInterSection
Long Parameter List,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateIntmedCert,The method has 5 parameters. Parameters: pubKey' caPrivKey' caPubKey' policies' policyMap
Long Parameter List,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,TestPolicies,The method has 6 parameters. Parameters: index' trustCert' intCert' endCert' requirePolicies' okay
Long Parameter List,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,rawModeTest,The method has 5 parameters. Parameters: sigName' digestOID' privKey' pubKey' random
Long Parameter List,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,DoExceptionTest,The method has 5 parameters. Parameters: trustAnchor' certs' crls' index' message
Long Parameter List,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,DoExceptionTest,The method has 6 parameters. Parameters: trustAnchor' certs' crls' policies' index' message
Long Parameter List,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,DoExceptionTest,The method has 6 parameters. Parameters: trustAnchor' certs' crls' index' mesStart' mesEnd
Long Parameter List,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,doBuilderTest,The method has 6 parameters. Parameters: trustAnchor' certs' crls' initialPolicies' policyMappingInhibited' anyPolicyInhibited
Long Parameter List,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,MakeCertificate,The method has 5 parameters. Parameters: _subKP' _subDN' _issKP' _issDN' _ca
Long Parameter List,Org.BouncyCastle.Utilities.Test,SimpleTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\test\SimpleTest.cs,MakeUtcDateTime,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,Org.BouncyCastle.Utilities.Test,SimpleTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\test\SimpleTest.cs,MakeUtcDateTime,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Identifier,Org.BouncyCastle.Bcpg.OpenPgp.Examples.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\test\AllTests.cs,,The length of the parameter crNlSignedMessageTrailingWhiteSpace is 35.
Long Identifier,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpClearSignedSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPClearSignedSignatureTest.cs,,The length of the parameter crNlSignedMessageTrailingWhiteSpace is 35.
Long Identifier,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,,The length of the parameter PREFERRED_SYMMETRIC_ALGORITHMS is 30.
Long Identifier,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,,The length of the parameter PREFERRED_COMPRESSION_ALGORITHMS is 32.
Long Identifier,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,,The length of the parameter holderCertWithBaseCertificateID is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_01_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_01_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_CP_02_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_CP_02_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_CP_02_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_CP_02_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_02_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_02_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_02_04_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_02_05_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_03_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_03_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_03_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_03_04_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_04_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_04_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_04_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_04_04_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_04_05_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_04_06_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_05_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_06_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_CP_06_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_01_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_02_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_02_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_02_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_02_04_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_04_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_05_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_05_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_05_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_06_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_06_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_IC_06_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PP_01_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PP_01_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_01_03_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_01_03_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_01_03_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_01_03_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_01_04_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_01_04_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_01_04_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_01_04_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_01_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_01_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_01_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_01_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_01_06_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_01_06_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_01_06_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_01_06_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_01_06_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_01_06_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_01_07_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_01_07_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_01_07_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_01_07_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_01_07_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_01_07_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_01_08_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_01_08_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_01_08_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_01_08_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_01_08_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_01_08_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_01_09_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_01_09_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_01_09_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PP_01_09_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_01_09_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_01_09_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_01_09_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PP_01_09_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_06_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_06_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_06_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PP_06_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_06_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_06_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_06_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PP_06_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_06_02_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_06_02_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_06_02_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PP_06_02_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_06_02_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_06_02_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_06_02_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PP_06_02_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_06_03_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_06_03_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_06_03_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PP_06_03_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_06_03_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_06_03_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_06_03_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PP_06_03_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_06_04_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_06_04_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_06_04_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PP_06_04_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_06_04_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_06_04_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_06_04_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PP_06_04_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PP_06_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PP_06_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PP_06_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PP_06_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PP_06_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PP_06_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PP_06_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PP_06_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PP_08_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PP_08_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PP_08_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PP_08_04_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PP_08_05_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PP_08_06_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PL_01_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PL_01_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PL_01_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PL_01_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PL_01_02_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PL_01_02_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PL_01_02_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PL_01_02_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PL_01_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_PL_01_04_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PL_01_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PL_01_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PL_01_05_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PL_01_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PL_01_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PL_01_05_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PL_01_06_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PL_01_06_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PL_01_06_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PL_01_06_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PL_01_06_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PL_01_06_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PL_01_07_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PL_01_07_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PL_01_07_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PL_01_07_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PL_01_07_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PL_01_07_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PL_01_07_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PL_01_07_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PL_01_08_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PL_01_08_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PL_01_08_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PL_01_08_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PL_01_08_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PL_01_08_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PL_01_08_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PL_01_08_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PL_01_09_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PL_01_09_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PL_01_09_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PL_01_09_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PL_01_09_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PL_01_09_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PL_01_09_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PL_01_09_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_PL_01_10_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_PL_01_10_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_3_PL_01_10_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_4_PL_01_10_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_PL_01_10_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_PL_01_10_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_3_PL_01_10_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_4_PL_01_10_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_02_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_RL_03_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_RL_03_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_03_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_03_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_RL_03_03_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_RL_03_03_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_RL_05_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_RL_05_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_RL_05_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_RL_05_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_05_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_1_RL_06_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_2_RL_06_01_crt is 39.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_1_RL_06_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_CRL_2_RL_06_01_crl is 31.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_06_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_07_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_07_02_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_07_03_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_08_01_crt is 37.
Long Identifier,Org.BouncyCastle.Tests,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NistCertPathTest.cs,,The length of the parameter Intermediate_Certificate_RL_09_01_crt is 37.
Long Statement,Org.BouncyCastle.Asn1.Tests,CmsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CMSTest.cs,SignedTest,The length of the statement  "				sData = new SignedData(sData.DigestAlgorithms' sData.EncapContentInfo' sData.Certificates' sData.CRLs' sData.SignerInfos); " is 122.
Long Statement,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV1CertGenerate,The length of the statement  "            SubjectPublicKeyInfo info = new SubjectPublicKeyInfo(new AlgorithmIdentifier(PkcsObjectIdentifiers.RsaEncryption' DerNull.Instance)' " is 132.
Long Statement,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The length of the statement  "			extensions.Add(X509Extensions.AuthorityKeyIdentifier' new X509Extension(true' new DerOctetString(CreateAuthorityKeyId(info' new X509Name("CN=AU'O=Bouncy Castle'OU=Test 2")' 2)))); " is 179.
Long Statement,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The length of the statement  "			extensions.Add(X509Extensions.SubjectKeyIdentifier' new X509Extension(true' new DerOctetString(new SubjectKeyIdentifier(info)))); " is 129.
Long Statement,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The length of the statement  "			extensions.Add(X509Extensions.KeyUsage' new X509Extension(false' new DerOctetString(new KeyUsage(KeyUsage.DataEncipherment)))); " is 127.
Long Statement,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The length of the statement  "            extensions.Add(X509Extensions.AuthorityKeyIdentifier' new X509Extension(true' new DerOctetString(CreateAuthorityKeyId(info' new X509Name("CN=AU'O=Bouncy Castle'OU=Test 2")' 2)))); " is 179.
Long Statement,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The length of the statement  "            extensions.Add(X509Extensions.IssuerAlternativeName' new X509Extension(false' new DerOctetString(GeneralNames.GetInstance(new DerSequence(new GeneralName(new X509Name("CN=AU'O=Bouncy Castle'OU=Test 3"))))))); " is 208.
Long Statement,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The length of the statement  "            extensions.Add(X509Extensions.IssuingDistributionPoint' new X509Extension(true' new DerOctetString(IssuingDistributionPoint.GetInstance(DerSequence.Empty)))); " is 158.
Long Statement,Org.BouncyCastle.Asn1.Tests,IssuingDistributionPointUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\IssuingDistributionPointTest.cs,checkPoint,The length of the statement  "			IssuingDistributionPoint point = new IssuingDistributionPoint(distributionPoint' onlyContainsUserCerts' onlyContainsCACerts' onlySomeReasons' indirectCRL' onlyContainsAttributeCerts); " is 183.
Long Statement,Org.BouncyCastle.Asn1.Tests,IssuingDistributionPointUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\IssuingDistributionPointTest.cs,checkPoint,The length of the statement  "			checkValues(point' distributionPoint' onlyContainsUserCerts' onlyContainsCACerts' onlySomeReasons' indirectCRL' onlyContainsAttributeCerts); " is 140.
Long Statement,Org.BouncyCastle.Asn1.Tests,IssuingDistributionPointUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\IssuingDistributionPointTest.cs,checkPoint,The length of the statement  "			checkValues(point' distributionPoint' onlyContainsUserCerts' onlyContainsCACerts' onlySomeReasons' indirectCRL' onlyContainsAttributeCerts); " is 140.
Long Statement,Org.BouncyCastle.Asn1.Tests,OtherCertIDUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OtherCertIDUnitTest.cs,PerformTest,The length of the statement  "			IssuerSerial issuerSerial = new IssuerSerial(new GeneralNames(new GeneralName(new X509Name("CN=test")))' new DerInteger(1)); " is 124.
Long Statement,Org.BouncyCastle.Asn1.Tests,PersonalDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PersonalDataUnitTest.cs,PerformTest,The length of the statement  "			PersonalData data = new PersonalData(nameOrPseudonym' nameDistinguisher' dateOfBirth' placeOfBirth' gender' postalAddress); " is 123.
Long Statement,Org.BouncyCastle.Asn1.Tests,X509NameTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509NameTest.cs,PerformTest,The length of the statement  "                + "55414220536b6169746d656e696e696f20736572746966696b6176696d6f2063656e74726173311730150603550403130e53534320436c6173732033204341310a30080603550405130138"))); " is 158.
Long Statement,Org.BouncyCastle.Asn1.Tests,X509NameTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509NameTest.cs,compositeTest,The length of the statement  "            byte[] enc = Hex.Decode("305e310b300906035504061302415531283026060355040a0c1f546865204c6567696f6e206f662074686520426f756e637920436173746c653125301006035504070c094d656c626f75726e653011060355040b0c0a4173636f742056616c65"); " is 220.
Long Statement,Org.BouncyCastle.Asn1.Tests,X9Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X9Test.cs,EncodePublicKey,The length of the statement  "            SubjectPublicKeyInfo info = new SubjectPublicKeyInfo(new AlgorithmIdentifier(X9ObjectIdentifiers.IdECPublicKey' _params)' p.GetOctets()); " is 137.
Long Statement,Org.BouncyCastle.Cms.Tests,AuthenticatedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\AuthenticatedDataTest.cs,TestECKeyAgree,The length of the statement  "			adGen.AddKeyAgreementRecipient(CmsAuthenticatedDataGenerator.ECDHSha1Kdf' OrigECKP.Private' OrigECKP.Public' ReciECCert' CmsAuthenticatedDataGenerator.Aes128Wrap); " is 163.
Long Statement,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateMacTag,The length of the statement  "            BigInteger macTag = JPakeUtilities.CalculateMacTag("participantId"' "partnerParticipantId"' gx1' gx2' gx3' gx4' keyingMaterial' digest); " is 136.
Long Statement,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateMacTag,The length of the statement  "            JPakeUtilities.ValidateMacTag("partnerParticipantId"' "participantId"' gx3' gx4' gx1' gx2' keyingMaterial' digest' macTag); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateMacTag,The length of the statement  "                JPakeUtilities.ValidateMacTag("participantId"' "partnerParticipantId"' gx1' gx2' gx3' gx4' keyingMaterial' digest' macTag); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateMacTag,The length of the statement  "                JPakeUtilities.ValidateMacTag("participantId"' "partnerParticipantId"' gx3' gx4' gx1' gx2' keyingMaterial' digest' macTag); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The length of the statement  "            BigInteger[] zkp1 = JPakeUtilities.CalculateZeroKnowledgeProof(pg1.P' pg1.Q' pg1.G' gx1' x1' participantId1' digest1' random); " is 126.
Long Statement,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The length of the statement  "            BigInteger[] zkp2 = JPakeUtilities.CalculateZeroKnowledgeProof(pg1.P' pg1.Q' pg1.G' gx2' x2' participantId1' digest1' random); " is 126.
Long Statement,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The length of the statement  "                JPakeUtilities.ValidateZeroKnowledgeProof(pg1.P' pg1.Q' pg1.G' pg1.Q.Add(BigInteger.One)' zkp1' participantId1' digest1); " is 121.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F") " is 125.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")' " is 120.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")' " is 120.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")' " is 126.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F") " is 125.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")' " is 120.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F") " is 125.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The length of the statement  "                    Fail("Test #" + (i + 1) + ".1 failed' expected " + Hex.ToHexString(tv.GetExpectedValue(0)) + " got " + Hex.ToHexString(output)); " is 128.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The length of the statement  "                    Fail("Test #" + (i + 1) + ".2 failed' expected " + Hex.ToHexString(tv.GetExpectedValue(1)) + " got " + Hex.ToHexString(output)); " is 128.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The length of the statement  "            ISP80090Drbg drbg = new CtrSP800Drbg(new KeyParityCipher(tv.Cipher)' tv.KeySizeInBits' tv.SecurityStrength' tv.EntropySource' " is 125.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")' " is 140.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596") " is 133.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")' " is 134.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")' " is 140.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596") " is 133.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")' " is 134.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,PerformTest,The length of the statement  "                    Fail("Test #" + (i + 1) + ".1 failed' expected " + Hex.ToHexString(tv.GetExpectedValue(0)) + " got " + Hex.ToHexString(output)); " is 128.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,PerformTest,The length of the statement  "                    Fail("Test #" + (i + 1) + ".2 failed' expected " + Hex.ToHexString(tv.GetExpectedValue(1)) + " got " + Hex.ToHexString(output)); " is 128.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")' " is 140.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596") " is 133.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")' " is 134.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")' " is 140.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596") " is 133.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The length of the statement  "                .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")' " is 134.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,PerformTest,The length of the statement  "                    Fail("Test #" + (i + 1) + ".1 failed' expected " + Hex.ToHexString(tv.GetExpectedValue(0)) + " got " + Hex.ToHexString(output)); " is 128.
Long Statement,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,PerformTest,The length of the statement  "                    Fail("Test #" + (i + 1) + ".2 failed' expected " + Hex.ToHexString(tv.GetExpectedValue(1)) + " got " + Hex.ToHexString(output)); " is 128.
Long Statement,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The length of the statement  "            chachaTest1(20' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))' " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The length of the statement  "            chachaTest1(20' new ParametersWithIV(new KeyParameter(Hex.Decode("00400000000000000000000000000000"))' Hex.Decode("0000000000000000"))' " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The length of the statement  "            chachaTest1(12' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))' " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The length of the statement  "            chachaTest1(8' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))' " is 134.
Long Statement,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The length of the statement  "            chachaTest2(new ParametersWithIV(new KeyParameter(Hex.Decode("0053A6F94C9FF24598EB3E91E4378ADD3083D6297CCF2275C81B6EC11467BA0D"))' Hex.Decode("0D74DB42A91077DE"))' " is 163.
Long Statement,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The length of the statement  "            chachaTest2(new ParametersWithIV(new KeyParameter(Hex.Decode("0558ABFE51A4F74A9DF04396E93C8FE23588DB2E81D4277ACD2073C6196CBF12"))' Hex.Decode("167DE44BB21980E7"))' " is 163.
Long Statement,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The length of the statement  "            byte[] key1 = new byte[]{(byte) 0x01' (byte) 0x23' (byte) 0x45' (byte) 0x67' (byte) 0x89' (byte) 0xAB' (byte) 0xCD' (byte) 0xEF}; " is 129.
Long Statement,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The length of the statement  "            byte[] key2 = new byte[]{(byte) 0x01' (byte) 0x23' (byte) 0x45' (byte) 0x67' (byte) 0x89' (byte) 0xAB' (byte) 0xCD' (byte) 0xEF' (byte) 0xee' (byte) 0xff }; " is 156.
Long Statement,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The length of the statement  "            test = new CTSTester(this' 2' new CbcBlockCipher(new DesEngine())' new ParametersWithIV(new KeyParameter(key1)' iv)' in1' out2); " is 128.
Long Statement,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The length of the statement  "            test = new CTSTester(this' 3' new CbcBlockCipher(new SkipjackEngine())' new ParametersWithIV(new KeyParameter(key2)' iv)' in2' out3); " is 133.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DsaPrivateKeyParameters privKey = new DsaPrivateKeyParameters(new BigInteger("411602CB19A6CCC34494D79D98EF1E7ED5AF25F7"' 16)' dsaParameters); " is 141.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha1Digest()' privKey' new BigInteger("2E1A0C2562B2912CAAF89186FB0F42001585DA55"' 16)' new BigInteger("29EFB6B0AFF2D7A68EB70CA313022253B9A88DF5"' 16)); " is 178.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha224Digest()' privKey' new BigInteger("4BC3B686AEA70145856814A6F1BB53346F02101E"' 16)' new BigInteger("410697B92295D994D21EDD2F4ADA85566F6F94C1"' 16)); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha256Digest()' privKey' new BigInteger("81F2F5850BE5BC123C43F71A3033E9384611C545"' 16)' new BigInteger("4CDD914B65EB6C66A8AAAD27299BEE6B035F5E89"' 16)); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha384Digest()' privKey' new BigInteger("07F2108557EE0E3921BC1774F1CA9B410B4CE65A"' 16)' new BigInteger("54DF70456C86FAC10FAB47C1949AB83F2C6F7595"' 16)); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha512Digest()' privKey' new BigInteger("16C3491F9B8C3FBBDD5E7A7B667057F0D8EE8E1B"' 16)' new BigInteger("02C36A127A7B89EDBB72E4FFBC71DABC7D4FC69C"' 16)); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha1Digest()' privKey' new BigInteger("42AB2052FD43E123F0607F115052A67DCD9C5C77"' 16)' new BigInteger("183916B0230D45B9931491D4C6B0BD2FB4AAF088"' 16)); " is 176.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha224Digest()' privKey' new BigInteger("6868E9964E36C1689F6037F91F28D5F2C30610F2"' 16)' new BigInteger("49CEC3ACDC83018C5BD2674ECAAD35B8CD22940F"' 16)); " is 178.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha256Digest()' privKey' new BigInteger("22518C127299B0F6FDC9872B282B9E70D0790812"' 16)' new BigInteger("6837EC18F150D55DE95B5E29BE7AF5D01E4FE160"' 16)); " is 178.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha384Digest()' privKey' new BigInteger("854CF929B58D73C3CBFDC421E8D5430CD6DB5E66"' 16)' new BigInteger("91D0E0F53E22F898D158380676A871A157CDA622"' 16)); " is 178.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha512Digest()' privKey' new BigInteger("8EA47E475BA8AC6F2D821DA3BD212D11A3DEB9A0"' 16)' new BigInteger("7C670C7AD72B6C050C109E1790008097125433E8"' 16)); " is 178.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            privKey = new DsaPrivateKeyParameters(new BigInteger("69C7548C21D0DFEA6B9A51C9EAD4E27C33D3B3F180316E5BCAB92C933F0E4DBC"' 16)' dsaParameters); " is 141.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha1Digest()' privKey' new BigInteger("3A1B2DBD7489D6ED7E608FD036C83AF396E290DBD602408E8677DAABD6E7445A"' 16)' new BigInteger("D26FCBA19FA3E3058FFC02CA1596CDBB6E0D20CB37B06054F7E36DED0CDBBCCF"' 16)); " is 226.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha224Digest()' privKey' new BigInteger("DC9F4DEADA8D8FF588E98FED0AB690FFCE858DC8C79376450EB6B76C24537E2C"' 16)' new BigInteger("A65A9C3BC7BABE286B195D5DA68616DA8D47FA0097F36DD19F517327DC848CEC"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha256Digest()' privKey' new BigInteger("EACE8BDBBE353C432A795D9EC556C6D021F7A03F42C36E9BC87E4AC7932CC809"' 16)' new BigInteger("7081E175455F9247B812B74583E9E94F9EA79BD640DC962533B0680793A38D53"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha384Digest()' privKey' new BigInteger("B2DA945E91858834FD9BF616EBAC151EDBC4B45D27D0DD4A7F6A22739F45C00B"' 16)' new BigInteger("19048B63D9FD6BCA1D9BAE3664E1BCB97F7276C306130969F63F38FA8319021B"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaSample(new Sha512Digest()' privKey' new BigInteger("2016ED092DC5FB669B8EFB3D1F31A91EECB199879BE0CF78F02BA062CB4C942E"' 16)' new BigInteger("D0C76F84B5F091E141572A639A4FB8C230807EEA7D55C8A154A224400AFF2351"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha1Digest()' privKey' new BigInteger("C18270A93CFC6063F57A4DFA86024F700D980E4CF4E2CB65A504397273D98EA0"' 16)' new BigInteger("414F22E5F31A8B6D33295C7539C1C1BA3A6160D7D68D50AC0D3A5BEAC2884FAA"' 16)); " is 224.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha224Digest()' privKey' new BigInteger("272ABA31572F6CC55E30BF616B7A265312018DD325BE031BE0CC82AA17870EA3"' 16)' new BigInteger("E9CC286A52CCE201586722D36D1E917EB96A4EBDB47932F9576AC645B3A60806"' 16)); " is 226.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha256Digest()' privKey' new BigInteger("8190012A1969F9957D56FCCAAD223186F423398D58EF5B3CEFD5A4146A4476F0"' 16)' new BigInteger("7452A53F7075D417B4B013B278D1BB8BBD21863F5E7B1CEE679CF2188E1AB19E"' 16)); " is 226.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha384Digest()' privKey' new BigInteger("239E66DDBE8F8C230A3D071D601B6FFBDFB5901F94D444C6AF56F732BEB954BE"' 16)' new BigInteger("6BD737513D5E72FE85D1C750E0F73921FE299B945AAD1C802F15C26A43D34961"' 16)); " is 226.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The length of the statement  "            DoTestHMacDetDsaTest(new Sha512Digest()' privKey' new BigInteger("89EC4BB1400ECCFF8E7D9AA515CD1DE7803F2DAFF09693EE7FD1353E90A68307"' 16)' new BigInteger("C9F0BDABCC0D880BB137A994CC7F3980CE91CC10FAF529FC46565B15CEA854E1"' 16)); " is 226.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            ECDomainParameters ecDomainParameters = new ECDomainParameters(x9ECParameters.Curve' x9ECParameters.G' x9ECParameters.N); " is 121.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            ECPrivateKeyParameters privKey = new ECPrivateKeyParameters(new BigInteger("6FAB034934E4C0FC9AE67F5B5659A9D7D1FEFD187EE09FD4"' 16)' ecDomainParameters); " is 152.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("98C6BD12B23EAF5E2A2045132086BE3EB8EBD62ABF6698FF"' 16)' new BigInteger("57A22B07DEA9530F8DE9471B1DC6624472E8E2844BC25B64"' 16)); " is 198.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("A1F00DAD97AEEC91C95585F36200C65F3C01812AA60378F5"' 16)' new BigInteger("E07EC1304C7C6C9DEBBE980B9692668F81D4DE7922A0F97A"' 16)); " is 198.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("4B0B8CE98A92866A2820E20AA6B75B56382E0F9BFD5ECB55"' 16)' new BigInteger("CCDB006926EA9565CBADC840829D8C384E06DE1F1E381B85"' 16)); " is 198.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("DA63BF0B9ABCF948FBB1E9167F136145F7A20426DCC287D5"' 16)' new BigInteger("C3AA2C960972BD7A2003A57E1C4C77F0578F8AE95E31EC5E"' 16)); " is 198.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("4D60C5AB1996BD848343B31C00850205E2EA6922DAC2E4B8"' 16)' new BigInteger("3F6E837448F027A1BF4B34E796E32A811CBB4050908D8F67"' 16)); " is 198.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("0F2141A0EBBC44D2E1AF90A50EBCFCE5E197B3B7D4DE036D"' 16)' new BigInteger("EB18BC9E1F3D7387500CB99CF5F7C157070A8961E38700B7"' 16)); " is 196.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("6945A1C1D1B2206B8145548F633BB61CEF04891BAF26ED34"' 16)' new BigInteger("B7FB7FDFC339C0B9BD61A9F5A8EAF9BE58FC5CBA2CB15293"' 16)); " is 196.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("3A718BD8B4926C3B52EE6BBE67EF79B18CB6EB62B1AD97AE"' 16)' new BigInteger("5662E6848A4A19B1F1AE2F72ACD4B8BBE50F1EAC65D9124F"' 16)); " is 196.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("B234B60B4DB75A733E19280A7A6034BD6B1EE88AF5332367"' 16)' new BigInteger("7994090B2D59BB782BE57E74A44C9A1C700413F8ABEFE77A"' 16)); " is 196.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("FE4F4AE86A58B6507946715934FE2D8FF9D95B6B098FE739"' 16)' new BigInteger("74CF5605C98FBA0E1EF34D4B5A1577A7DCF59457CAE52290"' 16)); " is 196.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("F220266E1105BFE3083E03EC7A3A654651F45E37167E88600BF257C1"' 16)' ecDomainParameters); " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("22226F9D40A96E19C4A301CE5B74B115303C0F3A4FD30FC257FB57AC"' 16)' new BigInteger("66D1CDD83E3AF75605DD6E2FEFF196D30AA7ED7A2EDF7AF475403D69"' 16)); " is 214.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("1CDFE6662DDE1E4A1EC4CDEDF6A1F5A2FB7FBD9145C12113E6ABFD3E"' 16)' new BigInteger("A6694FD7718A21053F225D3F46197CA699D45006C06F871808F43EBC"' 16)); " is 214.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("61AA3DA010E8E8406C656BC477A7A7189895E7E840CDFE8FF42307BA"' 16)' new BigInteger("BC814050DAB5D23770879494F9E0A680DC1AF7161991BDE692B10101"' 16)); " is 214.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("0B115E5E36F0F9EC81F1325A5952878D745E19D7BB3EABFABA77E953"' 16)' new BigInteger("830F34CCDFE826CCFDC81EB4129772E20E122348A2BBD889A1B1AF1D"' 16)); " is 214.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("074BD1D979D5F32BF958DDC61E4FB4872ADCAFEB2256497CDAC30397"' 16)' new BigInteger("A4CECA196C3D5A1FF31027B33185DC8EE43F288B21AB342E5D8EB084"' 16)); " is 214.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("DEAA646EC2AF2EA8AD53ED66B2E2DDAA49A12EFD8356561451F3E21C"' 16)' new BigInteger("95987796F6CF2062AB8135271DE56AE55366C045F6D9593F53787BD2"' 16)); " is 212.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("C441CE8E261DED634E4CF84910E4C5D1D22C5CF3B732BB204DBEF019"' 16)' new BigInteger("902F42847A63BDC5F6046ADA114953120F99442D76510150F372A3F4"' 16)); " is 212.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("AD04DDE87B84747A243A631EA47A1BA6D1FAA059149AD2440DE6FBA6"' 16)' new BigInteger("178D49B1AE90E3D8B629BE3DB5683915F4E8C99FDF6E666CF37ADCFD"' 16)); " is 212.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("389B92682E399B26518A95506B52C03BC9379A9DADF3391A21FB0EA4"' 16)' new BigInteger("414A718ED3249FF6DBC5B50C27F71F01F070944DA22AB1F78F559AAB"' 16)); " is 212.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("049F050477C5ADD858CAC56208394B5A55BAEBBE887FDF765047C17C"' 16)' new BigInteger("077EB13E7005929CEFA3CD0403C7CDCC077ADF4E44F3C41B2F60ECFF"' 16)); " is 212.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("C9AFA9D845BA75166B5C215767B1D6934E50C3DB36E89B127B8A622B120F6721"' 16)' ecDomainParameters); " is 145.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("61340C88C3AAEBEB4F6D667F672CA9759A6CCAA9FA8811313039EE4A35471D32"' 16)' new BigInteger("6D7F147DAC089441BB2E2FE8F7A3FA264B9C475098FDCF6E00D7C996E1B8B7EB"' 16)); " is 230.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("53B2FFF5D1752B2C689DF257C04C40A587FABABB3F6FC2702F1343AF7CA9AA3F"' 16)' new BigInteger("B9AFB64FDC03DC1A131C7D2386D11E349F070AA432A4ACC918BEA988BF75C74C"' 16)); " is 230.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("EFD48B2AACB6A8FD1140DD9CD45E81D69D2C877B56AAF991C34D0EA84EAF3716"' 16)' new BigInteger("F7CB1C942D657C41D436C7A1B6E29F65F3E900DBB9AFF4064DC4AB2F843ACDA8"' 16)); " is 230.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("0EAFEA039B20E9B42309FB1D89E213057CBF973DC0CFC8F129EDDDC800EF7719"' 16)' new BigInteger("4861F0491E6998B9455193E34E7B0D284DDD7149A74B95B9261F13ABDE940954"' 16)); " is 230.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("8496A60B5E9B47C825488827E0495B0E3FA109EC4568FD3F8D1097678EB97F00"' 16)' new BigInteger("2362AB1ADBE2B8ADF9CB9EDAB740EA6049C028114F2460F96554F61FAE3302FE"' 16)); " is 230.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("0CBCC86FD6ABD1D99E703E1EC50069EE5C0B4BA4B9AC60E409E8EC5910D81A89"' 16)' new BigInteger("01B9D7B73DFAA60D5651EC4591A0136F87653E0FD780C3B1BC872FFDEAE479B1"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("C37EDB6F0AE79D47C3C27E962FA269BB4F441770357E114EE511F662EC34A692"' 16)' new BigInteger("C820053A05791E521FCAAD6042D40AEA1D6B1A540138558F47D0719800E18F2D"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("F1ABB023518351CD71D881567B1EA663ED3EFCF6C5132B354F28D3B0B7D38367"' 16)' new BigInteger("019F4113742A2B14BD25926B49C649155F267E60D3814B4C0CC84250E46F0083"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("83910E8B48BB0C74244EBDF7F07A1C5413D61472BD941EF3920E623FBCCEBEB6"' 16)' new BigInteger("8DDBEC54CF8CD5874883841D712142A56A8D0F218F5003CB0296B6B509619F2C"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("461D93F31B6540894788FD206C07CFA0CC35F46FA3C91816FFF1040AD1581A04"' 16)' new BigInteger("39AF9F15DE0DB8D97E72719C74820D304CE5226E32DEDAE67519E840D1194E55"' 16)); " is 228.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("6B9D3DAD2E1B8C1C05B19875B6659F4DE23C3B667BF297BA9AA47740787137D8" + " is 120.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey' new BigInteger("EC748D839243D6FBEF4FC5C4859A7DFFD7F3ABDDF72014540C16D73309834FA3" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("42356E76B55A6D9B4631C865445DBE54E056D3B3431766D0509244793C3F9366" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("21B13D1E013C7FA1392D03C5F99AF8B30C570C6F98D4EA8E354B63A21D3DAA33" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("94EDBB92A5ECB8AAD4736E56C691916B3F88140666CE9FA73D64C4EA95AD133C" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("ED0959D5880AB2D869AE7F6C2915C6D60F96507F9CB3E047C0046861DA4A799C" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("4BC35D3A50EF4E30576F58CD96CE6BF638025EE624004A1F7789A8B8E43D0678" + " is 133.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("E8C9D0B6EA72A0E7837FEA1D14A1A9557F29FAA45D3E7EE888FC5BF954B5E624" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("6D6DEFAC9AB64DABAFE36C6BF510352A4CC27001263638E5B16D9BB51D451559" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("8203B63D3C853E8D77227FB377BCF7B7B772E97892A80F36AB775D509D7A5FEB" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("A0D5D090C9980FAF3C2CE57B7AE951D31977DD11C775D314AF55F76C676447D0" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("0FAD06DAA62BA3B25D2FB40133DA757205DE67F5BB0018FEE8C86E1B68C7E75C" + " is 120.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("0343B6EC45728975EA5CBA6659BBB6062A5FF89EEA58BE3C80B619F322C87910" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("1776331CFCDF927D666E032E00CF776187BC9FDD8E69D0DABB4109FFE1B5E2A3" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("1511BB4D675114FE266FC4372B87682BAECC01D3CC62CF2303C92B3526012659" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("1EA842A0E17D2DE4F92C15315C63DDF72685C18195C2BB95E572B9C5136CA4B4" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0C328FAFCBD79DD77850370C46325D987CB525569FB63C5D3BC53950E6D4C5F1" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("13BAD9F29ABE20DE37EBEB823C252CA0F63361284015A3BF430A46AAA80B87B0" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("1C7ED902E123E6815546065A2C4AF977B22AA8EADDB68B2C1110E7EA44D42086" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("00E871C4A14F993C6C7369501900C4BC1E9C7B0B4BA44E04868B30B41D807104" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("14BEE21A18B6D8B3C93FAB08D43E739707953244FDBE924FA926D76669E7AC8C" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("13E99020ABF5CEE7525D16B69B229652AB6BDF2AFFCAEF38773B4B7D08725F10" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("35318FC447D48D7E6BC93B48617DDDEDF26AA658F"' 16)' ecDomainParameters); " is 122.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("153FEBD179A69B6122DEBF5BC61EB947B24C93526"' 16)' new BigInteger("37AC9C670F8CF18045049BAE7DD35553545C19E49"' 16)); " is 184.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("0A379E69C44F9C16EA3215EA39EB1A9B5D58CC955"' 16)' new BigInteger("04BAFF5308DA2A7FE2C1742769265AD3ED1D24E74"' 16)); " is 184.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("134E00F78FC1CB9501675D91C401DE20DDF228CDC"' 16)' new BigInteger("373273AEC6C36CB7BAFBB1903A5F5EA6A1D50B624"' 16)); " is 184.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("29430B935AF8E77519B0CA4F6903B0B82E6A21A66"' 16)' new BigInteger("1EA1415306E9353FA5AA54BC7C2581DFBB888440D"' 16)); " is 184.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0B2F177A99F9DF2D51CCAF55F015F326E4B65E7A0"' 16)' new BigInteger("0DF1FB4487E9B120C5E970EFE48F55E406306C3A1"' 16)); " is 184.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("256D4079C6C7169B8BC92529D701776A269D56308"' 16)' new BigInteger("341D3FFEC9F1EB6A6ACBE88E3C86A1C8FDEB8B8E1"' 16)); " is 182.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("28ECC6F1272CE80EA59DCF32F7AC2D861BA803393"' 16)' new BigInteger("0AD4AE2C06E60183C1567D2B82F19421FE3053CE2"' 16)); " is 182.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("227DF377B3FA50F90C1CB3CDCBBDBA552C1D35104"' 16)' new BigInteger("1F7BEAD92583FE920D353F368C1960D0E88B46A56"' 16)); " is 182.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("11811DAFEEA441845B6118A0DFEE8A0061231337D"' 16)' new BigInteger("36258301865EE48C5C6F91D63F62695002AB55B57"' 16)); " is 182.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("3B6BB95CA823BE2ED8E3972FF516EB8972D765571"' 16)' new BigInteger("13DC6F420628969DF900C3FCC48220B38BE24A541"' 16)); " is 182.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("07ADC13DD5BF34D1DDEEB50B2CE23B5F5E6D18067306D60C5F6FF11E5D3"' 16)' ecDomainParameters); " is 140.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("015CC6FD78BB06E0878E71465515EA5A21A2C18E6FC77B4B158DBEB3944"' 16)' new BigInteger("0822A4A6C2EB2DF213A5E90BF40377956365EE8C4B4A5A4E2EB9270CB6A"' 16)); " is 220.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("05D9920B53471148E10502AB49AB7A3F11084820A074FD89883CF51BC1A"' 16)' new BigInteger("04D3938900C0A9AAA7080D1DFEB56CFB0FADABE4214536C7ED5117ED13A"' 16)); " is 220.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("0A797F3B8AEFCE7456202DF1E46CCC291EA5A49DA3D4BDDA9A4B62D5E0D"' 16)' new BigInteger("01F6F81DA55C22DA4152134C661588F4BD6F82FDBAF0C5877096B070DC2"' 16)); " is 220.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("015E85A8D46225DD7E314A1C4289731FC14DECE949349FE535D11043B85"' 16)' new BigInteger("03F189D37F50493EFD5111A129443A662AB3C6B289129AD8C0CAC85119C"' 16)); " is 220.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("03B62A4BF783919098B1E42F496E65F7621F01D1D466C46940F0F132A95"' 16)' new BigInteger("0F4BE031C6E5239E7DAA014CBBF1ED19425E49DAEB426EC9DF4C28A2E30"' 16)); " is 220.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("02F1FEDC57BE203E4C8C6B8C1CEB35E13C1FCD956AB41E3BD4C8A6EFB1F"' 16)' new BigInteger("05738EC8A8EDEA8E435EE7266AD3EDE1EEFC2CEBE2BE1D614008D5D2951"' 16)); " is 218.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("0CCE175124D3586BA7486F7146894C65C2A4A5A1904658E5C7F9DF5FA5D"' 16)' new BigInteger("08804B456D847ACE5CA86D97BF79FD6335E5B17F6C0D964B5D0036C867E"' 16)); " is 218.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("035C3D6DFEEA1CFB29B93BE3FDB91A7B130951770C2690C16833A159677"' 16)' new BigInteger("0600F7301D12AB376B56D4459774159ADB51F97E282FF384406AFD53A02"' 16)); " is 218.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("061602FC8068BFD5FB86027B97455D200EC603057446CCE4D76DB8EF42C"' 16)' new BigInteger("03396DD0D59C067BB999B422D9883736CF9311DFD6951F91033BD03CA8D"' 16)); " is 218.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("07E12CB60FDD614958E8E34B3C12DDFF35D85A9C5800E31EA2CC2EF63B1"' 16)' new BigInteger("0E8970FD99D836F3CC1C807A2C58760DE6EDAA23705A82B9CB1CE93FECC"' 16)); " is 218.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("14510D4BC44F2D26F4553942C98073C1BD35545CEABB5CC138853C5158D2729EA408836"' 16)' ecDomainParameters); " is 152.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("201E18D48C6DB3D5D097C4DCE1E25587E1501FC3CF47BDB5B4289D79E273D6A9" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("143E878DDFD4DF40D97B8CD638B3C4706501C2201CF7108F2FB91478C11D6947" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("29FD82497FB3E5CEF65579272138DE59E2B666B8689466572B3B69A172CEE83B" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("2F00689C1BFCD2A8C7A41E0DE55AE182E6463A152828EF89FE3525139B660329" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0DA43A9ADFAA6AD767998A054C6A8F1CF77A562924628D73C62761847AD8286E" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("05A408133919F2CDCDBE5E4C14FBC706C1F71BADAFEF41F5DE4EC27272FC1CA9" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("08F3824E40C16FF1DDA8DC992776D26F4A5981AB5092956C4FDBB4F1AE0A711E" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("3597B406F5329D11A79E887847E5EC60861CCBB19EC61F252DB7BD549C699951" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("1BB490926E5A1FDC7C5AA86D0835F9B994EDA315CA408002AF54A298728D422E" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("19944AA68F9778C2E3D6E240947613E6DA60EFCE9B9B2C063FF5466D72745B5A" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("0494994CC325B08E7B4CE038BD9436F90B5E59A2C13C3140CD3AE07C04A01FC489F572CE0569A6DB7B8060393DE76330C624177"' 16)' ecDomainParameters); " is 184.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("0D8783188E1A540E2022D389E1D35B32F56F8C2BB5636B8ABF7718806B27A713" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "EBAE37F63ECD4B61445CEF5801B62594EF3E982"' 16)' new BigInteger("03A6B4A80E204DB0DE12E7415C13C9EC091C52935658316B4A0C591216A38791" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("0EE4F39ACC2E03CE96C3D9FCBAFA5C22C89053662F8D4117752A9B10F09ADFDA" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "59DB061E247FE5321D6B170EE758ACE1BE4D157"' 16)' new BigInteger("00A2B83265B456A430A8BF27DCC8A9488B3F126C10F0D6D64BF7B8A218FAAF20" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("02D8B1B31E33E74D7EB46C30FDE5AD2CA04EC8FE08FBA0E73BA5E568953AC5EA" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "307C072942238DFC07F4A4D7C7C6A9F86436D17"' 16)' new BigInteger("079F7D471E6CB73234AF7F7C381D2CE15DE35BAF8BB68393B73235B3A26EC2DF" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("07BC638B7E7CE6FEE5E9C64A0F966D722D01BB4BC3F3A35F30D4CDDA92DFC5F7" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "F0B4BBFE8065D9AD452FD77A1914BE3A2440C18"' 16)' new BigInteger("06D904429850521B28A32CBF55C7C0FDF35DC4E0BDA2552C7BF68A171E970E67" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("05D178DECAFD2D02A3DA0D8BA1C4C1D95EE083C760DF782193A9F7B4A8BE6FC5" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "C21FD60613BCA65C063A61226E050A680B3ABD4"' 16)' new BigInteger("013B7581E98F6A63FBBCB3E49BCDA60F816DB230B888506D105DC229600497C3" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("049F54E7C10D2732B4638473053782C6919218BBEFCEC8B51640FC193E832291" + " is 133.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "F05FA12371E9B448417B3290193F08EE9319195"' 16)' new BigInteger("0499E267DEC84E02F6F108B10E82172C414F15B1B7364BE8BFD66ADC0C5DE23F" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("0B1527FFAA7DD7C7E46B628587A5BEC0539A2D04D3CF27C54841C2544E1BBDB4" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "2FDBDAAF8671A4CA86DFD619B1E3732D7BB56F2"' 16)' new BigInteger("0442C68C044868DF4832C807F1EDDEBF7F5052A64B826FD03451440794063F52" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("0BB27755B991D6D31757BCBF68CB01225A38E1CFA20F775E861055DD108ED7EA" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "455E4B96B2F6F7CD6C6EC2B3C70C3EDDEB9743B"' 16)' new BigInteger("0C5BE90980E7F444B5F7A12C9E9AC7A04CA81412822DD5AD1BE7C45D5032555E" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("04EFEB7098772187907C87B33E0FBBA4584226C50C11E98CA7AAC6986F8D3BE0" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "44E5B52D201A410B852536527724CA5F8CE6549"' 16)' new BigInteger("09574102FEB3EF87E6D66B94119F5A6062950FF4F902EA1E6BD9E2037F33FF99" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("07E0249C68536AE2AEC2EC30090340DA49E6DC9E9EEC8F85E5AABFB234B6DA7D" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "                "2E9524028CF821F21C6019770474CC40B01FAF6"' 16)' new BigInteger("08125B5A03FB44AE81EA46D446130C2A415ECCA265910CA69D55F2453E16CD7B" + " is 131.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            privKey = new ECPrivateKeyParameters(new BigInteger("028A04857F24C1C082DF0D909C0E72F453F2E2340CCB071F0E389BCA2575DA19" + " is 120.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha1Digest()' privKey' new BigInteger("147D3EB0EDA9F2152DFD014363D6A9CE816D7A1467D326A625FC4AB0C786E1B7" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("10F4B63E79B2E54E4F4F6A2DBC786D8F4A143ECA7B2AD97810F6472AC6AE2085" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("213EF9F3B0CFC4BF996B8AF3A7E1F6CACD2B87C8C63820000800AC787F17EC99" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("375D8F49C656A0BBD21D3F54CDA287D853C4BB1849983CD891EF6CD6BB56A62B" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("1C26F40D940A7EAA0EB1E62991028057D91FEDA0366B606F6C434C361F04E545" + " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("133F5414F2A9BC41466D339B79376038A64D045E5B0F792A98E5A7AA87E0AD01" + " is 133.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("3048E76506C5C43D92B2E33F62B33E3111CEEB87F6C7DF7C7C01E3CDA28FA5E8" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("184BC808506E11A65D628B457FDA60952803C604CC7181B59BD25AEE1411A66D" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("319EE57912E7B0FAA1FBB145B0505849A89C6DB1EC06EA20A6A7EDE072A6268A" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The length of the statement  "            DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("2AA1888EAB05F7B00B6A784C4F7081D2C833D50794D9FEAF6E22B8BE728A2A90" + " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,PerformTest,The length of the statement  "            byte[] k2 = Hex.Decode("345e8d05c075c3a508df729a1685690e68fcfb8c8117847e89063bca1f85d968fd281540b6e13bd1af989a1fbf17e06462bf511f9d0b140fb48ac1b1baa5bded"); " is 155.
Long Statement,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The length of the statement  "            kpGen.Init(new DsaKeyGenerationParameters(FixedSecureRandom.From(Hex.Decode("D0EC4E50BB290A42E9E355C73D8809345DE2E139"))' parameters)); " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The length of the statement  "            signer.Init(true' new ParametersWithRandom(kp.Private' FixedSecureRandom.From(Hex.Decode("349C55648DCF992F3F33E8026CFAC87C1D2BA075")))); " is 136.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECGost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECGOST3410Test.cs,ecGOST3410_TEST,The length of the statement  "            byte[] mVal = new BigInteger("20798893674476452017134061561508270130637142515379653289952617252661468872421").ToByteArray(); " is 124.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECGost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECGOST3410Test.cs,ecGOST3410_AParam,The length of the statement  "            BigInteger mod_p = new BigInteger("115792089237316195423570985008687907853269984665640564039457584007913129639319"); //p " is 120.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa192bitPrime,The length of the statement  "            byte[] kData = BigIntegers.AsUnsignedByteArray(new BigInteger("6140507067065001063065065565667405560006161556565665656654")); " is 125.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitPrime,The length of the statement  "            byte[] kData = BigIntegers.AsUnsignedByteArray(new BigInteger("700000017569056646655505781757157107570501575775705779575555657156756655")); " is 139.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa191bitBinary,The length of the statement  "            byte[] kData = BigIntegers.AsUnsignedByteArray(new BigInteger("1542725565216523985789236956265265265235675811949404040041")); " is 125.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa191bitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("0436B3DAF8A23206F9C4F299D7B21A9C369137F2C84AE1AA0D765BE73433B3F95E332932E70EA245CA2418EA0EF98018FB"))' // G " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa191bitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("045DE37E756BD55D72E3768CB396FFEB962614DEA4CE28A2E755C0E0E02F5FB132CAF416EF85B229BBB8E1352003125BA1"))' // Q " is 137.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinary,The length of the statement  "            byte[] kData = BigIntegers.AsUnsignedByteArray(new BigInteger("171278725565216523967285789236956265265265235675811949404040041670216363")); " is 139.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G " is 161.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("045894609CCECF9A92533F630DE713A958E96C97CCB8F5ABB5A688A238DEED6DC2D9D0C94EBFB7D526BA6A61764175B99CB6011E2047F9F067293F57F5"))' // Q " is 161.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP224Sha224,The length of the statement  "            SecureRandom k = FixedSecureRandom.From(BigIntegers.AsUnsignedByteArray(new BigInteger("15456715103636396133226117016818339719732885723579037388121116732601"))); " is 161.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaSecP224k1Sha256,The length of the statement  "                parameters.Curve.DecodePoint(Hex.Decode("04C5C9B38D3603FCCD6994CBB9594E152B658721E483669BB42728520F484B537647EC816E58A8284D3B89DFEDB173AFDC214ECA95A836FA7C"))' // Q " is 164.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP256Sha256,The length of the statement  "            SecureRandom k = FixedSecureRandom.From(BigIntegers.AsUnsignedByteArray(new BigInteger("72546832179840998877302529996971396893172522460793442785601695562409154906335"))); " is 170.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP224OneByteOver,The length of the statement  "            SecureRandom    k = FixedSecureRandom.From(BigIntegers.AsUnsignedByteArray(new BigInteger("15456715103636396133226117016818339719732885723579037388121116732601"))); " is 164.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP521Sha512,The length of the statement  "                new BigInteger("617573726813476282316253885608633222275541026607493641741273231656161177732180358888434629562647985511298272498852936680947729040673640492310550142822667389")' // d " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP521Sha512,The length of the statement  "            SecureRandom k = FixedSecureRandom.From(BigIntegers.AsUnsignedByteArray(new BigInteger("6806532878215503520845109818432174847616958675335397773700324097584974639728725689481598054743894544060040710846048585856076812050552869216017728862957612913"))); " is 250.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP521Sha512,The length of the statement  "            byte[] M = Hex.Decode("6893B64BD3A9615C39C3E62DDD269C2BAAF1D85915526083183CE14C2E883B48B193607C1ED871852C9DF9C3147B574DC1526C55DE1FE263A676346A20028A66"); " is 154.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP521Sha512,The length of the statement  "            BigInteger r = new BigInteger("1368926195812127407956140744722257403535864168182534321188553460365652865686040549247096155740756318290773648848859639978618869784291633651685766829574104630"); " is 191.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP521Sha512,The length of the statement  "            BigInteger s = new BigInteger("1624754720348883715608122151214003032398685415003935734485445999065609979304811509538477657407457976246218976767156629169821116579317401249024208611945405790"); " is 191.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaP521Sha512,The length of the statement  "                parameters.Curve.DecodePoint(Hex.Decode("020145E221AB9F71C5FE740D8D2B94939A09E2816E2167A7D058125A06A80C014F553E8D6764B048FB6F2B687CEC72F39738F223D4CE6AFCBFF2E34774AA5D3C342CB3"))' // Q " is 184.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinaryAndLargeDigest,The length of the statement  "                    Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G " is 143.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinaryAndLargeDigest,The length of the statement  "            byte[] message = new BigInteger("968236873715988614170569073515315707566766479517968236873715988614170569073515315707566766479517968236873715988614170569073515315707566766479517").ToByteArray(); " is 194.
Long Statement,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinaryAndLargeDigest,The length of the statement  "                    Hex.Decode("045894609CCECF9A92533F630DE713A958E96C97CCB8F5ABB5A688A238DEED6DC2D9D0C94EBFB7D526BA6A61764175B99CB6011E2047F9F067293F57F5"))' // Q " is 143.
Long Statement,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The length of the statement  "			BigInteger g512 = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16); " is 169.
Long Statement,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The length of the statement  "			BigInteger p512 = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16); " is 169.
Long Statement,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The length of the statement  "			DHKeyGenerationParameters parameters = new DHKeyGenerationParameters(new SecureRandom()' dhParams);         DHKeyPairGenerator          kpGen = new DHKeyPairGenerator(); " is 169.
Long Statement,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestElGamal,The length of the statement  "			BigInteger g512 = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16); " is 169.
Long Statement,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestElGamal,The length of the statement  "			BigInteger p512 = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16); " is 169.
Long Statement,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestElGamal,The length of the statement  "			ElGamalKeyGenerationParameters parameters = new ElGamalKeyGenerationParameters(new SecureRandom()' dhParams);         ElGamalKeyPairGenerator kpGen = new ElGamalKeyPairGenerator(); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,DoTestExceptions,The length of the statement  "            //AEADTestUtil.testReset(this' new GCMBlockCipher(createAESEngine())' new GCMBlockCipher(createAESEngine())' new AEADParameters(new KeyParameter(new byte[16])' 128' new byte[16])); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST28147Test.cs,PerformTest,The length of the statement  "			key = generateKey(Hex.Decode("aafd12f659cae63489b479e5076ddec2f06cb58faafd12f659cae63489b479e5"));  //!!! heshing start_key - get 256 bits !!! " is 142.
Long Statement,Org.BouncyCastle.Crypto.Tests,SecureRandomImpl10,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,NextBytes,The length of the statement  "					byte[] d = Hex.Decode("bc3cbbdb7e6f848286e19ad9a27a8e297e5b71c53dd974cdf60f937356df69cbc97a300ccc71685c553046147f11568c4fddf363d9d886438345a62c3b75963d6546adfabf31b31290d12cae65ecb8309ef66782"); " is 194.
Long Statement,Org.BouncyCastle.Crypto.Tests,SecureRandomImpl19,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,NextBytes,The length of the statement  "					byte[] d = Hex.Decode("35ab875399cda33c146ca629660e5a5e5c07714ca326db032dd6751995cdb90a612b9228932d8302704ec24a5def7739c5813d83"); " is 130.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest10,The length of the statement  "            BigInteger          mod = new BigInteger("B3ABE6D91A4020920F8B3847764ECB34C4EB64151A96FDE7B614DC986C810FF2FD73575BDF8532C06004C8B4C8B64F700A50AEC68C0701ED10E8D211A4EA554D"' 16); " is 177.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest10,The length of the statement  "            BigInteger          priExp = new BigInteger("AEE76AE4716F77C5782838F328327012C097BD67E5E892E75C1356E372CCF8EE1AA2D2CBDFB4DA19F703743F7C0BA42B2D69202BA7338C294D1F8B6A5771FF41"' 16); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The length of the statement  "            BigInteger          mod = new BigInteger("B3ABE6D91A4020920F8B3847764ECB34C4EB64151A96FDE7B614DC986C810FF2FD73575BDF8532C06004C8B4C8B64F700A50AEC68C0701ED10E8D211A4EA554D"' 16); " is 177.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The length of the statement  "            BigInteger          priExp = new BigInteger("AEE76AE4716F77C5782838F328327012C097BD67E5E892E75C1356E372CCF8EE1AA2D2CBDFB4DA19F703743F7C0BA42B2D69202BA7338C294D1F8B6A5771FF41"' 16); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The length of the statement  "            BigInteger          mod = new BigInteger("B3ABE6D91A4020920F8B3847764ECB34C4EB64151A96FDE7B614DC986C810FF2FD73575BDF8532C06004C8B4C8B64F700A50AEC68C0701ED10E8D211A4EA554D"' 16); " is 177.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The length of the statement  "            BigInteger          priExp = new BigInteger("AEE76AE4716F77C5782838F328327012C097BD67E5E892E75C1356E372CCF8EE1AA2D2CBDFB4DA19F703743F7C0BA42B2D69202BA7338C294D1F8B6A5771FF41"' 16); " is 180.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest13,The length of the statement  "            BigInteger modulus = new BigInteger(1' Hex.Decode("CDCBDABBF93BE8E8294E32B055256BBD0397735189BF75816341BB0D488D05D627991221DF7D59835C76A4BB4808ADEEB779E7794504E956ADC2A661B46904CDC71337DD29DDDD454124EF79CFDD7BC2C21952573CEFBA485CC38C6BD2428809B5A31A898A6B5648CAA4ED678D9743B589134B7187478996300EDBA16271A861")); " is 311.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest13,The length of the statement  "            BigInteger privExp = new BigInteger(1' Hex.Decode("4BA6432AD42C74AA5AFCB6DF60FD57846CBC909489994ABD9C59FE439CC6D23D6DE2F3EA65B8335E796FD7904CA37C248367997257AFBD82B26F1A30525C447A236C65E6ADE43ECAAF7283584B2570FA07B340D9C9380D88EAACFFAEEFE7F472DBC9735C3FF3A3211E8A6BBFD94456B6A33C17A2C4EC18CE6335150548ED126D")); " is 311.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest13,The length of the statement  "            string args0 = "482E20D1EDDED34359C38F5E7C01203F9D6B2641CDCA5C404D49ADAEDE034C7481D781D043722587761C90468DE69C6585A1E8B9C322F90E1B580EEDAB3F6007D0C366CF92B4DB8B41C8314929DCE2BE889C0129123484D2FD3D12763D2EBFD12AC8E51D7061AFCA1A53DEDEC7B9A617472A78C952CCC72467AE008E5F132994"; " is 274.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoShortPartialTest,The length of the statement  "            byte[]     recovered = Hex.Decode("5553482b312b534536383031353332393731392b322b312b362b322b312b313a3a393939393939393939393939393a3a392b323a3a373737373737373737373737373a3a392b2b353a32303133303430353a313133"); " is 208.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoShortPartialTest,The length of the statement  "            BigInteger mod = new BigInteger("b9b70b083da9e37e23cde8e654855db31e21d2d3fc11a5f91d2b3c311efa8f5e28c757dd6fc798631cb1b9d051c14119749cb122ad76e8c3fd7bd93abe282c026a14fba9f8023977a7a0d8b49a24d1ad87e4379a931846a1ef9520ea57e28c998cf65722683d0caaa0da8306973e2496a25cbd3cb4adb4b284e25604fabf12f385456c75da7c3c4cde37440cfb7db8c8fe6851e2bc59767b9f7218540238ac8acef3bc7bd3dc6671320c2c1a2ac8a6799ce1eaf62b9683ab1e1341b37b9249dbd6cd987b2f27b5c4619a1eda7f0fb0b59a519afbbc3cee640261cec90a4bb8fefbc844082dca9f549e56943e758579a453a357e6ccb37fc46718a5b8c3227e5d"' 16); " is 552.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoFullMessageTest,The length of the statement  "            BigInteger modulus = new BigInteger(1' Hex.Decode("CDCBDABBF93BE8E8294E32B055256BBD0397735189BF75816341BB0D488D05D627991221DF7D59835C76A4BB4808ADEEB779E7794504E956ADC2A661B46904CDC71337DD29DDDD454124EF79CFDD7BC2C21952573CEFBA485CC38C6BD2428809B5A31A898A6B5648CAA4ED678D9743B589134B7187478996300EDBA16271A861")); " is 311.
Long Statement,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoFullMessageTest,The length of the statement  "            BigInteger privExp = new BigInteger(1' Hex.Decode("4BA6432AD42C74AA5AFCB6DF60FD57846CBC909489994ABD9C59FE439CC6D23D6DE2F3EA65B8335E796FD7904CA37C248367997257AFBD82B26F1A30525C447A236C65E6ADE43ECAAF7283584B2570FA07B340D9C9380D88EAACFFAEEFE7F472DBC9735C3FF3A3211E8A6BBFD94456B6A33C17A2C4EC18CE6335150548ED126D")); " is 311.
Long Statement,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,DoTestExceptions,The length of the statement  "            //AEADTestUtil.testReset(this' createOCBCipher()' createOCBCipher()' new AEADParameters(new KeyParameter(new byte[16])' 128' new byte[15])); " is 140.
Long Statement,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The length of the statement  "			Run1(6' password2' Hex.Decode("05DEC959ACFF72F7")' 1000' Hex.Decode("ED2034E36328830FF09DF1E1A07DD357185DAC0D4F9EB3D4")); " is 121.
Long Statement,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The length of the statement  "			Run1(8' password2' Hex.Decode("1682C0FC5B3F7EC5")' 1000' Hex.Decode("483DD6E919D7DE2E8E648BA8F862F3FBFBDC2BCB2C02957F")); " is 121.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0036 e5 f6 b5 c5 e0 60 70 f0 ef ca 96 22 7a 86 3e"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("36 e5 f6 b5 c5 e0 60 70 f0 ef ca 96 22 7a 86 3e00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("1c 92 40 a5 eb 55 d3 8a f3 33 88 86 04 f6 b5 f0 47 39 17 c1 40 2b 80 09 9d ca 5c bc 20 70 75 c0"); " is 124.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            data = Hex.Decode("FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FFF0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 163.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            data = Hex.Decode("FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FFFB FE FE FE FE FE FE FE FE FE FE FE FE FE FE FE01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01"); " is 163.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("01 00 00 00 00 00 00 00 04 00 00 00 00 00 00 0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,rfc7539Test,The length of the statement  "            keyMaterial = Hex.Decode("01 00 00 00 00 00 00 00 04 00 00 00 00 00 00 0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"); " is 123.
Long Statement,Org.BouncyCastle.Crypto.Tests,RC2WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RC2WrapTest.cs,Perform,The length of the statement  "			ICipherParameters paramWrap = new ParametersWithRandom(new ParametersWithIV(new RC2Parameters(kek1' 40)' iv1)' new RFCRandom()); " is 128.
Long Statement,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The length of the statement  "			doWrapTest(1' new DesEngine()' Hex.Decode("D1DAA78615F287E6")' Hex.Decode("EFE598EF21B33D6D")' r1' Hex.Decode("8C627C897323A2F8")' Hex.Decode("B81B2565EE373CA6DEDCA26A178B0C10")); " is 179.
Long Statement,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The length of the statement  "			doWrapTest(2' new DesEdeEngine()' Hex.Decode("6A8970BF68C92CAEA84A8DF28510858607126380CC47AB2D")' Hex.Decode("BAF1CA7931213C4E")' r2' " is 133.
Long Statement,Org.BouncyCastle.Crypto.Tests,SkeinMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SkeinMacTest.cs,runTest,The length of the statement  "				Fail(digest.AlgorithmName + " message " + (dc.getMessage().Length * 8) + " mismatch.\n Message  " + Hex.ToHexString(dc.getMessage()) " is 132.
Long Statement,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The length of the statement  "			salsa20Test1(20' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))' " is 136.
Long Statement,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The length of the statement  "			salsa20Test1(20' new ParametersWithIV(new KeyParameter(Hex.Decode("00400000000000000000000000000000"))' Hex.Decode("0000000000000000"))' " is 136.
Long Statement,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The length of the statement  "			salsa20Test1(12' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))' " is 136.
Long Statement,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The length of the statement  "			salsa20Test1(8' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))' " is 135.
Long Statement,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The length of the statement  "			salsa20Test2(new ParametersWithIV(new KeyParameter(Hex.Decode("0053A6F94C9FF24598EB3E91E4378ADD3083D6297CCF2275C81B6EC11467BA0D"))' Hex.Decode("0D74DB42A91077DE"))' " is 164.
Long Statement,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The length of the statement  "			salsa20Test2(new ParametersWithIV(new KeyParameter(Hex.Decode("0558ABFE51A4F74A9DF04396E93C8FE23588DB2E81D4277ACD2073C6196CBF12"))' Hex.Decode("167DE44BB21980E7"))' " is 164.
Long Statement,Org.BouncyCastle.Crypto.Tests,SerpentTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SerpentTest.cs,PerformTest,The length of the statement  "            //DoCbcMonte(Hex.Decode("9ea101ecebaa41c712bcb0d9bab3e2e4")' Hex.Decode("9ea101ecebaa41c712bcb0d9bab3e2e4")' Hex.Decode("b4813d8a66244188b9e92c75913fa2f4")' Hex.Decode("f86b2c265b9c75869f31e2c684c13e9f")); " is 205.
Long Statement,Org.BouncyCastle.Crypto.Tests,SerpentTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SerpentTest.cs,PerformTest,The length of the statement  "            DoCbc(Hex.Decode("BE4295539F6BD1752FD0A80229EF8847")' Hex.Decode("00963F59224794D5AD4252094358FBC3")' Strings.ToByteArray("CBC Mode Test")' Hex.Decode("CF2CF2547E02F6D34D97246E8042ED89")); " is 188.
Long Statement,Org.BouncyCastle.Crypto.Tests,SerpentTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SerpentTest.cs,PerformTest,The length of the statement  "            DoEax(Hex.Decode("7494A57648FB420043BFBFC5639EB82D")' Hex.Decode("6DF94638B83E01458F3E30C9A1D6AF1C")' Strings.ToByteArray("EAX Mode Test")' new byte[0]' 128' Hex.Decode("96C521F32DC5E9BBC369DDE4914CB13B710EEBBAB7D706D3ABE06A99DC")); " is 232.
Long Statement,Org.BouncyCastle.Crypto.Tests,SerpentTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SerpentTest.cs,DoCbc,The length of the statement  "            PaddedBufferedBlockCipher c = new PaddedBufferedBlockCipher(new CbcBlockCipher(new SerpentEngine())' new Pkcs7Padding()); " is 121.
Long Statement,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,PerformTest,The length of the statement  "            DoCbcMonte(Hex.Decode("9ea101ecebaa41c712bcb0d9bab3e2e4")' Hex.Decode("9ea101ecebaa41c712bcb0d9bab3e2e4")' Hex.Decode("b4813d8a66244188b9e92c75913fa2f4")' Hex.Decode("f86b2c265b9c75869f31e2c684c13e9f")); " is 203.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            BigInteger rsaPubMod = new BigInteger(Base64.Decode("AIASoe2PQb1IP7bTyC9usjHP7FvnUMVpKW49iuFtrw/dMpYlsMMoIU2jupfifDpdFxIktSB4P+6Ymg5WjvHKTIrvQ7SR4zV4jaPTu56Ys0pZ9EDA6gb3HLjtU+8Bb1mfWM+yjKxcPDuFjwEtjGlPHg1Vq+CA9HNcMSKNn2+tW6qt")); " is 229.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            BigInteger rsaPrivMod = new BigInteger(Base64.Decode("AIASoe2PQb1IP7bTyC9usjHP7FvnUMVpKW49iuFtrw/dMpYlsMMoIU2jupfifDpdFxIktSB4P+6Ymg5WjvHKTIrvQ7SR4zV4jaPTu56Ys0pZ9EDA6gb3HLjtU+8Bb1mfWM+yjKxcPDuFjwEtjGlPHg1Vq+CA9HNcMSKNn2+tW6qt")); " is 230.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            BigInteger rsaPrivDP = new BigInteger(Base64.Decode("JXzfzG5v+HtLJIZqYMUefJfFLu8DPuJGaLD6lI3cZ0babWZ/oPGoJa5iHpX4Ul/7l3s1PFsuy1GhzCdOdlfRcQ==")); " is 145.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            BigInteger rsaPrivDQ = new BigInteger(Base64.Decode("YNdJhw3cn0gBoVmMIFRZzflPDNthBiWy/dUMSRfJCxoZjSnr1gysZHK01HteV1YYNGcwPdr3j4FbOfri5c6DUQ==")); " is 145.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            BigInteger rsaPrivExp = new BigInteger(Base64.Decode("DxFAOhDajr00rBjqX+7nyZ/9sHWRCCp9WEN5wCsFiWVRPtdB+NeLcou7mWXwf1Y+8xNgmmh//fPV45G2dsyBeZbXeJwB7bzx9NMEAfedchyOwjR8PYdjK3NpTLKtZlEJ6Jkh4QihrXpZMO4fKZWUm9bid3+lmiq43FwW+Hof8/E=")); " is 230.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            BigInteger rsaPrivP = new BigInteger(Base64.Decode("AJ9StyTVW+AL/1s7RBtFwZGFBgd3zctBqzzwKPda6LbtIFDznmwDCqAlIQH9X14X7UPLokCDhuAa76OnDXb1OiE=")); " is 144.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            BigInteger rsaPrivQ = new BigInteger(Base64.Decode("AM3JfD79dNJ5A3beScSzPtWxx/tSLi0QHFtkuhtSizeXdkv5FSba7lVzwEOGKHmW829bRoNxThDy4ds1IihW1w0=")); " is 144.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            BigInteger rsaPrivQinv = new BigInteger(Base64.Decode("Lt0g7wrsNsQxuDdB8q/rH8fSFeBXMGLtCIqfOec1j7FEIuYA/ACiRDgXkHa0WgN7nLXSjHoy630wC5Toq8vvUg==")); " is 147.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The length of the statement  "            RsaPrivateCrtKeyParameters rsaPrivate = new RsaPrivateCrtKeyParameters(rsaPrivMod' rsaPubExp' rsaPrivExp' rsaPrivP' rsaPrivQ' rsaPrivDP' rsaPrivDQ' rsaPrivQinv); " is 161.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest1,The length of the statement  "            BigInteger n = new BigInteger("c9be1b28f8caccca65d86cc3c9bbcc13eccc059df3b80bd2292b811eff3aa0dd75e1e85c333b8e3fa9bed53bb20f5359ff4e6900c5e9a388e3a4772a583a79e2299c76582c2b27694b65e9ba22e66bfb817f8b70b22206d7d8ae488c86dbb7137c26d5eff9b33c90e6cee640630313b7a715802e15142fef498c404a8de19674974785f0f852e2d470fe85a2e54ffca9f5851f672b71df691785a5cdabe8f14aa628942147de7593b2cf962414a5b59c632c4e14f1768c0ab2e9250824beea60a3529f11bf5e070ce90a47686eb0be1086fb21f0827f55295b4a48307db0b048c05a4aec3f488c576ca6f1879d354224c7e84cbcd8e76dd217a3de54dba73c35"' 16); " is 550.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest1,The length of the statement  "            byte[] msg = Hex.Decode("5bb0d1c0ef9b5c7af2477fe08d45523d3842a4b2db943f7033126c2a7829bacb3d2cfc6497ec91688189e81b7f8742488224ba320ce983ce9480722f2cc5bc42611f00bb6311884f660ccc244788378673532edb05284fd92e83f6f6dab406209032e6af9a33c998677933e32d6fb95fd27408940d7728f9c9c40267ca1d20ce"); " is 284.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest1,The length of the statement  "            byte[] sig = Hex.Decode("0fe8bb8e3109a1eb7489ef35bf4c1a0780071da789c8bd226a4170538eafefdd30b732d628f0e87a0b9450051feae9754d4fb61f57862d10f0bacc4f660d13281d0cd1141c006ade5186ff7d961a4c6cd0a4b352fc1295c5afd088f80ac1f8e192ef116a010a442655fe8ff5eeacea15807906fb0f0dfa86e680d4c005872357f7ece9aa4e20b15d5f709b30f08648ecaa34f2fbf54eb6b414fa2ff6f87561f70163235e69ccb4ac82a2e46d3be214cc2ef5263b569b2d8fd839b21a9e102665105ea762bda25bb446cfd831487a6b846100dee113ae95ae64f4af22c428c87bab809541c962bb3a56d4c86588e0af4ebc7fcc66dadced311051356d3ea745f7"); " is 540.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest2,The length of the statement  "            BigInteger n = new BigInteger("b746ba6c3c0be64bbe33aa55b2929b0af4e86d773d44bfe5914db9287788c4663984b61a418d2eecca30d752ff6b620a07ec72eeb2b422d2429da352407b99982800b9dd7697be6a7b1baa98ca5f4fc2fe33400f20b9dba337ac25c987804165d4a6e0ee4d18eabd6de5abdfe578cae6713ff91d16c80a5bb20217fe614d9509e75a43e1825327b9da8f0a9f6eeaa1c04b69fb4bacc073569fff4ab491becbe6d0441d437fc3fa823239c4a0f75321666b68dd3f66e2dd394089a15bcc288a68a4eb0a48e17d639743b9dea0a91cc35820544732aff253f8ca9967c609dc01c2f8cd0313a7a91cfa94ff74289a1d2b6f19d1811f4b9a65f4cce9e5759b4cc64f"' 16); " is 550.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest2,The length of the statement  "            byte[] msg = Hex.Decode("a5d3c8a060f897bbbc20ae0955052f37fbc70986b6e11c65075c9f457142bfa93856897c69020aa81a91b5e4f39e05cdeecc63395ab849c8262ca8bc5c96870aecb8edb0aba0024a9bdb71e06de6100344e5c318bc979ef32b8a49a8278ba99d4861bce42ebbc5c8c666aaa6cac39aff8779f2cae367620f9edd4cb1d80b6c8c"); " is 284.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest2,The length of the statement  "            byte[] sig = Hex.Decode("39fbbd1804c689a533b0043f84da0f06081038c0fbf31e443e46a05e58f50de5198bbca40522afefaba3aed7082a6cb93b1da39f1f5a42246bf64930781948d300549bef0f8d554ecfca60a1b1ecba95a7014ee4545ad4f0c4e3a31942c6738b4ccd6244b6a21267dadf0826a5f713f13b1f5a9ab8501d957a26d4948278ac67851071a315674bdab173bfef2c2690c8373da6bf3d69f30c0e5da8883de872f59521b40793854085641adf98d13db991c5d0a8aaa0222934fa33332e90ef0b954e195cb267d6ffb36c96e14d1ec7b915a87598b4461a3146566354dc2ae748c84ee0cd46543b53ebff8cdf47725b280a1f799fb6ebb4a31ad2bdd5178250f83a"); " is 540.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest3,The length of the statement  "            BigInteger n = new BigInteger("dcb5686a3d2063a3f9cf7b9b32d2d3765b4c449b09b4960245a9111cd3b0cbd3260496885b8e1fa5db33b03efcc759d9c1afe29d93c6faebc7e0efada334b5b9a29655e2da2c8f11103d8203be311feab7ae88e9f1b2ec7d8fc655d77202b1681dd9717ec0f525b35584987e19539635a1ed23ca482a00149c609a23dc1645fd"' 16); " is 294.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest3,The length of the statement  "            BigInteger e = new BigInteger("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dc9f7"' 16); " is 294.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest3,The length of the statement  "            BigInteger d = new BigInteger("189d6345099098992e0c9ca5f281e1338092342fa0acc85cc2a111f30f9bd2fb4753cd1a48ef0ddca9bf1af33ec76fb2e23a9fb4896c26f2235b516f7c05ef7ae81e70f4b491a5fedba9b935e9c76d761a813ce7776ff8a1e5efe1166ff2eca26aa900da88c908d51af9de26977fe39719cc781df32216fa41b838f0c63803c3"' 16); " is 294.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest3,The length of the statement  "            byte[] msg = Hex.Decode("911475c6e210ef4ac65b6fe8d2bfe5e01b959771b137c4ef69b88716e0d2ff9ebc1fad0f358c1dd7d50cc99a7b893ac9a6207076f08d8467d9e48c69c683bfe64a44dabaa3f7c243880f6ab7229bf7bb587822314fc5de5131983bfb2eef8b4bc1eac36f353724b567cd1ae8cddd64ddb7057549d5c81ad5fa3b5e751f00abf5"); " is 284.
Long Statement,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest3,The length of the statement  "            byte[] sig = Hex.Decode("02c50ec0ac8a7f38ef5630c396964d6a6daaa7e3083ab5b57fa2a2632f3b70e2e85c8456cd774d45d7e44fcb063f0f04fff9f1e3adfda11272535a92cb59320b190b5ee4261f23d6ceaa925df3a7bfa42e26bf61ea9645d9d64b3c90a820802768a6e209c9f83705375a3867afccc037e8242a98fa4c3db6b2d9877754d47289"); " is 284.
Long Statement,Org.BouncyCastle.Crypto.Tls.Tests,DtlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsTestCase.cs,RunTest,The length of the statement  "            Assert.AreEqual(config.expectFatalAlertConnectionEnd' clientImpl.FirstFatalAlertConnectionEnd' "Client fatal alert connection end"); " is 132.
Long Statement,Org.BouncyCastle.Crypto.Tls.Tests,DtlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsTestCase.cs,RunTest,The length of the statement  "            Assert.AreEqual(config.expectFatalAlertConnectionEnd' serverImpl.FirstFatalAlertConnectionEnd' "Server fatal alert connection end"); " is 132.
Long Statement,Org.BouncyCastle.Crypto.Tls.Tests,DtlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsTestCase.cs,RunTest,The length of the statement  "            Assert.AreEqual(config.expectFatalAlertDescription' clientImpl.FirstFatalAlertDescription' "Client fatal alert description"); " is 125.
Long Statement,Org.BouncyCastle.Crypto.Tls.Tests,DtlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsTestCase.cs,RunTest,The length of the statement  "            Assert.AreEqual(config.expectFatalAlertDescription' serverImpl.FirstFatalAlertDescription' "Server fatal alert description"); " is 125.
Long Statement,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestCase.cs,RunTest,The length of the statement  "            Assert.AreEqual(config.expectFatalAlertConnectionEnd' clientImpl.FirstFatalAlertConnectionEnd' "Client fatal alert connection end"); " is 132.
Long Statement,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestCase.cs,RunTest,The length of the statement  "            Assert.AreEqual(config.expectFatalAlertConnectionEnd' serverImpl.FirstFatalAlertConnectionEnd' "Server fatal alert connection end"); " is 132.
Long Statement,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestCase.cs,RunTest,The length of the statement  "            Assert.AreEqual(config.expectFatalAlertDescription' clientImpl.FirstFatalAlertDescription' "Client fatal alert description"); " is 125.
Long Statement,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestCase.cs,RunTest,The length of the statement  "            Assert.AreEqual(config.expectFatalAlertDescription' serverImpl.FirstFatalAlertDescription' "Server fatal alert description"); " is 125.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DetachedSignatureProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DetachedSignatureProcessor.cs,Main,The length of the statement  "                Console.Error.WriteLine("usage: DetachedSignatureProcessor [-s [-a] file keyfile passPhrase]|[-v file sigFile keyFile]"); " is 121.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DirectKeySignature,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DirectKeySignature.cs,Main,The length of the statement  "				Console.Error.WriteLine("usage: DirectKeySignature secretKeyFile secretKeyPass publicKeyFile(key to be signed) NotationName NotationValue"); " is 140.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The length of the statement  "			BigInteger g = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16); " is 166.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The length of the statement  "            BigInteger p = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16); " is 166.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,EncryptFile,The length of the statement  "                PgpEncryptedDataGenerator cPk = new PgpEncryptedDataGenerator(SymmetricKeyAlgorithmTag.Cast5' withIntegrityCheck' new SecureRandom()); " is 134.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpClearSignedSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPClearSignedSignatureTest.cs,generateTest,The length of the statement  "			PgpSignatureGenerator           sGen = new PgpSignatureGenerator(pgpSecKey.PublicKey.Algorithm' HashAlgorithmTag.Sha256); " is 121.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The length of the statement  "			BigInteger g = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16); " is 166.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The length of the statement  "			BigInteger p = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16); " is 166.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The length of the statement  "            secretKey = new PgpSecretKey(PgpSignature.DefaultCertification' PublicKeyAlgorithmTag.RsaGeneral' kp.Public' kp.Private' DateTime.UtcNow' "fred"' SymmetricKeyAlgorithmTag.Aes256' passPhrase' null' null' new SecureRandom()); " is 223.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The length of the statement  "            secretKey = PgpSecretKey.CopyWithNewPassword(secretKey' passPhrase' newPass.ToCharArray()' secretKey.KeyEncryptionAlgorithm' new SecureRandom()); " is 145.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The length of the statement  "            doTestTextSig(PublicKeyAlgorithmTag.RsaGeneral' HashAlgorithmTag.Sha1' secretKey.PublicKey' pgpPrivKey' TEST_DATA_WITH_CRLF' TEST_DATA_WITH_CRLF); " is 146.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The length of the statement  "            doTestTextSig(PublicKeyAlgorithmTag.RsaGeneral' HashAlgorithmTag.Sha1' secretKey.PublicKey' pgpPrivKey' TEST_DATA' TEST_DATA_WITH_CRLF); " is 136.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The length of the statement  "            doTestTextSigV3(PublicKeyAlgorithmTag.RsaGeneral' HashAlgorithmTag.Sha1' secretKey.PublicKey' pgpPrivKey' TEST_DATA_WITH_CRLF' TEST_DATA_WITH_CRLF); " is 148.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The length of the statement  "            doTestTextSigV3(PublicKeyAlgorithmTag.RsaGeneral' HashAlgorithmTag.Sha1' secretKey.PublicKey' pgpPrivKey' TEST_DATA' TEST_DATA_WITH_CRLF); " is 138.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The length of the statement  "            doTestTextSig(PublicKeyAlgorithmTag.Dsa' HashAlgorithmTag.Sha1' secretKey.PublicKey' pgpPrivKey' TEST_DATA_WITH_CRLF' TEST_DATA_WITH_CRLF); " is 139.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The length of the statement  "            doTestTextSig(PublicKeyAlgorithmTag.Dsa' HashAlgorithmTag.Sha1' secretKey.PublicKey' pgpPrivKey' TEST_DATA' TEST_DATA_WITH_CRLF); " is 129.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The length of the statement  "            doTestTextSigV3(PublicKeyAlgorithmTag.Dsa' HashAlgorithmTag.Sha1' secretKey.PublicKey' pgpPrivKey' TEST_DATA_WITH_CRLF' TEST_DATA_WITH_CRLF); " is 141.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The length of the statement  "            doTestTextSigV3(PublicKeyAlgorithmTag.Dsa' HashAlgorithmTag.Sha1' secretKey.PublicKey' pgpPrivKey' TEST_DATA' TEST_DATA_WITH_CRLF); " is 131.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpECDHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpECDHTest.cs,DoBasicKeyRingCheck,The length of the statement  "                        if (!certification.VerifyCertification((string)First(pubKeyRing.GetPublicKey().GetUserIds())' pubKeyRing.GetPublicKey())) " is 121.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpECDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpECDsaTest.cs,PerformTest,The length of the statement  "                if (!certification.VerifyCertification((string)First(pubKeyRing.GetPublicKey().GetUserIds())' pubKeyRing.GetPublicKey())) " is 121.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateTest,The length of the statement  "            BigInteger g = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16); " is 166.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateTest,The length of the statement  "            BigInteger p = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16); " is 166.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateSha1Test,The length of the statement  "            BigInteger g = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16); " is 166.
Long Statement,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateSha1Test,The length of the statement  "            BigInteger p = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16); " is 166.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16)); " is 152.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The length of the statement  "				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16)); " is 152.
Long Statement,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The length of the statement  "            EncryptedPrivateKeyInfo  encInfo = EncryptedPrivateKeyInfoFactory.CreateEncryptedPrivateKeyInfo(alg' password1' salt' iterationCount' PrivateKeyInfoFactory.CreatePrivateKeyInfo(pair.Private)); " is 192.
Long Statement,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The length of the statement  "			BigInteger mod = new BigInteger("bb1be8074e4787a8d77967f1575ef72dd7582f9b3347724413c021beafad8f32dba5168e280cbf284df722283dad2fd4abc750e3d6487c2942064e2d8d80641aa5866d1f6f1f83eec26b9b46fecb3b1c9856a303148a5cc899c642fb16f3d9d72f52526c751dc81622c420c82e2cfda70fe8d13f16cc7d6a613a5b2a2b5894d1"' 16); " is 296.
Long Statement,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The length of the statement  "				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Security.Tests,TestDotNetUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestDotNetUtil.cs,TestX509CertificateConversion,The length of the statement  "			BigInteger DSAParaG = new BigInteger(Base64.Decode("AL0fxOTq10OHFbCf8YldyGembqEu08EDVzxyLL29Zn/t4It661YNol1rnhPIs+cirw+yf9zeCe+KL1IbZ/qIMZM=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestDotNetUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestDotNetUtil.cs,TestX509CertificateConversion,The length of the statement  "			BigInteger DSAParaP = new BigInteger(Base64.Decode("AM2b/UeQA+ovv3dL05wlDHEKJ+qhnJBsRT5OB9WuyRC830G79y0R8wuq8jyIYWCYcTn1TeqVPWqiTv6oAoiEeOs=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestDotNetUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestDotNetUtil.cs,TestX509CertificateConversion,The length of the statement  "			BigInteger DSAPublicY = new BigInteger(Base64.Decode("TtWy2GuT9yGBWOHi1/EpCDa/bWJCk2+yAdr56rAcqP0eHGkMnA9s9GJD2nGU8sFjNHm55swpn6JQb8q0agrCfw==")); " is 146.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestDH,The length of the statement  "            BigInteger DHParraP = new BigInteger(Base64.Decode("ALJCm1CUL6mOnyVqWTSV6Z2+DVSGOvgboOhmbyyxCrym59uVnXMmPjIgQTrmniFg7PvdcN7NNFwFmcZleULso1s=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestDH,The length of the statement  "            BigInteger DHParraQ = new BigInteger(Base64.Decode("WSFNqEoX1MdPkrUsmkr0zt8GqkMdfA3QdDM3lliFXlNz7crOuZMfGRAgnXNPELB2fe64b2aaLgLM4zK8oXZRrQ==")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestDH,The length of the statement  "            BigInteger DHPubY = new BigInteger(Base64.Decode("AIki+8/zggCS2e488AsTNULI4LujdUeQQsZI949Dc9lKXZRmrPIC1h8NRoneHQEhpAe4Rhe0nhUOGZJekT5++SA=")); " is 142.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestDH,The length of the statement  "            BigInteger DHPrivX = new BigInteger(Base64.Decode("Apo67noMRO5eDWo/TtpRiBmKGw7ywh25shIu0Rs03krQmWKRbDPvdygWdJ5IpW6ZbKlCTAMhSxpz03YSeSEDmw==")); " is 143.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestElGamal,The length of the statement  "                BigInteger ELGamalParaG = new BigInteger(Base64.Decode("QAZPRcsH8kHVKS5065R1Xy6QtsPvDkmDZtPuq18EJkvLrCIZivE/m5puQp3/VKJrG7dKgz4NBGpONp3HT+Cn/g==")); " is 148.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestElGamal,The length of the statement  "                BigInteger ELGamalParaP = new BigInteger(Base64.Decode("AKXmAwgkudDLI/Yxk6wk3APn+mSjX5QSyDwpchmegSIi1ZNC0Jb+IbxjroKNhRTBKjtv4/JTXtJS6IqaZv9uKes=")); " is 148.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestElGamal,The length of the statement  "                BigInteger ELGamalPubY = new BigInteger(Base64.Decode("AJ/gXuZuCA2X044otNkzs8FI36XuFu1L/YHg5cEmDvICTigycRN2E1DnhP+CTqxEqgEqX8rBe5tuGDlkTLwgNqM=")); " is 147.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestElGamal,The length of the statement  "                BigInteger ELGamalPriv = new BigInteger(Base64.Decode("CqVr+K0TpuJKQnc76MjKhxrJzGr93jnuE3mTpth486Meymt8uWEVAQj1tGc9DTt14F9aV9WIT2oYYbvLJRcwow==")); " is 147.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "            BigInteger rsaPubMod = new BigInteger(Base64.Decode("AIASoe2PQb1IP7bTyC9usjHP7FvnUMVpKW49iuFtrw/dMpYlsMMoIU2jupfifDpdFxIktSB4P+6Ymg5WjvHKTIrvQ7SR4zV4jaPTu56Ys0pZ9EDA6gb3HLjtU+8Bb1mfWM+yjKxcPDuFjwEtjGlPHg1Vq+CA9HNcMSKNn2+tW6qt")); " is 229.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "            BigInteger rsaPrivMod = new BigInteger(Base64.Decode("AIASoe2PQb1IP7bTyC9usjHP7FvnUMVpKW49iuFtrw/dMpYlsMMoIU2jupfifDpdFxIktSB4P+6Ymg5WjvHKTIrvQ7SR4zV4jaPTu56Ys0pZ9EDA6gb3HLjtU+8Bb1mfWM+yjKxcPDuFjwEtjGlPHg1Vq+CA9HNcMSKNn2+tW6qt")); " is 230.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "            BigInteger rsaPrivDP = new BigInteger(Base64.Decode("JXzfzG5v+HtLJIZqYMUefJfFLu8DPuJGaLD6lI3cZ0babWZ/oPGoJa5iHpX4Ul/7l3s1PFsuy1GhzCdOdlfRcQ==")); " is 145.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "            BigInteger rsaPrivDQ = new BigInteger(Base64.Decode("YNdJhw3cn0gBoVmMIFRZzflPDNthBiWy/dUMSRfJCxoZjSnr1gysZHK01HteV1YYNGcwPdr3j4FbOfri5c6DUQ==")); " is 145.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "            BigInteger rsaPrivExp = new BigInteger(Base64.Decode("DxFAOhDajr00rBjqX+7nyZ/9sHWRCCp9WEN5wCsFiWVRPtdB+NeLcou7mWXwf1Y+8xNgmmh//fPV45G2dsyBeZbXeJwB7bzx9NMEAfedchyOwjR8PYdjK3NpTLKtZlEJ6Jkh4QihrXpZMO4fKZWUm9bid3+lmiq43FwW+Hof8/E=")); " is 230.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "            BigInteger rsaPrivP = new BigInteger(Base64.Decode("AJ9StyTVW+AL/1s7RBtFwZGFBgd3zctBqzzwKPda6LbtIFDznmwDCqAlIQH9X14X7UPLokCDhuAa76OnDXb1OiE=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "            BigInteger rsaPrivQ = new BigInteger(Base64.Decode("AM3JfD79dNJ5A3beScSzPtWxx/tSLi0QHFtkuhtSizeXdkv5FSba7lVzwEOGKHmW829bRoNxThDy4ds1IihW1w0=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "            BigInteger rsaPrivQinv = new BigInteger(Base64.Decode("Lt0g7wrsNsQxuDdB8q/rH8fSFeBXMGLtCIqfOec1j7FEIuYA/ACiRDgXkHa0WgN7nLXSjHoy630wC5Toq8vvUg==")); " is 147.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestRsa,The length of the statement  "			RsaPrivateCrtKeyParameters rsaPrivate = new RsaPrivateCrtKeyParameters(rsaPrivMod' rsaPubExp' rsaPrivExp' rsaPrivP' rsaPrivQ' rsaPrivDP' rsaPrivDQ' rsaPrivQinv); " is 161.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestDSA,The length of the statement  "            BigInteger DSAParaG = new BigInteger(Base64.Decode("AL0fxOTq10OHFbCf8YldyGembqEu08EDVzxyLL29Zn/t4It661YNol1rnhPIs+cirw+yf9zeCe+KL1IbZ/qIMZM=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestDSA,The length of the statement  "            BigInteger DSAParaP = new BigInteger(Base64.Decode("AM2b/UeQA+ovv3dL05wlDHEKJ+qhnJBsRT5OB9WuyRC830G79y0R8wuq8jyIYWCYcTn1TeqVPWqiTv6oAoiEeOs=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestDSA,The length of the statement  "            BigInteger DSAPublicY = new BigInteger(Base64.Decode("TtWy2GuT9yGBWOHi1/EpCDa/bWJCk2+yAdr56rAcqP0eHGkMnA9s9GJD2nGU8sFjNHm55swpn6JQb8q0agrCfw==")); " is 146.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger rsaMod = new BigInteger("a7295693155b1813bb84877fb45343556e0568043de5910872a3a518cc11e23e2db74eaf4545068c4e3d258a2718fbacdcc3eafa457695b957e88fbf110aed049a992d9c430232d02f3529c67a3419935ea9b569f85b1bcd37de6b899cd62697e843130ff0529d09c97d813cb15f293751ff56f943fbdabb63971cc7f4f6d5bff1594416b1f5907bde5a84a44f9802ef29b43bda1960f948f8afb8766c1ab80d32eec88ed66d0b65aebe44a6d0b3c5e0ab051aaa1b912fbcc17b8e751ddecc5365b6db6dab0020c3057db4013a51213a5798a3aab67985b0f4d88627a54a0f3f0285fbcb4afdfeb65cb153af66825656d43238b75503231500753f4e421e3c57"' 16); " is 555.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger rsaPrivExp = new BigInteger("65dad56ac7df7abb434e4cb5eeadb16093aa6da7f0033aad3815289b04757d32bfee6ade7749c8e4a323b5050a2fb9e2a99e23469e1ed4ba5bab54336af20a5bfccb8b3424cc6923db2ffca5787ed87aa87aa614cd04cedaebc8f623a2d2063017910f436dff18bb06f01758610787f8b258f0a8efd8bd7de30007c47b2a1031696c7d6523bc191d4d918927a7e0b09584ed205bd2ff4fc4382678df82353f7532b3bbb81d69e3f39070aed3fb64fce032a089e8e64955afa5213a6eb241231bd98d702fba725a9b205952fda186412d9e0d9344d2998c455ad8c2bae85ee672751466d5288304032b5b7e02f7e558c7af82c7fbf58eea0bb4ef0f001e6cd0a9"' 16); " is 559.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger rsaPrivP = new BigInteger("d4fd9ac3474fb83aaf832470643609659e511b322632b239b688f3cd2aad87527d6cf652fb9c9ca67940e84789444f2e99b0cb0cfabbd4de95396106c865f38e2fb7b82b231260a94df0e01756bf73ce0386868d9c41645560a81af2f53c18e4f7cdf3d51d80267372e6e0216afbf67f655c9450769cca494e4f6631b239ce1b"' 16); " is 301.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger rsaPrivQ = new BigInteger("c8eaa0e2a1b3a4412a702bccda93f4d150da60d736c99c7c566fdea4dd1b401cbc0d8c063daaf0b579953d36343aa18b33dbf8b9eae94452490cc905245f8f7b9e29b1a288bc66731a29e1dd1a45c9fd7f8238ff727adc49fff73991d0dc096206b9d3a08f61e7462e2b804d78cb8c5eccdb9b7fbd2ad6a8fea46c1053e1be75"' 16); " is 301.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger rsaPrivDP = new BigInteger("10edcb544421c0f9e123624d1099feeb35c72a8b34e008ac6fa6b90210a7543f293af4e5299c8c12eb464e70092805c7256e18e5823455ba0f504d36f5ccacac1b7cd5c58ff710f9c3f92646949d88fdd1e7ea5fed1081820bb9b0d2a8cd4b093fecfdb96dabd6e28c3a6f8c186dc86cddc89afd3e403e0fcf8a9e0bcb27af0b"' 16); " is 302.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger rsaPrivDQ = new BigInteger("97fc25484b5a415eaa63c03e6efa8dafe9a1c8b004d9ee6e80548fefd6f2ce44ee5cb117e77e70285798f57d137566ce8ea4503b13e0f1b5ed5ca6942537c4aa96b2a395782a4cb5b58d0936e0b0fa63b1192954d39ced176d71ef32c6f42c84e2e19f9d4dd999c2151b032b97bd22aa73fd8c5bcd15a2dca4046d5acc997021"' 16); " is 302.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger rsaPrivQinv = new BigInteger("4bb8064e1eff7e9efc3c4578fcedb59ca4aef0993a8312dfdcb1b3decf458aa6650d3d0866f143cbf0d3825e9381181170a0a1651eefcd7def786b8eb356555d9fa07c85b5f5cbdd74382f1129b5e36b4166b6cc9157923699708648212c484958351fdc9cf14f218dbe7fbf7cbd93a209a4681fe23ceb44bab67d66f45d1c9d"' 16); " is 304.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger DSAParaG = new BigInteger(Base64.Decode("AL0fxOTq10OHFbCf8YldyGembqEu08EDVzxyLL29Zn/t4It661YNol1rnhPIs+cirw+yf9zeCe+KL1IbZ/qIMZM=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger DSAParaP = new BigInteger(Base64.Decode("AM2b/UeQA+ovv3dL05wlDHEKJ+qhnJBsRT5OB9WuyRC830G79y0R8wuq8jyIYWCYcTn1TeqVPWqiTv6oAoiEeOs=")); " is 144.
Long Statement,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The length of the statement  "            BigInteger DSAPublicY = new BigInteger(Base64.Decode("TtWy2GuT9yGBWOHi1/EpCDa/bWJCk2+yAdr56rAcqP0eHGkMnA9s9GJD2nGU8sFjNHm55swpn6JQb8q0agrCfw==")); " is 146.
Long Statement,Org.BouncyCastle.Tests,AttrCertSelectorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertSelectorTest.cs,CreateAttrCert,The length of the statement  "			// "b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' " is 134.
Long Statement,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithCert,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithPrincipal,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The length of the statement  "//			if (!ps.Equals("C=US' O=vt' OU=Class 2' OU=Virginia Tech User' CN=Markus Lorch (mlorch)' EMAILADDRESS=mlorch@vt.edu")) " is 123.
Long Statement,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The length of the statement  "			if (!principals[0].Equivalent(new X509Name("C=US' O=vt' OU=Class 2' OU=Virginia Tech User' CN=Markus Lorch (mlorch)' EMAILADDRESS=mlorch@vt.edu"))) " is 147.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The length of the statement  "                new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The length of the statement  "                new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The length of the statement  "                new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The length of the statement  "            X509Name pr = new X509Name("O=\"The Bouncy Castle' The Legion of\"'E=feedback-crypto@bouncycastle.org'ST=Victoria'L=Melbourne'C=AU"); " is 133.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The length of the statement  "            if (!pr.ToString().Equals("O=The Bouncy Castle\\' The Legion of'E=feedback-crypto@bouncycastle.org'ST=Victoria'L=Melbourne'C=AU")) " is 130.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The length of the statement  "            pr = new X509Name("O=The Bouncy Castle\\' The Legion of'E=feedback-crypto@bouncycastle.org'ST=Victoria'L=Melbourne'C=AU"); " is 122.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The length of the statement  "            if (!pr.ToString().Equals("O=The Bouncy Castle\\' The Legion of'E=feedback-crypto@bouncycastle.org'ST=Victoria'L=Melbourne'C=AU")) " is 130.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "                new BigInteger("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151")' // q (or p) " is 188.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "                new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"' 16)'   // a " is 162.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "                new BigInteger("0051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00"' 16));  // b " is 162.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "//				curve.DecodePoint(Hex.Decode("02C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66"))' // G " is 177.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "                curve.DecodePoint(Hex.Decode("0200C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66"))' // G " is 173.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "                new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409"' 16)); // n " is 161.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "                new BigInteger("5769183828869504557786041598510887460263120754767955773309066354712783118202294874205844512909370791582896372147797293913785865682804434049019366394746072023")' // d " is 181.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "//				curve.DecodePoint(Hex.Decode("026BFDD2C9278B63C92D6624F151C9D7A822CC75BD983B17D25D74C26740380022D3D8FAF304781E416175EADF4ED6E2B47142D2454A7AC7801DD803CF44A4D1F0AC"))' // Q " is 177.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The length of the statement  "                curve.DecodePoint(Hex.Decode("02006BFDD2C9278B63C92D6624F151C9D7A822CC75BD983B17D25D74C26740380022D3D8FAF304781E416175EADF4ED6E2B47142D2454A7AC7801DD803CF44A4D1F0AC"))' // Q " is 173.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The length of the statement  "                new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The length of the statement  "                new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The length of the statement  "                new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,pkcs7Test,The length of the statement  "            sigData = new SignedData(DerSet.Empty' new ContentInfo(CmsObjectIdentifiers.Data' null)' DerSet.Empty' DerSet.Empty' DerSet.Empty); " is 131.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The length of the statement  "                new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)' " is 278.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The length of the statement  "                new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)' " is 278.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The length of the statement  "                new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)' " is 278.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The length of the statement  "                new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)' " is 150.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The length of the statement  "                new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)' " is 150.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The length of the statement  "                new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)' " is 150.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The length of the statement  "                new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)' " is 150.
Long Statement,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The length of the statement  "                new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16)); " is 151.
Long Statement,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestECDH,The length of the statement  "//				ECPointUtil.DecodePoint(curve' Hex.Decode("020ffa963cdca8816ccc33b8642bedf905c3d358573d3f27fbbd3b3cb9aaaf"))' // G " is 120.
Long Statement,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestECDH,The length of the statement  "//				Console.WriteLine(" expected " + pubKey.getW().getAffineX() + " got " + ((ECPublicKey)aKeyPair.Public).getW().getAffineX()); " is 130.
Long Statement,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestECDH,The length of the statement  "//				Console.WriteLine(" expected " + pubKey.getW().getAffineY() + " got " + ((ECPublicKey)aKeyPair.Public).getW().getAffineY()); " is 130.
Long Statement,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G " is 161.
Long Statement,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("045894609CCECF9A92533F630DE713A958E96C97CCB8F5ABB5A688A238DEED6DC2D9D0C94EBFB7D526BA6A61764175B99CB6011E2047F9F067293F57F5"))' // Q " is 161.
Long Statement,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,DoTestECDsa239BitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G " is 161.
Long Statement,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,DoTestECDsa239BitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("045894609CCECF9A92533F630DE713A958E96C97CCB8F5ABB5A688A238DEED6DC2D9D0C94EBFB7D526BA6A61764175B99CB6011E2047F9F067293F57F5"))' // Q " is 161.
Long Statement,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The length of the statement  "                curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G " is 161.
Long Statement,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The length of the statement  "            //g.initialize(dsaP' FixedSecureRandom.From(Hex.Decode("0CAF2EF547EC49C4F3A6FE6DF4223A174D01F2C115D49A6F73437C29A2A8458C"))); " is 125.
Long Statement,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The length of the statement  "            g.Init(new DsaKeyGenerationParameters(FixedSecureRandom.From(Hex.Decode("0CAF2EF547EC49C4F3A6FE6DF4223A174D01F2C115D49A6F73437C29A2A8458C"))' dsaP)); " is 149.
Long Statement,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitPrime,The length of the statement  "            byte[] kData = new BigInteger("700000017569056646655505781757157107570501575775705779575555657156756655").ToByteArrayUnsigned(); " is 128.
Long Statement,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitPrime,The length of the statement  "//				ECPointUtil.DecodePoint(curve' Hex.Decode("020ffa963cdca8816ccc33b8642bedf905c3d358573d3f27fbbd3b3cb9aaaf"))' // G " is 120.
Long Statement,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitPrime,The length of the statement  "//				ECPointUtil.DecodePoint(curve' Hex.Decode("025b6dc53bc61a2548ffb0f671472de6c9521a9d2d2534e65abfcbd5fe0c70"))' // Q " is 120.
Long Statement,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The length of the statement  "            byte[] kData = new BigInteger("171278725565216523967285789236956265265265235675811949404040041670216363").ToByteArrayUnsigned(); " is 128.
Long Statement,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The length of the statement  "//				ECPointUtil.DecodePoint(curve' Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G " is 180.
Long Statement,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G " is 161.
Long Statement,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The length of the statement  "//				ECPointUtil.DecodePoint(curve' Hex.Decode("045894609CCECF9A92533F630DE713A958E96C97CCB8F5ABB5A688A238DEED6DC2D9D0C94EBFB7D526BA6A61764175B99CB6011E2047F9F067293F57F5"))' // Q " is 180.
Long Statement,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The length of the statement  "                curve.DecodePoint(Hex.Decode("045894609CCECF9A92533F630DE713A958E96C97CCB8F5ABB5A688A238DEED6DC2D9D0C94EBFB7D526BA6A61764175B99CB6011E2047F9F067293F57F5"))' // Q " is 161.
Long Statement,Org.BouncyCastle.Tests,ECEncodingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECEncodingTest.cs,PerformTest,The length of the statement  "			byte[] ecParams = Hex.Decode("3081C8020101302806072A8648CE3D0101021D00D7C134AA264366862A18302575D1D787B09F075797DA89F57EC8C0FF303C041C68A5E62CA9CE6C1C299803A6C1530B514E182AD8B0042A59CAD29F43041C2580F63CCFE44138870713B1A92369E33E2135D266DBB372386C400B0439040D9029AD2C7E5CF4340823B2A87DC68C9E4CE3174C1E6EFDEE12C07D58AA56F772C0726F24C6B89E4ECDAC24354B9E99CAA3F6D3761402CD021D00D7C134AA264366862A18302575D0FB98D116BC4B6DDEBCA3A5A7939F020101"); " is 439.
Long Statement,Org.BouncyCastle.Tests,ECEncodingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECEncodingTest.cs,PerformTest,The length of the statement  "			ecParams = Hex.Decode("3081C8020101302806072A8648CE3D0101021D00D7C134AA264366862A18302575D1D787B09F075797DA89F57EC8C0FF303C041C56E6C7E4F11A7B4B961A4DCB5BD282EB22E42E9BCBE3E7B361F18012041C4BE3E7B361F18012F2353D22975E02D8D05D2C6F3342DD8F57D4C76F0439048D127A0C27E0DE207ED3B7FB98F83C8BD5A2A57C827F4B97874DEB2C1BAEB0C006958CE61BB1FC81F5389E288CB3E86E2ED91FB47B08FCCA021D00D7C134AA264366862A18302575D11A5F7AABFBA3D897FF5CA727AF53020101"); " is 432.
Long Statement,Org.BouncyCastle.Tests,ECEncodingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECEncodingTest.cs,PerformTest,The length of the statement  "			ecParams = Hex.Decode("30820142020101303c06072a8648ce3d0101023100fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff3066043100fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc043100b3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef046104aa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab73617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f023100ffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973020101"); " is 678.
Long Statement,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR239bitPrime,The length of the statement  "            byte[] kData = new BigInteger("700000017569056646655505781757157107570501575775705779575555657156756655").ToByteArrayUnsigned(); " is 128.
Long Statement,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR521bitPrime,The length of the statement  "            BigInteger r  = new BigInteger("1820641608112320695747745915744708800944302281118541146383656165330049339564439316345159057453301092391897040509935100825960342573871340486684575368150970954"); " is 192.
Long Statement,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR521bitPrime,The length of the statement  "            BigInteger s  = new BigInteger("6358277176448326821136601602749690343031826490505780896013143436153111780706227024847359990383467115737705919410755190867632280059161174165591324242446800763"); " is 192.
Long Statement,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR521bitPrime,The length of the statement  "            byte[] kData = new BigInteger("cdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"' 16).ToByteArrayUnsigned(); " is 192.
Long Statement,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR521bitPrime,The length of the statement  "                new BigInteger("5769183828869504557786041598510887460263120754767955773309066354712783118202294874205844512909370791582896372147797293913785865682804434049019366394746072023")' // d " is 181.
Long Statement,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR521bitPrime,The length of the statement  "                curve.DecodePoint(Hex.Decode("02006BFDD2C9278B63C92D6624F151C9D7A822CC75BD983B17D25D74C26740380022D3D8FAF304781E416175EADF4ED6E2B47142D2454A7AC7801DD803CF44A4D1F0AC"))' // Q " is 173.
Long Statement,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,ecGOST3410Test,The length of the statement  "            byte[] kData = new BigInteger("53854137677348463731403841147996619241504003434302020712960838528893196233395").ToByteArrayUnsigned(); " is 133.
Long Statement,Org.BouncyCastle.Tests,MqvTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\MqvTest.cs,TestECMqv,The length of the statement  "//				ECPointUtil.DecodePoint(curve' Hex.Decode("020ffa963cdca8816ccc33b8642bedf905c3d358573d3f27fbbd3b3cb9aaaf"))' // G " is 120.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "                new BigInteger("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151")' // q (or p) " is 188.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "                new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"' 16)'   // a " is 162.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "                new BigInteger("0051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00"' 16));  // b " is 162.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "//				curve.DecodePoint(Hex.Decode("02C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66"))' // G " is 177.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "                curve.DecodePoint(Hex.Decode("0200C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66"))' // G " is 173.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "                new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409"' 16)); // n " is 161.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "                new BigInteger("5769183828869504557786041598510887460263120754767955773309066354712783118202294874205844512909370791582896372147797293913785865682804434049019366394746072023")' // d " is 181.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "//				curve.DecodePoint(Hex.Decode("026BFDD2C9278B63C92D6624F151C9D7A822CC75BD983B17D25D74C26740380022D3D8FAF304781E416175EADF4ED6E2B47142D2454A7AC7801DD803CF44A4D1F0AC"))' // Q " is 177.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The length of the statement  "                curve.DecodePoint(Hex.Decode("02006BFDD2C9278B63C92D6624F151C9D7A822CC75BD983B17D25D74C26740380022D3D8FAF304781E416175EADF4ED6E2B47142D2454A7AC7801DD803CF44A4D1F0AC"))' // Q " is 173.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The length of the statement  "                new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)' " is 278.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The length of the statement  "                new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)' " is 278.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The length of the statement  "                new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)' " is 278.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The length of the statement  "                new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)' " is 150.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The length of the statement  "                new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)' " is 150.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The length of the statement  "                new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)' " is 150.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The length of the statement  "                new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)' " is 150.
Long Statement,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The length of the statement  "                new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16)); " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16)); " is 152.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)' " is 279.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)' " is 151.
Long Statement,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The length of the statement  "				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16)); " is 152.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("8b427f781a2e59dd9def386f1956b996ee07f48c96880e65a368055ed8c0a8831669ef7250b40918b2b1d488547e72c84540e42bd07b03f14e226f04fbc2d929")' " is 143.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("2ec6e1a1711b6c7b8cd3f6a25db21ab8bb0a5f1d6df2ef375fa708a43997730ffc7c98856dbbe36edddcdd1b2d2a53867d8355af94fea3aeec128da908e08f4c")' " is 143.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("0850ac4e5a8118323200c8ed1e5aaa3d5e635172553ccac66a8e4153d35c79305c4440f11034ab147fccce21f18a50cf1c0099c08a577eb68237a91042278965")' " is 143.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("1c9649bdccb51056751fe43837f4eb43bada472accf26f65231666d5de7d11950d8379b3596dfdf75c6234274896fa8d18ad0865d3be2ac4d6687151abdf01e93941dcef18fa63186c9351d1506c89d09733c5ff4304208c812bdd21a50f56fde115e629e0e973721c9fcc87e89295a79853dee613962a0b2f2fc57163fd99057a3c776f13c20c26407eb8863998d7e53b543ba8d0a295a9a68d1a149833078c9809ad6a6dad7fc22a95ad615a73138c54c018f40d99bf8eeecd45f5be526f2d6b01aeb56381991c1ab31a2e756f15e052b9cd5638b2eff799795c5bae493307d5eb9f8c21d438de131fe505a4e7432547ab19224094f9e4be1968bd0793b79d")' " is 527.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("4c4afc0c24dddaedd4f9a3b23be30d35d8e005ffd36b3defc5d18acc830c3ed388ce20f43a00e614fd087c814197bc9fc2eff9ad4cc474a7a2ef3ed9c0f0a55eb23371e41ee8f2e2ed93ea3a06ca482589ab87e0d61dcffda5eea1241408e43ea1108726cdb87cc3aa5e9eaaa9f72507ca1352ac54a53920c94dccc768147933d8c50aefd9d1da10522a40133cd33dbc0524669e70f771a88d65c4716d471cd22b08b9f01f24e4e9fc7ffbcfa0e0a7aed47b345826399b26a73be112eb9c5e06fc6742fc3d0ef53d43896403c5105109cfc12e6deeaf4a48ba308e039774b9bdb31a9b9e133c81c321630cf0b4b2d1f90717b24c3268e1fea681ea9cdc709342")' " is 527.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("06b5b26bd13515f799e5e37ca43cace15cd82fd4bf36b25d285a6f0998d97c8cb0755a28f0ae66618b1cd03e27ac95eaaa4882bc6dc0078cd457d4f7de4154173a9c7a838cfc2ac2f74875df462aae0cfd341645dc51d9a01da9bdb01507f140fa8a016534379d838cc3b2a53ac33150af1b242fc88013cb8d914e66c8182864ee6de88ce2879d4c05dd125409620a96797c55c832fb2fb31d4310c190b8ed2c95fdfda2ed87f785002faaec3f35ec05cf70a3774ce185e4882df35719d582dd55ac31257344a9cba95189dcbea16e8c6cb7a235a0384bc83b6183ca8547e670fe33b1b91725ae0c250c9eca7b5ba78bd77145b70270bf8ac31653006c02ca9c")' " is 527.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("135f1be3d045526235bf9d5e43499d4ee1bfdf93370769ae56e85dbc339bc5b7ea3bee49717497ee8ac3f7cd6adb6fc0f17812390dcd65ac7b87fef7970d9ff9")' " is 143.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("03c05add1e030178c352face07cafc9447c8f369b8f95125c0d311c16b6da48ca2067104cce6cd21ae7b163cd18ffc13001aecebdc2eb02b9e92681f84033a98")' " is 143.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Hex.Decode("00319bb9becb49f3ed1bca26d0fcf09b0b0a508e4d0bd43b350f959b72cd25b3af47d608fdcd248eada74fbe19990dbeb9bf0da4b4e1200243a14e5cab3f7e610c") " is 144.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "					new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance))' " is 126.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Fail("OAEP SHA-224 test failed on encrypt expected " + Hex.ToHexString(output[2]) + " got " + Hex.ToHexString(outBytes)); " is 121.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(NistObjectIdentifiers.IdSha224' DerNull.Instance))' " is 129.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Fail("OAEP SHA-256 test failed on encrypt expected " + Hex.ToHexString(output[2]) + " got " + Hex.ToHexString(outBytes)); " is 121.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(NistObjectIdentifiers.IdSha256' DerNull.Instance))' " is 129.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				Fail("OAEP SHA-384 test failed on encrypt expected " + Hex.ToHexString(output[2]) + " got " + Hex.ToHexString(outBytes)); " is 121.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(NistObjectIdentifiers.IdSha384' DerNull.Instance))' " is 129.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(PkcsObjectIdentifiers.MD5' DerNull.Instance))' " is 124.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "//				Fail("OAEP test failed on encrypt expected " + Encoding.ASCII.GetString(Hex.Encode(output[2])) + " got " + Encoding.ASCII.GetString(Hex.Encode(outBytes))); " is 161.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "//				Fail("OAEP test failed on decrypt expected " + Encoding.ASCII.GetString(Hex.Encode(input)) + " got " + Encoding.ASCII.GetString(Hex.Encode(outBytes))); " is 157.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "//			c.init(Cipher.ENCRYPT_MODE' pubKey' new OAEPParameterSpec("SHA1"' "MGF1"' new MGF1ParameterSpec("SHA1")' new PSource.PSpecified(new byte[] { 1' 2' 3' 4' 5 }))' rand); " is 171.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance))' " is 126.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdPSpecified' new DerOctetString(new byte[] { 1' 2' 3' 4' 5 }))).GetEncoded(); " is 124.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "//				Fail("OAEP test failed on encrypt expected " + Encoding.ASCII.GetString(Hex.Encode(output[2])) + " got " + Encoding.ASCII.GetString(Hex.Encode(outBytes))); " is 161.
Long Statement,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The length of the statement  "//				Fail("OAEP test failed on decrypt expected " + Encoding.ASCII.GetString(Hex.Encode(input)) + " got " + Encoding.ASCII.GetString(Hex.Encode(outBytes))); " is 157.
Long Statement,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The length of the statement  "			BigInteger  mod = new BigInteger("ffffffff78f6c55506c59785e871211ee120b0b5dd644aa796d82413a47b24573f1be5745b5cd9950f6b389b52350d4e01e90009669a8720bf265a2865994190a661dea3c7828e2e7ca1b19651adc2d5"' 16); " is 201.
Long Statement,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The length of the statement  "			BigInteger  pri = new BigInteger("2aaaaaaa942920e38120ee965168302fd0301d73a4e60c7143ceb0adf0bf30b9352f50e8b9e4ceedd65343b2179005b2f099915e4b0c37e41314bb0821ad8330d23cba7f589e0f129b04c46b67dfce9d"' 16); " is 201.
Long Statement,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The length of the statement  "			byte[] testSig = Hex.Decode("5cf9a01854dbacaec83aae8efc563d74538192e95466babacd361d7c86000fe42dcb4581e48e4feb862d04698da9203b1803b262105104d510b365ee9c660857ba1c001aa57abfd1c8de92e47c275cae"); " is 192.
Long Statement,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The length of the statement  "			data = Hex.Decode("fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba9876543210"); " is 246.
Long Statement,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateIntermediateCert,The length of the statement  "			certGen.AddExtension(X509Extensions.KeyUsage' true' new KeyUsage(KeyUsage.DigitalSignature | KeyUsage.KeyCertSign | KeyUsage.CrlSign)); " is 135.
Long Statement,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateEndEntityCert,The length of the statement  "			certGen.AddExtension(X509Extensions.KeyUsage' true' new KeyUsage(KeyUsage.DigitalSignature | KeyUsage.KeyEncipherment)); " is 120.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestOverlappingPoliciesTest6,The length of the statement  "			string[] certList = new string[] { "PoliciesP1234CACert"' "PoliciesP1234subCAP123Cert"' "PoliciesP1234subsubCAP123P12Cert"' "OverlappingPoliciesTest6EE" }; " is 155.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestOverlappingPoliciesTest6,The length of the statement  "			string[] crlList = new string[] { TRUST_ANCHOR_ROOT_CRL' "PoliciesP1234CACRL"' "PoliciesP1234subCAP123CRL"' "PoliciesP1234subsubCAP123P12CRL" }; " is 144.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestDifferentPoliciesTest7,The length of the statement  "			string[] certList = new string[] { "PoliciesP123CACert"' "PoliciesP123subCAP12Cert"' "PoliciesP123subsubCAP12P1Cert"' "DifferentPoliciesTest7EE" }; " is 147.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestDifferentPoliciesTest7,The length of the statement  "			string[] crlList = new string[] { TRUST_ANCHOR_ROOT_CRL' "PoliciesP123CACRL"' "PoliciesP123subCAP12CRL"' "PoliciesP123subsubCAP12P1CRL" }; " is 138.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestDifferentPoliciesTest8,The length of the statement  "			string[] certList = new string[] { "PoliciesP12CACert"' "PoliciesP12subCAP1Cert"' "PoliciesP12subsubCAP1P2Cert"' "DifferentPoliciesTest8EE" }; " is 142.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestDifferentPoliciesTest8,The length of the statement  "			string[] crlList = new string[] { TRUST_ANCHOR_ROOT_CRL' "PoliciesP12CACRL"' "PoliciesP12subCAP1CRL"' "PoliciesP12subsubCAP1P2CRL" }; " is 133.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestDifferentPoliciesTest9,The length of the statement  "			string[] certList = new string[] { "PoliciesP123CACert"' "PoliciesP123subCAP12Cert"' "PoliciesP123subsubCAP12P2Cert"' "PoliciesP123subsubsubCAP12P2P1Cert"' "DifferentPoliciesTest9EE" }; " is 185.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestDifferentPoliciesTest9,The length of the statement  "			string[] crlList = new string[] { TRUST_ANCHOR_ROOT_CRL' "PoliciesP123CACRL"' "PoliciesP123subCAP12CRL"' "PoliciesP123subsubCAP2P2CRL"' "PoliciesP123subsubsubCAP12P2P1CRL" }; " is 174.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestInvalidInhibitPolicyMappingTest1,The length of the statement  "			string[] certList = new string[] { "inhibitPolicyMapping0CACert"' "inhibitPolicyMapping0subCACert"' "InvalidinhibitPolicyMappingTest1EE" }; " is 139.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestInvalidInhibitPolicyMappingTest1,The length of the statement  "			string[] crlList = new string[] { TRUST_ANCHOR_ROOT_CRL' "inhibitPolicyMapping0CACRL"' "inhibitPolicyMapping0subCACRL" }; " is 121.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestValidInhibitPolicyMappingTest2,The length of the statement  "			string[] certList = new string[] { "inhibitPolicyMapping1P12CACert"' "inhibitPolicyMapping1P12subCACert"' "ValidinhibitPolicyMappingTest2EE" }; " is 143.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestValidInhibitPolicyMappingTest2,The length of the statement  "			string[] crlList = new string[] { TRUST_ANCHOR_ROOT_CRL' "inhibitPolicyMapping1P12CACRL"' "inhibitPolicyMapping1P12subCACRL" }; " is 127.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestValidSelfIssuedInhibitAnyPolicyTest7,The length of the statement  "			string[] certList = new string[] { "inhibitAnyPolicy1CACert"' "inhibitAnyPolicy1SelfIssuedCACert"' "inhibitAnyPolicy1subCA2Cert"' "ValidSelfIssuedinhibitAnyPolicyTest7EE" }; " is 173.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestValidSeparateCertificateandCRLKeysTest19,The length of the statement  "			string[] certList = new string[] { "SeparateCertificateandCRLKeysCertificateSigningCACert"' "SeparateCertificateandCRLKeysCRLSigningCert"' "ValidSeparateCertificateandCRLKeysTest19EE" }; " is 186.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestValidpathLenConstraintTest13,The length of the statement  "			string[] certList = new string[] { "pathLenConstraint6CACert"' "pathLenConstraint6subCA4Cert"' "pathLenConstraint6subsubCA41Cert"' "pathLenConstraint6subsubsubCA41XCert"' "ValidpathLenConstraintTest13EE" }; " is 206.
Long Statement,Org.BouncyCastle.Tests.Nist,NistCertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\nist\NistCertPathTest.cs,TestValidpathLenConstraintTest13,The length of the statement  "			string[] crlList = new string[] { TRUST_ANCHOR_ROOT_CRL' "pathLenConstraint6CACRL"' "pathLenConstraint6subCA4CRL"' "pathLenConstraint6subsubCA41CRL"' "pathLenConstraint6subsubsubCA41XCRL" }; " is 190.
Long Statement,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestBadPolicy,The length of the statement  "			TimeStampResponseGenerator tsRespGen = new TimeStampResponseGenerator(tsTokenGen' TspAlgorithms.Allowed' new ArrayList()); " is 122.
Long Statement,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo2,The length of the statement  "			Assert.IsTrue(Arrays.AreEqual(Hex.Decode("ffffffffffffffffffffffffffffffffffffffff")' tstInfo.GetMessageImprintDigest())); " is 122.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "            BigInteger rsaPubMod = new BigInteger(Base64.Decode("AIASoe2PQb1IP7bTyC9usjHP7FvnUMVpKW49iuFtrw/dMpYlsMMoIU2jupfifDpdFxIktSB4P+6Ymg5WjvHKTIrvQ7SR4zV4jaPTu56Ys0pZ9EDA6gb3HLjtU+8Bb1mfWM+yjKxcPDuFjwEtjGlPHg1Vq+CA9HNcMSKNn2+tW6qt")); " is 229.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "            BigInteger rsaPrivMod = new BigInteger(Base64.Decode("AIASoe2PQb1IP7bTyC9usjHP7FvnUMVpKW49iuFtrw/dMpYlsMMoIU2jupfifDpdFxIktSB4P+6Ymg5WjvHKTIrvQ7SR4zV4jaPTu56Ys0pZ9EDA6gb3HLjtU+8Bb1mfWM+yjKxcPDuFjwEtjGlPHg1Vq+CA9HNcMSKNn2+tW6qt")); " is 230.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "            BigInteger rsaPrivDP = new BigInteger(Base64.Decode("JXzfzG5v+HtLJIZqYMUefJfFLu8DPuJGaLD6lI3cZ0babWZ/oPGoJa5iHpX4Ul/7l3s1PFsuy1GhzCdOdlfRcQ==")); " is 145.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "            BigInteger rsaPrivDQ = new BigInteger(Base64.Decode("YNdJhw3cn0gBoVmMIFRZzflPDNthBiWy/dUMSRfJCxoZjSnr1gysZHK01HteV1YYNGcwPdr3j4FbOfri5c6DUQ==")); " is 145.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "            BigInteger rsaPrivExp = new BigInteger(Base64.Decode("DxFAOhDajr00rBjqX+7nyZ/9sHWRCCp9WEN5wCsFiWVRPtdB+NeLcou7mWXwf1Y+8xNgmmh//fPV45G2dsyBeZbXeJwB7bzx9NMEAfedchyOwjR8PYdjK3NpTLKtZlEJ6Jkh4QihrXpZMO4fKZWUm9bid3+lmiq43FwW+Hof8/E=")); " is 230.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "            BigInteger rsaPrivP = new BigInteger(Base64.Decode("AJ9StyTVW+AL/1s7RBtFwZGFBgd3zctBqzzwKPda6LbtIFDznmwDCqAlIQH9X14X7UPLokCDhuAa76OnDXb1OiE=")); " is 144.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "            BigInteger rsaPrivQ = new BigInteger(Base64.Decode("AM3JfD79dNJ5A3beScSzPtWxx/tSLi0QHFtkuhtSizeXdkv5FSba7lVzwEOGKHmW829bRoNxThDy4ds1IihW1w0=")); " is 144.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "            BigInteger rsaPrivQinv = new BigInteger(Base64.Decode("Lt0g7wrsNsQxuDdB8q/rH8fSFeBXMGLtCIqfOec1j7FEIuYA/ACiRDgXkHa0WgN7nLXSjHoy630wC5Toq8vvUg==")); " is 147.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The length of the statement  "			RsaPrivateCrtKeyParameters rsaPrivate = new RsaPrivateCrtKeyParameters(rsaPrivMod' rsaPubExp' rsaPrivExp' rsaPrivP' rsaPrivQ' rsaPrivDP' rsaPrivDQ' rsaPrivQinv); " is 161.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "            BigInteger rsaPubMod = new BigInteger(Base64.Decode("AIASoe2PQb1IP7bTyC9usjHP7FvnUMVpKW49iuFtrw/dMpYlsMMoIU2jupfifDpdFxIktSB4P+6Ymg5WjvHKTIrvQ7SR4zV4jaPTu56Ys0pZ9EDA6gb3HLjtU+8Bb1mfWM+yjKxcPDuFjwEtjGlPHg1Vq+CA9HNcMSKNn2+tW6qt")); " is 229.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "            BigInteger rsaPrivMod = new BigInteger(Base64.Decode("AIASoe2PQb1IP7bTyC9usjHP7FvnUMVpKW49iuFtrw/dMpYlsMMoIU2jupfifDpdFxIktSB4P+6Ymg5WjvHKTIrvQ7SR4zV4jaPTu56Ys0pZ9EDA6gb3HLjtU+8Bb1mfWM+yjKxcPDuFjwEtjGlPHg1Vq+CA9HNcMSKNn2+tW6qt")); " is 230.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "            BigInteger rsaPrivDP = new BigInteger(Base64.Decode("JXzfzG5v+HtLJIZqYMUefJfFLu8DPuJGaLD6lI3cZ0babWZ/oPGoJa5iHpX4Ul/7l3s1PFsuy1GhzCdOdlfRcQ==")); " is 145.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "            BigInteger rsaPrivDQ = new BigInteger(Base64.Decode("YNdJhw3cn0gBoVmMIFRZzflPDNthBiWy/dUMSRfJCxoZjSnr1gysZHK01HteV1YYNGcwPdr3j4FbOfri5c6DUQ==")); " is 145.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "            BigInteger rsaPrivExp = new BigInteger(Base64.Decode("DxFAOhDajr00rBjqX+7nyZ/9sHWRCCp9WEN5wCsFiWVRPtdB+NeLcou7mWXwf1Y+8xNgmmh//fPV45G2dsyBeZbXeJwB7bzx9NMEAfedchyOwjR8PYdjK3NpTLKtZlEJ6Jkh4QihrXpZMO4fKZWUm9bid3+lmiq43FwW+Hof8/E=")); " is 230.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "            BigInteger rsaPrivP = new BigInteger(Base64.Decode("AJ9StyTVW+AL/1s7RBtFwZGFBgd3zctBqzzwKPda6LbtIFDznmwDCqAlIQH9X14X7UPLokCDhuAa76OnDXb1OiE=")); " is 144.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "            BigInteger rsaPrivQ = new BigInteger(Base64.Decode("AM3JfD79dNJ5A3beScSzPtWxx/tSLi0QHFtkuhtSizeXdkv5FSba7lVzwEOGKHmW829bRoNxThDy4ds1IihW1w0=")); " is 144.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "            BigInteger rsaPrivQinv = new BigInteger(Base64.Decode("Lt0g7wrsNsQxuDdB8q/rH8fSFeBXMGLtCIqfOec1j7FEIuYA/ACiRDgXkHa0WgN7nLXSjHoy630wC5Toq8vvUg==")); " is 147.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationRSA,The length of the statement  "			RsaPrivateCrtKeyParameters rsaPrivate = new RsaPrivateCrtKeyParameters(rsaPrivMod' rsaPubExp' rsaPrivExp' rsaPrivP' rsaPrivQ' rsaPrivDP' rsaPrivDQ' rsaPrivQinv); " is 161.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationDSA,The length of the statement  "            BigInteger DSAParaG = new BigInteger(Base64.Decode("AL0fxOTq10OHFbCf8YldyGembqEu08EDVzxyLL29Zn/t4It661YNol1rnhPIs+cirw+yf9zeCe+KL1IbZ/qIMZM=")); " is 144.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationDSA,The length of the statement  "            BigInteger DSAParaP = new BigInteger(Base64.Decode("AM2b/UeQA+ovv3dL05wlDHEKJ+qhnJBsRT5OB9WuyRC830G79y0R8wuq8jyIYWCYcTn1TeqVPWqiTv6oAoiEeOs=")); " is 144.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationDSA,The length of the statement  "            BigInteger DSAPublicY = new BigInteger(Base64.Decode("TtWy2GuT9yGBWOHi1/EpCDa/bWJCk2+yAdr56rAcqP0eHGkMnA9s9GJD2nGU8sFjNHm55swpn6JQb8q0agrCfw==")); " is 146.
Long Statement,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationECDSA,The length of the statement  "                new ECDomainParameters(curve' new FpPoint(curve' curve.FromBigInteger(ECParraGX)' curve.FromBigInteger(ECParraGY))' ECParraN); " is 126.
Complex Conditional,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,checkSortedSet,The conditional expression  "s[0] is DerBoolean  				&& s[1] is DerInteger  				&& s[2] is DerBitString  				&& s[3] is DerOctetString"  is complex.
Complex Conditional,Org.BouncyCastle.Crypto.Tls.Tests,MyTlsAuthentication,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\MockDtlsClient.cs,NotifyServerCertificate,The conditional expression  "isEmpty || !(chain[0].Equals(TlsTestUtilities.LoadCertificateResource("x509-server.pem"))                      || chain[0].Equals(TlsTestUtilities.LoadCertificateResource("x509-server-dsa.pem"))                      || chain[0].Equals(TlsTestUtilities.LoadCertificateResource("x509-server-ecdsa.pem")))"  is complex.
Complex Conditional,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestServerImpl,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestServerImpl.cs,NotifyClientCertificate,The conditional expression  "!isEmpty && !(chain[0].Equals(TlsTestUtilities.LoadCertificateResource("x509-client.pem"))                  || chain[0].Equals(TlsTestUtilities.LoadCertificateResource("x509-client-dsa.pem"))                  || chain[0].Equals(TlsTestUtilities.LoadCertificateResource("x509-client-ecdsa.pem")))"  is complex.
Complex Conditional,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The conditional expression  "mode.StartsWith("CCM")                          || mode.StartsWith("CFB")                          || mode.StartsWith("CTR")                          || mode.StartsWith("EAX")                          || mode.StartsWith("GCM")                          || mode.StartsWith("GOFB")                          || mode.StartsWith("OCB")                          || mode.StartsWith("OFB")                          || mode.StartsWith("OPENPGPCFB")                          || mode.StartsWith("SIC")"  is complex.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,AdditionalInformationSyntaxUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AdditionalInformationSyntaxUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,AdmissionSyntaxUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AdmissionSyntaxUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,AdmissionsUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AdmissionsUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,BiometricDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BiometricDataUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,DoTestZeroLengthStrings,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,DoTestZeroLengthStrings,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,DoTestZeroLengthStrings,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,CertHashUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertHashUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,CommitmentTypeIndicationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CommitmentTypeIndicationUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,CommitmentTypeQualifierUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CommitmentTypeQualifierUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,ContentHintsUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ContentHintsUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,DataGroupHashUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DataGroupHashUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,DeclarationOfMajorityUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DeclarationOfMajorityUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,Iso4217CurrencyCodeUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\Iso4217CurrencyCodeUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,Iso4217CurrencyCodeUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\Iso4217CurrencyCodeUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,Iso4217CurrencyCodeUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\Iso4217CurrencyCodeUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,Iso4217CurrencyCodeUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\Iso4217CurrencyCodeUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,IssuingDistributionPointUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\IssuingDistributionPointTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,LDSSecurityObjectUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\LDSSecurityObjectUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,LDSSecurityObjectUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\LDSSecurityObjectUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,LDSSecurityObjectUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\LDSSecurityObjectUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,LDSSecurityObjectUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\LDSSecurityObjectUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,MonetaryLimitUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MonetaryLimitUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,MonetaryValueUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MonetaryValueUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,NameOrPseudonymUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\NameOrPseudonymUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,NamingAuthorityUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\NamingAuthorityUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,OidTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OIDTest.cs,invalidOidCheck,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,OtherCertIDUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OtherCertIDUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,OtherSigningCertificateUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OtherSigningCertificateUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,ParsingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ParsingTest.cs,parserTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,ParsingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ParsingTest.cs,parserTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,ParsingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ParsingTest.cs,inputStreamTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,ParsingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ParsingTest.cs,inputStreamTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,PersonalDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PersonalDataUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,ProcurationSyntaxUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ProcurationSyntaxUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,ProfessionInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ProfessionInfoUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,QCStatementUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\QCStatementUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,RequestedCertificateUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\RequestedCertificateUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,RestrictionUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\RestrictionUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,SemanticsInformationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SemanticsInformationUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,SemanticsInformationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SemanticsInformationUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,SignerLocationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SignerLocationUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,SignerLocationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SignerLocationUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,SignerLocationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SignerLocationUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,SignerLocationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SignerLocationUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,TypeOfBiometricDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TypeOfBiometricDataUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,TypeOfBiometricDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TypeOfBiometricDataUnitTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,X509NameTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509NameTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Asn1.Tests,X509NameTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509NameTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestEarlyInvalidKeyException,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestEarlyNoSuchAlgorithmException,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Examples,DesExample,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\examples\DESExample.cs,process,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Examples,DesExample,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\examples\DESExample.cs,performEncrypt,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Examples,DesExample,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\examples\DESExample.cs,performDecrypt,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestIncorrectPassword,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestIncorrectPassword,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestStateValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestValidateRound1PayloadReceived,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestValidateRound1PayloadReceived,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestValidateRound1PayloadReceived,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestValidateRound1PayloadReceived,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestValidateRound2PayloadReceived,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeParticipantTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeParticipantTest.cs,TestValidateRound2PayloadReceived,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateGx4,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateGa,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateParticipantIdsDiffer,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateParticipantsIdsEqual,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateMacTag,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateMacTag,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateNotNull,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Agreement.Tests,JPakeUtilitiesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakeUtilitiesTest.cs,TestValidateZeroKnowledgeProof,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,AesFastTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESFastTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,AesFastTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESFastTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,AesLightTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESLightTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,AesLightTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESLightTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,CheckIllegal,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,reinitBug,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,TestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CipherTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CipherTest.cs,bufferSizeCheck,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CipherTest.cs,bufferSizeCheck,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CipherTest.cs,bufferSizeCheck,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,CipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CipherTest.cs,bufferSizeCheck,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESedeTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,doTestEnc,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,doTestEnc,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestInitCheck,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,DoTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,DoTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Kdf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF1GeneratorTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Mgf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MGF1GeneratorTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,NaccacheSternTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NaccacheSternTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,NullTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NullTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,NullTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NullTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,DoTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,DoTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testInit,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testInit,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,testClientCatchesBadB,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,testClientCatchesBadB,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,testServerCatchesBadA,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,testServerCatchesBadA,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,reinitBug,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,Server,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,Run,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,Server,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,Run,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,Server,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,Run,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,Server,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,WaitExit,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,MockDatagramTransport,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\MockDatagramAssociation.cs,Receive,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,TlsProtocolNonBlockingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsProtocolNonBlockingTest.cs,CheckClosed,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,TlsProtocolNonBlockingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsProtocolNonBlockingTest.cs,CheckClosed,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,ServerThread,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsServerTest.cs,Run,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestServerImpl,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestServerImpl.cs,SafeWriteLine,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,TestPointCreationConsistency,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,TestPointCreationConsistency,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,TestPointCreationConsistency,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,TestPointCreationConsistency,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestModPow,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,TestEax,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,TestCcm,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,TestGcm,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,CertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathTest.cs,doTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,CertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathTest.cs,doTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation2,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,doTestForgedSignature,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,doTestBadStrength,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\HMacTest.cs,doTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\HMacTest.cs,doTestExceptions,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,PkixNameConstraintsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixNameConstraintsTest.cs,TestConstraints,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,PkixNameConstraintsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixNameConstraintsTest.cs,TestConstraints,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,PkixNameConstraintsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixNameConstraintsTest.cs,TestConstraints,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,PkixNameConstraintsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixNameConstraintsTest.cs,TestConstraints,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,X509CertificatePairTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509CertificatePairTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tests,X509CertificatePairTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509CertificatePairTest.cs,PerformTest,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The method has an empty catch block.
Empty Catch Block,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfoDudDate,The method has an empty catch block.
Magic Number,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,TestDerReading,The following statement contains a magic number: Assert.AreEqual(2' count' "wrong number of objects in sequence");
Magic Number,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,doTestNestedReading,The following statement contains a magic number: switch (count)                  {                      case 0:                          Assert.IsTrue(o is DerInteger);                          break;                      case 1:                          Assert.IsTrue(o is DerObjectIdentifier);                          break;                      case 2:                          Assert.IsTrue(o is Asn1SequenceParser);    						Asn1SequenceParser s = (Asn1SequenceParser)o;    						// NB: Must exhaust the nested parser  						while (s.ReadObject() != null)  						{  							// Ignore  						}    						break;                  }
Magic Number,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,doTestNestedReading,The following statement contains a magic number: Assert.AreEqual(3' count' "wrong number of objects in sequence");
Magic Number,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,TestBerReading,The following statement contains a magic number: Assert.AreEqual(2' count' "wrong number of objects in sequence");
Magic Number,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,doTestParseWithNull,The following statement contains a magic number: switch (count)  				{  					case 0:  						Assert.IsTrue(o is Asn1Null);  						break;  					case 1:  						Assert.IsTrue(o is DerInteger);  						break;  					case 2:  						Assert.IsTrue(o is DerObjectIdentifier);  						break;  				}
Magic Number,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,doTestParseWithNull,The following statement contains a magic number: Assert.AreEqual(3' count' "wrong number of objects in sequence");
Magic Number,Org.BouncyCastle.Asn1.Tests,AttributeTableUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AttributeTableUnitTest.cs,PerformTest,The following statement contains a magic number: vec.Count != 2
Magic Number,Org.BouncyCastle.Asn1.Tests,AttributeTableUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AttributeTableUnitTest.cs,PerformTest,The following statement contains a magic number: t.Count != 2
Magic Number,Org.BouncyCastle.Asn1.Tests,AttributeTableUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AttributeTableUnitTest.cs,PerformTest,The following statement contains a magic number: vec.Count != 3
Magic Number,Org.BouncyCastle.Asn1.Tests,AttributeTableUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AttributeTableUnitTest.cs,PerformTest,The following statement contains a magic number: a = (Asn1Cms.Attribute)vec[2];
Magic Number,Org.BouncyCastle.Asn1.Tests,AttributeTableUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\AttributeTableUnitTest.cs,PerformTest,The following statement contains a magic number: vec.Count != 4
Magic Number,Org.BouncyCastle.Asn1.Tests,BiometricDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BiometricDataUnitTest.cs,GenerateHash,The following statement contains a magic number: byte[] bytes = new byte[20];
Magic Number,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,DoTestZeroLengthStrings,The following statement contains a magic number: new DerBitString(new byte[1]' 8);
Magic Number,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,PerformTest,The following statement contains a magic number: (k.GetBytes()[0] != (byte)KeyUsage.DigitalSignature) || (k.PadBits != 7)
Magic Number,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,PerformTest,The following statement contains a magic number: (k.GetBytes()[0] != (byte)KeyUsage.NonRepudiation) || (k.PadBits != 6)
Magic Number,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,PerformTest,The following statement contains a magic number: (k.GetBytes()[0] != (byte)KeyUsage.KeyEncipherment) || (k.PadBits != 5)
Magic Number,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,PerformTest,The following statement contains a magic number: (k.GetBytes()[1] != (byte)(KeyUsage.DecipherOnly >> 8))  || (k.PadBits != 7)
Magic Number,Org.BouncyCastle.Asn1.Tests,BitStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\BitStringTest.cs,PerformTest,The following statement contains a magic number: (k.GetBytes()[1] != (byte)(KeyUsage.DecipherOnly >> 8))  || (k.PadBits != 7)
Magic Number,Org.BouncyCastle.Asn1.Tests,CertHashUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertHashUnitTest.cs,PerformTest,The following statement contains a magic number: byte[] digest = new byte[20];
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,CheckCertificate,The following statement contains a magic number: tbsCert.Version >= 3
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,CheckAttributeCertificate,The following statement contains a magic number: !(acInfo.Version.Equals(new DerInteger(1)))  				&& (!(acInfo.Version.Equals(new DerInteger(2))))
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,PerformTest,The following statement contains a magic number: CheckCertificate(2' cert2);
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,PerformTest,The following statement contains a magic number: CheckCertificate(3' cert3);
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,PerformTest,The following statement contains a magic number: CheckCertificate(4' cert4);
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,PerformTest,The following statement contains a magic number: CheckCertificate(5' cert5);
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,PerformTest,The following statement contains a magic number: CheckCertificate(6' cert6);
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,PerformTest,The following statement contains a magic number: CheckCertificate(7' cert7);
Magic Number,Org.BouncyCastle.Asn1.Tests,CertificateTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CertificateTest.cs,PerformTest,The following statement contains a magic number: CheckAttributeCertificate(8' cert8);
Magic Number,Org.BouncyCastle.Asn1.Tests,CscaMasterListTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\CscaMasterListTest.cs,PerformTest,The following statement contains a magic number: parsedList.GetCertStructs().Length != 3
Magic Number,Org.BouncyCastle.Asn1.Tests,DerApplicationSpecificTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERApplicationSpecificTest.cs,TestTaggedObject,The following statement contains a magic number: DerApplicationSpecific type2 = new DerApplicationSpecific(isExplicit' 3' type1);
Magic Number,Org.BouncyCastle.Asn1.Tests,DerApplicationSpecificTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERApplicationSpecificTest.cs,TestTaggedObject,The following statement contains a magic number: DerTaggedObject type3 = new DerTaggedObject(isExplicit' 2' type2);
Magic Number,Org.BouncyCastle.Asn1.Tests,DerApplicationSpecificTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERApplicationSpecificTest.cs,TestTaggedObject,The following statement contains a magic number: DerApplicationSpecific type4 = new DerApplicationSpecific(isExplicit' 7' type3);
Magic Number,Org.BouncyCastle.Asn1.Tests,DerApplicationSpecificTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERApplicationSpecificTest.cs,TestTaggedObject,The following statement contains a magic number: DerTaggedObject type5 = new DerTaggedObject(isExplicit' 2' type2);
Magic Number,Org.BouncyCastle.Asn1.Tests,DerApplicationSpecificTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERApplicationSpecificTest.cs,PerformTest,The following statement contains a magic number: DerInteger val = new DerInteger(9);
Magic Number,Org.BouncyCastle.Asn1.Tests,DerApplicationSpecificTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERApplicationSpecificTest.cs,PerformTest,The following statement contains a magic number: DerApplicationSpecific tagged = new DerApplicationSpecific(false' 3' val);
Magic Number,Org.BouncyCastle.Asn1.Tests,DerApplicationSpecificTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERApplicationSpecificTest.cs,PerformTest,The following statement contains a magic number: !certObj.IsConstructed() || certObj.ApplicationTag != 33
Magic Number,Org.BouncyCastle.Asn1.Tests,DerUtf8StringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERUTF8StringTest.cs,Perform,The following statement contains a magic number: byte[] temp = new byte[b1.Length - 2];
Magic Number,Org.BouncyCastle.Asn1.Tests,DerUtf8StringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERUTF8StringTest.cs,Perform,The following statement contains a magic number: Array.Copy(b1' 2' temp' 0' b1.Length - 2);
Magic Number,Org.BouncyCastle.Asn1.Tests,DerUtf8StringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DERUTF8StringTest.cs,Perform,The following statement contains a magic number: Array.Copy(b1' 2' temp' 0' b1.Length - 2);
Magic Number,Org.BouncyCastle.Asn1.Tests,DataGroupHashUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DataGroupHashUnitTest.cs,GenerateHash,The following statement contains a magic number: byte[] bytes = new byte[20];
Magic Number,Org.BouncyCastle.Asn1.Tests,DeclarationOfMajorityUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DeclarationOfMajorityUnitTest.cs,PerformTest,The following statement contains a magic number: decl = new DeclarationOfMajority(6);
Magic Number,Org.BouncyCastle.Asn1.Tests,DeclarationOfMajorityUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\DeclarationOfMajorityUnitTest.cs,PerformTest,The following statement contains a magic number: checkConstruction(decl' DeclarationOfMajority.Choice.NotYoungerThan' null' 6);
Magic Number,Org.BouncyCastle.Asn1.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EncryptedPrivateKeyInfoTest.cs,Perform,The following statement contains a magic number: result = DoTest(2' sample3);
Magic Number,Org.BouncyCastle.Asn1.Tests,EnumeratedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EnumeratedTest.cs,TestReadingMultipleSingleByteItems,The following statement contains a magic number: Assert.AreEqual(2' sequence.Count' "2 items expected");
Magic Number,Org.BouncyCastle.Asn1.Tests,EnumeratedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EnumeratedTest.cs,TestReadingMultipleDoubleByteItems,The following statement contains a magic number: Assert.AreEqual(2' sequence.Count' "2 items expected");
Magic Number,Org.BouncyCastle.Asn1.Tests,EnumeratedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EnumeratedTest.cs,TestReadingMultipleDoubleByteItems,The following statement contains a magic number: Assert.AreEqual(257' enumerated1.Value.IntValue' "Unexpected ENUMERATED value");
Magic Number,Org.BouncyCastle.Asn1.Tests,EnumeratedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EnumeratedTest.cs,TestReadingMultipleDoubleByteItems,The following statement contains a magic number: Assert.AreEqual(514' enumerated2.Value.IntValue' "Unexpected ENUMERATED value");
Magic Number,Org.BouncyCastle.Asn1.Tests,EnumeratedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EnumeratedTest.cs,TestReadingMultipleTripleByteItems,The following statement contains a magic number: Assert.AreEqual(2' sequence.Count' "2 items expected");
Magic Number,Org.BouncyCastle.Asn1.Tests,EnumeratedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EnumeratedTest.cs,TestReadingMultipleTripleByteItems,The following statement contains a magic number: Assert.AreEqual(65793' enumerated.Value.IntValue' "Unexpected ENUMERATED value");
Magic Number,Org.BouncyCastle.Asn1.Tests,EqualsAndHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EqualsAndHashCodeTest.cs,PerformTest,The following statement contains a magic number: Asn1Object[] values =  			{                  new BerOctetString(data)'                  new BerSequence(new DerPrintableString("hello world"))'                  new BerSet(new DerPrintableString("hello world"))'                  new BerTaggedObject(0' new DerPrintableString("hello world"))'  				new DerApplicationSpecific(0' data)'                  new DerBitString(data)'                  new DerBmpString("hello world")'                  DerBoolean.True'                  DerBoolean.False'                  new DerEnumerated(100)'  				new DerGeneralizedTime("20070315173729Z")'  				new DerGeneralString("hello world")'                  new DerIA5String("hello")'                  new DerInteger(1000)'                  DerNull.Instance'                  new DerNumericString("123456")'                  new DerObjectIdentifier("1.1.1.10000.1")'                  new DerOctetString(data)'                  new DerPrintableString("hello world")'                  new DerSequence(new DerPrintableString("hello world"))'                  new DerSet(new DerPrintableString("hello world"))'                  new DerT61String("hello world")'                  new DerTaggedObject(0' new DerPrintableString("hello world"))'                  new DerUniversalString(data)'                  new DerUtcTime(new DateTime())'                  new DerUtf8String("hello world")'                  new DerVisibleString("hello world")'                  new DerGraphicString(Hex.Decode("deadbeef"))'                  new DerVideotexString(Strings.ToByteArray("Hello World"))              };
Magic Number,Org.BouncyCastle.Asn1.Tests,EqualsAndHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EqualsAndHashCodeTest.cs,PerformTest,The following statement contains a magic number: Asn1Object[] values =  			{                  new BerOctetString(data)'                  new BerSequence(new DerPrintableString("hello world"))'                  new BerSet(new DerPrintableString("hello world"))'                  new BerTaggedObject(0' new DerPrintableString("hello world"))'  				new DerApplicationSpecific(0' data)'                  new DerBitString(data)'                  new DerBmpString("hello world")'                  DerBoolean.True'                  DerBoolean.False'                  new DerEnumerated(100)'  				new DerGeneralizedTime("20070315173729Z")'  				new DerGeneralString("hello world")'                  new DerIA5String("hello")'                  new DerInteger(1000)'                  DerNull.Instance'                  new DerNumericString("123456")'                  new DerObjectIdentifier("1.1.1.10000.1")'                  new DerOctetString(data)'                  new DerPrintableString("hello world")'                  new DerSequence(new DerPrintableString("hello world"))'                  new DerSet(new DerPrintableString("hello world"))'                  new DerT61String("hello world")'                  new DerTaggedObject(0' new DerPrintableString("hello world"))'                  new DerUniversalString(data)'                  new DerUtcTime(new DateTime())'                  new DerUtf8String("hello world")'                  new DerVisibleString("hello world")'                  new DerGraphicString(Hex.Decode("deadbeef"))'                  new DerVideotexString(Strings.ToByteArray("Hello World"))              };
Magic Number,Org.BouncyCastle.Asn1.Tests,EssCertIDv2UnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\EssCertIDv2UnitTest.cs,PerformTest,The following statement contains a magic number: byte[] digest = new byte[32];
Magic Number,Org.BouncyCastle.Asn1.Tests,GeneralizedTimeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GeneralizedTimeTest.cs,Convert,The following statement contains a magic number: time < 10
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV1CertGenerate,The following statement contains a magic number: DateTime startDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 1);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV1CertGenerate,The following statement contains a magic number: DateTime endDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 12);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV1CertGenerate,The following statement contains a magic number: DateTime endDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 12);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The following statement contains a magic number: DateTime startDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 1);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The following statement contains a magic number: DateTime endDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 2);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The following statement contains a magic number: DateTime endDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 2);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The following statement contains a magic number: gen.SetSerialNumber(new DerInteger(2));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The following statement contains a magic number: SubjectPublicKeyInfo info = new SubjectPublicKeyInfo(  				new AlgorithmIdentifier(  					OiwObjectIdentifiers.ElGamalAlgorithm'  					new ElGamalParameter(BigInteger.One' BigInteger.Two))'  				new DerInteger(3));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenerate,The following statement contains a magic number: extensions.Add(X509Extensions.AuthorityKeyIdentifier' new X509Extension(true' new DerOctetString(CreateAuthorityKeyId(info' new X509Name("CN=AU'O=Bouncy Castle'OU=Test 2")' 2))));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenWithNullSubject,The following statement contains a magic number: DateTime startDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 1);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenWithNullSubject,The following statement contains a magic number: DateTime endDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 2);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenWithNullSubject,The following statement contains a magic number: DateTime endDate = MakeUtcDateTime(1970' 1' 1' 0' 0' 2);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenWithNullSubject,The following statement contains a magic number: gen.SetSerialNumber(new DerInteger(2));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV3CertGenWithNullSubject,The following statement contains a magic number: SubjectPublicKeyInfo info = new SubjectPublicKeyInfo(  				new AlgorithmIdentifier(OiwObjectIdentifiers.ElGamalAlgorithm'  					new ElGamalParameter(BigInteger.One' BigInteger.Two))'  				new DerInteger(3));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The following statement contains a magic number: gen.AddCrlEntry(new DerInteger(1)' new Time(MakeUtcDateTime(1970' 1' 1' 0' 0' 1))' ReasonFlags.AACompromise);
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The following statement contains a magic number: gen.SetNextUpdate(new Time(MakeUtcDateTime(1970' 1' 1' 0' 0' 2)));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The following statement contains a magic number: gen.SetNextUpdate(new Time(MakeUtcDateTime(1970' 1' 1' 0' 0' 2)));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The following statement contains a magic number: gen.SetThisUpdate(new Time(MakeUtcDateTime(1970' 1' 1' 0' 0' 0' 500)));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The following statement contains a magic number: gen.SetThisUpdate(new Time(MakeUtcDateTime(1970' 1' 1' 0' 0' 0' 500)));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The following statement contains a magic number: SubjectPublicKeyInfo info = new SubjectPublicKeyInfo(  				new AlgorithmIdentifier(  					OiwObjectIdentifiers.ElGamalAlgorithm'  					new ElGamalParameter(BigInteger.One' BigInteger.Two))'  				new DerInteger(3));
Magic Number,Org.BouncyCastle.Asn1.Tests,GenerationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\GenerationTest.cs,TbsV2CertListGenerate,The following statement contains a magic number: extensions.Add(X509Extensions.AuthorityKeyIdentifier' new X509Extension(true' new DerOctetString(CreateAuthorityKeyId(info' new X509Name("CN=AU'O=Bouncy Castle'OU=Test 2")' 2))));
Magic Number,Org.BouncyCastle.Asn1.Tests,Iso4217CurrencyCodeUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\Iso4217CurrencyCodeUnitTest.cs,PerformTest,The following statement contains a magic number: new Iso4217CurrencyCode(1000);
Magic Number,Org.BouncyCastle.Asn1.Tests,IssuingDistributionPointUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\IssuingDistributionPointTest.cs,PerformTest,The following statement contains a magic number: checkPoint(6' name' true' true' reasonFlags' true' true);
Magic Number,Org.BouncyCastle.Asn1.Tests,IssuingDistributionPointUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\IssuingDistributionPointTest.cs,PerformTest,The following statement contains a magic number: checkPoint(2' name' false' false' reasonFlags' false' false);
Magic Number,Org.BouncyCastle.Asn1.Tests,KeyUsageTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\KeyUsageTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(2' KeyUsage.KeyEncipherment);
Magic Number,Org.BouncyCastle.Asn1.Tests,KeyUsageTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\KeyUsageTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(3' KeyUsage.DataEncipherment);
Magic Number,Org.BouncyCastle.Asn1.Tests,KeyUsageTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\KeyUsageTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(4' KeyUsage.KeyAgreement);
Magic Number,Org.BouncyCastle.Asn1.Tests,KeyUsageTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\KeyUsageTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(5' KeyUsage.KeyCertSign);
Magic Number,Org.BouncyCastle.Asn1.Tests,KeyUsageTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\KeyUsageTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(6' KeyUsage.CrlSign);
Magic Number,Org.BouncyCastle.Asn1.Tests,KeyUsageTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\KeyUsageTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(7' KeyUsage.EncipherOnly);
Magic Number,Org.BouncyCastle.Asn1.Tests,KeyUsageTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\KeyUsageTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(8' KeyUsage.DecipherOnly);
Magic Number,Org.BouncyCastle.Asn1.Tests,LDSSecurityObjectUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\LDSSecurityObjectUnitTest.cs,GenerateHash,The following statement contains a magic number: byte[] bytes = new byte[20];
Magic Number,Org.BouncyCastle.Asn1.Tests,LDSSecurityObjectUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\LDSSecurityObjectUnitTest.cs,PerformTest,The following statement contains a magic number: DataGroupHash[] datas = new DataGroupHash[2];
Magic Number,Org.BouncyCastle.Asn1.Tests,LDSSecurityObjectUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\LDSSecurityObjectUnitTest.cs,PerformTest,The following statement contains a magic number: datas[1] = new DataGroupHash(2' new DerOctetString(GenerateHash()));
Magic Number,Org.BouncyCastle.Asn1.Tests,MiscTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MiscTest.cs,Perform,The following statement contains a magic number: byte[] testIv = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Asn1.Tests,MiscTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MiscTest.cs,Perform,The following statement contains a magic number: byte[] testIv = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Asn1.Tests,MiscTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MiscTest.cs,Perform,The following statement contains a magic number: byte[] testIv = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Asn1.Tests,MiscTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MiscTest.cs,Perform,The following statement contains a magic number: byte[] testIv = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Asn1.Tests,MiscTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MiscTest.cs,Perform,The following statement contains a magic number: byte[] testIv = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Asn1.Tests,MiscTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MiscTest.cs,Perform,The following statement contains a magic number: byte[] testIv = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Asn1.Tests,MiscTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MiscTest.cs,Perform,The following statement contains a magic number: byte[] testIv = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Asn1.Tests,MiscTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MiscTest.cs,Perform,The following statement contains a magic number: Asn1Encodable[] values =              {                  new Cast5CbcParameters(testIv' 128)'                  new NetscapeCertType(NetscapeCertType.Smime)'                  new VerisignCzagExtension(new DerIA5String("hello"))'                  new IdeaCbcPar(testIv)'                  new NetscapeRevocationUrl(new DerIA5String("http://test"))              };
Magic Number,Org.BouncyCastle.Asn1.Tests,MonetaryLimitUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\MonetaryLimitUnitTest.cs,PerformTest,The following statement contains a magic number: int    exponent = 2;
Magic Number,Org.BouncyCastle.Asn1.Tests,NetscapeCertTypeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\NetscapeCertTypeTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(2' NetscapeCertType.Smime);
Magic Number,Org.BouncyCastle.Asn1.Tests,NetscapeCertTypeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\NetscapeCertTypeTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(3' NetscapeCertType.ObjectSigning);
Magic Number,Org.BouncyCastle.Asn1.Tests,NetscapeCertTypeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\NetscapeCertTypeTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(4' NetscapeCertType.Reserved);
Magic Number,Org.BouncyCastle.Asn1.Tests,NetscapeCertTypeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\NetscapeCertTypeTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(5' NetscapeCertType.SslCA);
Magic Number,Org.BouncyCastle.Asn1.Tests,NetscapeCertTypeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\NetscapeCertTypeTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(6' NetscapeCertType.SmimeCA);
Magic Number,Org.BouncyCastle.Asn1.Tests,NetscapeCertTypeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\NetscapeCertTypeTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(7' NetscapeCertType.ObjectSigningCA);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWriting,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWriting,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWriting,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWriting,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWriting,The following statement contains a magic number: outStream.Write(new byte[4]' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWriting,The following statement contains a magic number: outStream.Write(new byte[4]' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWriting,The following statement contains a magic number: Assert.AreEqual(8' count);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingZeroInLength,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingZeroInLength,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingZeroInLength,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingZeroInLength,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingZeroInLength,The following statement contains a magic number: outStream.Write(new byte[512]' 0' 512);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingZeroInLength,The following statement contains a magic number: outStream.Write(new byte[512]' 0' 512);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingZeroInLength,The following statement contains a magic number: Assert.AreEqual(516' count);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingNested,The following statement contains a magic number: inOut.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingNested,The following statement contains a magic number: inOut.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingNested,The following statement contains a magic number: inOut.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingNested,The following statement contains a magic number: inOut.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingNested,The following statement contains a magic number: inOut.Write(new byte[10]' 0' 10);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingNested,The following statement contains a magic number: inOut.Write(new byte[10]' 0' 10);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestReadingWritingNested,The following statement contains a magic number: Assert.AreEqual(14' count);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: outStream.Write(new byte[] { 1' 2' 3' 4 }' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: outStream.Write(new byte[4]' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: outStream.Write(new byte[4]' 0' 4);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: outStream.Write(new byte[20]' 0' 20);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: outStream.Write(new byte[20]' 0' 20);
Magic Number,Org.BouncyCastle.Asn1.Tests,OctetStringTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OctetStringTest.cs,TestNestedStructure,The following statement contains a magic number: Assert.AreEqual(28' count);
Magic Number,Org.BouncyCastle.Asn1.Tests,OtherCertIDUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OtherCertIDUnitTest.cs,PerformTest,The following statement contains a magic number: byte[] digest = new byte[20];
Magic Number,Org.BouncyCastle.Asn1.Tests,OtherSigningCertificateUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\OtherSigningCertificateUnitTest.cs,PerformTest,The following statement contains a magic number: byte[] digest = new byte[20];
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(2' PkiFailureInfo.BadRequest);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(3' PkiFailureInfo.BadTime);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(4' PkiFailureInfo.BadCertId);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(5' PkiFailureInfo.BadDataFormat);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(6' PkiFailureInfo.WrongAuthority);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(7' PkiFailureInfo.IncorrectData);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(8' PkiFailureInfo.MissingTimeStamp);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(9' PkiFailureInfo.BadPop);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(10' PkiFailureInfo.CertRevoked);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(11' PkiFailureInfo.CertConfirmed);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(12' PkiFailureInfo.WrongIntegrity);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(13' PkiFailureInfo.BadRecipientNonce);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(14' PkiFailureInfo.TimeNotAvailable);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(15' PkiFailureInfo.UnacceptedPolicy);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(16' PkiFailureInfo.UnacceptedExtension);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(17' PkiFailureInfo.AddInfoNotAvailable);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(18' PkiFailureInfo.BadSenderNonce);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(19' PkiFailureInfo.BadCertTemplate);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(20' PkiFailureInfo.SignerNotTrusted);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(21' PkiFailureInfo.TransactionIdInUse);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(22' PkiFailureInfo.UnsupportedVersion);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(23' PkiFailureInfo.NotAuthorized);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(24' PkiFailureInfo.SystemUnavail);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(25' PkiFailureInfo.SystemFailure);
Magic Number,Org.BouncyCastle.Asn1.Tests,PkiFailureInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PKIFailureInfoTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(26' PkiFailureInfo.DuplicateCertReq);
Magic Number,Org.BouncyCastle.Asn1.Tests,ParseTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ParseTest.cs,TestLongTag,The following statement contains a magic number: Assert.AreEqual(31' tagged.TagNo);
Magic Number,Org.BouncyCastle.Asn1.Tests,PersonalDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\PersonalDataUnitTest.cs,PerformTest,The following statement contains a magic number: BigInteger nameDistinguisher = BigInteger.ValueOf(10);
Magic Number,Org.BouncyCastle.Asn1.Tests,ProfessionInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ProfessionInfoUnitTest.cs,PerformTest,The following statement contains a magic number: DerOctetString addProfInfo = new DerOctetString(new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,ReasonFlagsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ReasonFlagsTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(2' ReasonFlags.CACompromise);
Magic Number,Org.BouncyCastle.Asn1.Tests,ReasonFlagsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ReasonFlagsTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(3' ReasonFlags.AffiliationChanged);
Magic Number,Org.BouncyCastle.Asn1.Tests,ReasonFlagsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ReasonFlagsTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(4' ReasonFlags.Superseded);
Magic Number,Org.BouncyCastle.Asn1.Tests,ReasonFlagsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ReasonFlagsTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(5' ReasonFlags.CessationOfOperation);
Magic Number,Org.BouncyCastle.Asn1.Tests,ReasonFlagsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ReasonFlagsTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(6' ReasonFlags.CertificateHold);
Magic Number,Org.BouncyCastle.Asn1.Tests,ReasonFlagsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ReasonFlagsTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(7' ReasonFlags.PrivilegeWithdrawn);
Magic Number,Org.BouncyCastle.Asn1.Tests,ReasonFlagsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ReasonFlagsTest.cs,PerformTest,The following statement contains a magic number: BitStringConstantTester.testFlagValueCorrect(8' ReasonFlags.AACompromise);
Magic Number,Org.BouncyCastle.Asn1.Tests,RequestedCertificateUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\RequestedCertificateUnitTest.cs,PerformTest,The following statement contains a magic number: byte[] certOctets = new byte[20];
Magic Number,Org.BouncyCastle.Asn1.Tests,SmimeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SMIMETest.cs,Perform,The following statement contains a magic number: caps.AddCapability(SmimeCapability.RC2Cbc' 128);
Magic Number,Org.BouncyCastle.Asn1.Tests,SmimeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SMIMETest.cs,Perform,The following statement contains a magic number: SmimeEncryptionKeyPreferenceAttribute pref = new SmimeEncryptionKeyPreferenceAttribute(  				new RecipientKeyIdentifier(new DerOctetString(new byte[8])'  				new DerGeneralizedTime("20070315173729Z")'  				null));
Magic Number,Org.BouncyCastle.Asn1.Tests,SemanticsInformationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SemanticsInformationUnitTest.cs,PerformTest,The following statement contains a magic number: GeneralName[] names = new GeneralName[2];
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,checkSortedSet,The following statement contains a magic number: s[0] is DerBoolean  				&& s[1] is DerInteger  				&& s[2] is DerBitString  				&& s[3] is DerOctetString
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,checkSortedSet,The following statement contains a magic number: s[0] is DerBoolean  				&& s[1] is DerInteger  				&& s[2] is DerBitString  				&& s[3] is DerOctetString
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,PerformTest,The following statement contains a magic number: byte[] data = new byte[10];
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,PerformTest,The following statement contains a magic number: v.Add(new DerInteger(100));
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,PerformTest,The following statement contains a magic number: v.Add(new DerInteger(100));
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,PerformTest,The following statement contains a magic number: v.Add(new DerInteger(100));
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,PerformTest,The following statement contains a magic number: checkSortedSet(2' new DerSet(v));
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,PerformTest,The following statement contains a magic number: v.Add(new DerInteger(100));
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,PerformTest,The following statement contains a magic number: checkSortedSet(3' new DerSet(v));
Magic Number,Org.BouncyCastle.Asn1.Tests,SetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SetTest.cs,PerformTest,The following statement contains a magic number: v.Add(new DerInteger(100));
Magic Number,Org.BouncyCastle.Asn1.Tests,SignerLocationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SignerLocationUnitTest.cs,PerformTest,The following statement contains a magic number: new SignerLocation(new DerSequence(new DerTaggedObject(2' postalAddress)));
Magic Number,Org.BouncyCastle.Asn1.Tests,SignerLocationUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\SignerLocationUnitTest.cs,PerformTest,The following statement contains a magic number: new SignerLocation(new DerSequence(new DerTaggedObject(5' postalAddress)));
Magic Number,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,The following statement contains a magic number: tagged.TagNo != 32
Magic Number,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,The following statement contains a magic number: tagged.TagNo != 32
Magic Number,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,The following statement contains a magic number: tagged.TagNo != 33
Magic Number,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,The following statement contains a magic number: tagged.TagNo != 33
Magic Number,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,The following statement contains a magic number: app.ApplicationTag != 97
Magic Number,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,The following statement contains a magic number: app.ApplicationTag != 97
Magic Number,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,The following statement contains a magic number: int testTag = (sr.NextInt() & int.MaxValue) >> sr.Next(26);
Magic Number,Org.BouncyCastle.Asn1.Tests,TagTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TagTest.cs,PerformTest,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Asn1.Tests,TargetInformationTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TargetInformationTest.cs,PerformTest,The following statement contains a magic number: Target[] targets = new Target[2];
Magic Number,Org.BouncyCastle.Asn1.Tests,TypeOfBiometricDataUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\TypeOfBiometricDataUnitTest.cs,PerformTest,The following statement contains a magic number: new TypeOfBiometricData(100);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid1' true' new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid2' true' new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid2' true' new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid1' true' new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid1' true' new byte[22]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid2' true' new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid3' true' new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid2' true' new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X509ExtensionsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X509ExtensionsTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension(Oid2' true' new byte[20]);
Magic Number,Org.BouncyCastle.Asn1.Tests,X9Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X9Test.cs,EncodePublicKey,The following statement contains a magic number: X9IntegerConverter.GetByteLength(ecP.Curve) != 30
Magic Number,Org.BouncyCastle.Asn1.Tests,X9Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X9Test.cs,EncodePublicKey,The following statement contains a magic number: ecP.Curve.FieldSize != 239
Magic Number,Org.BouncyCastle.Asn1.Tests,X9Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X9Test.cs,EncodePublicKey,The following statement contains a magic number: ECPoint point = ecP.G.Multiply(BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Asn1.Tests,X9Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\X9Test.cs,EncodePrivateKey,The following statement contains a magic number: info = new PrivateKeyInfo(new AlgorithmIdentifier(X9ObjectIdentifiers.IdECPublicKey' _params)'                  new ECPrivateKeyStructure(ecP.N.BitLength' BigInteger.ValueOf(20)).ToAsn1Object());
Magic Number,Org.BouncyCastle.Cms.Tests,AuthenticatedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\AuthenticatedDataTest.cs,tryKekAlgorithm,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,AuthenticatedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\AuthenticatedDataTest.cs,tryKekAlgorithm,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,AuthenticatedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\AuthenticatedDataTest.cs,tryKekAlgorithm,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,AuthenticatedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\AuthenticatedDataTest.cs,tryKekAlgorithm,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,AuthenticatedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\AuthenticatedDataTest.cs,passwordTest,The following statement contains a magic number: adGen.AddPasswordRecipient(new Pkcs5Scheme2PbeKey("password".ToCharArray()' new byte[20]' 5)' algorithm);
Magic Number,Org.BouncyCastle.Cms.Tests,AuthenticatedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\AuthenticatedDataTest.cs,passwordTest,The following statement contains a magic number: adGen.AddPasswordRecipient(new Pkcs5Scheme2PbeKey("password".ToCharArray()' new byte[20]' 5)' algorithm);
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,CmsTestUtil,The following statement contains a magic number: aes192kg.Init(new KeyGenerationParameters(rand' 192));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,CmsTestUtil,The following statement contains a magic number: desede128kg.Init(new KeyGenerationParameters(rand' 112));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,CmsTestUtil,The following statement contains a magic number: desede192kg.Init(new KeyGenerationParameters(rand' 168));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,CmsTestUtil,The following statement contains a magic number: rc240kg.Init(new KeyGenerationParameters(rand' 40));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,CmsTestUtil,The following statement contains a magic number: rc264kg.Init(new KeyGenerationParameters(rand' 64));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,CmsTestUtil,The following statement contains a magic number: rc2128kg.Init(new KeyGenerationParameters(rand' 128));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,DumpBase64,The following statement contains a magic number: buf.Append(Encoding.Default.GetString(data' i' 64));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,DumpBase64,The following statement contains a magic number: i + 64 < data.Length
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,MakeV1Certificate,The following statement contains a magic number: v1CertGen.SetNotAfter(DateTime.UtcNow.AddDays(100));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,MakeCertificate,The following statement contains a magic number: v3CertGen.SetNotAfter(DateTime.UtcNow.AddDays(100));
Magic Number,Org.BouncyCastle.Cms.Tests,CmsTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CMSTestUtil.cs,MakeCrl,The following statement contains a magic number: crlGen.SetNextUpdate(now.AddSeconds(100));
Magic Number,Org.BouncyCastle.Cms.Tests,CompressedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CompressedDataStreamTest.cs,Test1000,The following statement contains a magic number: byte[] testData = new byte[10000];
Magic Number,Org.BouncyCastle.Cms.Tests,CompressedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CompressedDataStreamTest.cs,Test1000,The following statement contains a magic number: i != 10
Magic Number,Org.BouncyCastle.Cms.Tests,CompressedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CompressedDataTest.cs,TestLimitUnder,The following statement contains a magic number: cd.GetContent(TEST_DATA.Length / 2);
Magic Number,Org.BouncyCastle.Cms.Tests,CompressedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\CompressedDataTest.cs,TestLimitOver,The following statement contains a magic number: Assert.IsTrue(Arrays.AreEqual(TEST_DATA' cd.GetContent(TEST_DATA.Length * 2)));
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128BufferedStream,The following statement contains a magic number: byte[] data = new byte[2000];
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128BufferedStream,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128BufferedStream,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Buffered,The following statement contains a magic number: byte[] data = new byte[2000];
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Buffered,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Buffered,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Buffered,The following statement contains a magic number: edGen.SetBufferSize(300);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Buffered,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Der,The following statement contains a magic number: byte[] data = new byte[2000];
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Der,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Der,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Throughput,The following statement contains a magic number: byte[] data = new byte[40001];
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestKeyTransAes128Throughput,The following statement contains a magic number: count != 10 && (len = dataStream.Read(buf' 0' buf.Length)) > 0
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestAesKek,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestAesKek,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestAesKek,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestAesKek,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestTwoAesKek,The following statement contains a magic number: byte[]  kekId1 = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestTwoAesKek,The following statement contains a magic number: byte[]  kekId1 = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestTwoAesKek,The following statement contains a magic number: byte[]  kekId1 = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestTwoAesKek,The following statement contains a magic number: byte[]  kekId1 = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestTwoAesKek,The following statement contains a magic number: byte[]  kekId2 = new byte[] { 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestTwoAesKek,The following statement contains a magic number: byte[]  kekId2 = new byte[] { 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestTwoAesKek,The following statement contains a magic number: byte[]  kekId2 = new byte[] { 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataStreamTest.cs,TestTwoAesKek,The following statement contains a magic number: byte[]  kekId2 = new byte[] { 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestKeyTrans128RC4,The following statement contains a magic number: CmsEnvelopedData ed = edGen.Generate(  				new CmsProcessableByteArray(data)'  				"1.2.840.113549.3.4"' 128);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestKeyTransSmallAes,The following statement contains a magic number: byte[] data = new byte[] { 0' 1' 2' 3 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestKeyTransSmallAes,The following statement contains a magic number: byte[] data = new byte[] { 0' 1' 2' 3 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestErroneousKek,The following statement contains a magic number: KeyParameter kek = ParameterUtilities.CreateKeyParameter(  				"AES"'  				new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 });
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestAes128Kek,The following statement contains a magic number: TryKekAlgorithm(CmsTestUtil.MakeAesKey(128)' NistObjectIdentifiers.IdAes128Wrap);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestAes192Kek,The following statement contains a magic number: TryKekAlgorithm(CmsTestUtil.MakeAesKey(192)' NistObjectIdentifiers.IdAes192Wrap);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestAes256Kek,The following statement contains a magic number: TryKekAlgorithm(CmsTestUtil.MakeAesKey(256)' NistObjectIdentifiers.IdAes256Wrap);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestCamellia128Kek,The following statement contains a magic number: TryKekAlgorithm(CmsTestUtil.MakeCamelliaKey(128)' NttObjectIdentifiers.IdCamellia128Wrap);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestCamellia192Kek,The following statement contains a magic number: TryKekAlgorithm(CmsTestUtil.MakeCamelliaKey(192)' NttObjectIdentifiers.IdCamellia192Wrap);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestCamellia256Kek,The following statement contains a magic number: TryKekAlgorithm(CmsTestUtil.MakeCamelliaKey(256)' NttObjectIdentifiers.IdCamellia256Wrap);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TryKekAlgorithm,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TryKekAlgorithm,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TryKekAlgorithm,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TryKekAlgorithm,The following statement contains a magic number: byte[] kekId = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,TestECMqvKeyAgreeMultiple,The following statement contains a magic number: ConfirmNumberRecipients(recipients' 2);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,PasswordTest,The following statement contains a magic number: edGen.AddPasswordRecipient(new Pkcs5Scheme2PbeKey("password".ToCharArray()' new byte[20]' 5)' algorithm);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,PasswordTest,The following statement contains a magic number: edGen.AddPasswordRecipient(new Pkcs5Scheme2PbeKey("password".ToCharArray()' new byte[20]' 5)' algorithm);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,PasswordUtf8Test,The following statement contains a magic number: edGen.AddPasswordRecipient(  				new Pkcs5Scheme2Utf8PbeKey("abc\u5639\u563b".ToCharArray()' new byte[20]' 5)'  				algorithm);
Magic Number,Org.BouncyCastle.Cms.Tests,EnvelopedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\EnvelopedDataTest.cs,PasswordUtf8Test,The following statement contains a magic number: edGen.AddPasswordRecipient(  				new Pkcs5Scheme2Utf8PbeKey("abc\u5639\u563b".ToCharArray()' new byte[20]' 5)'  				algorithm);
Magic Number,Org.BouncyCastle.Cms.Tests,Rfc4134Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\Rfc4134Test.cs,VerifyEnvelopedData,The following statement contains a magic number: Assert.GreaterOrEqual(2' c.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,Rfc4134Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\Rfc4134Test.cs,VerifyEnvelopedData,The following statement contains a magic number: c.Count == 2
Magic Number,Org.BouncyCastle.Cms.Tests,Rfc4134Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\Rfc4134Test.cs,VerifyEnvelopedData,The following statement contains a magic number: Assert.GreaterOrEqual(2' c.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,Rfc4134Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\Rfc4134Test.cs,VerifyEnvelopedData,The following statement contains a magic number: c.Count == 2
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestSha1WithRsa,The following statement contains a magic number: Assert.AreEqual(2' col.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestSha1WithRsaEncapsulatedBufferedStream,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestSha1WithRsaEncapsulatedBufferedStream,The following statement contains a magic number: byte[] data = new byte[2000];
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestSha1WithRsaEncapsulatedBufferedStream,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestSha1WithRsaEncapsulatedBuffered,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestSha1WithRsaEncapsulatedBuffered,The following statement contains a magic number: gen.SetBufferSize(300);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestSha1WithRsaEncapsulatedBuffered,The following statement contains a magic number: i != 2000
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestWithAttributeCertificate,The following statement contains a magic number: Assert.AreEqual(4' sp.Version);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestCertOrdering1,The following statement contains a magic number: Assert.AreEqual(2' a.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataStreamTest.cs,TestCertOrdering2,The following statement contains a magic number: Assert.AreEqual(2' a.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestSha1AndMD5WithRsaEncapsulatedRepeated,The following statement contains a magic number: Assert.AreEqual(2' signers.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestSha1AndMD5WithRsaEncapsulatedRepeated,The following statement contains a magic number: Assert.AreEqual(2' c.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestSha1AndMD5WithRsaEncapsulatedRepeated,The following statement contains a magic number: Assert.AreEqual(2' c.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestSha1AndMD5WithRsaEncapsulatedRepeatedWithSignerInfoGen,The following statement contains a magic number: Assert.AreEqual(2' signers.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestSha1AndMD5WithRsaEncapsulatedRepeatedWithSignerInfoGen,The following statement contains a magic number: Assert.AreEqual(2' c.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestSha1AndMD5WithRsaEncapsulatedRepeatedWithSignerInfoGen,The following statement contains a magic number: Assert.AreEqual(2' c.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestSha1WithRsaCounterSignature,The following statement contains a magic number: Assert.AreEqual(2' csSigners.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,SubjectKeyIDTest,The following statement contains a magic number: Assert.AreEqual(3' s.Version);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestWithAttributeCertificate,The following statement contains a magic number: Assert.AreEqual(4' sd.Version);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestCertOrdering1,The following statement contains a magic number: Assert.AreEqual(3' a.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestCertOrdering1,The following statement contains a magic number: Assert.AreEqual(SignDsaCert' a[2]);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestCertOrdering2,The following statement contains a magic number: Assert.AreEqual(3' a.Count);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestCertOrdering2,The following statement contains a magic number: Assert.AreEqual(OrigCert' a[2]);
Magic Number,Org.BouncyCastle.Cms.Tests,SignedDataTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\cms\test\SignedDataTest.cs,TestForMultipleCounterSignatures,The following statement contains a magic number: Assert.AreEqual(2' sigs.Count);
Magic Number,Org.BouncyCastle.Crypto.Examples,DesExample,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\examples\DESExample.cs,Main,The following statement contains a magic number: args.Length < 2
Magic Number,Org.BouncyCastle.Crypto.Examples,DesExample,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\examples\DESExample.cs,Main,The following statement contains a magic number: keyfile = args[2];
Magic Number,Org.BouncyCastle.Crypto.Examples,DesExample,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\examples\DESExample.cs,Main,The following statement contains a magic number: args.Length > 2
Magic Number,Org.BouncyCastle.Crypto.Examples,DesExample,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\examples\DESExample.cs,DesExample,The following statement contains a magic number: KeyGenerationParameters kgp = new KeyGenerationParameters(  						sr'   						DesEdeParameters.DesEdeKeyLength * 8);
Magic Number,Org.BouncyCastle.Crypto.Examples,DesExample,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\examples\DESExample.cs,performEncrypt,The following statement contains a magic number: int inBlockSize = 47;
Magic Number,Org.BouncyCastle.Crypto.IO.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\io\test\CipherStreamTest.cs,createCipher,The following statement contains a magic number: int bits = 8 * blockCipher.GetBlockSize();
Magic Number,Org.BouncyCastle.Crypto.IO.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\io\test\CipherStreamTest.cs,createCipher,The following statement contains a magic number: byte[] keyBytes = new byte[32];
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(5)' BigInteger.ValueOf(6));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(5)' BigInteger.ValueOf(6));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(5)' BigInteger.ValueOf(6));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(11)' BigInteger.ValueOf(5)' BigInteger.ValueOf(1));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(11)' BigInteger.ValueOf(5)' BigInteger.ValueOf(1));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(11)' BigInteger.ValueOf(5)' BigInteger.ValueOf(11));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(11)' BigInteger.ValueOf(5)' BigInteger.ValueOf(11));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(11)' BigInteger.ValueOf(5)' BigInteger.ValueOf(11));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(11)' BigInteger.ValueOf(5)' BigInteger.ValueOf(6));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(11)' BigInteger.ValueOf(5)' BigInteger.ValueOf(6));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(11)' BigInteger.ValueOf(5)' BigInteger.ValueOf(6));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(15)' BigInteger.ValueOf(2)' BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(15)' BigInteger.ValueOf(2)' BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(15)' BigInteger.ValueOf(2)' BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(6)' BigInteger.ValueOf(3));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(6)' BigInteger.ValueOf(3));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(6)' BigInteger.ValueOf(3));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(3)' BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(3)' BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Crypto.Agreement.Tests,JPakePrimeOrderGroupTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\agreement\test\JPakePrimeOrderGroupTest.cs,TestConstruction,The following statement contains a magic number: new JPakePrimeOrderGroup(BigInteger.ValueOf(7)' BigInteger.ValueOf(3)' BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "ABC88224514D0316EA3D48AEE3C9A2B4"'                          "D3D3F372E43E7ABDC4FA293743EED076"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "D4564EE072ACA5BD279536E14F94CB12"'                          "1CCD9AFEF15A9679BA75E35225585DEA"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "760BED7D92B083B10AF31CF0656081EB"'                          "FD1AC41482384D823CF3FD6F0E6C88B3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      false'                      "20212223242526"'                      112'                      new string[]                      {                          "7A4C1D7ADC8A67FDB50100ED23583A2C"'                          "43044D311C0E07541CA5C8B0916976B2"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "8FB78ABCA75C9F284E974E36141866BC"'                          "9D9745FF31C42A4488CBB771B13B5D86"                      }                  )'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "0E389920A09B485AA4ABD0CA7E60D89C"'                          "F4478EC6659A0D3577625B0C73A211DD"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "64983055D014550B39DE699E43130B64"'                          "035FDDA8582A2214EC722C410A8D95D3"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")'                  new DrbgTestVector(                      new DesEdeEngine()' 168'                      new Bit232EntropyProvider().Get(232)'                      true'                      "20212223242526"'                      112'                      new string[]                      {                          "A29C1A8C42FBC562D7D1DBA7DC541FFE"'                          "0BDA66B049429061C013E4228C2F44C6"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "8CF59C8CF6888B96EB1C1E3E79D82387AF08A9E5FF75E23F1FBCD4559B6B997E"'                          "69CDEF912C692D61B1DA4C05146B52EB7B8849BD87937835328254EC25A9180E"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "E8C74A4B7BFFB53BEB80E78CA86BB6DF70E2032AEB473E0DD54D2339CEFCE9D0"'                          "26B3F823B4DBAFC23B141375E10B3AEB7A0B5DEF1C7D760B6F827D01ECD17AC7"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "18FDEFBDC43D7A36D5D6D862205765D1D701C9F237007030DF1B8E70EE4EEE29"'                          "9888F1D38BB1CCE31B363AA1BD9B39616876C30DEE1FF0B7BD8C4C441715C833"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "BFF4B85D68C84529F24F69F9ACF1756E29BA648DDEB825C225FA32BA490EF4A9"'                          "9BD2635137A52AF7D0FCBEFEFB97EA93A0F4C438BD98956C0DACB04F15EE25B3"                      }                  )'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "4573AC8BBB33D7CC4DBEF3EEDF6EAE748B536C3A1082CEE4948CDB51C83A7F9C"'                          "99C628CDD87BD8C2F1FE443AA7F761DA16886436326323354DA6311FFF5BC678"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF")'                  new DrbgTestVector(                      new AesFastEngine()' 128'                      new Bit256EntropyProvider().Get(256)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "F324104E2FA14F79D8AA60DF06B93B3BC157324958F0A7EE1E193677A70E0250"'                          "78F4C840134F40DC001BFAD3A90B5EF4DEBDBFAC3CFDF0CD69A89DC4FD34713F"                      }                  )                 .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "E231244B3235B085C81604424357E85201E3828B5C45568679A5555F867AAC8C"'                          "DDD0F7BCCADADAA31A67652259CE569A271DD85CF66C3D6A7E9FAED61F38D219"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 192'                      new Bit320EntropyProvider().Get(320)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "F780D4A2C25CF8EE7407D948EC0B724A4235D8B20E65081392755CA7912AD7C0"'                          "BA14617F915BA964CB79276BDADC840C14B631BBD1A59097054FA6DFF863B238"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "47111E146562E9AA2FB2A1B095D37A8165AF8FC7CA611D632BE7D4C145C83900"'                          "98A28E3B1BA363C9DAF0F6887A1CF52B833D3354D77A7C10837DD63DD2E645F8"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "71BB3F9C9CEAF4E6C92A83EB4C7225010EE150AC75E23F5F77AD5073EF24D88A"'                          "386DEBBBF091BBF0502957B0329938FB836B82E594A2F5FDD5EB28D4E35528F4"                      }                  )                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "1A2E3FEE9056E98D375525FDC2B63B95B47CE51FCF594D804BD5A17F2E01139B"'                          "601F95384F0D85946301D1EACE8F645A825CE38F1E2565B0C0C439448E9CA8AC"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "EAE6BCE781807E524D26605EA198077932D01EEB445B9AC6C5D99C101D29F46E"'                          "738E99C95AF59519AAD37FF3D5180986ADEBAB6E95836725097E50A8D1D0BD28"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")'                  new DrbgTestVector(                      new AesFastEngine()' 256'                      new Bit384EntropyProvider().Get(384)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "eae6bce781807e524d26605ea198077932d01eeb445b9ac6c5d99c101d29f46e30b27377"'                          "ec51b55b49904c3ff9e13939f1cf27398993e1b3acb2b0be0be8761261428f0aa8ba2657"                      }                  )                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F")                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new AesEngine()' 256' 256' new Bit232EntropyProvider().Get(128)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new AesEngine()' 256' 256' new Bit232EntropyProvider().Get(128)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new AesEngine()' 256' 256' new Bit232EntropyProvider().Get(128)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new DesEdeEngine()' 256' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new DesEdeEngine()' 256' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new DesEdeEngine()' 256' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new DesEdeEngine()' 168' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new DesEdeEngine()' 168' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new DesEdeEngine()' 168' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new AesEngine()' 192' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new AesEngine()' 192' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,CtrDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\CtrDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new CtrSP800Drbg(new AesEngine()' 192' 256' new Bit232EntropyProvider().Get(232)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "9F7CFF1ECA23E750F66326969F11800F12088BA68E441D15D888B3FE12BF66FE057494F4546DE2F1"'                          "B77AA5C0CD55BBCEED7574AF223AFD988C7EEC8EFF4A94E5E89D26A04F58FA79F5E0D3702D7A9A6A"                      }                  )'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "AB438BD3B01A0AF85CFEE29F7D7B71621C4908B909124D430E7B406FB1086EA994C582E0D656D989"'                          "29D9098F987E7005314A0F51B3DD2B8122F4AED706735DE6AD5DDBF223177C1E5F3AEBC52FAB90B9"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "E76B4EDD5C865BC8AFD809A59B69B429AC7F4352A579BCF3F75E56249A3491F87C3CA6848B0FAB25"'                          "6577B6B4F87A93240B199FE51A3B335313683103DECE171E3256FB7E803586CA4E45DD242EB01F70"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "56EF4913373994D5539F4D7D17AFE7448CDF5E72416CC6A71A340059FA0D5AE526B23250C46C0944"'                          "575B37A2739814F966C63B60A2C4F149CA9ACC84FC4B25493289B085C67B2E30F5F0B99A2C349E2A"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "532CA1165DCFF21C55592687639884AF4BC4B057DF8F41DE653AB44E2ADEC7C9303E75ABE277EDBF"'                          "73C2C67C696D686D0C4DBCEB5C2AF7DDF6F020B6874FAE4390F102117ECAAFF54418529A367005A0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "183C242A1430E46C4ED70B4DBE1BF9AB0AB8721CDCA2A2D1820AD6F6C956858543B2AA191D8D1287"'                          "F196F9BD021C745CBD5AC7BFCE48EAAF0D0E7C091FBF436940E63A198EE770D9A4F0718669AF2BC9"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "77E05A0E7DC78AB5D8934D5E93E82C06" +                          "A07C04CEE6C9C53045EEB485872777CF3B3E35C474F976B8" +                          "94BF301A86FA651F463970E89D4A0534B2ECAD29EC044E7E"'                          "5FF4BA493C40CFFF3B01E472C575668C" +                          "CE3880B9290B05BFEDE5EC96ED5E9B2898508B09BC800EEE" +                          "099A3C90602ABD4B1D4F343D497C6055C87BB956D53BF351"                      }                  )'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "92275523C70E567BCF9B35EC50B933F8" +                          "12616DF586B7F72EE1BC7735A5C2654373CBBC72316DFF84" +                          "20A33BF02B97AC8D1952583F270ACD7005CC027F4CF1187E"'                          "681A46B2AA8694A0FE4DEEA720927A84" +                          "EAAA985E59C19F8BE0984D8CBEF8C69B754167641946E040" +                          "EE2043E1CCB29DCF063C0A50830E428E6DCA262ECD77C542"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "04FF23AD15E78790ADD36B438BBC097C7A11747CC2CCEEDE" +                          "2C978B23B3DC63B732C953061D7764990ABFEFC47A581B92" +                          "1BC0428C4F12212460E406A0F0651E7F0CB9A90ABFDB07B5" +                          "25565C74F0AA085082F6CF213AAFAD0C0646895078F1E1FE"'                          "4F35B85F95DEE3E873054905CFD02341653E18F529930CBE" +                          "14D909F37FEAF2C790D22FAE7516B4590BE35D53E2FE1A35" +                          "AFE4B6607CB358589C3B4D094A1D81FE0717F1DF5BDDEB3E" +                          "114F130BB781E66C22B5B770E8AE115FF39F8ADAF66DEEDF"                      }                  )'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "97993B78F7C31C0E876DC92EB7D6C408E09D608AD6B99D0E" +                          "A2229B05A578C426334FCC8A1C7E676ED2D89A5B4CDF5B3F" +                          "4ADF11936BF14F4E10909DBA9C24F4FDFFDE72351DA8E2CC" +                          "3B135A395373899E5F1A5955B880CA9B9E9DD4C9CA7FA4D4"'                          "F5983946320E36C64EF283CA1F65D197CF81624EC6778E77" +                          "0E78949D84EF21A45CDD62D1DB76920D4C2836FC6AE5299F" +                          "AF1357D9701FAD10FBD88D1E2832239436D76EB271BDC3CA" +                          "04425EC88BC0E89A4D5C37FFCE7C6C3ABDE9C413AE6D3FEA"                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "DA126CF95C6BF97E" +                          "2F731F2137A907ACC70FD7AC9EBACD1C6E31C74029B052E3" +                          "AABC48F3B00993F2B2381F7650A55322A968C86E05DE88E6" +                          "367F6EF89A601DB4342E9086C7AC13B5E56C32E9E668040B" +                          "73847893C5BFD38A1CF44F348B4EEE4CD68ADB7E7B8C837F" +                          "19BC4F902761F7CFF24AB1D704FD11C4E929D8553753B55D"'                          "400B977CE8A2BB6A" +                          "84C6FD1CF901459685ABF5408CFF4588CEDF52E2D2DC300A" +                          "A9B4FAED8CD0161C2172B1FD269253195883D6EBF21020F2" +                          "C20E5F2C81AE60C8595B834A229B1F5B726C1125717E6207" +                          "8886EF38E61E32707AD5F8116C6393DFB6E7C7AE0E8E92BB" +                          "D7E0C3D04BBA02F5169F2F569A58158915FEE4C9D28D45DB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "F93CA6855590A77F" +                          "07354097E90E026648B6115DF008FFEDBD9D9811F54E8286" +                          "EF00FDD6BA1E58DF2535E3FBDD9A9BA3754A97F36EE83322" +                          "1582060A1F37FCE4EE8826636B28EAD589593F4CA8B64738" +                          "8F24EB3F0A34796968D21BDEE6F81FD5DF93536F935937B8" +                          "025EC8CBF57DDB0C61F2E41463CC1516D657DA2829C6BF90"'                          "4817618F48C60FB1" +                          "CE5BFBDA0CAF4591882A31F6EE3FE0F78779992A06EC60F3" +                          "7FB9A8D6108C231F0A927754B0599FA4FA27A4E25E065EF0" +                          "3085B892979DC0E7A1080883CAEBFDFD3665A8F2D061C521" +                          "F7D6E3DA2AF8B97B6B43B6EC831AF515070A83BBB9AC95ED" +                          "4EF49B756A2377A5F0833D847E27A88DDB0C2CE4AD782E7B "                      }                  )'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "0455DD4AD7DBACB2" +                          "410BE58DF7248D765A4547ABAEE1743B0BCAD37EBD06DA7C" +                          "F7CE5E2216E525327E9E2005EBEF2CE53BD733B18128627D" +                          "3FD6153089373AF2606A1584646A0EA488BFEF45228699A0" +                          "89CEA8AEC44502D86D9591F3552C688B7F7B45FCB0C3C2B9" +                          "43C1CD8A6FC63DF4D81C3DA543C9CF2843855EA84E4F959C"'                          "C047D46D7F614E4E" +                          "4A7952C79A451F8F7ACA379967E2977C401C626A2ED70D74" +                          "A63660579A354115BC8C8C8CC3AEA3050686A0CFCDB6FA9C" +                          "F78D4C2165BAF851C6F9B1CD16A2E14C15C6DAAC56C16E75" +                          "FC84A14D58B41622E88B0F1B1995587FD8BAA999CBA98025" +                          "4C8AB9A9691DF7B84D88B639A9A3106DEABEB63748B99C09"                      }                  )                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "22EB93A67911DA73" +                          "85D9180C78127DE1A04FF713114C07C9C615F7CC5EF72744" +                          "A2DDCD7C3CB85E65DED8EF5F240FBDCBEBBDE2BAAC8ECF7D" +                          "CBC8AC333E54607AD41DC495D83DF72A05EF55B127C1441C" +                          "9A0EFFDA2C7954DB6C2D04342EB812E5E0B11D6C395F41ED" +                          "A2702ECE5BA479E2DFA18F953097492636C12FE30CE5C968"'                          "E66698CFBF1B3F2E" +                          "919C03036E584EAA81CF1C6666240AF05F70637043733954" +                          "D8A1E5A66A04C53C6900FDC145D4A3A80A31F5868ACE9AC9" +                          "4E14E2051F624A05EEA1F8B684AA5410BCE315E76EA07C71" +                          "5D6F34731320FF0DCF78D795E6EFA2DF92B98BE636CDFBA2" +                          "9008DD392112AEC202F2E481CB9D83F987FEA69CD1B368BB"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7596A76372308BD5" +                          "A5613439934678B35521A94D81ABFE63A21ACF61ABB88B61" +                          "E86A12C37F308F2BBBE32BE4B38D03AE808386494D70EF52" +                          "E9E1365DD18B7784CAB826F31D47579E4D57F69D8BF3152B" +                          "95741946CEBE58571DF58ED39980D9AF44E69F01E8989759" +                          "8E40171101A0E3302838E0AD9E849C01988993CF9F6E5263"'                          "DBE5EE36FCD85301" +                          "303E1C3617C1AC5E23C08885D0BEFAAD0C85A0D89F85B9F1" +                          "6ECE3D88A24EB96504F2F13EFA7049621782F5DE2C416A0D" +                          "294CCFE53545C4E309C48E1E285A2B829A574B72B3C2FBE1" +                          "34D01E3706B486F2401B9820E17298A342666918E15B8462" +                          "87F8C5AF2D96B20FAF3D0BB392E15F4A06CDB0DECD1B6AD7"                      }                  )                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")                  };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new HashSP800Drbg(new Sha256Digest()' 256' new SHA256EntropyProvider().Get(128)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new HashSP800Drbg(new Sha256Digest()' 256' new SHA256EntropyProvider().Get(128)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new HashSP800Drbg(new Sha1Digest()' 256' new SHA256EntropyProvider().Get(256)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new HashSP800Drbg(new Sha1Digest()' 256' new SHA256EntropyProvider().Get(256)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The following statement contains a magic number: return new DrbgTestVector[]              {                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "5A7D3B449F481CB38DF79AD2B1FCC01E57F8135E8C0B22CD0630BFB0127FB5408C8EFC17A929896E"'                          "82cf772ec3e84b00fc74f5df104efbfb2428554e9ce367d03aeade37827fa8e9cb6a08196115d948"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "B3BD05246CBA12A64735A4E3FDE599BC1BE30F439BD060208EEA7D71F9D123DF47B3CE069D98EDE6"'                          "B5DADA380E2872DF935BCA55B882C8C9376902AB639765472B71ACEBE2EA8B1B6B49629CB67317E0"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      false'                      "2021222324"'                      80'                      new string[]                      {                          "C7AAAC583C6EF6300714C2CC5D06C148CFFB40449AD0BB26FAC0497B5C57E161E36681BCC930CE80"'                          "6EBD2B7B5E0A2AD7A24B1BF9A1DBA47D43271719B9C37B7FE81BA94045A14A7CB514B446666EA5A7"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "FEC4597F06A3A8CC8529D59557B9E661053809C0BC0EFC282ABD87605CC90CBA9B8633DCB1DAE02E"'                          "84ADD5E2D2041C01723A4DE4335B13EFDF16B0E51A0AD39BD15E862E644F31E4A2D7D843E57C5968"                      })'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "6C37FDD729AA40F80BC6AB08CA7CC649794F6998B57081E4220F22C5C283E2C91B8E305AB869C625"'                          "CAF57DCFEA393B9236BF691FA456FEA7FDF1DF8361482CA54D5FA723F4C88B4FA504BF03277FA783"                      })                  .SetPersonalizationString("404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576")'                  new DrbgTestVector(                      new Sha1Digest()'                      new SHA1EntropyProvider().Get(440)'                      true'                      "2021222324"'                      80'                      new string[]                      {                          "A1BA8FA58BB5013F43F7B6ED52B4539FA16DC77957AEE815B9C07004C7E992EB8C7E591964AFEEA2"'                          "84264A73A818C95C2F424B37D3CC990B046FB50C2DC64A164211889A010F2471A0912FFEA1BF0195"                      })                  .AddAdditionalInput("606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596")                  .AddAdditionalInput("A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6")'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      false'                      "2021222324252627"'                      128'                      new string[]                      {                          "D67B8C1734F46FA3F763CF57C6F9F4F2" +                          "DC1089BD8BC1F6F023950BFC5617635208C8501238AD7A44" +                          "00DEFEE46C640B61AF77C2D1A3BFAA90EDE5D207406E5403"'                          "8FDAEC20F8B421407059E3588920DA7E" +                          "DA9DCE3CF8274DFA1C59C108C1D0AA9B0FA38DA5C792037C" +                          "4D33CD070CA7CD0C5608DBA8B885654639DE2187B74CB263"                      })'                  new DrbgTestVector(                      new Sha256Digest()'                      new SHA256EntropyProvider().Get(440)'                      true'                      "2021222324252627"'                      128'                      new string[]                      {                          "FABD0AE25C69DC2EFDEFB7F20C5A31B5" +                          "7AC938AB771AA19BF8F5F1468F665C938C9A1A5DF0628A56" +                          "90F15A1AD8A613F31BBD65EEAD5457D5D26947F29FE91AA7"'                          "6BD925B0E1C232EFD67CCD84F722E927" +                          "ECB46AB2B740014777AF14BA0BBF53A45BDBB62B3F7D0B9C" +                          "8EEAD057C0EC754EF8B53E60A1F434F05946A8B686AFBC7A"                      })'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "03AB8BCE4D1DBBB636C5C5B7E1C58499FEB1C619CDD11D35" +                          "CD6CF6BB8F20EF27B6F5F9054FF900DB9EBF7BF30ED4DCBB" +                          "BC8D5B51C965EA226FFEE2CA5AB2EFD00754DC32F357BF7A" +                          "E42275E0F7704DC44E50A5220AD05AB698A22640AC634829"'                          "B907E77144FD55A54E9BA1A6A0EED0AAC780020C41A15DD8" +                          "9A6C163830BA1D094E6A17100FF71EE30A96E1EE04D2A966" +                          "03832A4E404F1966C2B5F4CB61B9927E8D12AC1E1A24CF23" +                          "88C14E8EC96C35181EAEE32AAA46330DEAAFE5E7CE783C74"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha384Digest()'                      new SHA384EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B"'                      192'                      new string[]                      {                          "804A3AD720F4FCE8738D0632514FEF16430CB7D63A8DF1A5" +                          "F02A3CE3BD7ED6A668B69E63E2BB93F096EE753D6194A0F1" +                          "A32711063653009636337D22167CC4402D019AC216FA574F" +                          "091CF6EA283568D737A77BE38E8F09382C69E76B142ABC3A"'                          "73B8E55C753202176A17B9B9754A9FE6F23B01861FCD4059" +                          "6AEAA301AF1AEF8AF0EAF22FBF34541EFFAB1431666ACACC" +                          "759338C7E28672819D53CFEF10A3E19DAFBD53295F1980A9" +                          "F491504A2725506784B7AC826D92C838A8668171CAAA86E7"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "2A5FF6520C20F66E" +                          "D5EA431BD4AEAC58F975EEC9A015137D5C94B73AA09CB8B5" +                          "9D611DDEECEB34A52BB999424009EB9EAC5353F92A6699D2" +                          "0A02164EEBBC6492941E10426323898465DFD731C7E04730" +                          "60A5AA8973841FDF3446FB6E72A58DA8BDA2A57A36F3DD98" +                          "6DF85C8A5C6FF31CDE660BF8A841B21DD6AA9D3AC356B87B"'                          "0EDC8D7D7CEEC7FE" +                          "36333FB30C0A9A4B27AA0BECBF075568B006C1C3693B1C29" +                          "0F84769C213F98EB5880909EDF068FDA6BFC43503987BBBD" +                          "4FC23AFBE982FE4B4B007910CC4874EEC217405421C8D8A1" +                          "BA87EC684D0AF9A6101D9DB787AE82C3A6A25ED478DF1B12" +                          "212CEC325466F3AC7C48A56166DD0B119C8673A1A9D54F67"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      false'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "7AE31A2DEC31075F" +                          "E5972660C16D22ECC0D415C5693001BE5A468B590BC1AE2C" +                          "43F647F8D681AEEA0D87B79B0B4E5D089CA2C9D327534234" +                          "0254E6B04690D77A71A294DA9568479EEF8BB2A2110F18B6" +                          "22F60F35235DE0E8F9D7E98105D84AA24AF0757AF005DFD5" +                          "2FA51DE3F44FCE0C5F3A27FCE8B0F6E4A3F7C7B53CE34A3D"'                          "D83A8084630F286D" +                          "A4DB49B9F6F608C8993F7F1397EA0D6F4A72CF3EF2733A11" +                          "AB823C29F2EBDEC3EDE962F93D920A1DB59C84E1E879C29F" +                          "5F9995FC3A6A3AF9B587CA7C13EA197D423E81E1D6469942" +                          "B6E2CA83A97E91F6B298266AC148A1809776C26AF5E239A5" +                          "5A2BEB9E752203A694E1F3FE2B3E6A0C9C314421CDB55FBD "                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "28FD6060C4F35F4D" +                          "317AB2060EE32019E0DAA330F3F5650BBCA57CB67EE6AF1C" +                          "6F25D1B01F3601EDA85DC2ED29A9B2BA4C85CF491CE7185F" +                          "1A2BD9378AE3C655BD1CEC2EE108AE7FC382989F6D4FEA8A" +                          "B01499697C2F07945CE02C5ED617D04287FEAF3BA638A4CE" +                          "F3BB6B827E40AF16279580FCF1FDAD830930F7FDE341E2AF"'                          "C0B1601AFE39338B" +                          "58DC2BE7C256AEBE3C21C5A939BEEC7E97B3528AC420F0C6" +                          "341847187666E0FF578A8EB0A37809F877365A28DF2FA0F0" +                          "6354A6F02496747369375B9A9D6B756FDC4A8FB308E08256" +                          "9D79A85BB960F747256626389A3B45B0ABE7ECBC39D5CD7B" +                          "2C18DF2E5FDE8C9B8D43474C54B6F9839468445929B438C7"                      })'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "72691D2103FB567C" +                          "CD30370715B36666F63430087B1C688281CA0974DB456BDB" +                          "A7EB5C48CFF62EA05F9508F3B530CE995A272B11EC079C13" +                          "923EEF8E011A93C19B58CC6716BC7CB8BD886CAA60C14D85" +                          "C023348BD77738C475D6C7E1D9BFF4B12C43D8CC73F838DC" +                          "4F8BD476CF8328EEB71B3D873D6B7B859C9B21065638FF95"'                          "8570DA3D47E1E160" +                          "5CF3E44B8D328B995EFC64107B6292D1B1036B5F88CE3160" +                          "2F12BEB71D801C0942E7C0864B3DB67A9356DB203490D881" +                          "24FE86BCE38AC2269B4FDA6ABAA884039DF80A0336A24D79" +                          "1EB3067C8F5F0CF0F18DD73B66A7B316FB19E02835CC6293" +                          "65FCD1D3BE640178ED9093B91B36E1D68135F2785BFF505C"                      })                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "AAE4DC3C9ECC74D9" +                          "061DD527117EF3D29E1E52B26853C539D6CA797E8DA3D0BB" +                          "171D8E30B8B194D8C28F7F6BE3B986B88506DC6A01B294A7" +                          "165DD1C3470F7BE7B396AA0DB7D50C4051E7C7E1C8A7D21A" +                          "2B5878C0BCB163CAA79366E7A1162FDC88429616CD3E6977" +                          "8D327520A6BBBF71D8AA2E03EC4A9DAA0E77CF93E1EE30D2 "'                          "129FF6D31A23FFBC" +                          "870632B35EE477C2280DDD2ECDABEDB900C78418BE2D243B" +                          "B9D8E5093ECE7B6BF48638D8F704D134ADDEB7F4E9D5C142" +                          "CD05683E72B516486AF24AEC15D61E81E270DD4EBED91B62" +                          "12EB8896A6250D5C8BC3A4A12F7E3068FBDF856F47EB23D3" +                          "79F82C1EBCD1585FB260B9C0C42625FBCEE68CAD773CD5B1"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")'                  new DrbgTestVector(                      new Sha512Digest()'                      new SHA512EntropyProvider().Get(888)'                      true'                      "202122232425262728292A2B2C2D2E2F"'                      256'                      new string[]                      {                          "B8E827652175E6E0" +                          "6E513C7BE94B5810C14ED94AD903647940CAEB7EE014C848" +                          "8DCBBE6D4D6616D06656A3DC707CDAC4F02EE6D8408C065F" +                          "CB068C0760DA47C5D60E5D70D09DC3929B6979615D117F7B" +                          "EDCC661A98514B3A1F55B2CBABDCA59F11823E4838065F1F" +                          "8431CBF28A577738234AF3F188C7190CC19739E72E9BBFFF"'                          "7ED41B9CFDC8C256" +                          "83BBB4C553CC2DC61F690E62ABC9F038A16B8C519690CABE" +                          "BD1B5C196C57CF759BB9871BE0C163A57315EA96F615136D" +                          "064572F09F26D659D24211F9610FFCDFFDA8CE23FFA96735" +                          "7595182660877766035EED800B05364CE324A75EB63FD9B3" +                          "EED956D147480B1D0A42DF8AA990BB628666F6F61D60CBE2"                      })                  .SetPersonalizationString(                      "404142434445464748494A4B4C4D4E" +                      "4F505152535455565758595A5B5C5D5E5F60616263646566" +                      "6768696A6B6C6D6E6F707172737475767778797A7B7C7D7E" +                      "7F808182838485868788898A8B8C8D8E8F90919293949596" +                      "9798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE")                  .AddAdditionalInput(                      "606162636465666768696A6B6C6D6E" +                      "6F707172737475767778797A7B7C7D7E7F80818283848586" +                      "8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E" +                      "9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6" +                      "B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE")                  .AddAdditionalInput(                      "A0A1A2A3A4A5A6A7A8A9AAABACADAE" +                      "AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6" +                      "C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDE" +                      "DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6" +                      "F7F8F9FAFBFCFDFEFF000102030405060708090A0B0C0D0E")              };
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new HMacSP800Drbg(new HMac(new Sha256Digest())' 256' new SHA256EntropyProvider().Get(128)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,PerformTest,The following statement contains a magic number: d = new HMacSP800Drbg(new HMac(new Sha256Digest())' 256' new SHA256EntropyProvider().Get(128)' null' null);
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,EntropySource,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\TestEntropySourceProvider.cs,GetEntropy,The following statement contains a magic number: byte[] rv = new byte[bitsRequired / 8];
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,EntropySource,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\TestEntropySourceProvider.cs,GetEntropy,The following statement contains a magic number: index += bitsRequired / 8;
Magic Number,Org.BouncyCastle.Crypto.Prng.Test,X931Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\X931Test.cs,PerformTest,The following statement contains a magic number: Fail("expected output wrong [" + 10000 + "] got : " + Strings.FromByteArray(Hex.Encode(res)));
Magic Number,Org.BouncyCastle.Crypto.Tests,AesFastTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESFastTest.cs,PerformTest,The following statement contains a magic number: byte[] keyBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,AesFastTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESFastTest.cs,PerformTest,The following statement contains a magic number: byte[] dudKey = new byte[6];
Magic Number,Org.BouncyCastle.Crypto.Tests,AesFastTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESFastTest.cs,PerformTest,The following statement contains a magic number: byte[] iv = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,AesLightTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESLightTest.cs,PerformTest,The following statement contains a magic number: byte[] keyBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,AesLightTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESLightTest.cs,PerformTest,The following statement contains a magic number: byte[] dudKey = new byte[6];
Magic Number,Org.BouncyCastle.Crypto.Tests,AesLightTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESLightTest.cs,PerformTest,The following statement contains a magic number: byte[] iv = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESTest.cs,Perform,The following statement contains a magic number: result = WrapTest(2' kek2' in2' out2);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESTest.cs,Perform,The following statement contains a magic number: result = WrapTest(3' kek3' in3' out3);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESTest.cs,Perform,The following statement contains a magic number: result = WrapTest(4' kek4' in4' out4);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESTest.cs,Perform,The following statement contains a magic number: result = WrapTest(5' kek5' in5' out5);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESTest.cs,Perform,The following statement contains a magic number: result = WrapTest(6' kek6' in6' out6);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: result = wrapTest(2' kek2' in2' out2);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: result = wrapTest(3' kek3' in3' out3);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: result = wrapTest(4' kek4' in4' out4);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: result = wrapTest(5' kek5' in5' out5);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: result = wrapTest(6' kek6' in6' out6);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: KeyParameter key = new KeyParameter(new byte[16]);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: byte[]       buf = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: wrapper.Unwrap(buf' 0' buf.Length / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,AesWrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\AESWrapTest.cs,Perform,The following statement contains a magic number: wrapper.Wrap(buf' 0' 15);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestShortKeys,The following statement contains a magic number: byte[] salt = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestShortKeys,The following statement contains a magic number: byte[] hashEmpty = BCrypt.Generate(new byte[0]' salt' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestShortKeys,The following statement contains a magic number: byte[] hashZero1 = BCrypt.Generate(new byte[1]' salt' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestShortKeys,The following statement contains a magic number: byte[] hashZero4 = BCrypt.Generate(new byte[4]' salt' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestShortKeys,The following statement contains a magic number: byte[] hashZero4 = BCrypt.Generate(new byte[4]' salt' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestShortKeys,The following statement contains a magic number: byte[] hashA = BCrypt.Generate(new byte[]{(byte)'a'}' salt' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestShortKeys,The following statement contains a magic number: byte[] hashA0 = BCrypt.Generate(new byte[]{(byte)'a'' (byte)0}' salt' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckOK("Empty key"' new byte[0]' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckOK("Empty key"' new byte[0]' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckOK("Minimal values"' new byte[1]' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckOK("Minimal values"' new byte[1]' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckOK("Max passcode"' new byte[72]' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckOK("Max passcode"' new byte[72]' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckOK("Max passcode"' new byte[72]' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Null password"' null' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Null password"' null' new byte[16]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Null salt"' new byte[1]' null' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Salt too small"' new byte[1]' new byte[15]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Salt too small"' new byte[1]' new byte[15]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Salt too big"' new byte[1]' new byte[17]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Salt too big"' new byte[1]' new byte[17]' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Cost too low"' new byte[16]' new byte[16]' 3);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Cost too low"' new byte[16]' new byte[16]' 3);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Cost too low"' new byte[16]' new byte[16]' 3);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Cost too high"' new byte[16]' new byte[16]' 32);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Cost too high"' new byte[16]' new byte[16]' 32);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Cost too high"' new byte[16]' new byte[16]' 32);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Passcode too long"' new byte[73]' new byte[16]' 32);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Passcode too long"' new byte[73]' new byte[16]' 32);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestParameters,The following statement contains a magic number: CheckIllegal("Passcode too long"' new byte[73]' new byte[16]' 32);
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestVectors,The following statement contains a magic number: int cost = (int)v[2];
Magic Number,Org.BouncyCastle.Crypto.Tests,BCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\BCryptTest.cs,DoTestVectors,The following statement contains a magic number: byte[] expected = Hex.Decode((string)v[3]);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: checkVectors(0' ccm' K1' 32' N1' A1' P1' T1' C1);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: checkVectors(1' ccm' K2' 48' N2' A2' P2' T2' C2);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: checkVectors(2' ccm' K3' 64' N3' A3' P3' T3' C3);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: checkVectors(2' ccm' K3' 64' N3' A3' P3' T3' C3);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: byte[] a4 = new byte[65536];
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: checkVectors(3' ccm' K4' 112' N4' a4' P4' T4' C4);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: checkVectors(3' ccm' K4' 112' N4' a4' P4' T4' C4);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: checkVectors(4' ccm' K4' 112' N4' A4' A4' T5' C5);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: checkVectors(4' ccm' K4' 112' N4' A4' A4' T5' C5);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: ccm.Init(false' new AeadParameters(new KeyParameter(K2)' 48' N2' A2));
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: byte[] inBuf = new byte[C2.Length + 10];
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: byte[] outBuf = new byte[ccm.GetOutputSize(C2.Length) + 10];
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: Array.Copy(C2' 0' inBuf' 10' C2.Length);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: int len = ccm.ProcessPacket(inBuf' 10' C2.Length' outBuf' 10);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: int len = ccm.ProcessPacket(inBuf' 10' C2.Length' outBuf' 10);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: len != output.Length || !isEqual(output' outBuf' 10)
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: ccm.Init(true' new AeadParameters(new KeyParameter(K2)' 48' N2' A2));
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: outBuf = new byte[ccm.GetOutputSize(inLen) + 10];
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: len = ccm.ProcessPacket(inBuf' 10' inLen' outBuf' 10);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: len = ccm.ProcessPacket(inBuf' 10' inLen' outBuf' 10);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: output = ccm.ProcessPacket(inBuf' 10' inLen);
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: len != output.Length || !isEqual(output' outBuf' 10)
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,PerformTest,The following statement contains a magic number: ccm.Init(false' new AeadParameters(new KeyParameter(K1)' 32' N2' A2));
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,checkVectors,The following statement contains a magic number: byte[] fa = new byte[a.Length / 2];
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,checkVectors,The following statement contains a magic number: byte[] la = new byte[a.Length - (a.Length / 2)];
Magic Number,Org.BouncyCastle.Crypto.Tests,CcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CCMTest.cs,ivParamTest,The following statement contains a magic number: byte[] enc = new byte[p.Length + 8];
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The following statement contains a magic number: chachaTest1(20' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))'                      set1v0_0' set1v0_192'  set1v0_256'  set1v0_448);
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The following statement contains a magic number: chachaTest1(20' new ParametersWithIV(new KeyParameter(Hex.Decode("00400000000000000000000000000000"))' Hex.Decode("0000000000000000"))'                      set1v9_0' set1v9_192'  set1v9_256'  set1v9_448);
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The following statement contains a magic number: chachaTest1(12' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))'                      chacha12_set1v0_0' chacha12_set1v0_192'  chacha12_set1v0_256'  chacha12_set1v0_448);
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,PerformTest,The following statement contains a magic number: chachaTest1(8' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))'                      chacha8_set1v0_0' chacha8_set1v0_192'  chacha8_set1v0_256'  chacha8_set1v0_448);
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest1,The following statement contains a magic number: byte[]       buf = new byte[64];
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest1,The following statement contains a magic number: salsa.ProcessBytes(zeroes' 0' 64' buf' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest1,The following statement contains a magic number: switch (i)                  {                  case 0:                      if (!AreEqual(buf' Hex.Decode(v0)))                      {                          mismatch("v0/" + rounds' v0' buf);                      }                      break;                  case 3:                      if (!AreEqual(buf' Hex.Decode(v192)))                      {                          mismatch("v192/" + rounds' v192' buf);                      }                      break;                  case 4:                      if (!AreEqual(buf' Hex.Decode(v256)))                      {                          mismatch("v256/" + rounds' v256' buf);                      }                      break;                  default:                      // ignore                      break;                  }
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest1,The following statement contains a magic number: switch (i)                  {                  case 0:                      if (!AreEqual(buf' Hex.Decode(v0)))                      {                          mismatch("v0/" + rounds' v0' buf);                      }                      break;                  case 3:                      if (!AreEqual(buf' Hex.Decode(v192)))                      {                          mismatch("v192/" + rounds' v192' buf);                      }                      break;                  case 4:                      if (!AreEqual(buf' Hex.Decode(v256)))                      {                          mismatch("v256/" + rounds' v256' buf);                      }                      break;                  default:                      // ignore                      break;                  }
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest1,The following statement contains a magic number: i != 7
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest1,The following statement contains a magic number: i != 64
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest2,The following statement contains a magic number: byte[]       buf = new byte[64];
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest2,The following statement contains a magic number: salsa.ProcessBytes(zeroes' 0' 64' buf' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest2,The following statement contains a magic number: switch (i)                  {                  case 0:                      if (!AreEqual(buf' Hex.Decode(v0)))                      {                          mismatch("v0"' v0' buf);                      }                      break;                  case 1023:                      if (!AreEqual(buf' Hex.Decode(v65472)))                      {                          mismatch("v65472"' v65472' buf);                      }                      break;                  case 1024:                      if (!AreEqual(buf' Hex.Decode(v65536)))                      {                          mismatch("v65536"' v65536' buf);                      }                      break;                  default:                      // ignore                      break;                  }
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest2,The following statement contains a magic number: switch (i)                  {                  case 0:                      if (!AreEqual(buf' Hex.Decode(v0)))                      {                          mismatch("v0"' v0' buf);                      }                      break;                  case 1023:                      if (!AreEqual(buf' Hex.Decode(v65472)))                      {                          mismatch("v65472"' v65472' buf);                      }                      break;                  case 1024:                      if (!AreEqual(buf' Hex.Decode(v65536)))                      {                          mismatch("v65536"' v65536' buf);                      }                      break;                  default:                      // ignore                      break;                  }
Magic Number,Org.BouncyCastle.Crypto.Tests,ChaChaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ChaChaTest.cs,chachaTest2,The following statement contains a magic number: i != 1025
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: IMac mac = new CMac(cipher' 128);
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: byte[] outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,PerformTest,The following statement contains a magic number: outBytes = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,TestExceptions,The following statement contains a magic number: mac.Init(new ParametersWithIV(new KeyParameter(new byte[16])' new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,CMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CMacTest.cs,TestExceptions,The following statement contains a magic number: mac.Init(new ParametersWithIV(new KeyParameter(new byte[16])' new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: byte[] iv = new byte[]{1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: byte[] iv = new byte[]{1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: byte[] iv = new byte[]{1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: byte[] iv = new byte[]{1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: byte[] iv = new byte[]{1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: byte[] iv = new byte[]{1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: byte[] iv = new byte[]{1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: test = new CTSTester(this' 2' new CbcBlockCipher(new DesEngine())' new ParametersWithIV(new KeyParameter(key1)' iv)' in1' out2);
Magic Number,Org.BouncyCastle.Crypto.Tests,CTSTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CTSTest.cs,Perform,The following statement contains a magic number: test = new CTSTester(this' 3' new CbcBlockCipher(new SkipjackEngine())' new ParametersWithIV(new KeyParameter(key2)' iv)' in2' out3);
Magic Number,Org.BouncyCastle.Crypto.Tests,CipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CipherTest.cs,bufferSizeCheck,The following statement contains a magic number: byte[] shortBuf = new byte[correctBuf.Length / 2];
Magic Number,Org.BouncyCastle.Crypto.Tests,KeyGenTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESTest.cs,PerformTest,The following statement contains a magic number: keyGen.Init(new KeyGenerationParameters(new SecureRandom()' 56));
Magic Number,Org.BouncyCastle.Crypto.Tests,KeyGenTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESTest.cs,PerformTest,The following statement contains a magic number: kB.Length != 8
Magic Number,Org.BouncyCastle.Crypto.Tests,DesParametersTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESTest.cs,PerformTest,The following statement contains a magic number: DesParameters.IsWeakKey(new byte[4]' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESedeTest.cs,PerformTest,The following statement contains a magic number: keyGen.Init(new KeyGenerationParameters(random' 112));
Magic Number,Org.BouncyCastle.Crypto.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESedeTest.cs,PerformTest,The following statement contains a magic number: kB.Length != 16
Magic Number,Org.BouncyCastle.Crypto.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESedeTest.cs,PerformTest,The following statement contains a magic number: keyGen.Init(new KeyGenerationParameters(random' 168));
Magic Number,Org.BouncyCastle.Crypto.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESedeTest.cs,PerformTest,The following statement contains a magic number: kB.Length != 24
Magic Number,Org.BouncyCastle.Crypto.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESedeTest.cs,PerformTest,The following statement contains a magic number: keyGen.Init(new KeyGenerationParameters(random' 200));
Magic Number,Org.BouncyCastle.Crypto.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DESedeTest.cs,PerformTest,The following statement contains a magic number: DesEdeParameters.IsWeakKey(new byte[4]' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DsaParameters dsaParameters = new DsaParameters(                  new BigInteger("86F5CA03DCFEB225063FF830A0C769B9DD9D6153AD91D7CE27F787C43278B447" +                                 "E6533B86B18BED6E8A48B784A14C252C5BE0DBF60B86D6385BD2F12FB763ED88" +                                 "73ABFD3F5BA2E0A8C0A59082EAC056935E529DAF7C610467899C77ADEDFC846C" +                                 "881870B7B19B2B58F9BE0521A17002E3BDD6B86685EE90B3D9A1B02B782B1779"' 16)'                  new BigInteger("996F967F6C8E388D9E28D01E205FBA957A5698B1"' 16)'                  new BigInteger("07B0F92546150B62514BB771E2A0C0CE387F03BDA6C56B505209FF25FD3C133D" +                                 "89BBCD97E904E09114D9A7DEFDEADFC9078EA544D2E401AEECC40BB9FBBF78FD" +                                 "87995A10A1C27CB7789B594BA7EFB5C4326A9FE59A070E136DB77175464ADCA4" +                                 "17BE5DCE2F40D10A46A3A3943F26AB7FD9C0398FF8C76EE0A56826A8A88F1DBD"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DsaParameters dsaParameters = new DsaParameters(                  new BigInteger("86F5CA03DCFEB225063FF830A0C769B9DD9D6153AD91D7CE27F787C43278B447" +                                 "E6533B86B18BED6E8A48B784A14C252C5BE0DBF60B86D6385BD2F12FB763ED88" +                                 "73ABFD3F5BA2E0A8C0A59082EAC056935E529DAF7C610467899C77ADEDFC846C" +                                 "881870B7B19B2B58F9BE0521A17002E3BDD6B86685EE90B3D9A1B02B782B1779"' 16)'                  new BigInteger("996F967F6C8E388D9E28D01E205FBA957A5698B1"' 16)'                  new BigInteger("07B0F92546150B62514BB771E2A0C0CE387F03BDA6C56B505209FF25FD3C133D" +                                 "89BBCD97E904E09114D9A7DEFDEADFC9078EA544D2E401AEECC40BB9FBBF78FD" +                                 "87995A10A1C27CB7789B594BA7EFB5C4326A9FE59A070E136DB77175464ADCA4" +                                 "17BE5DCE2F40D10A46A3A3943F26AB7FD9C0398FF8C76EE0A56826A8A88F1DBD"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DsaParameters dsaParameters = new DsaParameters(                  new BigInteger("86F5CA03DCFEB225063FF830A0C769B9DD9D6153AD91D7CE27F787C43278B447" +                                 "E6533B86B18BED6E8A48B784A14C252C5BE0DBF60B86D6385BD2F12FB763ED88" +                                 "73ABFD3F5BA2E0A8C0A59082EAC056935E529DAF7C610467899C77ADEDFC846C" +                                 "881870B7B19B2B58F9BE0521A17002E3BDD6B86685EE90B3D9A1B02B782B1779"' 16)'                  new BigInteger("996F967F6C8E388D9E28D01E205FBA957A5698B1"' 16)'                  new BigInteger("07B0F92546150B62514BB771E2A0C0CE387F03BDA6C56B505209FF25FD3C133D" +                                 "89BBCD97E904E09114D9A7DEFDEADFC9078EA544D2E401AEECC40BB9FBBF78FD" +                                 "87995A10A1C27CB7789B594BA7EFB5C4326A9FE59A070E136DB77175464ADCA4" +                                 "17BE5DCE2F40D10A46A3A3943F26AB7FD9C0398FF8C76EE0A56826A8A88F1DBD"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DsaPrivateKeyParameters privKey = new DsaPrivateKeyParameters(new BigInteger("411602CB19A6CCC34494D79D98EF1E7ED5AF25F7"' 16)' dsaParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha1Digest()' privKey' new BigInteger("2E1A0C2562B2912CAAF89186FB0F42001585DA55"' 16)' new BigInteger("29EFB6B0AFF2D7A68EB70CA313022253B9A88DF5"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha1Digest()' privKey' new BigInteger("2E1A0C2562B2912CAAF89186FB0F42001585DA55"' 16)' new BigInteger("29EFB6B0AFF2D7A68EB70CA313022253B9A88DF5"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha224Digest()' privKey' new BigInteger("4BC3B686AEA70145856814A6F1BB53346F02101E"' 16)' new BigInteger("410697B92295D994D21EDD2F4ADA85566F6F94C1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha224Digest()' privKey' new BigInteger("4BC3B686AEA70145856814A6F1BB53346F02101E"' 16)' new BigInteger("410697B92295D994D21EDD2F4ADA85566F6F94C1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha256Digest()' privKey' new BigInteger("81F2F5850BE5BC123C43F71A3033E9384611C545"' 16)' new BigInteger("4CDD914B65EB6C66A8AAAD27299BEE6B035F5E89"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha256Digest()' privKey' new BigInteger("81F2F5850BE5BC123C43F71A3033E9384611C545"' 16)' new BigInteger("4CDD914B65EB6C66A8AAAD27299BEE6B035F5E89"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha384Digest()' privKey' new BigInteger("07F2108557EE0E3921BC1774F1CA9B410B4CE65A"' 16)' new BigInteger("54DF70456C86FAC10FAB47C1949AB83F2C6F7595"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha384Digest()' privKey' new BigInteger("07F2108557EE0E3921BC1774F1CA9B410B4CE65A"' 16)' new BigInteger("54DF70456C86FAC10FAB47C1949AB83F2C6F7595"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha512Digest()' privKey' new BigInteger("16C3491F9B8C3FBBDD5E7A7B667057F0D8EE8E1B"' 16)' new BigInteger("02C36A127A7B89EDBB72E4FFBC71DABC7D4FC69C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha512Digest()' privKey' new BigInteger("16C3491F9B8C3FBBDD5E7A7B667057F0D8EE8E1B"' 16)' new BigInteger("02C36A127A7B89EDBB72E4FFBC71DABC7D4FC69C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha1Digest()' privKey' new BigInteger("42AB2052FD43E123F0607F115052A67DCD9C5C77"' 16)' new BigInteger("183916B0230D45B9931491D4C6B0BD2FB4AAF088"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha1Digest()' privKey' new BigInteger("42AB2052FD43E123F0607F115052A67DCD9C5C77"' 16)' new BigInteger("183916B0230D45B9931491D4C6B0BD2FB4AAF088"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha224Digest()' privKey' new BigInteger("6868E9964E36C1689F6037F91F28D5F2C30610F2"' 16)' new BigInteger("49CEC3ACDC83018C5BD2674ECAAD35B8CD22940F"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha224Digest()' privKey' new BigInteger("6868E9964E36C1689F6037F91F28D5F2C30610F2"' 16)' new BigInteger("49CEC3ACDC83018C5BD2674ECAAD35B8CD22940F"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha256Digest()' privKey' new BigInteger("22518C127299B0F6FDC9872B282B9E70D0790812"' 16)' new BigInteger("6837EC18F150D55DE95B5E29BE7AF5D01E4FE160"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha256Digest()' privKey' new BigInteger("22518C127299B0F6FDC9872B282B9E70D0790812"' 16)' new BigInteger("6837EC18F150D55DE95B5E29BE7AF5D01E4FE160"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha384Digest()' privKey' new BigInteger("854CF929B58D73C3CBFDC421E8D5430CD6DB5E66"' 16)' new BigInteger("91D0E0F53E22F898D158380676A871A157CDA622"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha384Digest()' privKey' new BigInteger("854CF929B58D73C3CBFDC421E8D5430CD6DB5E66"' 16)' new BigInteger("91D0E0F53E22F898D158380676A871A157CDA622"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha512Digest()' privKey' new BigInteger("8EA47E475BA8AC6F2D821DA3BD212D11A3DEB9A0"' 16)' new BigInteger("7C670C7AD72B6C050C109E1790008097125433E8"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha512Digest()' privKey' new BigInteger("8EA47E475BA8AC6F2D821DA3BD212D11A3DEB9A0"' 16)' new BigInteger("7C670C7AD72B6C050C109E1790008097125433E8"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: dsaParameters = new DsaParameters(                  new BigInteger("9DB6FB5951B66BB6FE1E140F1D2CE5502374161FD6538DF1648218642F0B5C48" +                      "C8F7A41AADFA187324B87674FA1822B00F1ECF8136943D7C55757264E5A1A44F" +                      "FE012E9936E00C1D3E9310B01C7D179805D3058B2A9F4BB6F9716BFE6117C6B5" +                      "B3CC4D9BE341104AD4A80AD6C94E005F4B993E14F091EB51743BF33050C38DE2" +                      "35567E1B34C3D6A5C0CEAA1A0F368213C3D19843D0B4B09DCB9FC72D39C8DE41" +                      "F1BF14D4BB4563CA28371621CAD3324B6A2D392145BEBFAC748805236F5CA2FE" +                      "92B871CD8F9C36D3292B5509CA8CAA77A2ADFC7BFD77DDA6F71125A7456FEA15" +                      "3E433256A2261C6A06ED3693797E7995FAD5AABBCFBE3EDA2741E375404AE25B"' 16)'                  new BigInteger("F2C3119374CE76C9356990B465374A17F23F9ED35089BD969F61C6DDE9998C1F"' 16)'                  new BigInteger("5C7FF6B06F8F143FE8288433493E4769C4D988ACE5BE25A0E24809670716C613" +                      "D7B0CEE6932F8FAA7C44D2CB24523DA53FBE4F6EC3595892D1AA58C4328A06C4" +                      "6A15662E7EAA703A1DECF8BBB2D05DBE2EB956C142A338661D10461C0D135472" +                      "085057F3494309FFA73C611F78B32ADBB5740C361C9F35BE90997DB2014E2EF5" +                      "AA61782F52ABEB8BD6432C4DD097BC5423B285DAFB60DC364E8161F4A2A35ACA" +                      "3A10B1C4D203CC76A470A33AFDCBDD92959859ABD8B56E1725252D78EAC66E71" +                      "BA9AE3F1DD2487199874393CD4D832186800654760E1E34C09E4D155179F9EC0" +                      "DC4473F996BDCE6EED1CABED8B6F116F7AD9CF505DF0F998E34AB27514B0FFE7"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: dsaParameters = new DsaParameters(                  new BigInteger("9DB6FB5951B66BB6FE1E140F1D2CE5502374161FD6538DF1648218642F0B5C48" +                      "C8F7A41AADFA187324B87674FA1822B00F1ECF8136943D7C55757264E5A1A44F" +                      "FE012E9936E00C1D3E9310B01C7D179805D3058B2A9F4BB6F9716BFE6117C6B5" +                      "B3CC4D9BE341104AD4A80AD6C94E005F4B993E14F091EB51743BF33050C38DE2" +                      "35567E1B34C3D6A5C0CEAA1A0F368213C3D19843D0B4B09DCB9FC72D39C8DE41" +                      "F1BF14D4BB4563CA28371621CAD3324B6A2D392145BEBFAC748805236F5CA2FE" +                      "92B871CD8F9C36D3292B5509CA8CAA77A2ADFC7BFD77DDA6F71125A7456FEA15" +                      "3E433256A2261C6A06ED3693797E7995FAD5AABBCFBE3EDA2741E375404AE25B"' 16)'                  new BigInteger("F2C3119374CE76C9356990B465374A17F23F9ED35089BD969F61C6DDE9998C1F"' 16)'                  new BigInteger("5C7FF6B06F8F143FE8288433493E4769C4D988ACE5BE25A0E24809670716C613" +                      "D7B0CEE6932F8FAA7C44D2CB24523DA53FBE4F6EC3595892D1AA58C4328A06C4" +                      "6A15662E7EAA703A1DECF8BBB2D05DBE2EB956C142A338661D10461C0D135472" +                      "085057F3494309FFA73C611F78B32ADBB5740C361C9F35BE90997DB2014E2EF5" +                      "AA61782F52ABEB8BD6432C4DD097BC5423B285DAFB60DC364E8161F4A2A35ACA" +                      "3A10B1C4D203CC76A470A33AFDCBDD92959859ABD8B56E1725252D78EAC66E71" +                      "BA9AE3F1DD2487199874393CD4D832186800654760E1E34C09E4D155179F9EC0" +                      "DC4473F996BDCE6EED1CABED8B6F116F7AD9CF505DF0F998E34AB27514B0FFE7"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: dsaParameters = new DsaParameters(                  new BigInteger("9DB6FB5951B66BB6FE1E140F1D2CE5502374161FD6538DF1648218642F0B5C48" +                      "C8F7A41AADFA187324B87674FA1822B00F1ECF8136943D7C55757264E5A1A44F" +                      "FE012E9936E00C1D3E9310B01C7D179805D3058B2A9F4BB6F9716BFE6117C6B5" +                      "B3CC4D9BE341104AD4A80AD6C94E005F4B993E14F091EB51743BF33050C38DE2" +                      "35567E1B34C3D6A5C0CEAA1A0F368213C3D19843D0B4B09DCB9FC72D39C8DE41" +                      "F1BF14D4BB4563CA28371621CAD3324B6A2D392145BEBFAC748805236F5CA2FE" +                      "92B871CD8F9C36D3292B5509CA8CAA77A2ADFC7BFD77DDA6F71125A7456FEA15" +                      "3E433256A2261C6A06ED3693797E7995FAD5AABBCFBE3EDA2741E375404AE25B"' 16)'                  new BigInteger("F2C3119374CE76C9356990B465374A17F23F9ED35089BD969F61C6DDE9998C1F"' 16)'                  new BigInteger("5C7FF6B06F8F143FE8288433493E4769C4D988ACE5BE25A0E24809670716C613" +                      "D7B0CEE6932F8FAA7C44D2CB24523DA53FBE4F6EC3595892D1AA58C4328A06C4" +                      "6A15662E7EAA703A1DECF8BBB2D05DBE2EB956C142A338661D10461C0D135472" +                      "085057F3494309FFA73C611F78B32ADBB5740C361C9F35BE90997DB2014E2EF5" +                      "AA61782F52ABEB8BD6432C4DD097BC5423B285DAFB60DC364E8161F4A2A35ACA" +                      "3A10B1C4D203CC76A470A33AFDCBDD92959859ABD8B56E1725252D78EAC66E71" +                      "BA9AE3F1DD2487199874393CD4D832186800654760E1E34C09E4D155179F9EC0" +                      "DC4473F996BDCE6EED1CABED8B6F116F7AD9CF505DF0F998E34AB27514B0FFE7"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: privKey = new DsaPrivateKeyParameters(new BigInteger("69C7548C21D0DFEA6B9A51C9EAD4E27C33D3B3F180316E5BCAB92C933F0E4DBC"' 16)' dsaParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha1Digest()' privKey' new BigInteger("3A1B2DBD7489D6ED7E608FD036C83AF396E290DBD602408E8677DAABD6E7445A"' 16)' new BigInteger("D26FCBA19FA3E3058FFC02CA1596CDBB6E0D20CB37B06054F7E36DED0CDBBCCF"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha1Digest()' privKey' new BigInteger("3A1B2DBD7489D6ED7E608FD036C83AF396E290DBD602408E8677DAABD6E7445A"' 16)' new BigInteger("D26FCBA19FA3E3058FFC02CA1596CDBB6E0D20CB37B06054F7E36DED0CDBBCCF"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha224Digest()' privKey' new BigInteger("DC9F4DEADA8D8FF588E98FED0AB690FFCE858DC8C79376450EB6B76C24537E2C"' 16)' new BigInteger("A65A9C3BC7BABE286B195D5DA68616DA8D47FA0097F36DD19F517327DC848CEC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha224Digest()' privKey' new BigInteger("DC9F4DEADA8D8FF588E98FED0AB690FFCE858DC8C79376450EB6B76C24537E2C"' 16)' new BigInteger("A65A9C3BC7BABE286B195D5DA68616DA8D47FA0097F36DD19F517327DC848CEC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha256Digest()' privKey' new BigInteger("EACE8BDBBE353C432A795D9EC556C6D021F7A03F42C36E9BC87E4AC7932CC809"' 16)' new BigInteger("7081E175455F9247B812B74583E9E94F9EA79BD640DC962533B0680793A38D53"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha256Digest()' privKey' new BigInteger("EACE8BDBBE353C432A795D9EC556C6D021F7A03F42C36E9BC87E4AC7932CC809"' 16)' new BigInteger("7081E175455F9247B812B74583E9E94F9EA79BD640DC962533B0680793A38D53"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha384Digest()' privKey' new BigInteger("B2DA945E91858834FD9BF616EBAC151EDBC4B45D27D0DD4A7F6A22739F45C00B"' 16)' new BigInteger("19048B63D9FD6BCA1D9BAE3664E1BCB97F7276C306130969F63F38FA8319021B"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha384Digest()' privKey' new BigInteger("B2DA945E91858834FD9BF616EBAC151EDBC4B45D27D0DD4A7F6A22739F45C00B"' 16)' new BigInteger("19048B63D9FD6BCA1D9BAE3664E1BCB97F7276C306130969F63F38FA8319021B"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha512Digest()' privKey' new BigInteger("2016ED092DC5FB669B8EFB3D1F31A91EECB199879BE0CF78F02BA062CB4C942E"' 16)' new BigInteger("D0C76F84B5F091E141572A639A4FB8C230807EEA7D55C8A154A224400AFF2351"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaSample(new Sha512Digest()' privKey' new BigInteger("2016ED092DC5FB669B8EFB3D1F31A91EECB199879BE0CF78F02BA062CB4C942E"' 16)' new BigInteger("D0C76F84B5F091E141572A639A4FB8C230807EEA7D55C8A154A224400AFF2351"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha1Digest()' privKey' new BigInteger("C18270A93CFC6063F57A4DFA86024F700D980E4CF4E2CB65A504397273D98EA0"' 16)' new BigInteger("414F22E5F31A8B6D33295C7539C1C1BA3A6160D7D68D50AC0D3A5BEAC2884FAA"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha1Digest()' privKey' new BigInteger("C18270A93CFC6063F57A4DFA86024F700D980E4CF4E2CB65A504397273D98EA0"' 16)' new BigInteger("414F22E5F31A8B6D33295C7539C1C1BA3A6160D7D68D50AC0D3A5BEAC2884FAA"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha224Digest()' privKey' new BigInteger("272ABA31572F6CC55E30BF616B7A265312018DD325BE031BE0CC82AA17870EA3"' 16)' new BigInteger("E9CC286A52CCE201586722D36D1E917EB96A4EBDB47932F9576AC645B3A60806"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha224Digest()' privKey' new BigInteger("272ABA31572F6CC55E30BF616B7A265312018DD325BE031BE0CC82AA17870EA3"' 16)' new BigInteger("E9CC286A52CCE201586722D36D1E917EB96A4EBDB47932F9576AC645B3A60806"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha256Digest()' privKey' new BigInteger("8190012A1969F9957D56FCCAAD223186F423398D58EF5B3CEFD5A4146A4476F0"' 16)' new BigInteger("7452A53F7075D417B4B013B278D1BB8BBD21863F5E7B1CEE679CF2188E1AB19E"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha256Digest()' privKey' new BigInteger("8190012A1969F9957D56FCCAAD223186F423398D58EF5B3CEFD5A4146A4476F0"' 16)' new BigInteger("7452A53F7075D417B4B013B278D1BB8BBD21863F5E7B1CEE679CF2188E1AB19E"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha384Digest()' privKey' new BigInteger("239E66DDBE8F8C230A3D071D601B6FFBDFB5901F94D444C6AF56F732BEB954BE"' 16)' new BigInteger("6BD737513D5E72FE85D1C750E0F73921FE299B945AAD1C802F15C26A43D34961"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha384Digest()' privKey' new BigInteger("239E66DDBE8F8C230A3D071D601B6FFBDFB5901F94D444C6AF56F732BEB954BE"' 16)' new BigInteger("6BD737513D5E72FE85D1C750E0F73921FE299B945AAD1C802F15C26A43D34961"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha512Digest()' privKey' new BigInteger("89EC4BB1400ECCFF8E7D9AA515CD1DE7803F2DAFF09693EE7FD1353E90A68307"' 16)' new BigInteger("C9F0BDABCC0D880BB137A994CC7F3980CE91CC10FAF529FC46565B15CEA854E1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestHMacDeterministic,The following statement contains a magic number: DoTestHMacDetDsaTest(new Sha512Digest()' privKey' new BigInteger("89EC4BB1400ECCFF8E7D9AA515CD1DE7803F2DAFF09693EE7FD1353E90A68307"' 16)' new BigInteger("C9F0BDABCC0D880BB137A994CC7F3980CE91CC10FAF529FC46565B15CEA854E1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: ECPrivateKeyParameters privKey = new ECPrivateKeyParameters(new BigInteger("6FAB034934E4C0FC9AE67F5B5659A9D7D1FEFD187EE09FD4"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("98C6BD12B23EAF5E2A2045132086BE3EB8EBD62ABF6698FF"' 16)' new BigInteger("57A22B07DEA9530F8DE9471B1DC6624472E8E2844BC25B64"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("98C6BD12B23EAF5E2A2045132086BE3EB8EBD62ABF6698FF"' 16)' new BigInteger("57A22B07DEA9530F8DE9471B1DC6624472E8E2844BC25B64"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("A1F00DAD97AEEC91C95585F36200C65F3C01812AA60378F5"' 16)' new BigInteger("E07EC1304C7C6C9DEBBE980B9692668F81D4DE7922A0F97A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("A1F00DAD97AEEC91C95585F36200C65F3C01812AA60378F5"' 16)' new BigInteger("E07EC1304C7C6C9DEBBE980B9692668F81D4DE7922A0F97A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("4B0B8CE98A92866A2820E20AA6B75B56382E0F9BFD5ECB55"' 16)' new BigInteger("CCDB006926EA9565CBADC840829D8C384E06DE1F1E381B85"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("4B0B8CE98A92866A2820E20AA6B75B56382E0F9BFD5ECB55"' 16)' new BigInteger("CCDB006926EA9565CBADC840829D8C384E06DE1F1E381B85"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("DA63BF0B9ABCF948FBB1E9167F136145F7A20426DCC287D5"' 16)' new BigInteger("C3AA2C960972BD7A2003A57E1C4C77F0578F8AE95E31EC5E"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("DA63BF0B9ABCF948FBB1E9167F136145F7A20426DCC287D5"' 16)' new BigInteger("C3AA2C960972BD7A2003A57E1C4C77F0578F8AE95E31EC5E"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("4D60C5AB1996BD848343B31C00850205E2EA6922DAC2E4B8"' 16)' new BigInteger("3F6E837448F027A1BF4B34E796E32A811CBB4050908D8F67"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("4D60C5AB1996BD848343B31C00850205E2EA6922DAC2E4B8"' 16)' new BigInteger("3F6E837448F027A1BF4B34E796E32A811CBB4050908D8F67"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("0F2141A0EBBC44D2E1AF90A50EBCFCE5E197B3B7D4DE036D"' 16)' new BigInteger("EB18BC9E1F3D7387500CB99CF5F7C157070A8961E38700B7"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("0F2141A0EBBC44D2E1AF90A50EBCFCE5E197B3B7D4DE036D"' 16)' new BigInteger("EB18BC9E1F3D7387500CB99CF5F7C157070A8961E38700B7"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("6945A1C1D1B2206B8145548F633BB61CEF04891BAF26ED34"' 16)' new BigInteger("B7FB7FDFC339C0B9BD61A9F5A8EAF9BE58FC5CBA2CB15293"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("6945A1C1D1B2206B8145548F633BB61CEF04891BAF26ED34"' 16)' new BigInteger("B7FB7FDFC339C0B9BD61A9F5A8EAF9BE58FC5CBA2CB15293"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("3A718BD8B4926C3B52EE6BBE67EF79B18CB6EB62B1AD97AE"' 16)' new BigInteger("5662E6848A4A19B1F1AE2F72ACD4B8BBE50F1EAC65D9124F"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("3A718BD8B4926C3B52EE6BBE67EF79B18CB6EB62B1AD97AE"' 16)' new BigInteger("5662E6848A4A19B1F1AE2F72ACD4B8BBE50F1EAC65D9124F"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("B234B60B4DB75A733E19280A7A6034BD6B1EE88AF5332367"' 16)' new BigInteger("7994090B2D59BB782BE57E74A44C9A1C700413F8ABEFE77A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("B234B60B4DB75A733E19280A7A6034BD6B1EE88AF5332367"' 16)' new BigInteger("7994090B2D59BB782BE57E74A44C9A1C700413F8ABEFE77A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("FE4F4AE86A58B6507946715934FE2D8FF9D95B6B098FE739"' 16)' new BigInteger("74CF5605C98FBA0E1EF34D4B5A1577A7DCF59457CAE52290"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("FE4F4AE86A58B6507946715934FE2D8FF9D95B6B098FE739"' 16)' new BigInteger("74CF5605C98FBA0E1EF34D4B5A1577A7DCF59457CAE52290"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("F220266E1105BFE3083E03EC7A3A654651F45E37167E88600BF257C1"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("22226F9D40A96E19C4A301CE5B74B115303C0F3A4FD30FC257FB57AC"' 16)' new BigInteger("66D1CDD83E3AF75605DD6E2FEFF196D30AA7ED7A2EDF7AF475403D69"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("22226F9D40A96E19C4A301CE5B74B115303C0F3A4FD30FC257FB57AC"' 16)' new BigInteger("66D1CDD83E3AF75605DD6E2FEFF196D30AA7ED7A2EDF7AF475403D69"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("1CDFE6662DDE1E4A1EC4CDEDF6A1F5A2FB7FBD9145C12113E6ABFD3E"' 16)' new BigInteger("A6694FD7718A21053F225D3F46197CA699D45006C06F871808F43EBC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("1CDFE6662DDE1E4A1EC4CDEDF6A1F5A2FB7FBD9145C12113E6ABFD3E"' 16)' new BigInteger("A6694FD7718A21053F225D3F46197CA699D45006C06F871808F43EBC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("61AA3DA010E8E8406C656BC477A7A7189895E7E840CDFE8FF42307BA"' 16)' new BigInteger("BC814050DAB5D23770879494F9E0A680DC1AF7161991BDE692B10101"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("61AA3DA010E8E8406C656BC477A7A7189895E7E840CDFE8FF42307BA"' 16)' new BigInteger("BC814050DAB5D23770879494F9E0A680DC1AF7161991BDE692B10101"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("0B115E5E36F0F9EC81F1325A5952878D745E19D7BB3EABFABA77E953"' 16)' new BigInteger("830F34CCDFE826CCFDC81EB4129772E20E122348A2BBD889A1B1AF1D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("0B115E5E36F0F9EC81F1325A5952878D745E19D7BB3EABFABA77E953"' 16)' new BigInteger("830F34CCDFE826CCFDC81EB4129772E20E122348A2BBD889A1B1AF1D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("074BD1D979D5F32BF958DDC61E4FB4872ADCAFEB2256497CDAC30397"' 16)' new BigInteger("A4CECA196C3D5A1FF31027B33185DC8EE43F288B21AB342E5D8EB084"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("074BD1D979D5F32BF958DDC61E4FB4872ADCAFEB2256497CDAC30397"' 16)' new BigInteger("A4CECA196C3D5A1FF31027B33185DC8EE43F288B21AB342E5D8EB084"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("DEAA646EC2AF2EA8AD53ED66B2E2DDAA49A12EFD8356561451F3E21C"' 16)' new BigInteger("95987796F6CF2062AB8135271DE56AE55366C045F6D9593F53787BD2"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("DEAA646EC2AF2EA8AD53ED66B2E2DDAA49A12EFD8356561451F3E21C"' 16)' new BigInteger("95987796F6CF2062AB8135271DE56AE55366C045F6D9593F53787BD2"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("C441CE8E261DED634E4CF84910E4C5D1D22C5CF3B732BB204DBEF019"' 16)' new BigInteger("902F42847A63BDC5F6046ADA114953120F99442D76510150F372A3F4"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("C441CE8E261DED634E4CF84910E4C5D1D22C5CF3B732BB204DBEF019"' 16)' new BigInteger("902F42847A63BDC5F6046ADA114953120F99442D76510150F372A3F4"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("AD04DDE87B84747A243A631EA47A1BA6D1FAA059149AD2440DE6FBA6"' 16)' new BigInteger("178D49B1AE90E3D8B629BE3DB5683915F4E8C99FDF6E666CF37ADCFD"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("AD04DDE87B84747A243A631EA47A1BA6D1FAA059149AD2440DE6FBA6"' 16)' new BigInteger("178D49B1AE90E3D8B629BE3DB5683915F4E8C99FDF6E666CF37ADCFD"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("389B92682E399B26518A95506B52C03BC9379A9DADF3391A21FB0EA4"' 16)' new BigInteger("414A718ED3249FF6DBC5B50C27F71F01F070944DA22AB1F78F559AAB"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("389B92682E399B26518A95506B52C03BC9379A9DADF3391A21FB0EA4"' 16)' new BigInteger("414A718ED3249FF6DBC5B50C27F71F01F070944DA22AB1F78F559AAB"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("049F050477C5ADD858CAC56208394B5A55BAEBBE887FDF765047C17C"' 16)' new BigInteger("077EB13E7005929CEFA3CD0403C7CDCC077ADF4E44F3C41B2F60ECFF"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("049F050477C5ADD858CAC56208394B5A55BAEBBE887FDF765047C17C"' 16)' new BigInteger("077EB13E7005929CEFA3CD0403C7CDCC077ADF4E44F3C41B2F60ECFF"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("C9AFA9D845BA75166B5C215767B1D6934E50C3DB36E89B127B8A622B120F6721"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("61340C88C3AAEBEB4F6D667F672CA9759A6CCAA9FA8811313039EE4A35471D32"' 16)' new BigInteger("6D7F147DAC089441BB2E2FE8F7A3FA264B9C475098FDCF6E00D7C996E1B8B7EB"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("61340C88C3AAEBEB4F6D667F672CA9759A6CCAA9FA8811313039EE4A35471D32"' 16)' new BigInteger("6D7F147DAC089441BB2E2FE8F7A3FA264B9C475098FDCF6E00D7C996E1B8B7EB"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("53B2FFF5D1752B2C689DF257C04C40A587FABABB3F6FC2702F1343AF7CA9AA3F"' 16)' new BigInteger("B9AFB64FDC03DC1A131C7D2386D11E349F070AA432A4ACC918BEA988BF75C74C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("53B2FFF5D1752B2C689DF257C04C40A587FABABB3F6FC2702F1343AF7CA9AA3F"' 16)' new BigInteger("B9AFB64FDC03DC1A131C7D2386D11E349F070AA432A4ACC918BEA988BF75C74C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("EFD48B2AACB6A8FD1140DD9CD45E81D69D2C877B56AAF991C34D0EA84EAF3716"' 16)' new BigInteger("F7CB1C942D657C41D436C7A1B6E29F65F3E900DBB9AFF4064DC4AB2F843ACDA8"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("EFD48B2AACB6A8FD1140DD9CD45E81D69D2C877B56AAF991C34D0EA84EAF3716"' 16)' new BigInteger("F7CB1C942D657C41D436C7A1B6E29F65F3E900DBB9AFF4064DC4AB2F843ACDA8"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("0EAFEA039B20E9B42309FB1D89E213057CBF973DC0CFC8F129EDDDC800EF7719"' 16)' new BigInteger("4861F0491E6998B9455193E34E7B0D284DDD7149A74B95B9261F13ABDE940954"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("0EAFEA039B20E9B42309FB1D89E213057CBF973DC0CFC8F129EDDDC800EF7719"' 16)' new BigInteger("4861F0491E6998B9455193E34E7B0D284DDD7149A74B95B9261F13ABDE940954"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("8496A60B5E9B47C825488827E0495B0E3FA109EC4568FD3F8D1097678EB97F00"' 16)' new BigInteger("2362AB1ADBE2B8ADF9CB9EDAB740EA6049C028114F2460F96554F61FAE3302FE"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("8496A60B5E9B47C825488827E0495B0E3FA109EC4568FD3F8D1097678EB97F00"' 16)' new BigInteger("2362AB1ADBE2B8ADF9CB9EDAB740EA6049C028114F2460F96554F61FAE3302FE"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("0CBCC86FD6ABD1D99E703E1EC50069EE5C0B4BA4B9AC60E409E8EC5910D81A89"' 16)' new BigInteger("01B9D7B73DFAA60D5651EC4591A0136F87653E0FD780C3B1BC872FFDEAE479B1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("0CBCC86FD6ABD1D99E703E1EC50069EE5C0B4BA4B9AC60E409E8EC5910D81A89"' 16)' new BigInteger("01B9D7B73DFAA60D5651EC4591A0136F87653E0FD780C3B1BC872FFDEAE479B1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("C37EDB6F0AE79D47C3C27E962FA269BB4F441770357E114EE511F662EC34A692"' 16)' new BigInteger("C820053A05791E521FCAAD6042D40AEA1D6B1A540138558F47D0719800E18F2D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("C37EDB6F0AE79D47C3C27E962FA269BB4F441770357E114EE511F662EC34A692"' 16)' new BigInteger("C820053A05791E521FCAAD6042D40AEA1D6B1A540138558F47D0719800E18F2D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("F1ABB023518351CD71D881567B1EA663ED3EFCF6C5132B354F28D3B0B7D38367"' 16)' new BigInteger("019F4113742A2B14BD25926B49C649155F267E60D3814B4C0CC84250E46F0083"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("F1ABB023518351CD71D881567B1EA663ED3EFCF6C5132B354F28D3B0B7D38367"' 16)' new BigInteger("019F4113742A2B14BD25926B49C649155F267E60D3814B4C0CC84250E46F0083"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("83910E8B48BB0C74244EBDF7F07A1C5413D61472BD941EF3920E623FBCCEBEB6"' 16)' new BigInteger("8DDBEC54CF8CD5874883841D712142A56A8D0F218F5003CB0296B6B509619F2C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("83910E8B48BB0C74244EBDF7F07A1C5413D61472BD941EF3920E623FBCCEBEB6"' 16)' new BigInteger("8DDBEC54CF8CD5874883841D712142A56A8D0F218F5003CB0296B6B509619F2C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("461D93F31B6540894788FD206C07CFA0CC35F46FA3C91816FFF1040AD1581A04"' 16)' new BigInteger("39AF9F15DE0DB8D97E72719C74820D304CE5226E32DEDAE67519E840D1194E55"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("461D93F31B6540894788FD206C07CFA0CC35F46FA3C91816FFF1040AD1581A04"' 16)' new BigInteger("39AF9F15DE0DB8D97E72719C74820D304CE5226E32DEDAE67519E840D1194E55"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("6B9D3DAD2E1B8C1C05B19875B6659F4DE23C3B667BF297BA9AA47740787137D8" +                                                                  "96D5724E4C70A825F872C9EA60D2EDF5"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey' new BigInteger("EC748D839243D6FBEF4FC5C4859A7DFFD7F3ABDDF72014540C16D73309834FA3" +                                                                          "7B9BA002899F6FDA3A4A9386790D4EB2"' 16)'                                                                  new BigInteger("A3BCFA947BEEF4732BF247AC17F71676CB31A847B9FF0CBC9C9ED4C1A5B3FACF" +                                                                          "26F49CA031D4857570CCB5CA4424A443"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey' new BigInteger("EC748D839243D6FBEF4FC5C4859A7DFFD7F3ABDDF72014540C16D73309834FA3" +                                                                          "7B9BA002899F6FDA3A4A9386790D4EB2"' 16)'                                                                  new BigInteger("A3BCFA947BEEF4732BF247AC17F71676CB31A847B9FF0CBC9C9ED4C1A5B3FACF" +                                                                          "26F49CA031D4857570CCB5CA4424A443"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("42356E76B55A6D9B4631C865445DBE54E056D3B3431766D0509244793C3F9366" +                                                                              "450F76EE3DE43F5A125333A6BE060122"' 16)'                                                                    new BigInteger("9DA0C81787064021E78DF658F2FBB0B042BF304665DB721F077A4298B095E483" +                                                                              "4C082C03D83028EFBF93A3C23940CA8D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("42356E76B55A6D9B4631C865445DBE54E056D3B3431766D0509244793C3F9366" +                                                                              "450F76EE3DE43F5A125333A6BE060122"' 16)'                                                                    new BigInteger("9DA0C81787064021E78DF658F2FBB0B042BF304665DB721F077A4298B095E483" +                                                                              "4C082C03D83028EFBF93A3C23940CA8D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("21B13D1E013C7FA1392D03C5F99AF8B30C570C6F98D4EA8E354B63A21D3DAA33" +                                                                              "BDE1E888E63355D92FA2B3C36D8FB2CD"' 16)'                                                                      new BigInteger("F3AA443FB107745BF4BD77CB3891674632068A10CA67E3D45DB2266FA7D1FEEB" +                                                                              "EFDC63ECCD1AC42EC0CB8668A4FA0AB0"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("21B13D1E013C7FA1392D03C5F99AF8B30C570C6F98D4EA8E354B63A21D3DAA33" +                                                                              "BDE1E888E63355D92FA2B3C36D8FB2CD"' 16)'                                                                      new BigInteger("F3AA443FB107745BF4BD77CB3891674632068A10CA67E3D45DB2266FA7D1FEEB" +                                                                              "EFDC63ECCD1AC42EC0CB8668A4FA0AB0"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("94EDBB92A5ECB8AAD4736E56C691916B3F88140666CE9FA73D64C4EA95AD133C" +                                                                              "81A648152E44ACF96E36DD1E80FABE46"' 16)'                                                                      new BigInteger("99EF4AEB15F178CEA1FE40DB2603138F130E740A19624526203B6351D0A3A94F" +                                                                              "A329C145786E679E7B82C71A38628AC8"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("94EDBB92A5ECB8AAD4736E56C691916B3F88140666CE9FA73D64C4EA95AD133C" +                                                                              "81A648152E44ACF96E36DD1E80FABE46"' 16)'                                                                      new BigInteger("99EF4AEB15F178CEA1FE40DB2603138F130E740A19624526203B6351D0A3A94F" +                                                                              "A329C145786E679E7B82C71A38628AC8"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("ED0959D5880AB2D869AE7F6C2915C6D60F96507F9CB3E047C0046861DA4A799C" +                                                                              "FE30F35CC900056D7C99CD7882433709"' 16)'                                                                      new BigInteger("512C8CCEEE3890A84058CE1E22DBC2198F42323CE8ACA9135329F03C068E5112" +                                                                              "DC7CC3EF3446DEFCEB01A45C2667FDD5"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("ED0959D5880AB2D869AE7F6C2915C6D60F96507F9CB3E047C0046861DA4A799C" +                                                                              "FE30F35CC900056D7C99CD7882433709"' 16)'                                                                      new BigInteger("512C8CCEEE3890A84058CE1E22DBC2198F42323CE8ACA9135329F03C068E5112" +                                                                              "DC7CC3EF3446DEFCEB01A45C2667FDD5"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("4BC35D3A50EF4E30576F58CD96CE6BF638025EE624004A1F7789A8B8E43D0678" +                                                                          "ACD9D29876DAF46638645F7F404B11C7"' 16)'                                                                  new BigInteger("D5A6326C494ED3FF614703878961C0FDE7B2C278F9A65FD8C4B7186201A29916" +                                                                          "95BA1C84541327E966FA7B50F7382282"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("4BC35D3A50EF4E30576F58CD96CE6BF638025EE624004A1F7789A8B8E43D0678" +                                                                          "ACD9D29876DAF46638645F7F404B11C7"' 16)'                                                                  new BigInteger("D5A6326C494ED3FF614703878961C0FDE7B2C278F9A65FD8C4B7186201A29916" +                                                                          "95BA1C84541327E966FA7B50F7382282"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("E8C9D0B6EA72A0E7837FEA1D14A1A9557F29FAA45D3E7EE888FC5BF954B5E624" +                                                                          "64A9A817C47FF78B8C11066B24080E72"' 16)'                                                                  new BigInteger("07041D4A7A0379AC7232FF72E6F77B6DDB8F09B16CCE0EC3286B2BD43FA8C614" +                                                                          "1C53EA5ABEF0D8231077A04540A96B66"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("E8C9D0B6EA72A0E7837FEA1D14A1A9557F29FAA45D3E7EE888FC5BF954B5E624" +                                                                          "64A9A817C47FF78B8C11066B24080E72"' 16)'                                                                  new BigInteger("07041D4A7A0379AC7232FF72E6F77B6DDB8F09B16CCE0EC3286B2BD43FA8C614" +                                                                          "1C53EA5ABEF0D8231077A04540A96B66"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("6D6DEFAC9AB64DABAFE36C6BF510352A4CC27001263638E5B16D9BB51D451559" +                                                                          "F918EEDAF2293BE5B475CC8F0188636B"' 16)'                                                                  new BigInteger("2D46F3BECBCC523D5F1A1256BF0C9B024D879BA9E838144C8BA6BAEB4B53B47D" +                                                                          "51AB373F9845C0514EEFB14024787265"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("6D6DEFAC9AB64DABAFE36C6BF510352A4CC27001263638E5B16D9BB51D451559" +                                                                          "F918EEDAF2293BE5B475CC8F0188636B"' 16)'                                                                  new BigInteger("2D46F3BECBCC523D5F1A1256BF0C9B024D879BA9E838144C8BA6BAEB4B53B47D" +                                                                          "51AB373F9845C0514EEFB14024787265"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("8203B63D3C853E8D77227FB377BCF7B7B772E97892A80F36AB775D509D7A5FEB" +                                                                          "0542A7F0812998DA8F1DD3CA3CF023DB"' 16)'                                                                  new BigInteger("DDD0760448D42D8A43AF45AF836FCE4DE8BE06B485E9B61B827C2F13173923E0" +                                                                          "6A739F040649A667BF3B828246BAA5A5"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("8203B63D3C853E8D77227FB377BCF7B7B772E97892A80F36AB775D509D7A5FEB" +                                                                          "0542A7F0812998DA8F1DD3CA3CF023DB"' 16)'                                                                  new BigInteger("DDD0760448D42D8A43AF45AF836FCE4DE8BE06B485E9B61B827C2F13173923E0" +                                                                          "6A739F040649A667BF3B828246BAA5A5"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("A0D5D090C9980FAF3C2CE57B7AE951D31977DD11C775D314AF55F76C676447D0" +                                                                          "6FB6495CD21B4B6E340FC236584FB277"' 16)'                                                                  new BigInteger("976984E59B4C77B0E8E4460DCA3D9F20E07B9BB1F63BEEFAF576F6B2E8B22463" +                                                                          "4A2092CD3792E0159AD9CEE37659C736"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("A0D5D090C9980FAF3C2CE57B7AE951D31977DD11C775D314AF55F76C676447D0" +                                                                          "6FB6495CD21B4B6E340FC236584FB277"' 16)'                                                                  new BigInteger("976984E59B4C77B0E8E4460DCA3D9F20E07B9BB1F63BEEFAF576F6B2E8B22463" +                                                                          "4A2092CD3792E0159AD9CEE37659C736"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("0FAD06DAA62BA3B25D2FB40133DA757205DE67F5BB0018FEE8C86E1B68C7E75C" +                                                                  "AA896EB32F1F47C70855836A6D16FCC1466F6D8FBEC67DB89EC0C08B0E996B83" +                                                                  "538"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("0343B6EC45728975EA5CBA6659BBB6062A5FF89EEA58BE3C80B619F322C87910" +                                                                                   "FE092F7D45BB0F8EEE01ED3F20BABEC079D202AE677B243AB40B5431D497C55D" +                                                                                   "75D"' 16)'                                                                    new BigInteger("0E7B0E675A9B24413D448B8CC119D2BF7B2D2DF032741C096634D6D65D0DBE3D" +                                                                                   "5694625FB9E8104D3B842C1B0E2D0B98BEA19341E8676AEF66AE4EBA3D5475D5" +                                                                                   "D16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("0343B6EC45728975EA5CBA6659BBB6062A5FF89EEA58BE3C80B619F322C87910" +                                                                                   "FE092F7D45BB0F8EEE01ED3F20BABEC079D202AE677B243AB40B5431D497C55D" +                                                                                   "75D"' 16)'                                                                    new BigInteger("0E7B0E675A9B24413D448B8CC119D2BF7B2D2DF032741C096634D6D65D0DBE3D" +                                                                                   "5694625FB9E8104D3B842C1B0E2D0B98BEA19341E8676AEF66AE4EBA3D5475D5" +                                                                                   "D16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("1776331CFCDF927D666E032E00CF776187BC9FDD8E69D0DABB4109FFE1B5E2A3" +                                                                                  "0715F4CC923A4A5E94D2503E9ACFED92857B7F31D7152E0F8C00C15FF3D87E2E" +                                                                                  "D2E"' 16)'                                                                    new BigInteger("050CB5265417FE2320BBB5A122B8E1A32BD699089851128E360E620A30C7E17B" +                                                                                  "A41A666AF126CE100E5799B153B60528D5300D08489CA9178FB610A2006C254B" +                                                                                  "41F"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("1776331CFCDF927D666E032E00CF776187BC9FDD8E69D0DABB4109FFE1B5E2A3" +                                                                                  "0715F4CC923A4A5E94D2503E9ACFED92857B7F31D7152E0F8C00C15FF3D87E2E" +                                                                                  "D2E"' 16)'                                                                    new BigInteger("050CB5265417FE2320BBB5A122B8E1A32BD699089851128E360E620A30C7E17B" +                                                                                  "A41A666AF126CE100E5799B153B60528D5300D08489CA9178FB610A2006C254B" +                                                                                  "41F"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("1511BB4D675114FE266FC4372B87682BAECC01D3CC62CF2303C92B3526012659" +                                                                                   "D16876E25C7C1E57648F23B73564D67F61C6F14D527D54972810421E7D87589E" +                                                                                   "1A7"' 16)'                                                                    new BigInteger("04A171143A83163D6DF460AAF61522695F207A58B95C0644D87E52AA1A347916" +                                                                                    "E4F7A72930B1BC06DBE22CE3F58264AFD23704CBB63B29B931F7DE6C9D949A7E" +                                                                                    "CFC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("1511BB4D675114FE266FC4372B87682BAECC01D3CC62CF2303C92B3526012659" +                                                                                   "D16876E25C7C1E57648F23B73564D67F61C6F14D527D54972810421E7D87589E" +                                                                                   "1A7"' 16)'                                                                    new BigInteger("04A171143A83163D6DF460AAF61522695F207A58B95C0644D87E52AA1A347916" +                                                                                    "E4F7A72930B1BC06DBE22CE3F58264AFD23704CBB63B29B931F7DE6C9D949A7E" +                                                                                    "CFC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("1EA842A0E17D2DE4F92C15315C63DDF72685C18195C2BB95E572B9C5136CA4B4" +                                                                                  "B576AD712A52BE9730627D16054BA40CC0B8D3FF035B12AE75168397F5D50C67" +                                                                                  "451"' 16)'                                                                    new BigInteger("1F21A3CEE066E1961025FB048BD5FE2B7924D0CD797BABE0A83B66F1E35EEAF5" +                                                                                    "FDE143FA85DC394A7DEE766523393784484BDF3E00114A1C857CDE1AA203DB65" +                                                                                    "D61"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("1EA842A0E17D2DE4F92C15315C63DDF72685C18195C2BB95E572B9C5136CA4B4" +                                                                                  "B576AD712A52BE9730627D16054BA40CC0B8D3FF035B12AE75168397F5D50C67" +                                                                                  "451"' 16)'                                                                    new BigInteger("1F21A3CEE066E1961025FB048BD5FE2B7924D0CD797BABE0A83B66F1E35EEAF5" +                                                                                    "FDE143FA85DC394A7DEE766523393784484BDF3E00114A1C857CDE1AA203DB65" +                                                                                    "D61"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0C328FAFCBD79DD77850370C46325D987CB525569FB63C5D3BC53950E6D4C5F1" +                                                                                  "74E25A1EE9017B5D450606ADD152B534931D7D4E8455CC91F9B15BF05EC36E37" +                                                                                  "7FA"' 16)'                                                                    new BigInteger("0617CCE7CF5064806C467F678D3B4080D6F1CC50AF26CA209417308281B68AF2" +                                                                                    "82623EAA63E5B5C0723D8B8C37FF0777B1A20F8CCB1DCCC43997F1EE0E44DA4A" +                                                                                    "67A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0C328FAFCBD79DD77850370C46325D987CB525569FB63C5D3BC53950E6D4C5F1" +                                                                                  "74E25A1EE9017B5D450606ADD152B534931D7D4E8455CC91F9B15BF05EC36E37" +                                                                                  "7FA"' 16)'                                                                    new BigInteger("0617CCE7CF5064806C467F678D3B4080D6F1CC50AF26CA209417308281B68AF2" +                                                                                    "82623EAA63E5B5C0723D8B8C37FF0777B1A20F8CCB1DCCC43997F1EE0E44DA4A" +                                                                                    "67A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("13BAD9F29ABE20DE37EBEB823C252CA0F63361284015A3BF430A46AAA80B87B0" +                                                                          "693F0694BD88AFE4E661FC33B094CD3B7963BED5A727ED8BD6A3A202ABE009D0" +                                                                          "367"' 16)'                                                                    new BigInteger("1E9BB81FF7944CA409AD138DBBEE228E1AFCC0C890FC78EC8604639CB0DBDC90" +                                                                        "F717A99EAD9D272855D00162EE9527567DD6A92CBD629805C0445282BBC91679" +                                                                        "7FF"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("13BAD9F29ABE20DE37EBEB823C252CA0F63361284015A3BF430A46AAA80B87B0" +                                                                          "693F0694BD88AFE4E661FC33B094CD3B7963BED5A727ED8BD6A3A202ABE009D0" +                                                                          "367"' 16)'                                                                    new BigInteger("1E9BB81FF7944CA409AD138DBBEE228E1AFCC0C890FC78EC8604639CB0DBDC90" +                                                                        "F717A99EAD9D272855D00162EE9527567DD6A92CBD629805C0445282BBC91679" +                                                                        "7FF"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("1C7ED902E123E6815546065A2C4AF977B22AA8EADDB68B2C1110E7EA44D42086" +                                                                          "BFE4A34B67DDC0E17E96536E358219B23A706C6A6E16BA77B65E1C595D43CAE1" +                                                                          "7FB"' 16)'                                                                    new BigInteger("177336676304FCB343CE028B38E7B4FBA76C1C1B277DA18CAD2A8478B2A9A9F5" +                                                                        "BEC0F3BA04F35DB3E4263569EC6AADE8C92746E4C82F8299AE1B8F1739F8FD51" +                                                                        "9A4"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("1C7ED902E123E6815546065A2C4AF977B22AA8EADDB68B2C1110E7EA44D42086" +                                                                          "BFE4A34B67DDC0E17E96536E358219B23A706C6A6E16BA77B65E1C595D43CAE1" +                                                                          "7FB"' 16)'                                                                    new BigInteger("177336676304FCB343CE028B38E7B4FBA76C1C1B277DA18CAD2A8478B2A9A9F5" +                                                                        "BEC0F3BA04F35DB3E4263569EC6AADE8C92746E4C82F8299AE1B8F1739F8FD51" +                                                                        "9A4"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("00E871C4A14F993C6C7369501900C4BC1E9C7B0B4BA44E04868B30B41D807104" +                                                                          "2EB28C4C250411D0CE08CD197E4188EA4876F279F90B3D8D74A3C76E6F1E4656" +                                                                          "AA8"' 16)'                                                                    new BigInteger("0CD52DBAA33B063C3A6CD8058A1FB0A46A4754B034FCC644766CA14DA8CA5CA9" +                                                                        "FDE00E88C1AD60CCBA759025299079D7A427EC3CC5B619BFBC828E7769BCD694" +                                                                        "E86"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("00E871C4A14F993C6C7369501900C4BC1E9C7B0B4BA44E04868B30B41D807104" +                                                                          "2EB28C4C250411D0CE08CD197E4188EA4876F279F90B3D8D74A3C76E6F1E4656" +                                                                          "AA8"' 16)'                                                                    new BigInteger("0CD52DBAA33B063C3A6CD8058A1FB0A46A4754B034FCC644766CA14DA8CA5CA9" +                                                                        "FDE00E88C1AD60CCBA759025299079D7A427EC3CC5B619BFBC828E7769BCD694" +                                                                        "E86"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("14BEE21A18B6D8B3C93FAB08D43E739707953244FDBE924FA926D76669E7AC8C" +                                                                          "89DF62ED8975C2D8397A65A49DCC09F6B0AC62272741924D479354D74FF60755" +                                                                          "78C"' 16)'                                                                    new BigInteger("133330865C067A0EAF72362A65E2D7BC4E461E8C8995C3B6226A21BD1AA78F0E" +                                                                        "D94FE536A0DCA35534F0CD1510C41525D163FE9D74D134881E35141ED5E8E95B" +                                                                        "979"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("14BEE21A18B6D8B3C93FAB08D43E739707953244FDBE924FA926D76669E7AC8C" +                                                                          "89DF62ED8975C2D8397A65A49DCC09F6B0AC62272741924D479354D74FF60755" +                                                                          "78C"' 16)'                                                                    new BigInteger("133330865C067A0EAF72362A65E2D7BC4E461E8C8995C3B6226A21BD1AA78F0E" +                                                                        "D94FE536A0DCA35534F0CD1510C41525D163FE9D74D134881E35141ED5E8E95B" +                                                                        "979"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("13E99020ABF5CEE7525D16B69B229652AB6BDF2AFFCAEF38773B4B7D08725F10" +                                                                          "CDB93482FDCC54EDCEE91ECA4166B2A7C6265EF0CE2BD7051B7CEF945BABD47E" +                                                                          "E6D"' 16)'                                                                    new BigInteger("1FBD0013C674AA79CB39849527916CE301C66EA7CE8B80682786AD60F98F7E78" +                                                                        "A19CA69EFF5C57400E3B3A0AD66CE0978214D13BAF4E9AC60752F7B155E2DE4D" +                                                                        "CE3"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("13E99020ABF5CEE7525D16B69B229652AB6BDF2AFFCAEF38773B4B7D08725F10" +                                                                          "CDB93482FDCC54EDCEE91ECA4166B2A7C6265EF0CE2BD7051B7CEF945BABD47E" +                                                                          "E6D"' 16)'                                                                    new BigInteger("1FBD0013C674AA79CB39849527916CE301C66EA7CE8B80682786AD60F98F7E78" +                                                                        "A19CA69EFF5C57400E3B3A0AD66CE0978214D13BAF4E9AC60752F7B155E2DE4D" +                                                                        "CE3"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("35318FC447D48D7E6BC93B48617DDDEDF26AA658F"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("153FEBD179A69B6122DEBF5BC61EB947B24C93526"' 16)' new BigInteger("37AC9C670F8CF18045049BAE7DD35553545C19E49"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("153FEBD179A69B6122DEBF5BC61EB947B24C93526"' 16)' new BigInteger("37AC9C670F8CF18045049BAE7DD35553545C19E49"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("0A379E69C44F9C16EA3215EA39EB1A9B5D58CC955"' 16)' new BigInteger("04BAFF5308DA2A7FE2C1742769265AD3ED1D24E74"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("0A379E69C44F9C16EA3215EA39EB1A9B5D58CC955"' 16)' new BigInteger("04BAFF5308DA2A7FE2C1742769265AD3ED1D24E74"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("134E00F78FC1CB9501675D91C401DE20DDF228CDC"' 16)' new BigInteger("373273AEC6C36CB7BAFBB1903A5F5EA6A1D50B624"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("134E00F78FC1CB9501675D91C401DE20DDF228CDC"' 16)' new BigInteger("373273AEC6C36CB7BAFBB1903A5F5EA6A1D50B624"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("29430B935AF8E77519B0CA4F6903B0B82E6A21A66"' 16)' new BigInteger("1EA1415306E9353FA5AA54BC7C2581DFBB888440D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("29430B935AF8E77519B0CA4F6903B0B82E6A21A66"' 16)' new BigInteger("1EA1415306E9353FA5AA54BC7C2581DFBB888440D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0B2F177A99F9DF2D51CCAF55F015F326E4B65E7A0"' 16)' new BigInteger("0DF1FB4487E9B120C5E970EFE48F55E406306C3A1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0B2F177A99F9DF2D51CCAF55F015F326E4B65E7A0"' 16)' new BigInteger("0DF1FB4487E9B120C5E970EFE48F55E406306C3A1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("256D4079C6C7169B8BC92529D701776A269D56308"' 16)' new BigInteger("341D3FFEC9F1EB6A6ACBE88E3C86A1C8FDEB8B8E1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("256D4079C6C7169B8BC92529D701776A269D56308"' 16)' new BigInteger("341D3FFEC9F1EB6A6ACBE88E3C86A1C8FDEB8B8E1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("28ECC6F1272CE80EA59DCF32F7AC2D861BA803393"' 16)' new BigInteger("0AD4AE2C06E60183C1567D2B82F19421FE3053CE2"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("28ECC6F1272CE80EA59DCF32F7AC2D861BA803393"' 16)' new BigInteger("0AD4AE2C06E60183C1567D2B82F19421FE3053CE2"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("227DF377B3FA50F90C1CB3CDCBBDBA552C1D35104"' 16)' new BigInteger("1F7BEAD92583FE920D353F368C1960D0E88B46A56"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("227DF377B3FA50F90C1CB3CDCBBDBA552C1D35104"' 16)' new BigInteger("1F7BEAD92583FE920D353F368C1960D0E88B46A56"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("11811DAFEEA441845B6118A0DFEE8A0061231337D"' 16)' new BigInteger("36258301865EE48C5C6F91D63F62695002AB55B57"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("11811DAFEEA441845B6118A0DFEE8A0061231337D"' 16)' new BigInteger("36258301865EE48C5C6F91D63F62695002AB55B57"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("3B6BB95CA823BE2ED8E3972FF516EB8972D765571"' 16)' new BigInteger("13DC6F420628969DF900C3FCC48220B38BE24A541"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("3B6BB95CA823BE2ED8E3972FF516EB8972D765571"' 16)' new BigInteger("13DC6F420628969DF900C3FCC48220B38BE24A541"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("07ADC13DD5BF34D1DDEEB50B2CE23B5F5E6D18067306D60C5F6FF11E5D3"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("015CC6FD78BB06E0878E71465515EA5A21A2C18E6FC77B4B158DBEB3944"' 16)' new BigInteger("0822A4A6C2EB2DF213A5E90BF40377956365EE8C4B4A5A4E2EB9270CB6A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("015CC6FD78BB06E0878E71465515EA5A21A2C18E6FC77B4B158DBEB3944"' 16)' new BigInteger("0822A4A6C2EB2DF213A5E90BF40377956365EE8C4B4A5A4E2EB9270CB6A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("05D9920B53471148E10502AB49AB7A3F11084820A074FD89883CF51BC1A"' 16)' new BigInteger("04D3938900C0A9AAA7080D1DFEB56CFB0FADABE4214536C7ED5117ED13A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("05D9920B53471148E10502AB49AB7A3F11084820A074FD89883CF51BC1A"' 16)' new BigInteger("04D3938900C0A9AAA7080D1DFEB56CFB0FADABE4214536C7ED5117ED13A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("0A797F3B8AEFCE7456202DF1E46CCC291EA5A49DA3D4BDDA9A4B62D5E0D"' 16)' new BigInteger("01F6F81DA55C22DA4152134C661588F4BD6F82FDBAF0C5877096B070DC2"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("0A797F3B8AEFCE7456202DF1E46CCC291EA5A49DA3D4BDDA9A4B62D5E0D"' 16)' new BigInteger("01F6F81DA55C22DA4152134C661588F4BD6F82FDBAF0C5877096B070DC2"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("015E85A8D46225DD7E314A1C4289731FC14DECE949349FE535D11043B85"' 16)' new BigInteger("03F189D37F50493EFD5111A129443A662AB3C6B289129AD8C0CAC85119C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("015E85A8D46225DD7E314A1C4289731FC14DECE949349FE535D11043B85"' 16)' new BigInteger("03F189D37F50493EFD5111A129443A662AB3C6B289129AD8C0CAC85119C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("03B62A4BF783919098B1E42F496E65F7621F01D1D466C46940F0F132A95"' 16)' new BigInteger("0F4BE031C6E5239E7DAA014CBBF1ED19425E49DAEB426EC9DF4C28A2E30"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("03B62A4BF783919098B1E42F496E65F7621F01D1D466C46940F0F132A95"' 16)' new BigInteger("0F4BE031C6E5239E7DAA014CBBF1ED19425E49DAEB426EC9DF4C28A2E30"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("02F1FEDC57BE203E4C8C6B8C1CEB35E13C1FCD956AB41E3BD4C8A6EFB1F"' 16)' new BigInteger("05738EC8A8EDEA8E435EE7266AD3EDE1EEFC2CEBE2BE1D614008D5D2951"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("02F1FEDC57BE203E4C8C6B8C1CEB35E13C1FCD956AB41E3BD4C8A6EFB1F"' 16)' new BigInteger("05738EC8A8EDEA8E435EE7266AD3EDE1EEFC2CEBE2BE1D614008D5D2951"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("0CCE175124D3586BA7486F7146894C65C2A4A5A1904658E5C7F9DF5FA5D"' 16)' new BigInteger("08804B456D847ACE5CA86D97BF79FD6335E5B17F6C0D964B5D0036C867E"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("0CCE175124D3586BA7486F7146894C65C2A4A5A1904658E5C7F9DF5FA5D"' 16)' new BigInteger("08804B456D847ACE5CA86D97BF79FD6335E5B17F6C0D964B5D0036C867E"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("035C3D6DFEEA1CFB29B93BE3FDB91A7B130951770C2690C16833A159677"' 16)' new BigInteger("0600F7301D12AB376B56D4459774159ADB51F97E282FF384406AFD53A02"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("035C3D6DFEEA1CFB29B93BE3FDB91A7B130951770C2690C16833A159677"' 16)' new BigInteger("0600F7301D12AB376B56D4459774159ADB51F97E282FF384406AFD53A02"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("061602FC8068BFD5FB86027B97455D200EC603057446CCE4D76DB8EF42C"' 16)' new BigInteger("03396DD0D59C067BB999B422D9883736CF9311DFD6951F91033BD03CA8D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("061602FC8068BFD5FB86027B97455D200EC603057446CCE4D76DB8EF42C"' 16)' new BigInteger("03396DD0D59C067BB999B422D9883736CF9311DFD6951F91033BD03CA8D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("07E12CB60FDD614958E8E34B3C12DDFF35D85A9C5800E31EA2CC2EF63B1"' 16)' new BigInteger("0E8970FD99D836F3CC1C807A2C58760DE6EDAA23705A82B9CB1CE93FECC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("07E12CB60FDD614958E8E34B3C12DDFF35D85A9C5800E31EA2CC2EF63B1"' 16)' new BigInteger("0E8970FD99D836F3CC1C807A2C58760DE6EDAA23705A82B9CB1CE93FECC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("14510D4BC44F2D26F4553942C98073C1BD35545CEABB5CC138853C5158D2729EA408836"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("201E18D48C6DB3D5D097C4DCE1E25587E1501FC3CF47BDB5B4289D79E273D6A9" +                  "ACB8285"' 16)' new BigInteger("151AE05712B024CE617358260774C8CA8B0E7A7E72EF8229BF2ACE7609560CB3" +                  "0322C4F"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("201E18D48C6DB3D5D097C4DCE1E25587E1501FC3CF47BDB5B4289D79E273D6A9" +                  "ACB8285"' 16)' new BigInteger("151AE05712B024CE617358260774C8CA8B0E7A7E72EF8229BF2ACE7609560CB3" +                  "0322C4F"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("143E878DDFD4DF40D97B8CD638B3C4706501C2201CF7108F2FB91478C11D6947" +                  "3246925"' 16)' new BigInteger("0CBF1B9717FEEA3AABB09D9654110144267098E0E1E8D0289A6211BE0EEDFDD8" +                  "6A3DB79"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("143E878DDFD4DF40D97B8CD638B3C4706501C2201CF7108F2FB91478C11D6947" +                  "3246925"' 16)' new BigInteger("0CBF1B9717FEEA3AABB09D9654110144267098E0E1E8D0289A6211BE0EEDFDD8" +                  "6A3DB79"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("29FD82497FB3E5CEF65579272138DE59E2B666B8689466572B3B69A172CEE83B" +                  "E145659"' 16)' new BigInteger("05A89D9166B40795AF0FE5958201B9C0523E500013CA12B4840EA2BC53F25F9B" +                  "3CE87C0"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("29FD82497FB3E5CEF65579272138DE59E2B666B8689466572B3B69A172CEE83B" +                  "E145659"' 16)' new BigInteger("05A89D9166B40795AF0FE5958201B9C0523E500013CA12B4840EA2BC53F25F9B" +                  "3CE87C0"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("2F00689C1BFCD2A8C7A41E0DE55AE182E6463A152828EF89FE3525139B660329" +                  "4E69353"' 16)' new BigInteger("1744514FE0A37447250C8A329EAAADA81572226CABA16F39270EE5DD03F27B1F" +                  "665EB5D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("2F00689C1BFCD2A8C7A41E0DE55AE182E6463A152828EF89FE3525139B660329" +                  "4E69353"' 16)' new BigInteger("1744514FE0A37447250C8A329EAAADA81572226CABA16F39270EE5DD03F27B1F" +                  "665EB5D"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0DA43A9ADFAA6AD767998A054C6A8F1CF77A562924628D73C62761847AD8286E" +                  "0D91B47"' 16)' new BigInteger("1D118733AE2C88357827CAFC6F68ABC25C80C640532925E95CFE66D40F8792F3" +                  "AC44C42"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("0DA43A9ADFAA6AD767998A054C6A8F1CF77A562924628D73C62761847AD8286E" +                  "0D91B47"' 16)' new BigInteger("1D118733AE2C88357827CAFC6F68ABC25C80C640532925E95CFE66D40F8792F3" +                  "AC44C42"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("05A408133919F2CDCDBE5E4C14FBC706C1F71BADAFEF41F5DE4EC27272FC1CA9" +                  "366FBB2"' 16)' new BigInteger("012966272872C097FEA7BCE64FAB1A81982A773E26F6E4EF7C99969846E67CA9" +                  "CBE1692"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey'   new BigInteger("05A408133919F2CDCDBE5E4C14FBC706C1F71BADAFEF41F5DE4EC27272FC1CA9" +                  "366FBB2"' 16)' new BigInteger("012966272872C097FEA7BCE64FAB1A81982A773E26F6E4EF7C99969846E67CA9" +                  "CBE1692"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("08F3824E40C16FF1DDA8DC992776D26F4A5981AB5092956C4FDBB4F1AE0A711E" +                  "EAA10E5"' 16)' new BigInteger("0A64B91EFADB213E11483FB61C73E3EF63D3B44EEFC56EA401B99DCC60CC28E9" +                  "9F0F1FA"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("08F3824E40C16FF1DDA8DC992776D26F4A5981AB5092956C4FDBB4F1AE0A711E" +                  "EAA10E5"' 16)' new BigInteger("0A64B91EFADB213E11483FB61C73E3EF63D3B44EEFC56EA401B99DCC60CC28E9" +                  "9F0F1FA"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("3597B406F5329D11A79E887847E5EC60861CCBB19EC61F252DB7BD549C699951" +                  "C182796"' 16)' new BigInteger("0A6A100B997BC622D91701D9F5C6F6D3815517E577622DA69D3A0E8917C1CBE6" +                  "3ACD345"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("3597B406F5329D11A79E887847E5EC60861CCBB19EC61F252DB7BD549C699951" +                  "C182796"' 16)' new BigInteger("0A6A100B997BC622D91701D9F5C6F6D3815517E577622DA69D3A0E8917C1CBE6" +                  "3ACD345"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("1BB490926E5A1FDC7C5AA86D0835F9B994EDA315CA408002AF54A298728D422E" +                  "BF59E4C"' 16)' new BigInteger("36C682CFC9E2C89A782BFD3A191609D1F0C1910D5FD6981442070393159D65FB" +                  "CC0A8BA"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("1BB490926E5A1FDC7C5AA86D0835F9B994EDA315CA408002AF54A298728D422E" +                  "BF59E4C"' 16)' new BigInteger("36C682CFC9E2C89A782BFD3A191609D1F0C1910D5FD6981442070393159D65FB" +                  "CC0A8BA"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("19944AA68F9778C2E3D6E240947613E6DA60EFCE9B9B2C063FF5466D72745B5A" +                  "0B25BA2"' 16)' new BigInteger("03F1567B3C5B02DF15C874F0EE22850824693D5ADC4663BAA19E384E550B1DD4" +                  "1F31EE6"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("19944AA68F9778C2E3D6E240947613E6DA60EFCE9B9B2C063FF5466D72745B5A" +                  "0B25BA2"' 16)' new BigInteger("03F1567B3C5B02DF15C874F0EE22850824693D5ADC4663BAA19E384E550B1DD4" +                  "1F31EE6"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("0494994CC325B08E7B4CE038BD9436F90B5E59A2C13C3140CD3AE07C04A01FC489F572CE0569A6DB7B8060393DE76330C624177"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("0D8783188E1A540E2022D389E1D35B32F56F8C2BB5636B8ABF7718806B27A713" +                  "EBAE37F63ECD4B61445CEF5801B62594EF3E982"' 16)' new BigInteger("03A6B4A80E204DB0DE12E7415C13C9EC091C52935658316B4A0C591216A38791" +                  "54BEB1712560E346E7EF26517707435B55C3141"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey'   new BigInteger("0D8783188E1A540E2022D389E1D35B32F56F8C2BB5636B8ABF7718806B27A713" +                  "EBAE37F63ECD4B61445CEF5801B62594EF3E982"' 16)' new BigInteger("03A6B4A80E204DB0DE12E7415C13C9EC091C52935658316B4A0C591216A38791" +                  "54BEB1712560E346E7EF26517707435B55C3141"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("0EE4F39ACC2E03CE96C3D9FCBAFA5C22C89053662F8D4117752A9B10F09ADFDA" +                  "59DB061E247FE5321D6B170EE758ACE1BE4D157"' 16)' new BigInteger("00A2B83265B456A430A8BF27DCC8A9488B3F126C10F0D6D64BF7B8A218FAAF20" +                  "E51A295A3AE78F205E5A4A6AE224C3639F1BB34"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("0EE4F39ACC2E03CE96C3D9FCBAFA5C22C89053662F8D4117752A9B10F09ADFDA" +                  "59DB061E247FE5321D6B170EE758ACE1BE4D157"' 16)' new BigInteger("00A2B83265B456A430A8BF27DCC8A9488B3F126C10F0D6D64BF7B8A218FAAF20" +                  "E51A295A3AE78F205E5A4A6AE224C3639F1BB34"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("02D8B1B31E33E74D7EB46C30FDE5AD2CA04EC8FE08FBA0E73BA5E568953AC5EA" +                  "307C072942238DFC07F4A4D7C7C6A9F86436D17"' 16)' new BigInteger("079F7D471E6CB73234AF7F7C381D2CE15DE35BAF8BB68393B73235B3A26EC2DF" +                  "4842CE433FB492D6E074E604D4870024D42189A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("02D8B1B31E33E74D7EB46C30FDE5AD2CA04EC8FE08FBA0E73BA5E568953AC5EA" +                  "307C072942238DFC07F4A4D7C7C6A9F86436D17"' 16)' new BigInteger("079F7D471E6CB73234AF7F7C381D2CE15DE35BAF8BB68393B73235B3A26EC2DF" +                  "4842CE433FB492D6E074E604D4870024D42189A"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("07BC638B7E7CE6FEE5E9C64A0F966D722D01BB4BC3F3A35F30D4CDDA92DFC5F7" +                  "F0B4BBFE8065D9AD452FD77A1914BE3A2440C18"' 16)' new BigInteger("06D904429850521B28A32CBF55C7C0FDF35DC4E0BDA2552C7BF68A171E970E67" +                  "88ACC0B9521EACB4796E057C70DD9B95FED5BFB"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("07BC638B7E7CE6FEE5E9C64A0F966D722D01BB4BC3F3A35F30D4CDDA92DFC5F7" +                  "F0B4BBFE8065D9AD452FD77A1914BE3A2440C18"' 16)' new BigInteger("06D904429850521B28A32CBF55C7C0FDF35DC4E0BDA2552C7BF68A171E970E67" +                  "88ACC0B9521EACB4796E057C70DD9B95FED5BFB"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("05D178DECAFD2D02A3DA0D8BA1C4C1D95EE083C760DF782193A9F7B4A8BE6FC5" +                  "C21FD60613BCA65C063A61226E050A680B3ABD4"' 16)' new BigInteger("013B7581E98F6A63FBBCB3E49BCDA60F816DB230B888506D105DC229600497C3" +                  "B46588C784BE3AA9343BEF82F7C9C80AEB63C3B"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("05D178DECAFD2D02A3DA0D8BA1C4C1D95EE083C760DF782193A9F7B4A8BE6FC5" +                  "C21FD60613BCA65C063A61226E050A680B3ABD4"' 16)' new BigInteger("013B7581E98F6A63FBBCB3E49BCDA60F816DB230B888506D105DC229600497C3" +                  "B46588C784BE3AA9343BEF82F7C9C80AEB63C3B"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("049F54E7C10D2732B4638473053782C6919218BBEFCEC8B51640FC193E832291" +                  "F05FA12371E9B448417B3290193F08EE9319195"' 16)' new BigInteger("0499E267DEC84E02F6F108B10E82172C414F15B1B7364BE8BFD66ADC0C5DE23F" +                  "EE3DF0D811134C25AFE0E05A6672F98889F28F1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("049F54E7C10D2732B4638473053782C6919218BBEFCEC8B51640FC193E832291" +                  "F05FA12371E9B448417B3290193F08EE9319195"' 16)' new BigInteger("0499E267DEC84E02F6F108B10E82172C414F15B1B7364BE8BFD66ADC0C5DE23F" +                  "EE3DF0D811134C25AFE0E05A6672F98889F28F1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("0B1527FFAA7DD7C7E46B628587A5BEC0539A2D04D3CF27C54841C2544E1BBDB4" +                  "2FDBDAAF8671A4CA86DFD619B1E3732D7BB56F2"' 16)' new BigInteger("0442C68C044868DF4832C807F1EDDEBF7F5052A64B826FD03451440794063F52" +                  "B022DF304F47403D4069234CA9EB4C964B37C02"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("0B1527FFAA7DD7C7E46B628587A5BEC0539A2D04D3CF27C54841C2544E1BBDB4" +                  "2FDBDAAF8671A4CA86DFD619B1E3732D7BB56F2"' 16)' new BigInteger("0442C68C044868DF4832C807F1EDDEBF7F5052A64B826FD03451440794063F52" +                  "B022DF304F47403D4069234CA9EB4C964B37C02"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("0BB27755B991D6D31757BCBF68CB01225A38E1CFA20F775E861055DD108ED7EA" +                  "455E4B96B2F6F7CD6C6EC2B3C70C3EDDEB9743B"' 16)' new BigInteger("0C5BE90980E7F444B5F7A12C9E9AC7A04CA81412822DD5AD1BE7C45D5032555E" +                  "A070864245CF69266871FEB8CD1B7EDC30EF6D5"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("0BB27755B991D6D31757BCBF68CB01225A38E1CFA20F775E861055DD108ED7EA" +                  "455E4B96B2F6F7CD6C6EC2B3C70C3EDDEB9743B"' 16)' new BigInteger("0C5BE90980E7F444B5F7A12C9E9AC7A04CA81412822DD5AD1BE7C45D5032555E" +                  "A070864245CF69266871FEB8CD1B7EDC30EF6D5"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("04EFEB7098772187907C87B33E0FBBA4584226C50C11E98CA7AAC6986F8D3BE0" +                  "44E5B52D201A410B852536527724CA5F8CE6549"' 16)' new BigInteger("09574102FEB3EF87E6D66B94119F5A6062950FF4F902EA1E6BD9E2037F33FF99" +                  "1E31F5956C23AFE48FCDC557FD6F088C7C9B2B3"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("04EFEB7098772187907C87B33E0FBBA4584226C50C11E98CA7AAC6986F8D3BE0" +                  "44E5B52D201A410B852536527724CA5F8CE6549"' 16)' new BigInteger("09574102FEB3EF87E6D66B94119F5A6062950FF4F902EA1E6BD9E2037F33FF99" +                  "1E31F5956C23AFE48FCDC557FD6F088C7C9B2B3"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("07E0249C68536AE2AEC2EC30090340DA49E6DC9E9EEC8F85E5AABFB234B6DA7D" +                  "2E9524028CF821F21C6019770474CC40B01FAF6"' 16)' new BigInteger("08125B5A03FB44AE81EA46D446130C2A415ECCA265910CA69D55F2453E16CD7B" +                  "2DFA4E28C50FA8137F9C0C6CEE4CD37ABCCF6D8"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("07E0249C68536AE2AEC2EC30090340DA49E6DC9E9EEC8F85E5AABFB234B6DA7D" +                  "2E9524028CF821F21C6019770474CC40B01FAF6"' 16)' new BigInteger("08125B5A03FB44AE81EA46D446130C2A415ECCA265910CA69D55F2453E16CD7B" +                  "2DFA4E28C50FA8137F9C0C6CEE4CD37ABCCF6D8"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: privKey = new ECPrivateKeyParameters(new BigInteger("028A04857F24C1C082DF0D909C0E72F453F2E2340CCB071F0E389BCA2575DA19" +                                                                  "124198C57174929AD26E348CF63F78D28021EF5A9BF2D5CBEAF6B7CCB6C4DA82" +                                                                  "4DD5C82CFB24E11"' 16)' ecDomainParameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey' new BigInteger("147D3EB0EDA9F2152DFD014363D6A9CE816D7A1467D326A625FC4AB0C786E1B7" +                                                                                  "4DDF7CD4D0E99541391B266C704BB6B6E8DCCD27B460802E0867143727AA4155" +                                                                                  "55454321EFE5CB6"' 16)'                                                                    new BigInteger("17319571CAF533D90D2E78A64060B9C53169AB7FC908947B3EDADC54C79CCF0A" +                                                                                    "7920B4C64A4EAB6282AFE9A459677CDA37FD6DD50BEF18709590FE18B923BDF7" +                                                                                    "4A66B189A850819"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha1Digest()' privKey' new BigInteger("147D3EB0EDA9F2152DFD014363D6A9CE816D7A1467D326A625FC4AB0C786E1B7" +                                                                                  "4DDF7CD4D0E99541391B266C704BB6B6E8DCCD27B460802E0867143727AA4155" +                                                                                  "55454321EFE5CB6"' 16)'                                                                    new BigInteger("17319571CAF533D90D2E78A64060B9C53169AB7FC908947B3EDADC54C79CCF0A" +                                                                                    "7920B4C64A4EAB6282AFE9A459677CDA37FD6DD50BEF18709590FE18B923BDF7" +                                                                                    "4A66B189A850819"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("10F4B63E79B2E54E4F4F6A2DBC786D8F4A143ECA7B2AD97810F6472AC6AE2085" +                                                                                  "3222854553BE1D44A7974599DB7061AE8560DF57F2675BE5F9DD94ABAF3D47F1" +                                                                                  "582B318E459748B"' 16)'                                                                    new BigInteger("3BBEA07C6B269C2B7FE9AE4DDB118338D0C2F0022920A7F9DCFCB7489594C03B" +                                                                                    "536A9900C4EA6A10410007222D3DAE1A96F291C4C9275D75D98EB290DC0EEF17" +                                                                                    "6037B2C7A7A39A3"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha224Digest()' privKey' new BigInteger("10F4B63E79B2E54E4F4F6A2DBC786D8F4A143ECA7B2AD97810F6472AC6AE2085" +                                                                                  "3222854553BE1D44A7974599DB7061AE8560DF57F2675BE5F9DD94ABAF3D47F1" +                                                                                  "582B318E459748B"' 16)'                                                                    new BigInteger("3BBEA07C6B269C2B7FE9AE4DDB118338D0C2F0022920A7F9DCFCB7489594C03B" +                                                                                    "536A9900C4EA6A10410007222D3DAE1A96F291C4C9275D75D98EB290DC0EEF17" +                                                                                    "6037B2C7A7A39A3"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("213EF9F3B0CFC4BF996B8AF3A7E1F6CACD2B87C8C63820000800AC787F17EC99" +                                                                                  "C04BCEDF29A8413CFF83142BB88A50EF8D9A086AF4EB03E97C567500C21D8657" +                                                                                  "14D832E03C6D054"' 16)'                                                                    new BigInteger("3D32322559B094E20D8935E250B6EC139AC4AAB77920812C119AF419FB62B332" +                                                                                    "C8D226C6C9362AE3C1E4AABE19359B8428EA74EC8FBE83C8618C2BCCB6B43FBA" +                                                                                    "A0F2CCB7D303945"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha256Digest()' privKey' new BigInteger("213EF9F3B0CFC4BF996B8AF3A7E1F6CACD2B87C8C63820000800AC787F17EC99" +                                                                                  "C04BCEDF29A8413CFF83142BB88A50EF8D9A086AF4EB03E97C567500C21D8657" +                                                                                  "14D832E03C6D054"' 16)'                                                                    new BigInteger("3D32322559B094E20D8935E250B6EC139AC4AAB77920812C119AF419FB62B332" +                                                                                    "C8D226C6C9362AE3C1E4AABE19359B8428EA74EC8FBE83C8618C2BCCB6B43FBA" +                                                                                    "A0F2CCB7D303945"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("375D8F49C656A0BBD21D3F54CDA287D853C4BB1849983CD891EF6CD6BB56A62B" +                                                                                  "687807C16685C2C9BCA2663C33696ACCE344C45F3910B1DF806204FF731ECB28" +                                                                                  "9C100EF4D1805EC"' 16)'                                                                    new BigInteger("1CDEC6F46DFEEE44BCE71D41C60550DC67CF98D6C91363625AC2553E4368D2DF" +                                                                                  "B734A8E8C72E118A76ACDB0E58697940A0F3DF49E72894BD799450FC9E550CC0" +                                                                                  "4B9FF9B0380021C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha384Digest()' privKey' new BigInteger("375D8F49C656A0BBD21D3F54CDA287D853C4BB1849983CD891EF6CD6BB56A62B" +                                                                                  "687807C16685C2C9BCA2663C33696ACCE344C45F3910B1DF806204FF731ECB28" +                                                                                  "9C100EF4D1805EC"' 16)'                                                                    new BigInteger("1CDEC6F46DFEEE44BCE71D41C60550DC67CF98D6C91363625AC2553E4368D2DF" +                                                                                  "B734A8E8C72E118A76ACDB0E58697940A0F3DF49E72894BD799450FC9E550CC0" +                                                                                  "4B9FF9B0380021C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("1C26F40D940A7EAA0EB1E62991028057D91FEDA0366B606F6C434C361F04E545" +                                                                                  "A6A51A435E26416F6838FFA260C617E798E946B57215284182BE55F29A355E60" +                                                                                  "24FE32A47289CF0"' 16)'                                                                    new BigInteger("3691DE4369D921FE94EDDA67CB71FBBEC9A436787478063EB1CC778B3DCDC1C4" +                                                                                  "162662752D28DEEDF6F32A269C82D1DB80C87CE4D3B662E03AC347806E3F19D1" +                                                                                  "8D6D4DE7358DF7E"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaSample(new Sha512Digest()' privKey' new BigInteger("1C26F40D940A7EAA0EB1E62991028057D91FEDA0366B606F6C434C361F04E545" +                                                                                  "A6A51A435E26416F6838FFA260C617E798E946B57215284182BE55F29A355E60" +                                                                                  "24FE32A47289CF0"' 16)'                                                                    new BigInteger("3691DE4369D921FE94EDDA67CB71FBBEC9A436787478063EB1CC778B3DCDC1C4" +                                                                                  "162662752D28DEEDF6F32A269C82D1DB80C87CE4D3B662E03AC347806E3F19D1" +                                                                                  "8D6D4DE7358DF7E"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("133F5414F2A9BC41466D339B79376038A64D045E5B0F792A98E5A7AA87E0AD01" +                  "6419E5F8D176007D5C9C10B5FD9E2E0AB8331B195797C0358BA05ECBF24ACE59" +                  "C5F368A6C0997CC"' 16)'                  new BigInteger("3D16743AE9F00F0B1A500F738719C5582550FEB64689DA241665C4CE4F328BA0" +                      "E34A7EF527ED13BFA5889FD2D1D214C11EB17D6BC338E05A56F41CAFF1AF7B8D" +                      "574DB62EF0D0F21"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha1Digest()' privKey' new BigInteger("133F5414F2A9BC41466D339B79376038A64D045E5B0F792A98E5A7AA87E0AD01" +                  "6419E5F8D176007D5C9C10B5FD9E2E0AB8331B195797C0358BA05ECBF24ACE59" +                  "C5F368A6C0997CC"' 16)'                  new BigInteger("3D16743AE9F00F0B1A500F738719C5582550FEB64689DA241665C4CE4F328BA0" +                      "E34A7EF527ED13BFA5889FD2D1D214C11EB17D6BC338E05A56F41CAFF1AF7B8D" +                      "574DB62EF0D0F21"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("3048E76506C5C43D92B2E33F62B33E3111CEEB87F6C7DF7C7C01E3CDA28FA5E8" +                  "BE04B5B23AA03C0C70FEF8F723CBCEBFF0B7A52A3F5C8B84B741B4F6157E69A5" +                  "FB0524B48F31828"' 16)'                  new BigInteger("2C99078CCFE5C82102B8D006E3703E020C46C87C75163A2CD839C885550BA5CB" +                      "501AC282D29A1C26D26773B60FBE05AAB62BFA0BA32127563D42F7669C97784C" +                      "8897C22CFB4B8FA"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha224Digest()' privKey' new BigInteger("3048E76506C5C43D92B2E33F62B33E3111CEEB87F6C7DF7C7C01E3CDA28FA5E8" +                  "BE04B5B23AA03C0C70FEF8F723CBCEBFF0B7A52A3F5C8B84B741B4F6157E69A5" +                  "FB0524B48F31828"' 16)'                  new BigInteger("2C99078CCFE5C82102B8D006E3703E020C46C87C75163A2CD839C885550BA5CB" +                      "501AC282D29A1C26D26773B60FBE05AAB62BFA0BA32127563D42F7669C97784C" +                      "8897C22CFB4B8FA"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("184BC808506E11A65D628B457FDA60952803C604CC7181B59BD25AEE1411A66D" +                                                                          "12A777F3A0DC99E1190C58D0037807A95E5080FA1B2E5CCAA37B50D401CFFC34" +                                                                          "17C005AEE963469"' 16)'                                                                    new BigInteger("27280D45F81B19334DBDB07B7E63FE8F39AC7E9AE14DE1D2A6884D2101850289" +                                                                        "D70EE400F26ACA5E7D73F534A14568478E59D00594981ABE6A1BA18554C13EB5" +                                                                        "E03921E4DC98333"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha256Digest()' privKey' new BigInteger("184BC808506E11A65D628B457FDA60952803C604CC7181B59BD25AEE1411A66D" +                                                                          "12A777F3A0DC99E1190C58D0037807A95E5080FA1B2E5CCAA37B50D401CFFC34" +                                                                          "17C005AEE963469"' 16)'                                                                    new BigInteger("27280D45F81B19334DBDB07B7E63FE8F39AC7E9AE14DE1D2A6884D2101850289" +                                                                        "D70EE400F26ACA5E7D73F534A14568478E59D00594981ABE6A1BA18554C13EB5" +                                                                        "E03921E4DC98333"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("319EE57912E7B0FAA1FBB145B0505849A89C6DB1EC06EA20A6A7EDE072A6268A" +                  "F6FD9C809C7E422A5F33C6C3326EAD7402467DF3272A1B2726C1C20975950F0F" +                  "50D8324578F13EC"' 16)'                  new BigInteger("2CF3EA27EADD0612DD2F96F46E89AB894B01A10DF985C5FC099CFFE0EA083EB4" +                      "4BE682B08BFE405DAD5F37D0A2C59015BA41027E24B99F8F75A70B6B7385BF39" +                      "BBEA02513EB880C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha384Digest()' privKey' new BigInteger("319EE57912E7B0FAA1FBB145B0505849A89C6DB1EC06EA20A6A7EDE072A6268A" +                  "F6FD9C809C7E422A5F33C6C3326EAD7402467DF3272A1B2726C1C20975950F0F" +                  "50D8324578F13EC"' 16)'                  new BigInteger("2CF3EA27EADD0612DD2F96F46E89AB894B01A10DF985C5FC099CFFE0EA083EB4" +                      "4BE682B08BFE405DAD5F37D0A2C59015BA41027E24B99F8F75A70B6B7385BF39" +                      "BBEA02513EB880C"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("2AA1888EAB05F7B00B6A784C4F7081D2C833D50794D9FEAF6E22B8BE728A2A90" +                  "BFCABDC803162020AA629718295A1489EE7ED0ECB8AAA197B9BDFC49D18DDD78" +                  "FC85A48F9715544"' 16)'                  new BigInteger("0AA5371FE5CA671D6ED9665849C37F394FED85D51FEF72DA2B5F28EDFB2C6479" +                      "CA63320C19596F5E1101988E2C619E302DD05112F47E8823040CE540CD3E90DC" +                      "F41DBC461744EE9"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DeterministicDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DeterministicDSATest.cs,TestECHMacDeterministic,The following statement contains a magic number: DoTestHMacDetECDsaTest(new Sha512Digest()' privKey' new BigInteger("2AA1888EAB05F7B00B6A784C4F7081D2C833D50794D9FEAF6E22B8BE728A2A90" +                  "BFCABDC803162020AA629718295A1489EE7ED0ECB8AAA197B9BDFC49D18DDD78" +                  "FC85A48F9715544"' 16)'                  new BigInteger("0AA5371FE5CA671D6ED9665849C37F394FED85D51FEF72DA2B5F28EDFB2C6479" +                      "CA63320C19596F5E1101988E2C619E302DD05112F47E8823040CE540CD3E90DC" +                      "F41DBC461744EE9"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,DHKekGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHKEKGeneratorTest.cs,PerformTest,The following statement contains a magic number: CheckMask(1' new DHKekGenerator(new Sha1Digest())' new DHKdfParameters(alg1' 192' seed1)' result1);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHKekGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHKEKGeneratorTest.cs,PerformTest,The following statement contains a magic number: CheckMask(2' new DHKekGenerator(new Sha1Digest())' new DHKdfParameters(alg2' 128' seed2' partyAInfo)' result2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHKekGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHKEKGeneratorTest.cs,PerformTest,The following statement contains a magic number: CheckMask(2' new DHKekGenerator(new Sha1Digest())' new DHKdfParameters(alg2' 128' seed2' partyAInfo)' result2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,doTestGeneration,The following statement contains a magic number: pGen.Init(size' 10' new SecureRandom());
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(512' 0' g512' p512);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(768' 0' g768' p768);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(1024' 0' g1024' p1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(512' 64' g512' p512);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(512' 64' g512' p512);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(768' 128' g768' p768);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(768' 128' g768' p768);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(1024' 256' g1024' p1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDHBasic(1024' 256' g1024' p1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDH(512' g512' p512);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDH(768' g768' p768);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestDH(1024' g1024' p1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: doTestGeneration(256);
Magic Number,Org.BouncyCastle.Crypto.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DHTest.cs,PerformTest,The following statement contains a magic number: dh.CalculateAgreement((DHPublicKeyParameters)kpGen768.GenerateKeyPair().Public' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,PerformTest,The following statement contains a magic number: pGen.Init(512' 80' random);
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,PerformTest,The following statement contains a magic number: pGen.Init(512' 80' random);
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,PerformTest,The following statement contains a magic number: pValid.Counter != 105
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(1024' 160' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(1024' 160' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(1024' 160' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: pv.Counter != 5
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: !parameters.Q.Equals(new BigInteger("E950511EAB424B9A19A2AEB4E159B7844C589C4F"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: !parameters.P.Equals(new BigInteger(                  "E0A67598CD1B763B" +                  "C98C8ABB333E5DDA0CD3AA0E5E1FB5BA8A7B4EABC10BA338" +                  "FAE06DD4B90FDA70D7CF0CB0C638BE3341BEC0AF8A7330A3" +                  "307DED2299A0EE606DF035177A239C34A912C202AA5F83B9" +                  "C4A7CF0235B5316BFC6EFB9A248411258B30B839AF172440" +                  "F32563056CB67A861158DDD90E6A894C72A5BBEF9E286C6B"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: !parameters.G.Equals(new BigInteger(                  "D29D5121B0423C27" +                  "69AB21843E5A3240FF19CACC792264E3BB6BE4F78EDD1B15" +                  "C4DFF7F1D905431F0AB16790E1F773B5CE01C804E509066A" +                  "9919F5195F4ABC58189FD9FF987389CB5BEDF21B4DAB4F8B" +                  "76A055FFE2770988FE2EC2DE11AD92219F0B351869AC24DA" +                  "3D7BA87011A701CE8EE7BFE49486ED4527B7186CA4610A75"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: !pub.Y.Equals(new BigInteger(                  "25282217F5730501" +                  "DD8DBA3EDFCF349AAFFEC20921128D70FAC44110332201BB" +                  "A3F10986140CBB97C726938060473C8EC97B4731DB004293" +                  "B5E730363609DF9780F8D883D8C4D41DED6A2F1E1BBBDC97" +                  "9E1B9D6D3C940301F4E978D65B19041FCF1E8B518F5C0576" +                  "C770FE5A7A485D8329EE2914A2DE1B5DA4A6128CEAB70F79"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: !priv.X.Equals(                  new BigInteger("D0EC4E50BB290A42E9E355C73D8809345DE2E139"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: !sig[0].Equals(new BigInteger("636155AC9A4633B4665D179F9E4117DF68601F34"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test1,The following statement contains a magic number: !sig[1].Equals(new BigInteger("6C540B02D9D4852F89DF8CFC99963204F4347704"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(2048' 224' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(2048' 224' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(2048' 224' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: pv.Counter != 21
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: !parameters.Q.Equals(new BigInteger("90EAF4D1AF0708B1B612FF35E0A2997EB9E9D263C9CE659528945C0D"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: !parameters.P.Equals(new BigInteger(                  "C196BA05AC29E1F9C3C72D56DFFC6154" +                  "A033F1477AC88EC37F09BE6C5BB95F51C296DD20D1A28A06" +                  "7CCC4D4316A4BD1DCA55ED1066D438C35AEBAABF57E7DAE4" +                  "28782A95ECA1C143DB701FD48533A3C18F0FE23557EA7AE6" +                  "19ECACC7E0B51652A8776D02A425567DED36EABD90CA33A1" +                  "E8D988F0BBB92D02D1D20290113BB562CE1FC856EEB7CDD9" +                  "2D33EEA6F410859B179E7E789A8F75F645FAE2E136D252BF" +                  "FAFF89528945C1ABE705A38DBC2D364AADE99BE0D0AAD82E" +                  "5320121496DC65B3930E38047294FF877831A16D5228418D" +                  "E8AB275D7D75651CEFED65F78AFC3EA7FE4D79B35F62A040" +                  "2A1117599ADAC7B269A59F353CF450E6982D3B1702D9CA83"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: !parameters.G.Equals(new BigInteger(                  "A59A749A11242C58C894E9E5A91804E8"+                  "FA0AC64B56288F8D47D51B1EDC4D65444FECA0111D78F35F"+                  "C9FDD4CB1F1B79A3BA9CBEE83A3F811012503C8117F98E50"+                  "48B089E387AF6949BF8784EBD9EF45876F2E6A5A495BE64B"+                  "6E770409494B7FEE1DBB1E4B2BC2A53D4F893D418B715959"+                  "2E4FFFDF6969E91D770DAEBD0B5CB14C00AD68EC7DC1E574"+                  "5EA55C706C4A1C5C88964E34D09DEB753AD418C1AD0F4FDF"+                  "D049A955E5D78491C0B7A2F1575A008CCD727AB376DB6E69"+                  "5515B05BD412F5B8C2F4C77EE10DA48ABD53F5DD498927EE"+                  "7B692BBBCDA2FB23A516C5B4533D73980B2A3B60E384ED20"+                  "0AE21B40D273651AD6060C13D97FD69AA13C5611A51B9085"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: !pub.Y.Equals(new BigInteger(                  "70035C9A3B225B258F16741F3941FBF0" +                  "6F3D056CD7BD864604CBB5EE9DD85304EE8E8E4ABD5E9032" +                  "11DDF25CE149075510ACE166970AFDC7DF552B7244F342FA" +                  "02F7A621405B754909D757F97290E1FE5036E904CF593446" +                  "0C046D95659821E1597ED9F2B1F0E20863A6BBD0CE74DACB" +                  "A5D8C68A90B29C2157CDEDB82EC12B81EE3068F9BF5F7F34" +                  "6ECA41ED174CCCD7D154FA4F42F80FFE1BF46AE9D8125DEB" +                  "5B4BA08A72BDD86596DBEDDC9550FDD650C58F5AE5133509" +                  "A702F79A31ECB490F7A3C5581631F7C5BE4FF7F9E9F27FA3" +                  "90E47347AD1183509FED6FCF198BA9A71AB3335B4F38BE8D" +                  "15496A00B6DC2263E20A5F6B662320A3A1EC033AA61E3B68"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: !priv.X.Equals(                  new BigInteger("00D0F09ED3E2568F6CADF9224117DA2AEC5A4300E009DE1366023E17"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: !sig[0].Equals(new BigInteger("4400138D05F9639CAF54A583CAAF25D2B76D0C3EAD752CE17DBC85FE"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test2,The following statement contains a magic number: !sig[1].Equals(new BigInteger("874D4F12CB13B61732D398445698CFA9D92381D938AA57EE2C9327B3"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(2048' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(2048' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(2048' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: pv.Counter != 12
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: !parameters.Q.Equals(new BigInteger("C24ED361870B61E0D367F008F99F8A1F75525889C89DB1B673C45AF5867CB467"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: !parameters.P.Equals(new BigInteger(                  "F56C2A7D366E3EBDEAA1891FD2A0D099" +                  "436438A673FED4D75F594959CFFEBCA7BE0FC72E4FE67D91" +                  "D801CBA0693AC4ED9E411B41D19E2FD1699C4390AD27D94C" +                  "69C0B143F1DC88932CFE2310C886412047BD9B1C7A67F8A2" +                  "5909132627F51A0C866877E672E555342BDF9355347DBD43" +                  "B47156B2C20BAD9D2B071BC2FDCF9757F75C168C5D9FC431" +                  "31BE162A0756D1BDEC2CA0EB0E3B018A8B38D3EF2487782A" +                  "EB9FBF99D8B30499C55E4F61E5C7DCEE2A2BB55BD7F75FCD" +                  "F00E48F2E8356BDB59D86114028F67B8E07B127744778AFF" +                  "1CF1399A4D679D92FDE7D941C5C85C5D7BFF91BA69F9489D" +                  "531D1EBFA727CFDA651390F8021719FA9F7216CEB177BD75"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: !parameters.G.Equals(new BigInteger(                  "8DC6CC814CAE4A1C05A3E186A6FE27EA" +                  "BA8CDB133FDCE14A963A92E809790CBA096EAA26140550C1" +                  "29FA2B98C16E84236AA33BF919CD6F587E048C52666576DB" +                  "6E925C6CBE9B9EC5C16020F9A44C9F1C8F7A8E611C1F6EC2" +                  "513EA6AA0B8D0F72FED73CA37DF240DB57BBB27431D61869" +                  "7B9E771B0B301D5DF05955425061A30DC6D33BB6D2A32BD0" +                  "A75A0A71D2184F506372ABF84A56AEEEA8EB693BF29A6403" +                  "45FA1298A16E85421B2208D00068A5A42915F82CF0B858C8" +                  "FA39D43D704B6927E0B2F916304E86FB6A1B487F07D8139E" +                  "428BB096C6D67A76EC0B8D4EF274B8A2CF556D279AD267CC" +                  "EF5AF477AFED029F485B5597739F5D0240F67C2D948A6279"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: !pub.Y.Equals(new BigInteger(                  "2828003D7C747199143C370FDD07A286" +                  "1524514ACC57F63F80C38C2087C6B795B62DE1C224BF8D1D" +                  "1424E60CE3F5AE3F76C754A2464AF292286D873A7A30B7EA" +                  "CBBC75AAFDE7191D9157598CDB0B60E0C5AA3F6EBE425500" +                  "C611957DBF5ED35490714A42811FDCDEB19AF2AB30BEADFF" +                  "2907931CEE7F3B55532CFFAEB371F84F01347630EB227A41" +                  "9B1F3F558BC8A509D64A765D8987D493B007C4412C297CAF" +                  "41566E26FAEE475137EC781A0DC088A26C8804A98C23140E" +                  "7C936281864B99571EE95C416AA38CEEBB41FDBFF1EB1D1D" +                  "C97B63CE1355257627C8B0FD840DDB20ED35BE92F08C49AE" +                  "A5613957D7E5C7A6D5A5834B4CB069E0831753ECF65BA02B"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: !priv.X.Equals(                  new BigInteger("0CAF2EF547EC49C4F3A6FE6DF4223A174D01F2C115D49A6F73437C29A2A8458C"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: !sig[0].Equals(new BigInteger("315C875DCD4850E948B8AC42824E9483A32D5BA5ABE0681B9B9448D444F2BE3C"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test3,The following statement contains a magic number: !sig[1].Equals(new BigInteger("89718D12E54A8D9ED066E4A55F7ED5A2229CD23B9A3CEE78F83ED6AA61F6BCB9"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(3072' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(3072' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: pGen.Init(new DsaParameterGenerationParameters(3072' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: pv.Counter != 20
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: !parameters.Q.Equals(new BigInteger("CFA0478A54717B08CE64805B76E5B14249A77A4838469DF7F7DC987EFCCFB11D"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: !parameters.P.Equals(new BigInteger(                  "90066455B5CFC38F9CAA4A48B4281F292C260FEEF01FD610" +                  "37E56258A7795A1C7AD46076982CE6BB956936C6AB4DCFE0" +                  "5E6784586940CA544B9B2140E1EB523F009D20A7E7880E4E" +                  "5BFA690F1B9004A27811CD9904AF70420EEFD6EA11EF7DA1" +                  "29F58835FF56B89FAA637BC9AC2EFAAB903402229F491D8D" +                  "3485261CD068699B6BA58A1DDBBEF6DB51E8FE34E8A78E54" +                  "2D7BA351C21EA8D8F1D29F5D5D15939487E27F4416B0CA63" +                  "2C59EFD1B1EB66511A5A0FBF615B766C5862D0BD8A3FE7A0" +                  "E0DA0FB2FE1FCB19E8F9996A8EA0FCCDE538175238FC8B0E" +                  "E6F29AF7F642773EBE8CD5402415A01451A840476B2FCEB0" +                  "E388D30D4B376C37FE401C2A2C2F941DAD179C540C1C8CE0" +                  "30D460C4D983BE9AB0B20F69144C1AE13F9383EA1C08504F" +                  "B0BF321503EFE43488310DD8DC77EC5B8349B8BFE97C2C56" +                  "0EA878DE87C11E3D597F1FEA742D73EEC7F37BE43949EF1A" +                  "0D15C3F3E3FC0A8335617055AC91328EC22B50FC15B941D3" +                  "D1624CD88BC25F3E941FDDC6200689581BFEC416B4B2CB73"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: !parameters.G.Equals(new BigInteger(                  "5E5CBA992E0A680D885EB903AEA78E4A45A469103D448EDE" +                  "3B7ACCC54D521E37F84A4BDD5B06B0970CC2D2BBB715F7B8" +                  "2846F9A0C393914C792E6A923E2117AB805276A975AADB52" +                  "61D91673EA9AAFFEECBFA6183DFCB5D3B7332AA19275AFA1" +                  "F8EC0B60FB6F66CC23AE4870791D5982AAD1AA9485FD8F4A" +                  "60126FEB2CF05DB8A7F0F09B3397F3937F2E90B9E5B9C9B6" +                  "EFEF642BC48351C46FB171B9BFA9EF17A961CE96C7E7A7CC" +                  "3D3D03DFAD1078BA21DA425198F07D2481622BCE45969D9C" +                  "4D6063D72AB7A0F08B2F49A7CC6AF335E08C4720E31476B6" +                  "7299E231F8BD90B39AC3AE3BE0C6B6CACEF8289A2E2873D5" +                  "8E51E029CAFBD55E6841489AB66B5B4B9BA6E2F784660896" +                  "AFF387D92844CCB8B69475496DE19DA2E58259B090489AC8" +                  "E62363CDF82CFD8EF2A427ABCD65750B506F56DDE3B98856" +                  "7A88126B914D7828E2B63A6D7ED0747EC59E0E0A23CE7D8A" +                  "74C1D2C2A7AFB6A29799620F00E11C33787F7DED3B30E1A2" +                  "2D09F1FBDA1ABBBFBF25CAE05A13F812E34563F99410E73B"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: !pub.Y.Equals(new BigInteger(                  "8B891C8692D3DE875879390F2698B26FBECCA6B075535DCE" +                  "6B0C862577F9FA0DEF6074E7A7624121224A595896ABD4CD" +                  "A56B2CEFB942E025D2A4282FFAA98A48CDB47E1A6FCB5CFB" +                  "393EF35AF9DF913102BB303C2B5C36C3F8FC04ED7B8B69FE" +                  "FE0CF3E1FC05CFA713B3435B2656E913BA8874AEA9F93600" +                  "6AEB448BCD005D18EC3562A33D04CF25C8D3D69844343442" +                  "FA3DB7DE618C5E2DA064573E61E6D5581BFB694A23AC87FD" +                  "5B52D62E954E1376DB8DDB524FFC0D469DF978792EE44173" +                  "8E5DB05A7DC43E94C11A2E7A4FBE383071FA36D2A7EC8A93" +                  "88FE1C4F79888A99D3B6105697C2556B79BB4D7E781CEBB3" +                  "D4866AD825A5E830846072289FDBC941FA679CA82F5F78B7" +                  "461B2404DB883D215F4E0676CF5493950AC5591697BFEA8D" +                  "1EE6EC016B89BA51CAFB5F9C84C989FA117375E94578F28B" +                  "E0B34CE0545DA46266FD77F62D8F2CEE92AB77012AFEBC11" +                  "008985A821CD2D978C7E6FE7499D1AAF8DE632C21BB48CA5" +                  "CBF9F31098FD3FD3854C49A65D9201744AACE540354974F9"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: !priv.X.Equals(                  new BigInteger("3ABC1587297CE7B9EA1AD6651CF2BC4D7F92ED25CABC8553F567D1B40EBB8764"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: !sig[0].Equals(new BigInteger("5F184E645A38BE8FB4A6871B6503A9D12924C7ABE04B71410066C2ECA6E3BE3E"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DSATest.cs,Dsa2Test4,The following statement contains a magic number: !sig[1].Equals(new BigInteger("91EB0C7BA3D4B9B60B825C3D9F2CADA8A2C9D7723267B033CBCDCF8803DB9C18"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestRandomNumberTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestRandomNumberTest.cs,doExpectedTest,The following statement contains a magic number: i != 1024
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestRandomNumberTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestRandomNumberTest.cs,doExpectedTest,The following statement contains a magic number: i != 1024
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestRandomNumberTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestRandomNumberTest.cs,doCountTest,The following statement contains a magic number: i != 1000000
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestRandomNumberTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestRandomNumberTest.cs,doCountTest,The following statement contains a magic number: (averages[i] / 1000000) != 127
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestRandomNumberTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestRandomNumberTest.cs,doCountTest,The following statement contains a magic number: (averages[i] / 1000000) != 127
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestRandomNumberTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestRandomNumberTest.cs,PerformTest,The following statement contains a magic number: doExpectedTest(new Sha1Digest()' 100' expected100SHA1);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestRandomNumberTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestRandomNumberTest.cs,PerformTest,The following statement contains a magic number: doExpectedTest(new Sha256Digest()' 100' expected100SHA256);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: digest.BlockUpdate(lastV' 0' lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: digest.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: digest.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: d.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: d.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: digest.BlockUpdate(lastV' 0' lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: digest.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: digest.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: digest.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: digest.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: md.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,PerformTest,The following statement contains a magic number: md.BlockUpdate(lastV' lastV.Length/2' lastV.Length - lastV.Length/2);
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,millionATest,The following statement contains a magic number: i < 1000000
Magic Number,Org.BouncyCastle.Crypto.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\DigestTest.cs,sixtyFourKTest,The following statement contains a magic number: i < 65536
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(1' K1' 128' N1' A1' P1' T1' C1);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(2' K2' 128' N2' A2' P2' T2' C2);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(2' K2' 128' N2' A2' P2' T2' C2);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(3' K3' 128' N3' A3' P3' T3' C3);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(3' K3' 128' N3' A3' P3' T3' C3);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(4' K4' 128' N4' A4' P4' T4' C4);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(4' K4' 128' N4' A4' P4' T4' C4);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(5' K5' 128' N5' A5' P5' T5' C5);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(5' K5' 128' N5' A5' P5' T5' C5);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(6' K6' 128' N6' A6' P6' T6' C6);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(6' K6' 128' N6' A6' P6' T6' C6);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(7' K7' 128' N7' A7' P7' T7' C7);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(7' K7' 128' N7' A7' P7' T7' C7);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(8' K8' 128' N8' A8' P8' T8' C8);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(8' K8' 128' N8' A8' P8' T8' C8);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(9' K9' 128' N9' A9' P9' T9' C9);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(9' K9' 128' N9' A9' P9' T9' C9);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(10' K10' 128' N10' A10' P10' T10' C10);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(10' K10' 128' N10' A10' P10' T10' C10);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(11' K11' 32' N11' A11' P11' T11' C11);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: checkVectors(11' K11' 32' N11' A11' P11' T11' C11);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,PerformTest,The following statement contains a magic number: eax.Init(false' new AeadParameters(new KeyParameter(K1)' 32' N2' A2));
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,checkVectors,The following statement contains a magic number: byte[] fa = new byte[a.Length / 2];
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,checkVectors,The following statement contains a magic number: byte[] la = new byte[a.Length - (a.Length / 2)];
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,ivParamTest,The following statement contains a magic number: byte[] enc = new byte[p.Length + 8];
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,randomTests,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,randomTest,The following statement contains a magic number: int DAT_LEN = srng.Next(1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,randomTest,The following statement contains a magic number: byte[] key = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,EaxTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EAXTest.cs,randomTest,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(sessKey' MAC_LEN * 8' nonce' authen);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECDHKekGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECDHKEKGeneratorTest.cs,PerformTest,The following statement contains a magic number: CheckMask(1' new ECDHKekGenerator(new Sha1Digest())' new DHKdfParameters(alg1' 256' seed1)' result1);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECDHKekGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECDHKEKGeneratorTest.cs,PerformTest,The following statement contains a magic number: CheckMask(2' new ECDHKekGenerator(new Sha1Digest())' new DHKdfParameters(alg2' 128' seed2)' result2);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECDHKekGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECDHKEKGeneratorTest.cs,PerformTest,The following statement contains a magic number: CheckMask(2' new ECDHKekGenerator(new Sha1Digest())' new DHKdfParameters(alg2' 128' seed2)' result2);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECDHKekGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECDHKEKGeneratorTest.cs,PerformTest,The following statement contains a magic number: CheckMask(3' new ECDHKekGenerator(new Sha1Digest())' new DHKdfParameters(alg3' 192' seed3)' result3);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECDHKekGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECDHKEKGeneratorTest.cs,PerformTest,The following statement contains a magic number: CheckMask(3' new ECDHKekGenerator(new Sha1Digest())' new DHKdfParameters(alg3' 192' seed3)' result3);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: IesParameters p = new IesParameters(d' e' 64);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: p = new IesWithCipherParameters(d' e' 64' 128);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,StaticTest,The following statement contains a magic number: p = new IesWithCipherParameters(d' e' 64' 128);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: byte[] e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: IesParameters  p = new IesParameters(d' e' 64);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: d = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: e = new byte[] { 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: p = new IesWithCipherParameters(d' e' 64' 128);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,DoTest,The following statement contains a magic number: p = new IesWithCipherParameters(d' e' 64' 128);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,PerformTest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcIesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECIESTest.cs,PerformTest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcNrTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECNRTest.cs,ecNR239bitPrime,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,EcNrTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECNRTest.cs,ecNR239bitPrime,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa192bitPrime,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa192bitPrime,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestDecode,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestDecode,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestDecode,The following statement contains a magic number: !p.AffineXCoord.ToBigInteger().Equals(new BigInteger("188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestDecode,The following statement contains a magic number: !p.AffineYCoord.ToBigInteger().Equals(new BigInteger("7192b95ffc8da78631011ed6b24cdd573f977a11e794811"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitPrime,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitPrime,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa191bitBinary,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  191' // m                  9' //k                  new BigInteger("2866537B676752636A68F56554E12640276B649EF7526267"' 16)' // a                  new BigInteger("2E45EF571F00786F67B0081B9495A3D95462F5DE0AA185EC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa191bitBinary,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  191' // m                  9' //k                  new BigInteger("2866537B676752636A68F56554E12640276B649EF7526267"' 16)' // a                  new BigInteger("2E45EF571F00786F67B0081B9495A3D95462F5DE0AA185EC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa191bitBinary,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  191' // m                  9' //k                  new BigInteger("2866537B676752636A68F56554E12640276B649EF7526267"' 16)' // a                  new BigInteger("2E45EF571F00786F67B0081B9495A3D95462F5DE0AA185EC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa191bitBinary,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  191' // m                  9' //k                  new BigInteger("2866537B676752636A68F56554E12640276B649EF7526267"' 16)' // a                  new BigInteger("2E45EF571F00786F67B0081B9495A3D95462F5DE0AA185EC"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinary,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  239' // m                  36' //k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinary,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  239' // m                  36' //k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinary,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  239' // m                  36' //k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinary,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  239' // m                  36' //k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinary,The following statement contains a magic number: ECDomainParameters parameters = new ECDomainParameters(                  curve'                  curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G                  new BigInteger("220855883097298041197912187592864814557886993776713230936715041207411783")' // n                  BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaSecP224k1Sha256,The following statement contains a magic number: ECPrivateKeyParameters priKey = new ECPrivateKeyParameters(                  new BigInteger("BE6F6E91FE96840A6518B56F3FE21689903A64FA729057AB872A9F51"' 16)' // d                  parameters);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaSecP224k1Sha256,The following statement contains a magic number: BigInteger r = new BigInteger("8163E5941BED41DA441B33E653C632A55A110893133351E20CE7CB75"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaSecP224k1Sha256,The following statement contains a magic number: BigInteger s = new BigInteger("D12C3FC289DDD5F6890DCE26B65792C8C50E68BF551D617D47DF15A8"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinaryAndLargeDigest,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  239' // m                  36' //k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinaryAndLargeDigest,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  239' // m                  36' //k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinaryAndLargeDigest,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  239' // m                  36' //k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinaryAndLargeDigest,The following statement contains a magic number: F2mCurve curve = new F2mCurve(                  239' // m                  36' //k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsa239bitBinaryAndLargeDigest,The following statement contains a magic number: ECDomainParameters parameters = new ECDomainParameters(                  curve'                  curve.DecodePoint(                      Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G                  new BigInteger("220855883097298041197912187592864814557886993776713230936715041207411783")' // n                  BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaKeyGenTest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECDsaKeyGenTest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECBasicAgreementTest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECBasicAgreementTest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector1,The following statement contains a magic number: AsymmetricCipherKeyPair U1 = new AsymmetricCipherKeyPair(                  new ECPublicKeyParameters(                      p.Curve.DecodePoint(Hex.Decode("0251B4496FECC406ED0E75A24A3C03206251419DC0"))' p)'                  new ECPrivateKeyParameters(                      new BigInteger("AA374FFC3CE144E6B073307972CB6D57B2A4E982"' 16)' p));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector1,The following statement contains a magic number: AsymmetricCipherKeyPair U2 = new AsymmetricCipherKeyPair(                  new ECPublicKeyParameters(                      p.Curve.DecodePoint(Hex.Decode("03D99CE4D8BF52FA20BD21A962C6556B0F71F4CA1F"))' p)'                  new ECPrivateKeyParameters(                      new BigInteger("149EC7EA3A220A887619B3F9E5B4CA51C7D1779C"' 16)' p));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector1,The following statement contains a magic number: AsymmetricCipherKeyPair V1 = new AsymmetricCipherKeyPair(                  new ECPublicKeyParameters(                      p.Curve.DecodePoint(Hex.Decode("0349B41E0E9C0369C2328739D90F63D56707C6E5BC"))' p)'                  new ECPrivateKeyParameters(                      new BigInteger("45FB58A92A17AD4B15101C66E74F277E2B460866"' 16)' p));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector1,The following statement contains a magic number: AsymmetricCipherKeyPair V2 = new AsymmetricCipherKeyPair(                  new ECPublicKeyParameters(                      p.Curve.DecodePoint(Hex.Decode("02706E5D6E1F640C6E9C804E75DBC14521B1E5F3B5"))' p)'                  new ECPrivateKeyParameters(                      new BigInteger("18C13FCED9EADF884F7C595C8CB565DEFD0CB41E"' 16)' p));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector1,The following statement contains a magic number: x == null                  || !x.Equals(new BigInteger("5A6955CEFDB4E43255FB7FCF718611E4DF8E05AC"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector2,The following statement contains a magic number: AsymmetricCipherKeyPair U1 = new AsymmetricCipherKeyPair(                  new ECPublicKeyParameters(                      p.Curve.DecodePoint(Hex.Decode("03037D529FA37E42195F10111127FFB2BB38644806BC"))' p)'                  new ECPrivateKeyParameters(                      new BigInteger("03A41434AA99C2EF40C8495B2ED9739CB2155A1E0D"' 16)' p));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector2,The following statement contains a magic number: AsymmetricCipherKeyPair U2 = new AsymmetricCipherKeyPair(                  new ECPublicKeyParameters(                      p.Curve.DecodePoint(Hex.Decode("02015198E74BC2F1E5C9A62B80248DF0D62B9ADF8429"))' p)'                  new ECPrivateKeyParameters(                      new BigInteger("032FC4C61A8211E6A7C4B8B0C03CF35F7CF20DBD52"' 16)' p));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector2,The following statement contains a magic number: AsymmetricCipherKeyPair V1 = new AsymmetricCipherKeyPair(                  new ECPublicKeyParameters(                      p.Curve.DecodePoint(Hex.Decode("03072783FAAB9549002B4F13140B88132D1C75B3886C"))' p)'                  new ECPrivateKeyParameters(                      new BigInteger("57E8A78E842BF4ACD5C315AA0569DB1703541D96"' 16)' p));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector2,The following statement contains a magic number: AsymmetricCipherKeyPair V2 = new AsymmetricCipherKeyPair(                  new ECPublicKeyParameters(                      p.Curve.DecodePoint(Hex.Decode("03067E3AEA3510D69E8EDD19CB2A703DDC6CF5E56E32"))' p)'                  new ECPrivateKeyParameters(                      new BigInteger("02BD198B83A667A8D908EA1E6F90FD5C6D695DE94F"' 16)' p));
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvTestVector2,The following statement contains a magic number: x == null                  || !x.Equals(new BigInteger("038359FFD30C0D5FC1E6154F483B73D43E5CF2B503"' 16))
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvRandom,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ECTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ECTest.cs,TestECMqvRandom,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16)' // b                  n' BigInteger.One);
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,doTestEnc,The following statement contains a magic number: e.GetOutputBlockSize() != size / 4
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,doTestEnc,The following statement contains a magic number: e.GetOutputBlockSize() != (size / 8) - 1
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,doTestEnc,The following statement contains a magic number: byte[] bytes = new byte[e.GetInputBlockSize() + 2];
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,doTestGeneration,The following statement contains a magic number: pGen.Init(size' 10' new SecureRandom());
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestEnc512,The following statement contains a magic number: doTestEnc(512' 0' g512' p512);
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestEnc512,The following statement contains a magic number: doTestEnc(512' 64' g512' p512);
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestEnc512,The following statement contains a magic number: doTestEnc(512' 64' g512' p512);
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestEnc768,The following statement contains a magic number: doTestEnc(768' 0' g768' p768);
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestEnc768,The following statement contains a magic number: doTestEnc(768' 128' g768' p768);
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestEnc768,The following statement contains a magic number: doTestEnc(768' 128' g768' p768);
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestEnc1024,The following statement contains a magic number: doTestEnc(1024' 0' g1024' p1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ElGamalTest.cs,TestGeneration258,The following statement contains a magic number: doTestGeneration(258);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: BigInteger g512 = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: BigInteger p512 = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: DHValidationParameters vp1 = new DHValidationParameters(new byte[20]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: DHValidationParameters vp1 = new DHValidationParameters(new byte[20]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: DHValidationParameters vp2 = new DHValidationParameters(new byte[20]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: DHValidationParameters vp2 = new DHValidationParameters(new byte[20]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: DHValidationParameters vp3 = new DHValidationParameters(new byte[24]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: DHValidationParameters vp3 = new DHValidationParameters(new byte[24]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: byte[] bytes = new byte[20];
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: vp3 = new DHValidationParameters(bytes' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: vp3 = new DHValidationParameters(new byte[20]' 2048);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDH,The following statement contains a magic number: vp3 = new DHValidationParameters(new byte[20]' 2048);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestElGamal,The following statement contains a magic number: BigInteger g512 = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestElGamal,The following statement contains a magic number: BigInteger p512 = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: BigInteger a = BigInteger.ValueOf(1)' b = BigInteger.ValueOf(2)' c = BigInteger.ValueOf(3);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: BigInteger a = BigInteger.ValueOf(1)' b = BigInteger.ValueOf(2)' c = BigInteger.ValueOf(3);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: DsaValidationParameters vp1 = new DsaValidationParameters(new byte[20]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: DsaValidationParameters vp1 = new DsaValidationParameters(new byte[20]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: DsaValidationParameters vp2 = new DsaValidationParameters(new byte[20]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: DsaValidationParameters vp2 = new DsaValidationParameters(new byte[20]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: DsaValidationParameters vp3 = new DsaValidationParameters(new byte[24]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: DsaValidationParameters vp3 = new DsaValidationParameters(new byte[24]' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: byte[] bytes = new byte[20];
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: vp3 = new DsaValidationParameters(bytes' 1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: vp3 = new DsaValidationParameters(new byte[20]' 2048);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestDsa,The following statement contains a magic number: vp3 = new DsaValidationParameters(new byte[20]' 2048);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: BigInteger a = BigInteger.ValueOf(1)' b = BigInteger.ValueOf(2)' c = BigInteger.ValueOf(3);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: BigInteger a = BigInteger.ValueOf(1)' b = BigInteger.ValueOf(2)' c = BigInteger.ValueOf(3);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: Gost3410ValidationParameters v1 = new Gost3410ValidationParameters(100' 1);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: Gost3410ValidationParameters v2 = new Gost3410ValidationParameters(100' 1);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: Gost3410ValidationParameters v3 = new Gost3410ValidationParameters(101' 1);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: v3 = new Gost3410ValidationParameters(100' 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: v3 = new Gost3410ValidationParameters(100' 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: v1 = new Gost3410ValidationParameters(100L' 1L);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: v2 = new Gost3410ValidationParameters(100L' 1L);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: v3 = new Gost3410ValidationParameters(101L' 1L);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: v3 = new Gost3410ValidationParameters(100L' 2L);
Magic Number,Org.BouncyCastle.Crypto.Tests,EqualsHashCodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\EqualsHashCodeTest.cs,TestGost3410,The following statement contains a magic number: v3 = new Gost3410ValidationParameters(100L' 2L);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,DoTestExceptions,The following statement contains a magic number: gcm.Init(false' new KeyParameter(new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RunTestCase,The following statement contains a magic number: macLength <= 16
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RunTestCase,The following statement contains a magic number: byte[] fa = new byte[A.Length / 2];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RunTestCase,The following statement contains a magic number: byte[] la = new byte[A.Length - (A.Length / 2)];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RunTestCase,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' T.Length * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTests,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: int kLength = 16 + 8 * srng.Next(3);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: int kLength = 16 + 8 * srng.Next(3);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: int kLength = 16 + 8 * srng.Next(3);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: int pLength = srng.Next(65536);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: int aLength = srng.Next(256);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: int saLength = srng.Next(256);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: int ivLength = 1 + srng.Next(256);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' 16 * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,RandomTest,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' 16 * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,OutputSizeTests,The following statement contains a magic number: byte[] K = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,OutputSizeTests,The following statement contains a magic number: byte[] IV = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,OutputSizeTests,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' 16 * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,OutputSizeTests,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' 16 * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,OutputSizeTests,The following statement contains a magic number: cipher.GetOutputSize(0) != 16
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,OutputSizeTests,The following statement contains a magic number: cipher.GetOutputSize(16) != 0
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GCMTest.cs,NextInt,The following statement contains a magic number: return (int)(((uint)n * (ulong)((uint)rand.NextInt() >> 1)) >> 31);
Magic Number,Org.BouncyCastle.Crypto.Tests,GMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GMacTest.cs,PerformTest,The following statement contains a magic number: IMac mac = new GMac(new GcmBlockCipher(new AesFastEngine())' testCase.getTag().Length * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GMacTest.cs,PerformTest,The following statement contains a magic number: testInvalidMacSize(97);
Magic Number,Org.BouncyCastle.Crypto.Tests,GMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GMacTest.cs,PerformTest,The following statement contains a magic number: testInvalidMacSize(136);
Magic Number,Org.BouncyCastle.Crypto.Tests,GMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GMacTest.cs,PerformTest,The following statement contains a magic number: testInvalidMacSize(24);
Magic Number,Org.BouncyCastle.Crypto.Tests,GMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GMacTest.cs,testInvalidMacSize,The following statement contains a magic number: mac.Init(new ParametersWithIV(null' new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost28147MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST28147MacTest.cs,Perform,The following statement contains a magic number: byte[] outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost28147MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST28147MacTest.cs,Perform,The following statement contains a magic number: outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: cipher = new BufferedBlockCipher(new CfbBlockCipher(new Gost28147Engine()' 64));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: cipher = new BufferedBlockCipher(new CfbBlockCipher(new Gost28147Engine()' 64));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("3e5f895e276d81d2d52c0763270a458157b784c57abdbd807bc44fd43a32ac06"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("3f0dd5d4400d47c08e4ce505ff7434b6dbf729592e37c74856dab85115a60955"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(512' 1' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: parameters.ValidationParameters.C != 29505  					||  parameters.ValidationParameters.X0 != 24265
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: parameters.ValidationParameters.C != 29505  					||  parameters.ValidationParameters.X0 != 24265
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("7c07c8cf035c2a1cb2b7fae5807ac7cd623dfca7a1a68f6d858317822f1ea00d"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("7e9e036a6ff87dbf9b004818252b1f6fc310bdd4d17cb8c37d9c36c7884de60c"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(512' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(512' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: parameters.ValidationParameters.CL != 13  					||  parameters.ValidationParameters.X0L != 1039943409
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: parameters.ValidationParameters.CL != 13  					||  parameters.ValidationParameters.X0L != 1039943409
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_512,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("a8790aabbd5a998ff524bad048ac69cd1faff2dab048265c8d60d1471c44a9ee"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("30df5ba32ac77170b9632559bef7d37620017756dff3fea1088b4267db0944b8"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 1' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST1_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger              r = new BigInteger("81d69a192e9c7ac21fc07da41bd07e230ba6a94eb9f3c1fd104c7bd976733ca5"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger              s = new BigInteger("315c879c8414f35feb4deb15e7cc0278c48e6ca1596325d6959338d860b0c47a"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_TEST2_1024,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("64a8856628e5669d85f62cd763dd4a99bc56d33dc0e1859122855d141e9e4774"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("319ebac97092b288d469a4b988248794f60c865bc97858d9a3135c6d1a1bf2dd"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("860d82c60e9502cd00c0e9e1f6563feafec304801974d745c5e02079946f729e"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("7ef49264ef022801aaa03033cd97915235fbab4c823ed936b0f360c22114688a"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("4deb95a0b35e7ed7edebe9bef5a0f93739e16b7ff27fe794d989d0c13159cfbc"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("e1d0d30345c24cfeb33efde3deee5fbbda78ddc822b719d860cd0ba1fb6bd43b"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_DParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger              r = new BigInteger("712592d285b792e33b8a9a11e8e6c4f512ddf0042972bbfd1abb0a93e8fc6f54"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_DParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger              s = new BigInteger("2cf26758321258b130d5612111339f09ceb8668241f3482e38baa56529963f07"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_DParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_DParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_DParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_DParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_DParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_DParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("90892707282f433398488f19d31ac48523a8e2ded68944e0da91c6895ee7045e"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("3be4620ee88f1ee8f9dd63c7d145b7e554839feeca125049118262ea4651e9de"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_AExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("8f79a582513df84dc247bcb624340cc0e5a34c4324a20ce7fe3ab8ff38a9db71"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("7508d22fd6cbb45efd438cb875e43f137247088d0f54b29a7c91f68a65b5fa85"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_BExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger r = new BigInteger("169fdb2dc09f690b71332432bfec806042e258fa9a21dafe73c6abfbc71407d9"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: BigInteger s = new BigInteger("9002551808ae40d19f6f31fb67e4563101243cf07cffd5f2f8ff4c537b0c9866"'16);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: pGen.Init(1024' 2' init_random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": r component wrong." + SimpleTest.NewLine  						+ " expecting: " + r.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[0].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,Gost3410_CExParam,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST3410Test.cs,Perform,The following statement contains a magic number: return new SimpleTestResult(false' Name  						+ ": s component wrong." + SimpleTest.NewLine  						+ " expecting: " + s.ToString(16) + SimpleTest.NewLine  						+ " got      : " + sig[1].ToString(16));
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,GcmReorderTest,The following statement contains a magic number: H = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestCombine,The following statement contains a magic number: byte[] A = randomBytes(1000);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestCombine,The following statement contains a magic number: byte[] C = randomBytes(1000);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestCombine,The following statement contains a magic number: byte[] ghashCombine = combine_GHASH(ghashA_' (long)A.Length * 8' ghash_C' (long)C.Length * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestCombine,The following statement contains a magic number: byte[] ghashCombine = combine_GHASH(ghashA_' (long)A.Length * 8' ghash_C' (long)C.Length * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestCombine,The following statement contains a magic number: count < 10
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatAuth,The following statement contains a magic number: byte[] P = randomBlocks(100);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatAuth,The following statement contains a magic number: byte[] A = randomBytes(1000);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatAuth,The following statement contains a magic number: byte[] ghashConcat = concatAuth_GHASH(ghashP_' (long)P.Length * 8' ghashA_' (long)A.Length * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatAuth,The following statement contains a magic number: byte[] ghashConcat = concatAuth_GHASH(ghashP_' (long)P.Length * 8' ghashA_' (long)A.Length * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatAuth,The following statement contains a magic number: count < 10
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatCrypt,The following statement contains a magic number: byte[] P = randomBlocks(100);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatCrypt,The following statement contains a magic number: byte[] A = randomBytes(1000);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatCrypt,The following statement contains a magic number: byte[] ghashConcat = concatCrypt_GHASH(ghash_P' (long)P.Length * 8' ghash_A' (long)A.Length * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatCrypt,The following statement contains a magic number: byte[] ghashConcat = concatCrypt_GHASH(ghash_P' (long)P.Length * 8' ghash_A' (long)A.Length * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestConcatCrypt,The following statement contains a magic number: count < 10
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: byte[] buf1 = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: byte[] buf2 = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: long[] testPow = new long[]{ 10' 1' 8' 17' 24' 13' 2' 13' 2' 3 };
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: byte[] H_a = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestExp,The following statement contains a magic number: i != 10
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestMultiply,The following statement contains a magic number: byte[] a = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestMultiply,The following statement contains a magic number: byte[] b = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,TestMultiply,The following statement contains a magic number: count < 10
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,randomBlocks,The following statement contains a magic number: byte[] bs = new byte[16 * random.Next(upper)];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,combine_GHASH,The following statement contains a magic number: long c = (bitlenC + 127) >> 7;
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,combine_GHASH,The following statement contains a magic number: long c = (bitlenC + 127) >> 7;
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,combine_GHASH,The following statement contains a magic number: byte[] H_c = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,concatAuth_GHASH,The following statement contains a magic number: long a = (bitlenA + 127) >> 7;
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,concatAuth_GHASH,The following statement contains a magic number: long a = (bitlenA + 127) >> 7;
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,concatAuth_GHASH,The following statement contains a magic number: byte[] H_a = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,concatCrypt_GHASH,The following statement contains a magic number: long a = (bitlenA + 127) >> 7;
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,concatCrypt_GHASH,The following statement contains a magic number: long a = (bitlenA + 127) >> 7;
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,concatCrypt_GHASH,The following statement contains a magic number: byte[] H_a = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,GHASH,The following statement contains a magic number: byte[] X = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,GHASH,The following statement contains a magic number: byte[] tmp = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,GHASH,The following statement contains a magic number: int num = System.Math.Min(A.Length - pos' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,GHASH,The following statement contains a magic number: byte[] tmp = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,GHASH,The following statement contains a magic number: int num = System.Math.Min(C.Length - pos' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,GHASH,The following statement contains a magic number: xor(X' lengthBlock((long)A.Length * 8' (long)C.Length * 8));
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,GHASH,The following statement contains a magic number: xor(X' lengthBlock((long)A.Length * 8' (long)C.Length * 8));
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,lengthBlock,The following statement contains a magic number: byte[] tmp = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,lengthBlock,The following statement contains a magic number: UInt64_To_BE((ulong)bitlenC' tmp' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,UInt64_To_BE,The following statement contains a magic number: UInt32_To_BE((uint)(n >> 32)' bs' off);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,UInt64_To_BE,The following statement contains a magic number: UInt32_To_BE((uint)(n)' bs' off + 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,UInt32_To_BE,The following statement contains a magic number: bs[  off] = (byte)(n >> 24);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,UInt32_To_BE,The following statement contains a magic number: bs[++off] = (byte)(n >> 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,UInt32_To_BE,The following statement contains a magic number: bs[++off] = (byte)(n >>  8);
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,multiply,The following statement contains a magic number: byte[] c = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,multiply,The following statement contains a magic number: bool lsb = (tmp[15] & 1) != 0;
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,multiply,The following statement contains a magic number: i < 16
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,shiftRight,The following statement contains a magic number: ++i == 16
Magic Number,Org.BouncyCastle.Crypto.Tests,GcmReorderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GcmReorderTest.cs,shiftRight,The following statement contains a magic number: bit = (byte)(b << 7);
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyTest.cs,PerformTest,The following statement contains a magic number: HCTest(hc' "HC-256 - " + test[0]' Hex.Decode(test[1])' Hex.Decode(test[2])' Hex.Decode(test[3]));
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyTest.cs,PerformTest,The following statement contains a magic number: HCTest(hc' "HC-256 - " + test[0]' Hex.Decode(test[1])' Hex.Decode(test[2])' Hex.Decode(test[3]));
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyTest.cs,PerformTest,The following statement contains a magic number: HCTest(hc' "HC-128 - " + test[0]' Hex.Decode(test[1])' Hex.Decode(test[2])' Hex.Decode(test[3]));
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyTest.cs,PerformTest,The following statement contains a magic number: HCTest(hc' "HC-128 - " + test[0]' Hex.Decode(test[1])' Hex.Decode(test[2])' Hex.Decode(test[3]));
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyTest.cs,HCTest,The following statement contains a magic number: i < 64
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyVecTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyVecTest.cs,RunVector,The following statement contains a magic number: byte[] input = new byte[64];
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyVecTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyVecTest.cs,RunVector,The following statement contains a magic number: byte[] output = new byte[64];
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyVecTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyVecTest.cs,RunVector,The following statement contains a magic number: byte[] digest = new byte[64];
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyVecTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyVecTest.cs,RunVector,The following statement contains a magic number: int end = Int32.Parse(lead.Substring(posB + 2' posC - (posB + 2)));
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyVecTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyVecTest.cs,RunVector,The following statement contains a magic number: int end = Int32.Parse(lead.Substring(posB + 2' posC - (posB + 2)));
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyVecTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyVecTest.cs,RunVector,The following statement contains a magic number: start % 64 != 0 || (end - start != 63)
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyVecTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyVecTest.cs,RunVector,The following statement contains a magic number: start % 64 != 0 || (end - start != 63)
Magic Number,Org.BouncyCastle.Crypto.Tests,HCFamilyVecTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HCFamilyVecTest.cs,RunVector,The following statement contains a magic number: pos += 64;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 42;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 82;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: CompareOkm(2' okm' Hex.Decode(                      "b11e398dc80327a1c8e7f78c596a4934" +                      "4f012eda2d4efad8a050cc4c19afa97c" +                      "59045a99cac7827271cb41c65e590e09" +                      "da3275600c2f09b8367793a9aca3db71" +                      "cc30c58179ec3e87c14c01d5c1f3434f" +                      "1d87"));
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 42;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: CompareOkm(3' okm' Hex.Decode(                      "8da4e775a563c18f715f802a063c5a31" +                      "b8a11f5c5ee1879ec3454e5f3c738d2d" +                      "9d201395faa4b61a96c8"));
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 42;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: CompareOkm(4' okm' Hex.Decode(                      "085a01ea1b10f36933068b56efa5ad81" +                          "a4f14b822f5b091568a9cdd4f155fda2" +                          "c22e422478d305f3f896"));
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 82;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: CompareOkm(5' okm' Hex.Decode(                      "0bd770a74d1160f7c9f12cd5912a06eb" +                      "ff6adcae899d92191fe4305673ba2ffe" +                      "8fa3f1a4e5ad79f3f334b3b202b2173c" +                      "486ea37ce3d397ed034c7f9dfeb15c5e" +                      "927336d0441f4c4300e2cff0d0900b52" +                      "d3b4"));
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 42;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: CompareOkm(6' okm' Hex.Decode(                      "0ac1af7002b3d761d1e55298da9d0506" +                      "b9ae52057220a306e07b6b87e8df21d0" +                      "ea00033de03984d34918"));
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 42;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: CompareOkm(7' okm' Hex.Decode(                      "2c91117204d745f3500d636a62f64f0a" +                      "b3bae548aa53d423b0d1f27ebba6f5e5" +                      "673a081d70cce7acfc48"));
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 42;
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: CompareOkm(101' okm' Hex.Decode(                      "2c91117204d745f3500d636a62f64f0a" +                      "b3bae548aa53d423b0d1f27ebba6f5e5" +                      "673a081d70cce7acfc48"));
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: int l = 255 * hash.GetDigestSize();
Magic Number,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The following statement contains a magic number: Fail("HKDF failed generator test " + 102);
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: byte[] k = new byte[256 * 4];
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: byte[] k = new byte[256 * 4];
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: k[i] = (byte)((i % 4 == 0 || i % 4 == 1) ? 0xff : 0x00);
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: k[i] = (byte)((i % 4 == 0 || i % 4 == 1) ? 0xff : 0x00);
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: k = new byte[256 * 4];
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: k = new byte[256 * 4];
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: k[i] = (byte)((i % 4 == 2 || i % 4 == 3) ? 0xff : 0x00);
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: k[i] = (byte)((i % 4 == 2 || i % 4 == 3) ? 0xff : 0x00);
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: k[i] = (byte)((i % 4 == 2 || i % 4 == 3) ? 0xff : 0x00);
Magic Number,Org.BouncyCastle.Crypto.Tests,IsaacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISAACTest.cs,PerformTest,The following statement contains a magic number: k[i] = (byte)((i % 4 == 2 || i % 4 == 3) ? 0xff : 0x00);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest1,The following statement contains a magic number: eng.SetPadBits(4);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest3,The following statement contains a magic number: eng.SetPadBits(4);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest6,The following statement contains a magic number: Iso9796d2PssSigner eng = new Iso9796d2PssSigner(rsa' new RipeMD160Digest()' 20' true);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest8,The following statement contains a magic number: Iso9796d2PssSigner eng = new Iso9796d2PssSigner(rsa' new RipeMD160Digest()' 20' false);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest10,The following statement contains a magic number: BigInteger          mod = new BigInteger("B3ABE6D91A4020920F8B3847764ECB34C4EB64151A96FDE7B614DC986C810FF2FD73575BDF8532C06004C8B4C8B64F700A50AEC68C0701ED10E8D211A4EA554D"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest10,The following statement contains a magic number: BigInteger          pubExp = new BigInteger("65537"' 10);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest10,The following statement contains a magic number: BigInteger          priExp = new BigInteger("AEE76AE4716F77C5782838F328327012C097BD67E5E892E75C1356E372CCF8EE1AA2D2CBDFB4DA19F703743F7C0BA42B2D69202BA7338C294D1F8B6A5771FF41"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest10,The following statement contains a magic number: i != 500
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: BigInteger          mod = new BigInteger("B3ABE6D91A4020920F8B3847764ECB34C4EB64151A96FDE7B614DC986C810FF2FD73575BDF8532C06004C8B4C8B64F700A50AEC68C0701ED10E8D211A4EA554D"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: BigInteger          pubExp = new BigInteger("65537"' 10);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: BigInteger          priExp = new BigInteger("AEE76AE4716F77C5782838F328327012C097BD67E5E892E75C1356E372CCF8EE1AA2D2CBDFB4DA19F703743F7C0BA42B2D69202BA7338C294D1F8B6A5771FF41"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest11,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: BigInteger          mod = new BigInteger("B3ABE6D91A4020920F8B3847764ECB34C4EB64151A96FDE7B614DC986C810FF2FD73575BDF8532C06004C8B4C8B64F700A50AEC68C0701ED10E8D211A4EA554D"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: BigInteger          pubExp = new BigInteger("65537"' 10);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: BigInteger          priExp = new BigInteger("AEE76AE4716F77C5782838F328327012C097BD67E5E892E75C1356E372CCF8EE1AA2D2CBDFB4DA19F703743F7C0BA42B2D69202BA7338C294D1F8B6A5771FF41"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m1 = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m2 = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest12,The following statement contains a magic number: byte[]              m3 = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest13,The following statement contains a magic number: byte[] challenge = new byte[8];
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest13,The following statement contains a magic number: int nonceLength = modulus.BitLength / 8 - 1 - digest.GetDigestSize() - 2;
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoTest13,The following statement contains a magic number: int nonceLength = modulus.BitLength / 8 - 1 - digest.GetDigestSize() - 2;
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoShortPartialTest,The following statement contains a magic number: BigInteger exp = new BigInteger("10001"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoShortPartialTest,The following statement contains a magic number: BigInteger mod = new BigInteger("b9b70b083da9e37e23cde8e654855db31e21d2d3fc11a5f91d2b3c311efa8f5e28c757dd6fc798631cb1b9d051c14119749cb122ad76e8c3fd7bd93abe282c026a14fba9f8023977a7a0d8b49a24d1ad87e4379a931846a1ef9520ea57e28c998cf65722683d0caaa0da8306973e2496a25cbd3cb4adb4b284e25604fabf12f385456c75da7c3c4cde37440cfb7db8c8fe6851e2bc59767b9f7218540238ac8acef3bc7bd3dc6671320c2c1a2ac8a6799ce1eaf62b9683ab1e1341b37b9249dbd6cd987b2f27b5c4619a1eda7f0fb0b59a519afbbc3cee640261cec90a4bb8fefbc844082dca9f549e56943e758579a453a357e6ccb37fc46718a5b8c3227e5d"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoShortPartialTest,The following statement contains a magic number: Iso9796d2PssSigner pssSign = new Iso9796d2PssSigner(new RsaEngine()' new Sha1Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoFullMessageTest,The following statement contains a magic number: byte[] challenge = new byte[8];
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9796Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9796Test.cs,DoFullMessageTest,The following statement contains a magic number: Iso9796d2PssSigner pssSign = new Iso9796d2PssSigner(new RsaEngine()' new Sha256Digest()' 20' true);
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9797Alg3MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9797Alg3MacTest.cs,PerformTest,The following statement contains a magic number: byte[] outBytes = new byte[8];
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9797Alg3MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9797Alg3MacTest.cs,PerformTest,The following statement contains a magic number: i != input1.Length / 2
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9797Alg3MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9797Alg3MacTest.cs,PerformTest,The following statement contains a magic number: mac.BlockUpdate(input1' input1.Length / 2' input1.Length - (input1.Length / 2));
Magic Number,Org.BouncyCastle.Crypto.Tests,ISO9797Alg3MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ISO9797Alg3MacTest.cs,PerformTest,The following statement contains a magic number: mac.BlockUpdate(input1' input1.Length / 2' input1.Length - (input1.Length / 2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(1' new Kdf1BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed1' mask1);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(2' new Kdf1BytesGenerator(new Sha1Digest())' seed2' mask2);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(3' new Kdf1BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed3' mask3);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(3' new Kdf1BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed3' mask3);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: new Kdf1BytesGenerator(new Sha1Digest()).GenerateBytes(new byte[10]' 0' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: new Kdf1BytesGenerator(new Sha1Digest()).GenerateBytes(new byte[10]' 0' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(1' new Kdf2BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed1' mask1);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(2' new Kdf2BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed2' mask2);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(2' new Kdf2BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed2' mask2);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(3' new Kdf2BytesGenerator(new Sha256Digest())' seed2' adjustedMask2);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(4' new Kdf2BytesGenerator(new Sha1Digest())' seed2' sha1Mask);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(5' new Kdf2BytesGenerator(new Sha1Digest())' seed3' mask3);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(6' new Kdf2BytesGenerator(new Sha1Digest())' seed4' mask4);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: new Kdf2BytesGenerator(new Sha1Digest()).GenerateBytes(new byte[10]' 0' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,Kdf2GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KDF2GeneratorTest.cs,PerformTest,The following statement contains a magic number: new Kdf2BytesGenerator(new Sha1Digest()).GenerateBytes(new byte[10]' 0' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigest,The following statement contains a magic number: byte[] k64 = new byte[1024 * 64];
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigest,The following statement contains a magic number: byte[] k64 = new byte[1024 * 64];
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigest,The following statement contains a magic number: k64[i] = (byte)('a' + (i % 26));
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigest,The following statement contains a magic number: digest.Update(k64[i * 1024]);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigest,The following statement contains a magic number: digest.BlockUpdate(k64' i * 1024 + 1' 1023);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigest,The following statement contains a magic number: digest.BlockUpdate(k64' i * 1024 + 1' 1023);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigest,The following statement contains a magic number: i != 64
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigestDoFinal,The following statement contains a magic number: byte[] cmp = new byte[2 * digest.GetDigestSize()];
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,TestDigestDoFinal,The following statement contains a magic number: byte[] buf = new byte[2 * digest.GetDigestSize()];
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,PerformTest,The following statement contains a magic number: TestDigest(new KeccakDigest(224)' digests224);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,PerformTest,The following statement contains a magic number: TestDigest(new KeccakDigest(256)' digests256);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,PerformTest,The following statement contains a magic number: TestDigest(new KeccakDigest(384)' digests384);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,PerformTest,The following statement contains a magic number: TestDigest(new KeccakDigest(512)' digests512);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,PerformTest,The following statement contains a magic number: TestMac(new KeccakDigest(224)' macKeys' macData' mac224' trunc224);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,PerformTest,The following statement contains a magic number: TestMac(new KeccakDigest(256)' macKeys' macData' mac256' trunc256);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,PerformTest,The following statement contains a magic number: TestMac(new KeccakDigest(384)' macKeys' macData' mac384' trunc384);
Magic Number,Org.BouncyCastle.Crypto.Tests,KeccakDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\KeccakDigestTest.cs,PerformTest,The following statement contains a magic number: TestMac(new KeccakDigest(512)' macKeys' macData' mac512' trunc512);
Magic Number,Org.BouncyCastle.Crypto.Tests,MD5HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MD5HMacTest.cs,Perform,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,MD5HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MD5HMacTest.cs,Perform,The following statement contains a magic number: m2 = Hex.Decode(messages[vector].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Mgf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MGF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(1' new Mgf1BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed1' mask1);
Magic Number,Org.BouncyCastle.Crypto.Tests,Mgf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MGF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(2' new Mgf1BytesGenerator(new Sha1Digest())' seed2' mask2);
Magic Number,Org.BouncyCastle.Crypto.Tests,Mgf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MGF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(3' new Mgf1BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed3' mask3);
Magic Number,Org.BouncyCastle.Crypto.Tests,Mgf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MGF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: checkMask(3' new Mgf1BytesGenerator(new ShortenedDigest(new Sha256Digest()' 20))' seed3' mask3);
Magic Number,Org.BouncyCastle.Crypto.Tests,Mgf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MGF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: new Mgf1BytesGenerator(new Sha1Digest()).GenerateBytes(new byte[10]' 0' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,Mgf1GeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MGF1GeneratorTest.cs,PerformTest,The following statement contains a magic number: new Mgf1BytesGenerator(new Sha1Digest()).GenerateBytes(new byte[10]' 0' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MacTest.cs,Perform,The following statement contains a magic number: byte[] outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MacTest.cs,Perform,The following statement contains a magic number: outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MacTest.cs,Perform,The following statement contains a magic number: outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MacTest.cs,Perform,The following statement contains a magic number: outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MacTest.cs,Perform,The following statement contains a magic number: outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MacTest.cs,Perform,The following statement contains a magic number: outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,MacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\MacTest.cs,Perform,The following statement contains a magic number: outBytes = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,ModeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ModeTest.cs,Perform,The following statement contains a magic number: byte[] out1 = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,ModeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ModeTest.cs,Perform,The following statement contains a magic number: byte[] out2 = new byte[4];
Magic Number,Org.BouncyCastle.Crypto.Tests,ModeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ModeTest.cs,Perform,The following statement contains a magic number: IBlockCipher ofb = new OfbBlockCipher(new DesEngine()' 32);
Magic Number,Org.BouncyCastle.Crypto.Tests,ModeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ModeTest.cs,Perform,The following statement contains a magic number: IBlockCipher cfb = new CfbBlockCipher(new DesEngine()' 32);
Magic Number,Org.BouncyCastle.Crypto.Tests,NaccacheSternTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NaccacheSternTest.cs,PerformTest,The following statement contains a magic number: NaccacheSternKeyGenerationParameters genParam  				= new NaccacheSternKeyGenerationParameters(new SecureRandom()' 768' 8' 30);
Magic Number,Org.BouncyCastle.Crypto.Tests,NaccacheSternTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NaccacheSternTest.cs,PerformTest,The following statement contains a magic number: NaccacheSternKeyGenerationParameters genParam  				= new NaccacheSternKeyGenerationParameters(new SecureRandom()' 768' 8' 30);
Magic Number,Org.BouncyCastle.Crypto.Tests,NaccacheSternTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NaccacheSternTest.cs,PerformTest,The following statement contains a magic number: NaccacheSternKeyGenerationParameters genParam  				= new NaccacheSternKeyGenerationParameters(new SecureRandom()' 768' 8' 30);
Magic Number,Org.BouncyCastle.Crypto.Tests,NaccacheSternTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NaccacheSternTest.cs,PerformTest,The following statement contains a magic number: ((NaccacheSternKeyParameters)pair.Public).Modulus.BitLength < 768
Magic Number,Org.BouncyCastle.Crypto.Tests,NonMemoableDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NonMemoableDigestTest.cs,PerformTest,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,NonMemoableDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\NonMemoableDigestTest.cs,PerformTest,The following statement contains a magic number: m = Hex.Decode(messages[vector].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: BaseOaepTest(2' pubKeyEnc2' privKeyEnc2' output2);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: BaseOaepTest(3' pubKeyEnc3' privKeyEnc3' output3);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 1' pubParam' privParam' seed_1024_1' input_1024_1' output_1024_1);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 2' pubParam' privParam' seed_1024_2' input_1024_2' output_1024_2);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 2' pubParam' privParam' seed_1024_2' input_1024_2' output_1024_2);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 3' pubParam' privParam' seed_1024_3' input_1024_3' output_1024_3);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 3' pubParam' privParam' seed_1024_3' input_1024_3' output_1024_3);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 4' pubParam' privParam' seed_1024_4' input_1024_4' output_1024_4);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 4' pubParam' privParam' seed_1024_4' input_1024_4' output_1024_4);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 5' pubParam' privParam' seed_1024_5' input_1024_5' output_1024_5);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 5' pubParam' privParam' seed_1024_5' input_1024_5' output_1024_5);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 6' pubParam' privParam' seed_1024_6' input_1024_6' output_1024_6);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1024' 6' pubParam' privParam' seed_1024_6' input_1024_6' output_1024_6);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 1' pubParam' privParam' seed_1027_1' input_1027_1' output_1027_1);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 2' pubParam' privParam' seed_1027_2' input_1027_2' output_1027_2);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 2' pubParam' privParam' seed_1027_2' input_1027_2' output_1027_2);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 3' pubParam' privParam' seed_1027_3' input_1027_3' output_1027_3);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 3' pubParam' privParam' seed_1027_3' input_1027_3' output_1027_3);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 4' pubParam' privParam' seed_1027_4' input_1027_4' output_1027_4);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 4' pubParam' privParam' seed_1027_4' input_1027_4' output_1027_4);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 5' pubParam' privParam' seed_1027_5' input_1027_5' output_1027_5);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 5' pubParam' privParam' seed_1027_5' input_1027_5' output_1027_5);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 6' pubParam' privParam' seed_1027_6' input_1027_6' output_1027_6);
Magic Number,Org.BouncyCastle.Crypto.Tests,OaepTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OAEPTest.cs,PerformTest,The following statement contains a magic number: OaepVecTest(1027' 6' pubParam' privParam' seed_1027_6' input_1027_6' output_1027_6);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunTestCase("Test Case " + i' TEST_VECTORS_128[i]' 128' K128);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunTestCase("Test Case " + i' TEST_VECTORS_96[i]' 96' K96);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(128' 128' "67E944D23256C5E0B6C61FA22FDF1EA2");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(128' 128' "67E944D23256C5E0B6C61FA22FDF1EA2");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(192' 128' "F673F2C3E7174AAE7BAE986CA9F29E17");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(192' 128' "F673F2C3E7174AAE7BAE986CA9F29E17");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(256' 128' "D90EB8E9C977C88B79DD793D7FFA161C");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(256' 128' "D90EB8E9C977C88B79DD793D7FFA161C");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(128' 96' "77A3D8E73589158D25D01209");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(128' 96' "77A3D8E73589158D25D01209");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(192' 96' "05D56EAD2752C86BE6932C5E");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(192' 96' "05D56EAD2752C86BE6932C5E");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(256' 96' "5458359AC23B0CBA9E6330DD");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(256' 96' "5458359AC23B0CBA9E6330DD");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(128' 64' "192C9B7BD90BA06A");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(128' 64' "192C9B7BD90BA06A");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(192' 64' "0066BC6E0EF34E24");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(192' 64' "0066BC6E0EF34E24");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(256' 64' "7D4EA5D445501CBE");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,PerformTest,The following statement contains a magic number: RunLongerTestCase(256' 64' "7D4EA5D445501CBE");
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,DoTestExceptions,The following statement contains a magic number: ocb.Init(false' new KeyParameter(new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RunTestCase,The following statement contains a magic number: int macLengthBytes = macLengthBits / 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RunLongerTestCase,The following statement contains a magic number: byte[] keyBytes = new byte[keyLen / 8];
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RunLongerTestCase,The following statement contains a magic number: IAeadBlockCipher c1 = InitOcbCipher(true' new AeadParameters(key' tagLen' CreateNonce(385)));
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RunLongerTestCase,The following statement contains a magic number: byte[] S = new byte[128];
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RunLongerTestCase,The following statement contains a magic number: i < 128
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RunLongerTestCase,The following statement contains a magic number: long expectedTotal = 16256 + (48 * tagLen);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RunLongerTestCase,The following statement contains a magic number: long expectedTotal = 16256 + (48 * tagLen);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,CreateNonce,The following statement contains a magic number: return new byte[]{ 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' (byte)(n >> 8)' (byte)n };
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTests,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: int kLength = 16 + 8 * (System.Math.Abs(srng.NextInt()) % 3);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: int kLength = 16 + 8 * (System.Math.Abs(srng.NextInt()) % 3);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: int kLength = 16 + 8 * (System.Math.Abs(srng.NextInt()) % 3);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: int pLength = (int)((uint)srng.NextInt() >> 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: int aLength = (int)((uint)srng.NextInt() >> 24);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: int saLength = (int)((uint)srng.NextInt() >> 24);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: int ivLength = 1 + NextInt(srng' 15);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' 16 * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,RandomTest,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' 16 * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,OutputSizeTests,The following statement contains a magic number: byte[] K = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,OutputSizeTests,The following statement contains a magic number: byte[] IV = new byte[15];
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,OutputSizeTests,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' 16 * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,OutputSizeTests,The following statement contains a magic number: AeadParameters parameters = new AeadParameters(new KeyParameter(K)' 16 * 8' IV' A);
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,OutputSizeTests,The following statement contains a magic number: cipher.GetOutputSize(0) != 16
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,OutputSizeTests,The following statement contains a magic number: cipher.GetOutputSize(16) != 0
Magic Number,Org.BouncyCastle.Crypto.Tests,OcbTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OCBTest.cs,NextInt,The following statement contains a magic number: return (int)(((uint)n * (ulong)((uint)rand.NextInt() >> 1)) >> 31);
Magic Number,Org.BouncyCastle.Crypto.Tests,OpenBsdBCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\OpenBsdBCryptTest.cs,PerformTest,The following statement contains a magic number: encoded = testString[2];
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,testSig,The following statement contains a magic number: PssSigner blindSigner = new PssSigner(blindingEngine' new Sha1Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,testSig,The following statement contains a magic number: PssSigner signer = new PssSigner(new RsaEngine()' new Sha1Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,isProcessingOkay,The following statement contains a magic number: PssSigner blindSigner = new PssSigner(blindingEngine' new Sha1Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,isProcessingOkay,The following statement contains a magic number: PssSigner pssEng = new PssSigner(new RsaEngine()' new Sha1Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(2' pub1' prv1' slt1b' msg1b' sig1b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(3' pub2' prv2' slt2a' msg2a' sig2a);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(4' pub2' prv2' slt2b' msg2b' sig2b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(5' pub4' prv4' slt4a' msg4a' sig4a);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(6' pub4' prv4' slt4b' msg4b' sig4b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(7' pub8' prv8' slt8a' msg8a' sig8a);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(8' pub8' prv8' slt8b' msg8b' sig8b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(9' pub9' prv9' slt9a' msg9a' sig9a);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: testSig(10' pub9' prv9' slt9b' msg9b' sig9b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x11)' new SecureRandom()' 1024' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssBlindTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSBlindTest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x11)' new SecureRandom()' 1024' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,doTestSig,The following statement contains a magic number: PssSigner eng = new PssSigner(new RsaEngine()' new Sha1Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(2' pub1' prv1' slt1b' msg1b' sig1b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(3' pub2' prv2' slt2a' msg2a' sig2a);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(4' pub2' prv2' slt2b' msg2b' sig2b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(5' pub4' prv4' slt4a' msg4a' sig4a);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(6' pub4' prv4' slt4b' msg4b' sig4b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(7' pub8' prv8' slt8a' msg8a' sig8a);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(8' pub8' prv8' slt8b' msg8b' sig8b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(9' pub9' prv9' slt9a' msg9a' sig9a);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: doTestSig(10' pub9' prv9' slt9b' msg9b' sig9b);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: PssSigner eng = new PssSigner(new RsaEngine()' new Sha1Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The following statement contains a magic number: eng = new PssSigner(new RsaEngine()' new Sha256Digest()' new Sha1Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,PaddingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PaddingTest.cs,blockCheck,The following statement contains a magic number: byte[]  outBytes = new byte[data.Length + 8];
Magic Number,Org.BouncyCastle.Crypto.Tests,PaddingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PaddingTest.cs,doTestPadding,The following statement contains a magic number: padding.AddPadding(data' 3);
Magic Number,Org.BouncyCastle.Crypto.Tests,PaddingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PaddingTest.cs,doTestPadding,The following statement contains a magic number: data = new byte[8];
Magic Number,Org.BouncyCastle.Crypto.Tests,PaddingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PaddingTest.cs,doTestPadding,The following statement contains a magic number: padding.AddPadding(data' 4);
Magic Number,Org.BouncyCastle.Crypto.Tests,PaddingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PaddingTest.cs,doTestPadding,The following statement contains a magic number: i != 200
Magic Number,Org.BouncyCastle.Crypto.Tests,PaddingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PaddingTest.cs,PerformTest,The following statement contains a magic number: padder.PadCount(new byte[8]);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,Run1,The following statement contains a magic number: ICipherParameters key = generator.GenerateDerivedParameters("DESEDE"' 24 * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,Run1,The following statement contains a magic number: ICipherParameters key = generator.GenerateDerivedParameters("DESEDE"' 24 * 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,Run2,The following statement contains a magic number: ParametersWithIV parameters = (ParametersWithIV)  				generator.GenerateDerivedParameters("DES"' 64' 64);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,Run2,The following statement contains a magic number: ParametersWithIV parameters = (ParametersWithIV)  				generator.GenerateDerivedParameters("DES"' 64' 64);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,Run3,The following statement contains a magic number: ICipherParameters key = generator.GenerateDerivedMacParameters(160);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run2(2' password1' Hex.Decode("0A58CF64530D823F")' 1' Hex.Decode("79993DFE048D3B76"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run1(3' password1' Hex.Decode("642B99AB44FB4B1F")' 1' Hex.Decode("F3A95FEC48D7711E985CFE67908C5AB79FA3D7C5CAA5D966"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run2(4' password1' Hex.Decode("642B99AB44FB4B1F")' 1' Hex.Decode("C0A38D64A79BEA1D"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run3(5' password1' Hex.Decode("3D83C0E4546AC140")' 1' Hex.Decode("8D967D88F6CAA9D714800AB3D48051D63F73A312"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run1(6' password2' Hex.Decode("05DEC959ACFF72F7")' 1000' Hex.Decode("ED2034E36328830FF09DF1E1A07DD357185DAC0D4F9EB3D4"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run1(6' password2' Hex.Decode("05DEC959ACFF72F7")' 1000' Hex.Decode("ED2034E36328830FF09DF1E1A07DD357185DAC0D4F9EB3D4"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run2(7' password2' Hex.Decode("05DEC959ACFF72F7")' 1000' Hex.Decode("11DEDAD7758D4860"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run2(7' password2' Hex.Decode("05DEC959ACFF72F7")' 1000' Hex.Decode("11DEDAD7758D4860"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run1(8' password2' Hex.Decode("1682C0FC5B3F7EC5")' 1000' Hex.Decode("483DD6E919D7DE2E8E648BA8F862F3FBFBDC2BCB2C02957F"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run1(8' password2' Hex.Decode("1682C0FC5B3F7EC5")' 1000' Hex.Decode("483DD6E919D7DE2E8E648BA8F862F3FBFBDC2BCB2C02957F"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run2(9' password2' Hex.Decode("1682C0FC5B3F7EC5")' 1000' Hex.Decode("9D461D1B00355C50"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run2(9' password2' Hex.Decode("1682C0FC5B3F7EC5")' 1000' Hex.Decode("9D461D1B00355C50"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run3(10' password2' Hex.Decode("263216FCC2FAB31C")' 1000' Hex.Decode("5EC4C7A80DF652294C3925B6489A7AB857C83476"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs12Test.cs,PerformTest,The following statement contains a magic number: Run3(10' password2' Hex.Decode("263216FCC2FAB31C")' 1000' Hex.Decode("5EC4C7A80DF652294C3925B6489A7AB857C83476"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: SimpleTest test = new PbeTest(this' 0' cipher' sample1' 64);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: test = new PbeTest(this' 1' cipher' sample2' 192);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: test = new PbeTest(this' 2' cipher' sample3' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: generator.Init(                  PbeParametersGenerator.Pkcs5PasswordToBytes(password)'                  salt'                  5);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: !AreEqual(((KeyParameter)generator.GenerateDerivedParameters("DES"' 64)).GetKey()'                  Hex.Decode("d1daa78615f287e6"))
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: generator.Init(                  PbeParametersGenerator.Pkcs5PasswordToBytes(password)'                  salt'                  500);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: !AreEqual(((KeyParameter)generator.GenerateDerivedParameters("DESEDE"' 192)).GetKey()'                  Hex.Decode("6a8970bf68c92caea84a8df28510858607126380cc47ab2d"))
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: generator.Init(PbeParametersGenerator.Pkcs5PasswordToBytes(password)' salt' 60000);
Magic Number,Org.BouncyCastle.Crypto.Tests,Pkcs5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: !AreEqual(((KeyParameter)generator.GenerateDerivedParameters("DESEDE"' 192)).GetKey()'                  Hex.Decode("29aaef810c12ecd2236bbcfb55407f9852b5573dc1c095bb"))
Magic Number,Org.BouncyCastle.Crypto.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Pkcs5Test.cs,PerformTest,The following statement contains a magic number: keySize = func.KeyLength.IntValue * 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testCase,The following statement contains a magic number: byte[] output = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: byte[] kr = new byte[32];
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: byte[] n = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: byte[] output = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: i < 16
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: i < 16
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: len % 2 != 0
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: kr[i + 16] ^= output[i];
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: i < 16
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: len % 3 != 0
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: loop < 13
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testSequential,The following statement contains a magic number: c != 13013 || !Arrays.AreEqual(output' Hex.Decode("89824ddf0816481051f4a82731cd56d5"))
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testReset,The following statement contains a magic number: gen.Init(new KeyGenerationParameters(new SecureRandom()' 256));
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testReset,The following statement contains a magic number: byte[] m = new byte[10000];
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testReset,The following statement contains a magic number: byte[] check = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testReset,The following statement contains a magic number: byte[] output = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testReset,The following statement contains a magic number: poly.Init(new ParametersWithIV(new KeyParameter(k)' new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testReset,The following statement contains a magic number: poly.Update((byte)2);
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testReset,The following statement contains a magic number: poly.Update((byte)2);
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testReset,The following statement contains a magic number: poly.Init(new ParametersWithIV(new KeyParameter(k)' new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testInit,The following statement contains a magic number: gen.Init(new KeyGenerationParameters(new SecureRandom()' 256));
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testInit,The following statement contains a magic number: poly.Init(new ParametersWithIV(new KeyParameter(k)' new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testInit,The following statement contains a magic number: poly.Init(new ParametersWithIV(new KeyParameter(k)' new byte[15]));
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testInit,The following statement contains a magic number: poly.Init(new ParametersWithIV(new KeyParameter(k2)' new byte[16]));
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testKeyGenerator,The following statement contains a magic number: gen.Init(new KeyGenerationParameters(new SecureRandom()' 256));
Magic Number,Org.BouncyCastle.Crypto.Tests,Poly1305Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Poly1305Test.cs,testKeyGenerator,The following statement contains a magic number: k.Length != 32
Magic Number,Org.BouncyCastle.Crypto.Tests,RC2WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RC2WrapTest.cs,Perform,The following statement contains a magic number: ICipherParameters paramWrap = new ParametersWithRandom(new ParametersWithIV(new RC2Parameters(kek1' 40)' iv1)' new RFCRandom());
Magic Number,Org.BouncyCastle.Crypto.Tests,RC2WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RC2WrapTest.cs,Perform,The following statement contains a magic number: ICipherParameters paramUnwrap = new RC2Parameters(kek1' 40);
Magic Number,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The following statement contains a magic number: doWrapTest(2' new DesEdeEngine()' Hex.Decode("6A8970BF68C92CAEA84A8DF28510858607126380CC47AB2D")' Hex.Decode("BAF1CA7931213C4E")' r2'  				Hex.Decode("8C637D887223A2F965B566EB014B0FA5D52300A3F7EA40FFFC577203C71BAF3B")'  				Hex.Decode("C03C514ABDB9E2C5AAC038572B5E24553876B377AAFB82ECA5A9D73F8AB143D9EC74E6CAD7DB260C"));
Magic Number,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The following statement contains a magic number: ParametersWithIV parameters = new ParametersWithIV(new KeyParameter(new byte[16])' new byte[16]);
Magic Number,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The following statement contains a magic number: ParametersWithIV parameters = new ParametersWithIV(new KeyParameter(new byte[16])' new byte[16]);
Magic Number,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The following statement contains a magic number: byte[] buf = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Rfc3211WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RFC3211WrapTest.cs,PerformTest,The following statement contains a magic number: wrapper.Unwrap(buf' 0' buf.Length / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x11)' new SecureRandom()' 768' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x11)' new SecureRandom()' 768' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The following statement contains a magic number: ((RsaKeyParameters)pair.Public).Modulus.BitLength < 768
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The following statement contains a magic number: genParam = new RsaKeyGenerationParameters(BigInteger.ValueOf(0x11)' new SecureRandom()' 1024' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The following statement contains a magic number: genParam = new RsaKeyGenerationParameters(BigInteger.ValueOf(0x11)' new SecureRandom()' 1024' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The following statement contains a magic number: ((RsaKeyParameters)pair.Public).Modulus.BitLength < 1024
Magic Number,Org.BouncyCastle.Crypto.Tests,RipeMD128HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RipeMD128HMacTest.cs,Perform,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,RipeMD160HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RipeMD160HMacTest.cs,Perform,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,doTestBadSig,The following statement contains a magic number: RsaKeyGenerationParameters factParams = new RsaKeyGenerationParameters(  //				BigInteger.ValueOf(0x11)' new SecureRandom()' 768' 25);  				BigInteger.ValueOf(3)' new SecureRandom()' 768' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,doTestBadSig,The following statement contains a magic number: RsaKeyGenerationParameters factParams = new RsaKeyGenerationParameters(  //				BigInteger.ValueOf(0x11)' new SecureRandom()' 768' 25);  				BigInteger.ValueOf(3)' new SecureRandom()' 768' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,doTestBadSig,The following statement contains a magic number: RsaKeyGenerationParameters factParams = new RsaKeyGenerationParameters(  //				BigInteger.ValueOf(0x11)' new SecureRandom()' 768' 25);  				BigInteger.ValueOf(3)' new SecureRandom()' 768' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters  genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x11)' new SecureRandom()' 768' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters  genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x11)' new SecureRandom()' 768' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: ((RsaKeyParameters)pair.Public).Modulus.BitLength < 768
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: genParam = new RsaKeyGenerationParameters(BigInteger.ValueOf(0x11)' new SecureRandom()' 1024' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: genParam = new RsaKeyGenerationParameters(BigInteger.ValueOf(0x11)' new SecureRandom()' 1024' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: ((RsaKeyParameters)pair.Public).Modulus.BitLength < 1024
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x11)' new SecureRandom()' 16' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x11)' new SecureRandom()' 16' 25);
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: pqDiff.BitLength < 5
Magic Number,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Crypto.Tests,SCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SCryptTest.cs,PerformTest,The following statement contains a magic number: int N = ExtractInteger(args[2]);
Magic Number,Org.BouncyCastle.Crypto.Tests,SCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SCryptTest.cs,PerformTest,The following statement contains a magic number: int r = ExtractInteger(args[3]);
Magic Number,Org.BouncyCastle.Crypto.Tests,SCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SCryptTest.cs,PerformTest,The following statement contains a magic number: int p = ExtractInteger(args[4]);
Magic Number,Org.BouncyCastle.Crypto.Tests,SCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SCryptTest.cs,PerformTest,The following statement contains a magic number: int dkLen = ExtractInteger(args[5]);
Magic Number,Org.BouncyCastle.Crypto.Tests,SCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SCryptTest.cs,PerformTest,The following statement contains a magic number: N <= 16384
Magic Number,Org.BouncyCastle.Crypto.Tests,SCryptTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SCryptTest.cs,ExtractQuotedString,The following statement contains a magic number: arg = arg.Substring(1' arg.Length - 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha1HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA1HMacTest.cs,Perform,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha1HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA1HMacTest.cs,Perform,The following statement contains a magic number: m2 = Hex.Decode(messages[vector].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha224HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA224HMacTest.cs,Perform,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha224HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA224HMacTest.cs,Perform,The following statement contains a magic number: m2 = Hex.Decode(messages[vector].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha256HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA256HMacTest.cs,Perform,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha256HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA256HMacTest.cs,Perform,The following statement contains a magic number: m2 = Hex.Decode(messages[vector].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha384HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA384HMacTest.cs,Perform,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha384HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA384HMacTest.cs,Perform,The following statement contains a magic number: m2 = Hex.Decode(messages[vector].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha3DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA3DigestTest.cs,DecodeBinary,The following statement contains a magic number: int fullBytes = bits / 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha3DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA3DigestTest.cs,DecodeBinary,The following statement contains a magic number: int totalBytes = (bits + 7) / 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha3DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA3DigestTest.cs,DecodeBinary,The following statement contains a magic number: int totalBytes = (bits + 7) / 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha3DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA3DigestTest.cs,DecodeBinary,The following statement contains a magic number: string byteStr = Reverse(block.Substring(i * 8' 8));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha3DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA3DigestTest.cs,DecodeBinary,The following statement contains a magic number: string byteStr = Reverse(block.Substring(i * 8' 8));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha3DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA3DigestTest.cs,DecodeBinary,The following statement contains a magic number: string byteStr = Reverse(block.Substring(fullBytes * 8));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha3DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA3DigestTest.cs,ParseBinary,The following statement contains a magic number: return new BigInteger(s' 2).IntValue;
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha3DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA3DigestTest.cs,RunTestVector,The following statement contains a magic number: int partialBits = bits % 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha512HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA512HMacTest.cs,Perform,The following statement contains a magic number: m = Hex.Decode(messages[i].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,Sha512HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SHA512HMacTest.cs,Perform,The following statement contains a magic number: m2 = Hex.Decode(messages[vector].Substring(2));
Magic Number,Org.BouncyCastle.Crypto.Tests,SkeinDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SkeinDigestTest.cs,runTest,The following statement contains a magic number: digest.BlockUpdate(message' 0' message.Length / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,SkeinDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SkeinDigestTest.cs,runTest,The following statement contains a magic number: digest.BlockUpdate(message' message.Length / 2' message.Length - message.Length / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,SkeinDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SkeinDigestTest.cs,runTest,The following statement contains a magic number: digest.BlockUpdate(message' message.Length / 2' message.Length - message.Length / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,SkeinDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SkeinDigestTest.cs,runTest,The following statement contains a magic number: d.BlockUpdate(message' message.Length / 2' message.Length - message.Length / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,SkeinDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SkeinDigestTest.cs,runTest,The following statement contains a magic number: d.BlockUpdate(message' message.Length / 2' message.Length - message.Length / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,SkeinMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SkeinMacTest.cs,runTest,The following statement contains a magic number: Fail(digest.AlgorithmName + " message " + (dc.getMessage().Length * 8) + " mismatch.\n Message  " + Hex.ToHexString(dc.getMessage())  				     + "\n Key      " + Hex.ToHexString(dc.getKey()) + "\n Expected "  				     + Hex.ToHexString(dc.getDigest()) + "\n Actual   " + Hex.ToHexString(output));
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(Salsa20Engine)' 32' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(Salsa20Engine)' 32' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(Salsa20Engine)' 16' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(Salsa20Engine)' 16' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(XSalsa20Engine)' 32' 24);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(XSalsa20Engine)' 32' 24);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(ChaChaEngine)' 32' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(ChaChaEngine)' 32' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(ChaChaEngine)' 16' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(ChaChaEngine)' 16' 8);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(RC4Engine)' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(IsaacEngine)' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(HC128Engine)' 16' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(HC128Engine)' 16' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(HC256Engine)' 16' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,PerformTest,The following statement contains a magic number: TestReset(typeof(HC256Engine)' 16' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,StreamCipherResetTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\StreamCipherResetTest.cs,TestReset,The following statement contains a magic number: byte[] plaintext = new byte[1023];
Magic Number,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,PerformTest,The following statement contains a magic number: testWithRandomParams(256);
Magic Number,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,PerformTest,The following statement contains a magic number: testWithRandomParams(384);
Magic Number,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,PerformTest,The following statement contains a magic number: testWithRandomParams(512);
Magic Number,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,testWithRandomParams,The following statement contains a magic number: paramGen.Init(bits' 25' random);
Magic Number,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,testMutualVerification,The following statement contains a magic number: byte[] s = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,testClientCatchesBadB,The following statement contains a magic number: byte[] s = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Srp6Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SRP6Test.cs,testServerCatchesBadA,The following statement contains a magic number: byte[] s = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The following statement contains a magic number: salsa20Test1(20' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))'  					set1v0_0' set1v0_192'  set1v0_256'  set1v0_448);
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The following statement contains a magic number: salsa20Test1(20' new ParametersWithIV(new KeyParameter(Hex.Decode("00400000000000000000000000000000"))' Hex.Decode("0000000000000000"))'  					set1v9_0' set1v9_192'  set1v9_256'  set1v9_448);
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The following statement contains a magic number: salsa20Test1(12' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))'  		             salsa12_set1v0_0' salsa12_set1v0_192'  salsa12_set1v0_256'  salsa12_set1v0_448);
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,PerformTest,The following statement contains a magic number: salsa20Test1(8' new ParametersWithIV(new KeyParameter(Hex.Decode("80000000000000000000000000000000"))' Hex.Decode("0000000000000000"))'  		             salsa8_set1v0_0' salsa8_set1v0_192'  salsa8_set1v0_256'  salsa8_set1v0_448);
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test1,The following statement contains a magic number: byte[]       buf = new byte[64];
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test1,The following statement contains a magic number: salsa.ProcessBytes(zeroes' 0' 64' buf' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test1,The following statement contains a magic number: switch (i)  				{  				case 0:  					if (!AreEqual(buf' Hex.Decode(v0)))  					{  						mismatch("v0/" + rounds' v0' buf);  					}  					break;  				case 3:  					if (!AreEqual(buf' Hex.Decode(v192)))  					{  						mismatch("v192/" + rounds' v192' buf);  					}  					break;  				case 4:  					if (!AreEqual(buf' Hex.Decode(v256)))  					{  						mismatch("v256/" + rounds' v256' buf);  					}  					break;  				default:  					// ignore  					break;  				}
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test1,The following statement contains a magic number: switch (i)  				{  				case 0:  					if (!AreEqual(buf' Hex.Decode(v0)))  					{  						mismatch("v0/" + rounds' v0' buf);  					}  					break;  				case 3:  					if (!AreEqual(buf' Hex.Decode(v192)))  					{  						mismatch("v192/" + rounds' v192' buf);  					}  					break;  				case 4:  					if (!AreEqual(buf' Hex.Decode(v256)))  					{  						mismatch("v256/" + rounds' v256' buf);  					}  					break;  				default:  					// ignore  					break;  				}
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test1,The following statement contains a magic number: i != 7
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test1,The following statement contains a magic number: i != 64
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test2,The following statement contains a magic number: byte[]       buf = new byte[64];
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test2,The following statement contains a magic number: salsa.ProcessBytes(zeroes' 0' 64' buf' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test2,The following statement contains a magic number: switch (i)  				{  				case 0:  					if (!AreEqual(buf' Hex.Decode(v0)))  					{  						mismatch("v0"' v0' buf);  					}  					break;  				case 1023:  					if (!AreEqual(buf' Hex.Decode(v65472)))  					{  						mismatch("v65472"' v65472' buf);  					}  					break;  				case 1024:  					if (!AreEqual(buf' Hex.Decode(v65536)))  					{  						mismatch("v65536"' v65536' buf);  					}  					break;  				default:  					// ignore  					break;  				}
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test2,The following statement contains a magic number: switch (i)  				{  				case 0:  					if (!AreEqual(buf' Hex.Decode(v0)))  					{  						mismatch("v0"' v0' buf);  					}  					break;  				case 1023:  					if (!AreEqual(buf' Hex.Decode(v65472)))  					{  						mismatch("v65472"' v65472' buf);  					}  					break;  				case 1024:  					if (!AreEqual(buf' Hex.Decode(v65536)))  					{  						mismatch("v65536"' v65536' buf);  					}  					break;  				default:  					// ignore  					break;  				}
Magic Number,Org.BouncyCastle.Crypto.Tests,Salsa20Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\Salsa20Test.cs,salsa20Test2,The following statement contains a magic number: i != 1025
Magic Number,Org.BouncyCastle.Crypto.Tests,SerpentTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SerpentTest.cs,PerformTest,The following statement contains a magic number: DoEax(Hex.Decode("7494A57648FB420043BFBFC5639EB82D")' Hex.Decode("6DF94638B83E01458F3E30C9A1D6AF1C")' Strings.ToByteArray("EAX Mode Test")' new byte[0]' 128' Hex.Decode("96C521F32DC5E9BBC369DDE4914CB13B710EEBBAB7D706D3ABE06A99DC"));
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,DecodeBinary,The following statement contains a magic number: int fullBytes = bits / 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,DecodeBinary,The following statement contains a magic number: int totalBytes = (bits + 7) / 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,DecodeBinary,The following statement contains a magic number: int totalBytes = (bits + 7) / 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,DecodeBinary,The following statement contains a magic number: string byteStr = Reverse(block.Substring(i * 8' 8));
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,DecodeBinary,The following statement contains a magic number: string byteStr = Reverse(block.Substring(i * 8' 8));
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,DecodeBinary,The following statement contains a magic number: string byteStr = Reverse(block.Substring(fullBytes * 8));
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,ParseBinary,The following statement contains a magic number: return new BigInteger(s' 2).IntValue;
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,RunTestVector,The following statement contains a magic number: int partialBits = bits % 8;
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,RunTestVector,The following statement contains a magic number: d.DoOutput(output' 0' outLen / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,RunTestVector,The following statement contains a magic number: d.DoOutput(output' outLen / 2' output.Length - outLen / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,RunTestVector,The following statement contains a magic number: d.DoOutput(output' outLen / 2' output.Length - outLen / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,RunTestVector,The following statement contains a magic number: d.DoOutput(output' 0' outLen / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,RunTestVector,The following statement contains a magic number: d.DoFinal(output' outLen / 2' output.Length - outLen / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShakeDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShakeDigestTest.cs,RunTestVector,The following statement contains a magic number: d.DoFinal(output' outLen / 2' output.Length - outLen / 2);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The following statement contains a magic number: ShortenedDigest sd = new ShortenedDigest(new Sha1Digest()' 10);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The following statement contains a magic number: sd.GetDigestSize() != 10
Magic Number,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The following statement contains a magic number: sd.DoFinal(new byte[10]' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The following statement contains a magic number: sd = new ShortenedDigest(new Sha512Digest()' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The following statement contains a magic number: sd.GetDigestSize() != 20
Magic Number,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The following statement contains a magic number: sd.DoFinal(new byte[20]' 0);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The following statement contains a magic number: new ShortenedDigest(null' 20);
Magic Number,Org.BouncyCastle.Crypto.Tests,ShortenedDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\ShortenedDigestTest.cs,PerformTest,The following statement contains a magic number: new ShortenedDigest(new Sha1Digest()' 50);
Magic Number,Org.BouncyCastle.Crypto.Tests,SipHashTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SipHashTest.cs,PerformTest,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Crypto.Tests,SipHashTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SipHashTest.cs,RandomTest,The following statement contains a magic number: byte[] key = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,SipHashTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SipHashTest.cs,RandomTest,The following statement contains a magic number: int length = 1 + random.Next(1024);
Magic Number,Org.BouncyCastle.Crypto.Tests,SipHashTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\SipHashTest.cs,UpdateMac,The following statement contains a magic number: switch (updateType)              {              case UPDATE_BYTES:              {                  for (int i = 0; i < input.Length; ++i)                  {                      mac.Update(input[i]);                  }                  break;              }              case UPDATE_FULL:              {                  mac.BlockUpdate(input' 0' input.Length);                  break;              }              case UPDATE_MIX:              {                  int step = System.Math.Max(1' input.Length / 3);                  int pos = 0;                  while (pos < input.Length)                  {                      mac.Update(input[pos++]);                      int len = System.Math.Min(input.Length - pos' step);                      mac.BlockUpdate(input' pos' len);                      pos += len;                  }                  break;              }              default:                  throw new InvalidOperationException();              }
Magic Number,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,PerformTest,The following statement contains a magic number: DoCbcMonte(new byte[16]' new byte[16]' new byte[16]' Hex.Decode("9ea101ecebaa41c712bcb0d9bab3e2e4"));
Magic Number,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,PerformTest,The following statement contains a magic number: DoCbcMonte(new byte[16]' new byte[16]' new byte[16]' Hex.Decode("9ea101ecebaa41c712bcb0d9bab3e2e4"));
Magic Number,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,PerformTest,The following statement contains a magic number: DoCbcMonte(new byte[16]' new byte[16]' new byte[16]' Hex.Decode("9ea101ecebaa41c712bcb0d9bab3e2e4"));
Magic Number,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,DoCbcMonte,The following statement contains a magic number: byte[] ct = new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,DoCbcMonte,The following statement contains a magic number: Array.Copy(iv' 0' ct' 0' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,DoCbcMonte,The following statement contains a magic number: Array.Copy(ct' 0' pt' 0' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,DoCbcMonte,The following statement contains a magic number: Array.Copy(ct' 0' iv' 0' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,TnepresTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\TnepresTest.cs,DoCbcMonte,The following statement contains a magic number: i < 10000
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 2' (byte) 0xAE);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 3' (byte) 0xFE);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 252' (byte) 0x48);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 253' (byte) 0x17);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 254' (byte) 0x24);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 255' (byte) 0x73);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 1020' (byte) 0x1D);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 1021' (byte) 0xAE);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 1022' (byte) 0xC3);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 1023' (byte) 0x5A);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 102396' (byte) 0x1D);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 102397' (byte) 0xA7);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 102398' (byte) 0xE1);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcKsa3Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCKSA3Test.cs,checkEngine,The following statement contains a magic number: checkByte(output' 102399' (byte) 0xDC);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCMacTest.cs,PerformTest,The following statement contains a magic number: int offset = 117;
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCMacTest.cs,PerformTest,The following statement contains a magic number: byte[] m = new byte[512];
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCMacTest.cs,PerformTest,The following statement contains a magic number: i < 256
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCMacTest.cs,PerformTest,The following statement contains a magic number: mac.BlockUpdate(m' offset' 256);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCMacTest.cs,PerformTest,The following statement contains a magic number: byte[] output = new byte[20];
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 2' (byte) 0x79);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 3' (byte) 0xF5);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 252' (byte) 0xB8);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 253' (byte) 0xFC);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 254' (byte) 0x66);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 255' (byte) 0xA4);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 1020' (byte) 0xE0);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 1021' (byte) 0x56);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 1022' (byte) 0x40);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 1023' (byte) 0xA5);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 102396' (byte) 0x81);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 102397' (byte) 0xCA);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 102398' (byte) 0x49);
Magic Number,Org.BouncyCastle.Crypto.Tests,VmpcTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\VMPCTest.cs,checkEngine,The following statement contains a magic number: checkByte(output' 102399' (byte) 0x9A);
Magic Number,Org.BouncyCastle.Crypto.Tests,WhirlpoolDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\WhirlpoolDigestTest.cs,PerformTest,The following statement contains a magic number: byte[] thirtyOneZeros = new byte[31];
Magic Number,Org.BouncyCastle.Crypto.Tests,WhirlpoolDigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\WhirlpoolDigestTest.cs,PerformTest,The following statement contains a magic number: byte[] millionAInByteArray = new byte[1000000];
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,PerformTest,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest1,The following statement contains a magic number: BigInteger n = new BigInteger("c9be1b28f8caccca65d86cc3c9bbcc13eccc059df3b80bd2292b811eff3aa0dd75e1e85c333b8e3fa9bed53bb20f5359ff4e6900c5e9a388e3a4772a583a79e2299c76582c2b27694b65e9ba22e66bfb817f8b70b22206d7d8ae488c86dbb7137c26d5eff9b33c90e6cee640630313b7a715802e15142fef498c404a8de19674974785f0f852e2d470fe85a2e54ffca9f5851f672b71df691785a5cdabe8f14aa628942147de7593b2cf962414a5b59c632c4e14f1768c0ab2e9250824beea60a3529f11bf5e070ce90a47686eb0be1086fb21f0827f55295b4a48307db0b048c05a4aec3f488c576ca6f1879d354224c7e84cbcd8e76dd217a3de54dba73c35"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest1,The following statement contains a magic number: BigInteger e = new BigInteger("e75b1b"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest2,The following statement contains a magic number: BigInteger n = new BigInteger("b746ba6c3c0be64bbe33aa55b2929b0af4e86d773d44bfe5914db9287788c4663984b61a418d2eecca30d752ff6b620a07ec72eeb2b422d2429da352407b99982800b9dd7697be6a7b1baa98ca5f4fc2fe33400f20b9dba337ac25c987804165d4a6e0ee4d18eabd6de5abdfe578cae6713ff91d16c80a5bb20217fe614d9509e75a43e1825327b9da8f0a9f6eeaa1c04b69fb4bacc073569fff4ab491becbe6d0441d437fc3fa823239c4a0f75321666b68dd3f66e2dd394089a15bcc288a68a4eb0a48e17d639743b9dea0a91cc35820544732aff253f8ca9967c609dc01c2f8cd0313a7a91cfa94ff74289a1d2b6f19d1811f4b9a65f4cce9e5759b4cc64f"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest2,The following statement contains a magic number: BigInteger e = new BigInteger("dcbbdb"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest3,The following statement contains a magic number: BigInteger n = new BigInteger("dcb5686a3d2063a3f9cf7b9b32d2d3765b4c449b09b4960245a9111cd3b0cbd3260496885b8e1fa5db33b03efcc759d9c1afe29d93c6faebc7e0efada334b5b9a29655e2da2c8f11103d8203be311feab7ae88e9f1b2ec7d8fc655d77202b1681dd9717ec0f525b35584987e19539635a1ed23ca482a00149c609a23dc1645fd"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest3,The following statement contains a magic number: BigInteger e = new BigInteger("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dc9f7"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tests,X931SignerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\X931SignerTest.cs,ShouldPassSignatureTest3,The following statement contains a magic number: BigInteger d = new BigInteger("189d6345099098992e0c9ca5f281e1338092342fa0acc85cc2a111f30f9bd2fb4753cd1a48ef0ddca9bf1af33ec76fb2e23a9fb4896c26f2235b516f7c05ef7ae81e70f4b491a5fedba9b935e9c76d761a813ce7776ff8a1e5efe1166ff2eca26aa900da88c908d51af9de26977fe39719cc781df32216fa41b838f0c63803c3"' 16);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestAvailable,The following statement contains a magic number: input.Write(new byte[10]);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestAvailable,The following statement contains a magic number: Assert.AreEqual(10' input.Available);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestAvailable,The following statement contains a magic number: input.Write(new byte[5]);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestAvailable,The following statement contains a magic number: Assert.AreEqual(15' input.Available);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestAvailable,The following statement contains a magic number: Assert.AreEqual(14' input.Available);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestAvailable,The following statement contains a magic number: input.Read(new byte[4]);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestAvailable,The following statement contains a magic number: Assert.AreEqual(10' input.Available);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: Assert.AreEqual(0' input.Skip(10));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: input.Write(new byte[2]);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: Assert.AreEqual(2' input.Skip(2));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: Assert.AreEqual(2' input.Skip(2));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: input.Write(new byte[10]);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: Assert.AreEqual(5' input.Skip(5));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: Assert.AreEqual(5' input.Skip(5));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: Assert.AreEqual(5' input.Available);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: Assert.AreEqual(5' input.Skip(20));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestSkip,The following statement contains a magic number: Assert.AreEqual(5' input.Skip(20));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestReadArray,The following statement contains a magic number: byte[] buffer = new byte[5];
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestReadArray,The following statement contains a magic number: Assert.AreEqual(1' input.Read(buffer' 2' 1));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestReadArray,The following statement contains a magic number: Assert.AreEqual(5' input.Read(buffer));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestReadArray,The following statement contains a magic number: Assert.AreEqual(3' input.Read(buffer));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestPeek,The following statement contains a magic number: byte[] buffer = new byte[5];
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestPeek,The following statement contains a magic number: Assert.AreEqual(5' input.Peek(buffer));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestPeek,The following statement contains a magic number: Assert.AreEqual(6' input.Available);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestPeek,The following statement contains a magic number: Assert.AreEqual(5' input.Peek(buffer));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,ByteQueueStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\ByteQueueStreamTest.cs,TestPeek,The following statement contains a magic number: Assert.AreEqual(5' input.Available);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,DtlsProtocolTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,TestClientServer,The following statement contains a magic number: MockDatagramAssociation network = new MockDatagramAssociation(1500);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,DtlsProtocolTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,TestClientServer,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,DtlsProtocolTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,TestClientServer,The following statement contains a magic number: dtlsClient.Receive(buf' 0' buf.Length' 100) >= 0
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,Server,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,Run,The following statement contains a magic number: int length = dtlsServer.Receive(buf' 0' buf.Length' 1000);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,Server,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsProtocolTest.cs,Run,The following statement contains a magic number: int length = dtlsServer.Receive(buf' 0' buf.Length' 100);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,DtlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsTestCase.cs,RunTest,The following statement contains a magic number: MockDatagramAssociation network = new MockDatagramAssociation(1500);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,DtlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsTestCase.cs,RunTest,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,DtlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\DtlsTestCase.cs,RunTest,The following statement contains a magic number: dtlsClient.Receive(buf' 0' buf.Length' 100) >= 0
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,LoggingDatagramTransport,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\LoggingDatagramTransport.cs,DumpDatagram,The following statement contains a magic number: pos % 16 == 0
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,LoggingDatagramTransport,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\LoggingDatagramTransport.cs,DumpDatagram,The following statement contains a magic number: sb.Append(HEX_CHARS[val >> 4]);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,MockDtlsClient,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\MockDtlsClient.cs,GetClientExtensions,The following statement contains a magic number: TlsExtensionsUtilities.AddPaddingExtension(clientExtensions' mContext.SecureRandom.Next(16));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,MyIdentityManager,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\MockPskTlsServer.cs,GetPsk,The following statement contains a magic number: return new byte[16];
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,MockTlsClient,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\MockTlsClient.cs,GetClientExtensions,The following statement contains a magic number: TlsExtensionsUtilities.AddPaddingExtension(clientExtensions' mContext.SecureRandom.Next(16));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,PskTlsClientTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\PskTlsClientTest.cs,Main,The following statement contains a magic number: int port = 5556;
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsClientTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsClientTest.cs,Main,The following statement contains a magic number: int port = 5556;
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsProtocolTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsProtocolTest.cs,TestClientServer,The following statement contains a magic number: int length = 1000;
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsProtocolNonBlockingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsProtocolNonBlockingTest.cs,DoTestClientServer,The following statement contains a magic number: byte[] data = new byte[1024];
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsProtocolNonBlockingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsProtocolNonBlockingTest.cs,CheckClosed,The following statement contains a magic number: protocol.OfferInput(new byte[10]);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsProtocolNonBlockingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsProtocolNonBlockingTest.cs,CheckClosed,The following statement contains a magic number: protocol.OfferOutput(new byte[10]' 0' 10);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsProtocolNonBlockingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsProtocolNonBlockingTest.cs,CheckClosed,The following statement contains a magic number: protocol.OfferOutput(new byte[10]' 0' 10);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsPskProtocolTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsPskProtocolTest.cs,TestClientServer,The following statement contains a magic number: int length = 1000;
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsServerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsServerTest.cs,Main,The following statement contains a magic number: int port = 5556;
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsSrpProtocolTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsSrpProtocolTest.cs,TestClientServer,The following statement contains a magic number: int length = 1000;
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestCase,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestCase.cs,RunTest,The following statement contains a magic number: int length = 1000;
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestClientImpl,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestClientImpl.cs,CorruptBit,The following statement contains a magic number: int bit = mContext.SecureRandom.Next(bs.Length << 3);
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestClientImpl,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestClientImpl.cs,CorruptBit,The following statement contains a magic number: bs[bit >> 3] ^= (byte)(1 << (bit & 7));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestClientImpl,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestClientImpl.cs,CorruptBit,The following statement contains a magic number: bs[bit >> 3] ^= (byte)(1 << (bit & 7));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestUtilities.cs,Fingerprint,The following statement contains a magic number: fp.Append(hex.Substring(i' 2));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestUtilities.cs,Fingerprint,The following statement contains a magic number: fp.Append(hex.Substring(i' 2));
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,TlsTestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\TlsTestUtilities.cs,Fingerprint,The following statement contains a magic number: (i += 2) < hex.Length
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,UnreliableDatagramTransport,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\UnreliableDatagramTransport.cs,UnreliableDatagramTransport,The following statement contains a magic number: percentPacketLossReceiving < 0 || percentPacketLossReceiving > 100
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,UnreliableDatagramTransport,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\UnreliableDatagramTransport.cs,UnreliableDatagramTransport,The following statement contains a magic number: percentPacketLossSending < 0 || percentPacketLossSending > 100
Magic Number,Org.BouncyCastle.Crypto.Tls.Tests,UnreliableDatagramTransport,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\tls\test\UnreliableDatagramTransport.cs,LostPacket,The following statement contains a magic number: return percentPacketLoss > 0 && random.Next(100) < percentPacketLoss;
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECAlgorithmsTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECAlgorithmsTest.cs,DoTestSumOfTwoMultiplies,The following statement contains a magic number: AssertPointsEqual("ECAlgorithms.SumOfTwoMultiplies is incorrect"' results[0]' results[2]);
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointPerformanceTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointPerformanceTest.cs,RandMult,The following statement contains a magic number: j < 30
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointPerformanceTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointPerformanceTest.cs,RandMult,The following statement contains a magic number: j < 64
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointPerformanceTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointPerformanceTest.cs,RandMult,The following statement contains a magic number: sb.Append(1000.0 / avgRate);
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointPerformanceTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointPerformanceTest.cs,RandMult,The following statement contains a magic number: BigInteger[] ks = new BigInteger[128];
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointPerformanceTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointPerformanceTest.cs,RandMult,The following statement contains a magic number: double roundRate = count * MULTS_PER_CHECK * 1000L / roundElapsed;
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointPerformanceTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointPerformanceTest.cs,RandMult,The following statement contains a magic number: return (totalRate - minRate - maxRate) / (NUM_ROUNDS - 2);
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,TestPointCreationConsistency,The following statement contains a magic number: ECPoint bad = Fp.curve.CreatePoint(BigInteger.ValueOf(12)' null);
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,TestPointCreationConsistency,The following statement contains a magic number: ECPoint bad = Fp.curve.CreatePoint(null' BigInteger.ValueOf(12));
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,ImplTestAdd,The following statement contains a magic number: AssertPointsEqual("p0 plus p1 does not equal p2"' p[2]' p[0].Add(p[1]));
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,ImplTestAdd,The following statement contains a magic number: AssertPointsEqual("p1 plus p0 does not equal p2"' p[2]' p[1].Add(p[0]));
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,ImplTestTwice,The following statement contains a magic number: AssertPointsEqual("Twice incorrect"' p[3]' p[0].Twice());
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,ImplTestTwice,The following statement contains a magic number: AssertPointsEqual("Add same point incorrect"' p[3]' p[0].Add(p[0]));
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,TestAddSubtractMultiplySimple,The following statement contains a magic number: iFp < Fp.pointSource.Length / 2
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,TestAddSubtractMultiplySimple,The following statement contains a magic number: iF2m < F2m.pointSource.Length / 2
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,ImplAddSubtractMultiplyTwiceEncodingTest,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.EC.Tests,ECPointTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,ImplSqrtTest,The following statement contains a magic number: count < 10
Magic Number,Org.BouncyCastle.Math.EC.Tests,Fp,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,CreatePoints,The following statement contains a magic number: p[i] = curve.CreatePoint(                          new BigInteger(pointSource[2 * i].ToString())'                          new BigInteger(pointSource[2 * i + 1].ToString()));
Magic Number,Org.BouncyCastle.Math.EC.Tests,Fp,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,CreatePoints,The following statement contains a magic number: p[i] = curve.CreatePoint(                          new BigInteger(pointSource[2 * i].ToString())'                          new BigInteger(pointSource[2 * i + 1].ToString()));
Magic Number,Org.BouncyCastle.Math.EC.Tests,Fp,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,CreatePoints,The following statement contains a magic number: i < pointSource.Length / 2
Magic Number,Org.BouncyCastle.Math.EC.Tests,F2m,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,CreatePoints,The following statement contains a magic number: p[i] = curve.CreatePoint(                          new BigInteger(pointSource[2 * i]' 2)'                          new BigInteger(pointSource[2 * i + 1]' 2));
Magic Number,Org.BouncyCastle.Math.EC.Tests,F2m,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,CreatePoints,The following statement contains a magic number: p[i] = curve.CreatePoint(                          new BigInteger(pointSource[2 * i]' 2)'                          new BigInteger(pointSource[2 * i + 1]' 2));
Magic Number,Org.BouncyCastle.Math.EC.Tests,F2m,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,CreatePoints,The following statement contains a magic number: p[i] = curve.CreatePoint(                          new BigInteger(pointSource[2 * i]' 2)'                          new BigInteger(pointSource[2 * i + 1]' 2));
Magic Number,Org.BouncyCastle.Math.EC.Tests,F2m,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,CreatePoints,The following statement contains a magic number: p[i] = curve.CreatePoint(                          new BigInteger(pointSource[2 * i]' 2)'                          new BigInteger(pointSource[2 * i + 1]' 2));
Magic Number,Org.BouncyCastle.Math.EC.Tests,F2m,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\ec\test\ECPointTest.cs,CreatePoints,The following statement contains a magic number: i < pointSource.Length / 2
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestAdd,The following statement contains a magic number: j <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestAdd,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestAnd,The following statement contains a magic number: j <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestAnd,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestAndNot,The following statement contains a magic number: j <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestAndNot,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestBitCount,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestBitCount,The following statement contains a magic number: BigInteger test = new BigInteger(128' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestBitCount,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestBitLength,The following statement contains a magic number: Assert.AreEqual(2' two.BitLength);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestBitLength,The following statement contains a magic number: int bit = i + random.Next(64);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestBitLength,The following statement contains a magic number: Assert.AreEqual(bit + 2' odd.BitLength);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestBitLength,The following statement contains a magic number: Assert.AreEqual(bit + 2' odd.Negate().BitLength);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestBitLength,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestClearBit,The following statement contains a magic number: BigInteger n = new BigInteger(128' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestClearBit,The following statement contains a magic number: int pos = random.Next(128);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestClearBit,The following statement contains a magic number: j < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestClearBit,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestClearBit,The following statement contains a magic number: j < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestClearBit,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestConstructors,The following statement contains a magic number: Assert.IsTrue(new BigInteger(i + 3' 0' random).TestBit(0));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestConstructors,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: i <= 5
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int product = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int product = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int product = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int product = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int product = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int product = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int product = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int product = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: divisor < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: BigInteger a = new BigInteger(100 - rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: BigInteger b = new BigInteger(100 + rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: BigInteger c = new BigInteger(10 + rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: rep < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int shift = random.Next(64);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: BigInteger b = new BigInteger(64 + random.Next(64)' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: BigInteger b = new BigInteger(64 + random.Next(64)' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: string data = "shift=" + shift +"' b=" + b.ToString(16);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: int shift = 63;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivide,The following statement contains a magic number: string data = "shift=" + shift +"' b=" + b.ToString(16);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: BigInteger n = new BigInteger(48' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: BigInteger a = new BigInteger(100 - rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: BigInteger b = new BigInteger(100 + rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: BigInteger c = new BigInteger(10 + rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: rep < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: int shift = random.Next(64);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: BigInteger b = new BigInteger(64 + random.Next(64)' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: BigInteger b = new BigInteger(64 + random.Next(64)' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: string data = "shift=" + shift +"' b=" + b.ToString(16);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestDivideAndRemainder,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestFlipBit,The following statement contains a magic number: BigInteger a = new BigInteger(128' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestFlipBit,The following statement contains a magic number: int pos = random.Next(256);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestFlipBit,The following statement contains a magic number: x < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestFlipBit,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestFlipBit,The following statement contains a magic number: j < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestFlipBit,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestGcd,The following statement contains a magic number: BigInteger fac = new BigInteger(32' random).Add(two);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestGcd,The following statement contains a magic number: BigInteger p1 = BigInteger.ProbablePrime(63' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestGcd,The following statement contains a magic number: BigInteger p2 = BigInteger.ProbablePrime(64' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestGcd,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestGetLowestSetBit,The following statement contains a magic number: int bit3 = test.ShiftLeft(3 * i).GetLowestSetBit();
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestGetLowestSetBit,The following statement contains a magic number: Assert.AreEqual(3 * i' bit3 - bit1);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestGetLowestSetBit,The following statement contains a magic number: i <= 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIntValue,The following statement contains a magic number: int[] tests = new int[]{ int.MinValue' -1234' -10' -1' 0' ~0' 1' 10' 5678' int.MaxValue };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIntValue,The following statement contains a magic number: int[] tests = new int[]{ int.MinValue' -1234' -10' -1' 0' ~0' 1' 10' 5678' int.MaxValue };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIntValue,The following statement contains a magic number: int[] tests = new int[]{ int.MinValue' -1234' -10' -1' 0' ~0' 1' 10' 5678' int.MaxValue };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIntValue,The following statement contains a magic number: int[] tests = new int[]{ int.MinValue' -1234' -10' -1' 0' ~0' 1' 10' 5678' int.MaxValue };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsFalse(zero.IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsFalse(zero.IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(zero.IsProbablePrime(-10));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsFalse(minusOne.IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(minusTwo.IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(val(-17).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(val(-17).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(val(67).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(val(67).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(val(773).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(val(773).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(val(p).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(val(-p).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsFalse(val(c).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsFalse(val(-c).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(mersenne(e).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsTrue(mersenne(e).Negate().IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsFalse(mersenne(e).IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestIsProbablePrime,The following statement contains a magic number: Assert.IsFalse(mersenne(e).Negate().IsProbablePrime(100));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestLongValue,The following statement contains a magic number: long[] tests = new long[]{ long.MinValue' -1234' -10' -1' 0L' ~0L' 1' 10' 5678' long.MaxValue };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestLongValue,The following statement contains a magic number: long[] tests = new long[]{ long.MinValue' -1234' -10' -1' 0L' ~0L' 1' 10' 5678' long.MaxValue };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestLongValue,The following statement contains a magic number: long[] tests = new long[]{ long.MinValue' -1234' -10' -1' 0L' ~0L' 1' 10' 5678' long.MaxValue };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestLongValue,The following statement contains a magic number: long[] tests = new long[]{ long.MinValue' -1234' -10' -1' 0L' ~0L' 1' 10' 5678' long.MaxValue };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMax,The following statement contains a magic number: j <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMax,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMin,The following statement contains a magic number: j <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMin,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMod,The following statement contains a magic number: int diff = random.Next(25);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMod,The following statement contains a magic number: BigInteger a = new BigInteger(100 - diff' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMod,The following statement contains a magic number: BigInteger b = new BigInteger(100 + diff' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMod,The following statement contains a magic number: BigInteger c = new BigInteger(10 + diff' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMod,The following statement contains a magic number: BigInteger pow2 = one.ShiftLeft(random.Next(128));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMod,The following statement contains a magic number: rep < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestModInverse,The following statement contains a magic number: BigInteger p = BigInteger.ProbablePrime(64' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestModInverse,The following statement contains a magic number: BigInteger q = new BigInteger(63' random).Add(one);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestModInverse,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestModInverse,The following statement contains a magic number: i <= 128
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestModPow,The following statement contains a magic number: BigInteger m = BigInteger.ProbablePrime(10 + i' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestModPow,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: int aLen = 64 + random.Next(64);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: int aLen = 64 + random.Next(64);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: int bLen = 64 + random.Next(64);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: int bLen = 64 + random.Next(64);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: BigInteger c = new BigInteger(32' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: int shift = random.Next(64);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: BigInteger b = new BigInteger(64 + random.Next(64)' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: BigInteger b = new BigInteger(64 + random.Next(64)' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestMultiply,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestNegate,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestNextProbablePrime,The following statement contains a magic number: BigInteger firstPrime = BigInteger.ProbablePrime(32' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestNextProbablePrime,The following statement contains a magic number: Assert.IsTrue(firstPrime.IsProbablePrime(10));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestNextProbablePrime,The following statement contains a magic number: Assert.IsTrue(nextPrime.IsProbablePrime(10));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestNextProbablePrime,The following statement contains a magic number: Assert.IsFalse(check.IsProbablePrime(10));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestNot,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestOr,The following statement contains a magic number: j <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestOr,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The following statement contains a magic number: Assert.AreEqual(zero' zero.Pow(123));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The following statement contains a magic number: Assert.AreEqual(one' one.Pow(123));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The following statement contains a magic number: Assert.AreEqual(two.Pow(147)' one.ShiftLeft(147));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The following statement contains a magic number: Assert.AreEqual(two.Pow(147)' one.ShiftLeft(147));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The following statement contains a magic number: Assert.AreEqual(one.ShiftLeft(7).Pow(11)' one.ShiftLeft(77));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The following statement contains a magic number: Assert.AreEqual(one.ShiftLeft(7).Pow(11)' one.ShiftLeft(77));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The following statement contains a magic number: Assert.AreEqual(one.ShiftLeft(7).Pow(11)' one.ShiftLeft(77));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestPow,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestRemainder,The following statement contains a magic number: BigInteger a = new BigInteger(100 - rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestRemainder,The following statement contains a magic number: BigInteger b = new BigInteger(100 + rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestRemainder,The following statement contains a magic number: BigInteger c = new BigInteger(10 + rep' 0' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestRemainder,The following statement contains a magic number: rep < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSetBit,The following statement contains a magic number: BigInteger n = new BigInteger(128' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSetBit,The following statement contains a magic number: int pos = random.Next(128);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSetBit,The following statement contains a magic number: j < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSetBit,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSetBit,The following statement contains a magic number: j < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSetBit,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestShiftLeft,The following statement contains a magic number: int shift = random.Next(128);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestShiftLeft,The following statement contains a magic number: BigInteger a = new BigInteger(128 + i' random).Add(one);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestShiftLeft,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestShiftRight,The following statement contains a magic number: int shift = random.Next(128);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestShiftRight,The following statement contains a magic number: BigInteger a = new BigInteger(256 + i' random).SetBit(256 + i);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestShiftRight,The following statement contains a magic number: BigInteger a = new BigInteger(256 + i' random).SetBit(256 + i);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestShiftRight,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSignValue,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSubtract,The following statement contains a magic number: j <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestSubtract,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestTestBit,The following statement contains a magic number: BigInteger n = new BigInteger(128' random);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestTestBit,The following statement contains a magic number: Assert.IsFalse(n.TestBit(128));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestTestBit,The following statement contains a magic number: Assert.IsTrue(n.Negate().TestBit(128));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestTestBit,The following statement contains a magic number: int pos = random.Next(128);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestTestBit,The following statement contains a magic number: j < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestTestBit,The following statement contains a magic number: i < 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToByteArray,The following statement contains a magic number: Assert.AreEqual((i / 8 + 1)' b.Length);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToByteArray,The following statement contains a magic number: Assert.AreEqual((i / 8 + 1)' b.Length);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToByteArray,The following statement contains a magic number: i <= 48
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToByteArrayUnsigned,The following statement contains a magic number: Assert.AreEqual((i + 7) / 8' b.Length);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToByteArrayUnsigned,The following statement contains a magic number: Assert.AreEqual((i + 7) / 8' b.Length);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToByteArrayUnsigned,The following statement contains a magic number: Assert.AreEqual(i / 8 + 1' b.Length);
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToByteArrayUnsigned,The following statement contains a magic number: i <= 48
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(s' new BigInteger(s' 10).ToString(10));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(s' new BigInteger(s' 10).ToString(10));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(s' new BigInteger(s' 16).ToString(16));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(s' new BigInteger(s' 16).ToString(16));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(n' new BigInteger(n.ToString(2)' 2));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(n' new BigInteger(n.ToString(2)' 2));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(n' new BigInteger(n.ToString(10)' 10));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(n' new BigInteger(n.ToString(10)' 10));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(n' new BigInteger(n.ToString(16)' 16));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: Assert.AreEqual(n' new BigInteger(n.ToString(16)' 16));
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: int[] radices = new int[] { 2' 8' 10' 16 };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: int[] radices = new int[] { 2' 8' 10' 16 };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: int[] radices = new int[] { 2' 8' 10' 16 };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: int[] radices = new int[] { 2' 8' 10' 16 };
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestToString,The following statement contains a magic number: int trials = 256;
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestValueOf,The following statement contains a magic number: i < 5
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestXor,The following statement contains a magic number: j <= 10
Magic Number,Org.BouncyCastle.Math.Tests,BigIntegerTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\BigIntegerTest.cs,TestXor,The following statement contains a magic number: i <= 10
Magic Number,Org.BouncyCastle.Math.Tests,PrimesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\PrimesTest.cs,TestEnhancedMRProbablePrime,The following statement contains a magic number: int mrIterations = (PRIME_CERTAINTY + 1) / 2;
Magic Number,Org.BouncyCastle.Math.Tests,PrimesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\PrimesTest.cs,TestEnhancedMRProbablePrime,The following statement contains a magic number: i <= (iterations % 8)
Magic Number,Org.BouncyCastle.Math.Tests,PrimesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\PrimesTest.cs,TestMRProbablePrime,The following statement contains a magic number: int mrIterations = (PRIME_CERTAINTY + 1) / 2;
Magic Number,Org.BouncyCastle.Math.Tests,PrimesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\PrimesTest.cs,TestMRProbablePrimeToBase,The following statement contains a magic number: int mrIterations = (PRIME_CERTAINTY + 1) / 2;
Magic Number,Org.BouncyCastle.Math.Tests,PrimesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\math\test\PrimesTest.cs,TestSTRandomPrime,The following statement contains a magic number: byte[] inputSeed = new byte[16];
Magic Number,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,doTestECDsa,The following statement contains a magic number: byte[] sampleNonce = new byte[16];
Magic Number,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,doTestRsa,The following statement contains a magic number: byte[] sampleNonce = new byte[16];
Magic Number,Org.BouncyCastle.Ocsp.Tests,OcspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTest.cs,PerformTest,The following statement contains a magic number: byte[] sampleNonce = new byte[16];
Magic Number,Org.BouncyCastle.Ocsp.Tests,OcspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTestUtil.cs,OcspTestUtil,The following statement contains a magic number: kpg.Init(new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' rand' 1024' 25));
Magic Number,Org.BouncyCastle.Ocsp.Tests,OcspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTestUtil.cs,OcspTestUtil,The following statement contains a magic number: kpg.Init(new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' rand' 1024' 25));
Magic Number,Org.BouncyCastle.Ocsp.Tests,OcspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTestUtil.cs,OcspTestUtil,The following statement contains a magic number: ecKpg.Init(new KeyGenerationParameters(rand' 192));
Magic Number,Org.BouncyCastle.Ocsp.Tests,OcspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\ocsp\test\OCSPTestUtil.cs,MakeCertificate,The following statement contains a magic number: _v3CertGen.SetNotAfter(DateTime.UtcNow.AddDays(100));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,ClearSignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\ClearSignedFileProcessor.cs,Main,The following statement contains a magic number: Stream fis = File.OpenRead(args[2]);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,ClearSignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\ClearSignedFileProcessor.cs,Main,The following statement contains a magic number: string digestName = (args.Length == 4)                      ?	"SHA1"                      :	args[4];
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,ClearSignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\ClearSignedFileProcessor.cs,Main,The following statement contains a magic number: string digestName = (args.Length == 4)                      ?	"SHA1"                      :	args[4];
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,ClearSignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\ClearSignedFileProcessor.cs,Main,The following statement contains a magic number: SignFile(args[1]' keyIn' fos' args[3].ToCharArray()' digestName);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DetachedSignatureProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DetachedSignatureProcessor.cs,Main,The following statement contains a magic number: CreateSignature(args[2]' args[3]' args[2] + ".asc"' args[4].ToCharArray()' true);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DetachedSignatureProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DetachedSignatureProcessor.cs,Main,The following statement contains a magic number: CreateSignature(args[2]' args[3]' args[2] + ".asc"' args[4].ToCharArray()' true);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DetachedSignatureProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DetachedSignatureProcessor.cs,Main,The following statement contains a magic number: CreateSignature(args[2]' args[3]' args[2] + ".asc"' args[4].ToCharArray()' true);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DetachedSignatureProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DetachedSignatureProcessor.cs,Main,The following statement contains a magic number: CreateSignature(args[2]' args[3]' args[2] + ".asc"' args[4].ToCharArray()' true);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The following statement contains a magic number: args.Length < 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The following statement contains a magic number: pGen.Init(1024' 80' new SecureRandom());
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The following statement contains a magic number: pGen.Init(1024' 80' new SecureRandom());
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The following statement contains a magic number: BigInteger g = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The following statement contains a magic number: BigInteger p = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The following statement contains a magic number: args.Length < 3
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,DsaElGamalKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\DsaElGamalKeyRingGenerator.cs,Main,The following statement contains a magic number: ExportKeyPair(out1' out2' dsaKp' elgKp' args[1]' args[2].ToCharArray()' true);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3]' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3]' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3]' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,EncryptFile,The following statement contains a magic number: Stream cOut = cPk.Open(outputStream' new byte[1 << 16]);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,EncryptFile,The following statement contains a magic number: PgpUtilities.WriteFileToLiteralData(  					comData.Open(cOut)'  					PgpLiteralData.Binary'  					new FileInfo(fileName)'  					new byte[1 << 16]);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3]' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3]' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,KeyBasedLargeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\KeyBasedLargeFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3]' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,PbeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\PbeFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3].ToCharArray()' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,PbeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\PbeFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3].ToCharArray()' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,PbeFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\PbeFileProcessor.cs,Main,The following statement contains a magic number: EncryptFile(args[2] + ".asc"' args[2]' args[3].ToCharArray()' true' (args[1].IndexOf('i') > 0));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,RsaKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\RsaKeyRingGenerator.cs,Main,The following statement contains a magic number: kpg.Init(new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' new SecureRandom()' 1024' 25));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,RsaKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\RsaKeyRingGenerator.cs,Main,The following statement contains a magic number: kpg.Init(new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' new SecureRandom()' 1024' 25));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,RsaKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\RsaKeyRingGenerator.cs,Main,The following statement contains a magic number: args.Length < 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,RsaKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\RsaKeyRingGenerator.cs,Main,The following statement contains a magic number: args.Length < 3
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,RsaKeyRingGenerator,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\RsaKeyRingGenerator.cs,Main,The following statement contains a magic number: ExportKeyPair(out1' out2' kp.Public' kp.Private' args[1]' args[2].ToCharArray()' true);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,SignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\SignedFileProcessor.cs,Main,The following statement contains a magic number: keyIn = File.OpenRead(args[3]);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,SignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\SignedFileProcessor.cs,Main,The following statement contains a magic number: fos = File.Create(args[2] + ".asc");
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,SignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\SignedFileProcessor.cs,Main,The following statement contains a magic number: SignFile(args[2]' keyIn' fos' args[4].ToCharArray()' true' true);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples,SignedFileProcessor,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\SignedFileProcessor.cs,Main,The following statement contains a magic number: SignFile(args[2]' keyIn' fos' args[4].ToCharArray()' true' true);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Examples.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\test\AllTests.cs,CreateLargeTestInput,The following statement contains a magic number: i <= 2000
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpArmoredTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPArmoredTest.cs,PerformTest,The following statement contains a magic number: count != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpArmoredTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPArmoredTest.cs,PerformTest,The following statement contains a magic number: count != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: pubKey.BitStrength != 1024
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: pgpKey.BitStrength != 1024
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: BigInteger g = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: BigInteger p = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: epg.Init(pSize' 2' random);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSAElGamalTest.cs,PerformTest,The following statement contains a magic number: pSize < 264
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,GenerateTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,GenerateTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,GenerateTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,PerformTest,The following statement contains a magic number: pGen.Init(512' 80' new SecureRandom());
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPDSATest.cs,PerformTest,The following statement contains a magic number: pGen.Init(512' 80' new SecureRandom());
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,DecryptMessageBuffered,The following statement contains a magic number: byte[] buf = new byte[1024];
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,PerformTest,The following statement contains a magic number: data[0] != 'h' || data[1] != 'e' || data[2] != 'l'
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,PerformTest,The following statement contains a magic number: byte[] test = new byte[1233];
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,PerformTest,The following statement contains a magic number: ldOut = lData.Open(  				new UncloseableStream(comOut)'                  PgpLiteralData.Binary'                  PgpLiteralData.Console'                  TestDateTime'                  new byte[16]);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,PerformTest,The following statement contains a magic number: cOut = cPk.Open(new UncloseableStream(cbOut)' new byte[16]);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,PerformTest,The following statement contains a magic number: cOut = cPk.Open(new UncloseableStream(cbOut)' new byte[16]);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpPbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPPBETest.cs,PerformTest,The following statement contains a magic number: cOut = cPk.Open(new UncloseableStream(cbOut)' new byte[16]);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(                  BigInteger.ValueOf(0x10001)' new SecureRandom()' 1024' 25);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(                  BigInteger.ValueOf(0x10001)' new SecureRandom()' 1024' 25);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTestSig,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTestSig,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTestSig,The following statement contains a magic number: DateTime testDateTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The following statement contains a magic number: hashedPcks.Count != 6
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The following statement contains a magic number: DateTime creationTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The following statement contains a magic number: DateTime creationTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,PerformTest,The following statement contains a magic number: DateTime creationTime = new DateTime(1973' 7' 27);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestKeyFlagsValues,The following statement contains a magic number: checkValue(new byte[] { 4' 0' 0' 0 }' 0x04);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestKeyFlagsValues,The following statement contains a magic number: checkValue(new byte[] { 4' 0' 0 }' 0x04);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestKeyFlagsValues,The following statement contains a magic number: checkValue(new byte[] { 4' 0 }' 0x04);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestKeyFlagsValues,The following statement contains a magic number: checkValue(new byte[] { 4 }' 0x04);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestMissingSubpackets,The following statement contains a magic number: sig.Version > 3
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestSig,The following statement contains a magic number: Stream lOut = lGen.Open(                  new UncloseableStream(bOut)'                  PgpLiteralData.Binary'                  "_CONSOLE"'                  TEST_DATA.Length * 2'                  DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestTextSig,The following statement contains a magic number: Stream lOut = lGen.Open(                  new UncloseableStream(bOut)'                  PgpLiteralData.Text'                  "_CONSOLE"'                  data.Length * 2'                  creationTime);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,generateV3BinarySig,The following statement contains a magic number: Stream lOut = lGen.Open(                  new UncloseableStream(bOut)'                  PgpLiteralData.Binary'                  "_CONSOLE"'                  TEST_DATA.Length * 2'                  DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,doTestTextSigV3,The following statement contains a magic number: Stream lOut = lGen.Open(                  new UncloseableStream(bOut)'                  PgpLiteralData.Text'                  "_CONSOLE"'                  data.Length * 2'                  DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpSignatureTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPSignatureTest.cs,verifySignature,The following statement contains a magic number: creationTime.CompareTo(DateTime.UtcNow) > 0                  || creationTime.CompareTo(DateTime.UtcNow.AddMinutes(-10)) < 0
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpECDsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpECDsaTest.cs,PerformTest,The following statement contains a magic number: pubKeyRing.GetPublicKey().BitStrength != 256
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest1,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest1,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest2,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest2,The following statement contains a magic number: count != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest2,The following statement contains a magic number: pk.KeyId == -1413891222336124627L
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest2,The following statement contains a magic number: k.KeyId == -4049084404703773049L                          || k.KeyId == -1413891222336124627L
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest2,The following statement contains a magic number: k.KeyId == -4049084404703773049L                          || k.KeyId == -1413891222336124627L
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest2,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest2,The following statement contains a magic number: count != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest3,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest3,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest4,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest5,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest5,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest8,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest8,The following statement contains a magic number: count != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest8,The following statement contains a magic number: keyCount != 2
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest9,The following statement contains a magic number: keyCount != 3
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.ValidDays != 28
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.GetValidSeconds() != 28 * 24 * 60 * 60
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.GetValidSeconds() != 28 * 24 * 60 * 60
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.GetValidSeconds() != 28 * 24 * 60 * 60
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.GetValidSeconds() != 28 * 24 * 60 * 60
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.ValidDays != 28
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.GetValidSeconds() != 28 * 24 * 60 * 60
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.GetValidSeconds() != 28 * 24 * 60 * 60
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.GetValidSeconds() != 28 * 24 * 60 * 60
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,PerformTest10,The following statement contains a magic number: pubKey.GetValidSeconds() != 28 * 24 * 60 * 60
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateTest,The following statement contains a magic number: pGen.Init(512' 80' Random);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateTest,The following statement contains a magic number: pGen.Init(512' 80' Random);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateTest,The following statement contains a magic number: BigInteger g = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateTest,The following statement contains a magic number: BigInteger p = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,InsertMasterTest,The following statement contains a magic number: rsaKpg.Init(new KeyGenerationParameters(Random' 512));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateSha1Test,The following statement contains a magic number: pGen.Init(512' 80' Random);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateSha1Test,The following statement contains a magic number: pGen.Init(512' 80' Random);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateSha1Test,The following statement contains a magic number: BigInteger g = new BigInteger("153d5d6172adb43045b68ae8e1de1070b6137005686d29d3d73a7749199681ee5b212c9b96bfdcfa5b20cd5e3fd2044895d609cf9b410b7a0f12ca1cb9a428cc"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpKeyRingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpKeyRingTest.cs,GenerateSha1Test,The following statement contains a magic number: BigInteger p = new BigInteger("9494fec095f3b85ee286542b3836fc81a5dd0a0349b4c239dd38744d488cf8e31db8bcb7d33b41abb9e5a33cca9144b1cef332c94bf0573bf047a3aca98cdf3b"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpUnicodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpUnicodeTest.cs,DoTestKey,The following statement contains a magic number: Assert.NotNull(secretKey' "Could not locate secret keyring with Id=" + keyId.ToString(16));
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpUnicodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpUnicodeTest.cs,TestUmlautPassphrase,The following statement contains a magic number: BigInteger keyId = new BigInteger("362961283C48132B9F14C5C3EC87272EFCB986D2"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpUnicodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpUnicodeTest.cs,TestAsciiPassphrase,The following statement contains a magic number: BigInteger keyId = new BigInteger("A392B7310C64026022405257AA2AAAC7CB417459"' 16);
Magic Number,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpUnicodeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PgpUnicodeTest.cs,TestCyrillicPassphrase,The following statement contains a magic number: BigInteger keyId = new BigInteger("B7773AF32BE4EC1806B1BACC4680E7F3960C44E7"' 16);
Magic Number,Org.BouncyCastle.OpenSsl.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\AllTests.cs,TestPkcs8Encrypted,The following statement contains a magic number: kpGen.Init(new KeyGenerationParameters(new SecureRandom()' 1024));
Magic Number,Org.BouncyCastle.OpenSsl.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\AllTests.cs,TestPkcs8Plain,The following statement contains a magic number: kpGen.Init(new KeyGenerationParameters(new SecureRandom()' 1024));
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: kpGen.Init(                  new RsaKeyGenerationParameters(                  BigInteger.ValueOf(0x10001)'                  new SecureRandom()'                  768'                  25));
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: kpGen.Init(                  new RsaKeyGenerationParameters(                  BigInteger.ValueOf(0x10001)'                  new SecureRandom()'                  768'                  25));
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: pGen.Init(512' 80' new SecureRandom());
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: pGen.Init(512' 80' new SecureRandom());
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("800ce"' 2' "unknown tag 26 encountered");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("b6cd8"' 3' "DEF length 81 object truncated by 56");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("28ce09"' 4' "DEF length 110 object truncated by 28");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("2ac3b9"' 5' "DER length more than 4 bytes: 11");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("2cba96"' 6' "DEF length 100 object truncated by 35");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("2e3354"' 7' "DEF length 42 object truncated by 9");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("2f4142"' 8' "DER length more than 4 bytes: 14");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("2fe9bb"' 9' "DER length more than 4 bytes: 65");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("3ee7a8"' 10' "DER length more than 4 bytes: 57");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("41af75"' 11' "unknown tag 16 encountered");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("1704a5"' 12' "corrupted stream detected");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("1c5822"' 13' "extra data found after object");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("5a3d16"' 14' "corrupted stream detected");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("8d0c97"' 15' "corrupted stream detected");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("bc0daf"' 16' "corrupted stream detected");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: doDudPasswordTest("aaf9c4d"'17' "Corrupted stream - out of bounds length found");
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: !privKey.PublicExponent.Equals(new BigInteger("10001"' 16))
Magic Number,Org.BouncyCastle.OpenSsl.Tests,ReaderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\ReaderTest.cs,PerformTest,The following statement contains a magic number: !privKey.PublicExponent.Equals(new BigInteger("10001"' 16))
Magic Number,Org.BouncyCastle.OpenSsl.Tests,WriterTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\WriterTest.cs,PerformTest,The following statement contains a magic number: ecKpg.Init(new KeyGenerationParameters(random' 239));
Magic Number,Org.BouncyCastle.OpenSsl.Tests,WriterTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openssl\test\WriterTest.cs,PerformTest,The following statement contains a magic number: object o = new PemObject("FRED"' new byte[100]);
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaKeyParameters intPubKey = new RsaKeyParameters(false'  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaKeyParameters intPubKey = new RsaKeyParameters(false'  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaKeyParameters caPubKey = new RsaKeyParameters(false'  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaKeyParameters caPubKey = new RsaKeyParameters(false'  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: X509CertificateEntry[] chain = new X509CertificateEntry[3];
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: chain[2] = CreateMasterCert(caPubKey' caPrivKey);
Magic Number,Org.BouncyCastle.Pkcs.Examples,Pkcs12Example,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\examples\PKCS12Example.cs,Main,The following statement contains a magic number: chain[1] = CreateIntermediateCert(intPubKey' caPrivKey' chain[2].Certificate);
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' new SecureRandom()' 512' 25);
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' new SecureRandom()' 512' 25);
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Pkcs.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: int iterationCount = 100;
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs10Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS10Test.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' new SecureRandom()' 512' 25);
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs10Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS10Test.cs,PerformTest,The following statement contains a magic number: RsaKeyGenerationParameters genParam = new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' new SecureRandom()' 512' 25);
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,CreateCert,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddDays(-30));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,CreateCert,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddDays(30));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: BigInteger mod = new BigInteger("bb1be8074e4787a8d77967f1575ef72dd7582f9b3347724413c021beafad8f32dba5168e280cbf284df722283dad2fd4abc750e3d6487c2942064e2d8d80641aa5866d1f6f1f83eec26b9b46fecb3b1c9856a303148a5cc899c642fb16f3d9d72f52526c751dc81622c420c82e2cfda70fe8d13f16cc7d6a613a5b2a2b5894d1"' 16);
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: ch.Length != 3
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: !ch[2].Certificate.SerialNumber.Equals(new BigInteger("11341398017"))
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: store.SetCertificateEntry("testCert"' ch[2]);
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(  				false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(  				false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,doTestPkcs12Store,The following statement contains a magic number: ch.Length != 2
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,testNoExtraLocalKeyID,The following statement contains a magic number: kpg.Init(new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' new SecureRandom()' 512' 25));
Magic Number,Org.BouncyCastle.Pkcs.Tests,Pkcs12StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\pkcs\test\PKCS12StoreTest.cs,testNoExtraLocalKeyID,The following statement contains a magic number: kpg.Init(new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' new SecureRandom()' 512' 25));
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestSha1PrngBackward,The following statement contains a magic number: byte[] bx = new byte[128];
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestSha1PrngBackward,The following statement contains a magic number: byte[] by = new byte[128];
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestSP800Ctr,The following statement contains a magic number: SecureRandom random = new SP800SecureRandomBuilder().BuildCtr(new AesFastEngine()' 256' new byte[32]' false);
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestSP800Ctr,The following statement contains a magic number: SecureRandom random = new SP800SecureRandomBuilder().BuildCtr(new AesFastEngine()' 256' new byte[32]' false);
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestSP800Hash,The following statement contains a magic number: SecureRandom random = new SP800SecureRandomBuilder().BuildHash(new Sha256Digest()' new byte[32]' false);
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestSP800HMac,The following statement contains a magic number: SecureRandom random = new SP800SecureRandomBuilder().BuildHMac(new HMac(new Sha256Digest())' new byte[32]' false);
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestThreadedSeed,The following statement contains a magic number: random.SetSeed(new ThreadedSeedGenerator().GenerateSeed(20' false));
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestVmpcPrng,The following statement contains a magic number: random.SetSeed(random.GenerateSeed(32));
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,TestX931,The following statement contains a magic number: SecureRandom random = new X931SecureRandomBuilder().Build(new AesFastEngine()' new KeyParameter(new byte[16])' false);
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,RunChiSquaredTests,The following statement contains a magic number: double chi2 = MeasureChiSquared(random' 1000);
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,RunChiSquaredTests,The following statement contains a magic number: chi2 < 285.0
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,RunChiSquaredTests,The following statement contains a magic number: tries < 100
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,RunChiSquaredTests,The following statement contains a magic number: return passes > 75;
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,MeasureChiSquared,The following statement contains a magic number: byte[] opts = random.GenerateSeed(2);
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,MeasureChiSquared,The following statement contains a magic number: int[] counts = new int[256];
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,MeasureChiSquared,The following statement contains a magic number: byte[] bs = new byte[256];
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,MeasureChiSquared,The following statement contains a magic number: b < 256
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,MeasureChiSquared,The following statement contains a magic number: b < 256
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,MeasureChiSquared,The following statement contains a magic number: b < 256
Magic Number,Org.BouncyCastle.Security.Tests,SecureRandomTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\SecureRandomTest.cs,MeasureChiSquared,The following statement contains a magic number: int total = 3 * rounds;
Magic Number,Org.BouncyCastle.Security.Tests,TestDotNetUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestDotNetUtil.cs,TestRsaInterop,The following statement contains a magic number: RSACryptoServiceProvider rsa = new RSACryptoServiceProvider(512);
Magic Number,Org.BouncyCastle.Security.Tests,TestDotNetUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestDotNetUtil.cs,TestRsaInterop,The following statement contains a magic number: i < 100
Magic Number,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestEC,The following statement contains a magic number: FpCurve curve = new FpCurve(  				new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q  				new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a  				new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Security.Tests,TestEncodings,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestEncodings.cs,TestEC,The following statement contains a magic number: FpCurve curve = new FpCurve(  				new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q  				new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a  				new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Security.Tests,TestParameterUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestParameterUtil.cs,TestCreateKeyParameter,The following statement contains a magic number: doTestCreateKeyParameter("AES"' NistObjectIdentifiers.IdAes128Cbc'  				128' typeof(KeyParameter)' random);
Magic Number,Org.BouncyCastle.Security.Tests,TestParameterUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestParameterUtil.cs,TestCreateKeyParameter,The following statement contains a magic number: doTestCreateKeyParameter("DES"' OiwObjectIdentifiers.DesCbc'  				64' typeof(DesParameters)' random);
Magic Number,Org.BouncyCastle.Security.Tests,TestParameterUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestParameterUtil.cs,TestCreateKeyParameter,The following statement contains a magic number: doTestCreateKeyParameter("DESEDE"' PkcsObjectIdentifiers.DesEde3Cbc'  				192' typeof(DesEdeParameters)' random);
Magic Number,Org.BouncyCastle.Security.Tests,TestParameterUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestParameterUtil.cs,TestCreateKeyParameter,The following statement contains a magic number: doTestCreateKeyParameter("RC2"' PkcsObjectIdentifiers.RC2Cbc'  				128' typeof(RC2Parameters)' random);
Magic Number,Org.BouncyCastle.Security.Tests,TestParameterUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestParameterUtil.cs,doTestCreateKeyParameter,The following statement contains a magic number: int keyLength = keyBits / 8;
Magic Number,Org.BouncyCastle.Security.Tests,TestParameterUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestParameterUtil.cs,doTestCreateKeyParameter,The following statement contains a magic number: bytes = new byte[keyLength * 2];
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: BigInteger rsaMod = new BigInteger("a7295693155b1813bb84877fb45343556e0568043de5910872a3a518cc11e23e2db74eaf4545068c4e3d258a2718fbacdcc3eafa457695b957e88fbf110aed049a992d9c430232d02f3529c67a3419935ea9b569f85b1bcd37de6b899cd62697e843130ff0529d09c97d813cb15f293751ff56f943fbdabb63971cc7f4f6d5bff1594416b1f5907bde5a84a44f9802ef29b43bda1960f948f8afb8766c1ab80d32eec88ed66d0b65aebe44a6d0b3c5e0ab051aaa1b912fbcc17b8e751ddecc5365b6db6dab0020c3057db4013a51213a5798a3aab67985b0f4d88627a54a0f3f0285fbcb4afdfeb65cb153af66825656d43238b75503231500753f4e421e3c57"' 16);
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: BigInteger rsaPubExp = new BigInteger("10001"' 16);
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: BigInteger rsaPrivExp = new BigInteger("65dad56ac7df7abb434e4cb5eeadb16093aa6da7f0033aad3815289b04757d32bfee6ade7749c8e4a323b5050a2fb9e2a99e23469e1ed4ba5bab54336af20a5bfccb8b3424cc6923db2ffca5787ed87aa87aa614cd04cedaebc8f623a2d2063017910f436dff18bb06f01758610787f8b258f0a8efd8bd7de30007c47b2a1031696c7d6523bc191d4d918927a7e0b09584ed205bd2ff4fc4382678df82353f7532b3bbb81d69e3f39070aed3fb64fce032a089e8e64955afa5213a6eb241231bd98d702fba725a9b205952fda186412d9e0d9344d2998c455ad8c2bae85ee672751466d5288304032b5b7e02f7e558c7af82c7fbf58eea0bb4ef0f001e6cd0a9"' 16);
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: BigInteger rsaPrivP = new BigInteger("d4fd9ac3474fb83aaf832470643609659e511b322632b239b688f3cd2aad87527d6cf652fb9c9ca67940e84789444f2e99b0cb0cfabbd4de95396106c865f38e2fb7b82b231260a94df0e01756bf73ce0386868d9c41645560a81af2f53c18e4f7cdf3d51d80267372e6e0216afbf67f655c9450769cca494e4f6631b239ce1b"' 16);
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: BigInteger rsaPrivQ = new BigInteger("c8eaa0e2a1b3a4412a702bccda93f4d150da60d736c99c7c566fdea4dd1b401cbc0d8c063daaf0b579953d36343aa18b33dbf8b9eae94452490cc905245f8f7b9e29b1a288bc66731a29e1dd1a45c9fd7f8238ff727adc49fff73991d0dc096206b9d3a08f61e7462e2b804d78cb8c5eccdb9b7fbd2ad6a8fea46c1053e1be75"' 16);
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: BigInteger rsaPrivDP = new BigInteger("10edcb544421c0f9e123624d1099feeb35c72a8b34e008ac6fa6b90210a7543f293af4e5299c8c12eb464e70092805c7256e18e5823455ba0f504d36f5ccacac1b7cd5c58ff710f9c3f92646949d88fdd1e7ea5fed1081820bb9b0d2a8cd4b093fecfdb96dabd6e28c3a6f8c186dc86cddc89afd3e403e0fcf8a9e0bcb27af0b"' 16);
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: BigInteger rsaPrivDQ = new BigInteger("97fc25484b5a415eaa63c03e6efa8dafe9a1c8b004d9ee6e80548fefd6f2ce44ee5cb117e77e70285798f57d137566ce8ea4503b13e0f1b5ed5ca6942537c4aa96b2a395782a4cb5b58d0936e0b0fa63b1192954d39ced176d71ef32c6f42c84e2e19f9d4dd999c2151b032b97bd22aa73fd8c5bcd15a2dca4046d5acc997021"' 16);
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: BigInteger rsaPrivQinv = new BigInteger("4bb8064e1eff7e9efc3c4578fcedb59ca4aef0993a8312dfdcb1b3decf458aa6650d3d0866f143cbf0d3825e9381181170a0a1651eefcd7def786b8eb356555d9fa07c85b5f5cbdd74382f1129b5e36b4166b6cc9157923699708648212c484958351fdc9cf14f218dbe7fbf7cbd93a209a4681fe23ceb44bab67d66f45d1c9d"' 16);
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] shortMsg = new byte[] { 1' 4' 5' 6' 8' 8' 4' 2' 1' 3 };
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] shortMsg = new byte[] { 1' 4' 5' 6' 8' 8' 4' 2' 1' 3 };
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] shortMsg = new byte[] { 1' 4' 5' 6' 8' 8' 4' 2' 1' 3 };
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] shortMsg = new byte[] { 1' 4' 5' 6' 8' 8' 4' 2' 1' 3 };
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] shortMsg = new byte[] { 1' 4' 5' 6' 8' 8' 4' 2' 1' 3 };
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] shortMsg = new byte[] { 1' 4' 5' 6' 8' 8' 4' 2' 1' 3 };
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] shortMsg = new byte[] { 1' 4' 5' 6' 8' 8' 4' 2' 1' 3 };
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] shortMsg = new byte[] { 1' 4' 5' 6' 8' 8' 4' 2' 1' 3 };
Magic Number,Org.BouncyCastle.Security.Tests,TestSignerUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\security\test\TestSignerUtil.cs,TestAlgorithms,The following statement contains a magic number: byte[] longMsg = new byte[100];
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,TestCiphers,The following statement contains a magic number: doCipherTest(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,TestCiphers,The following statement contains a magic number: doCipherTest(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,TestOids,The following statement contains a magic number: oidTest(oids' names' 4);
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,doCipherTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,doCipherTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,doCipherTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,doCipherTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,doCipherTest,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,AesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AESTest.cs,doCipherTest,The following statement contains a magic number: extra.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,AttrCertSelectorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertSelectorTest.cs,CreateAttrCert,The following statement contains a magic number: gen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,AttrCertSelectorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertSelectorTest.cs,CreateAttrCert,The following statement contains a magic number: gen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,AttrCertSelectorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertSelectorTest.cs,TestSelector,The following statement contains a magic number: sel.AddTargetName(new GeneralName(2' "www.test.com"));
Magic Number,Org.BouncyCastle.Tests,AttrCertSelectorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertSelectorTest.cs,TestSelector,The following statement contains a magic number: sel.AddTargetGroup(new GeneralName(4' "o=Test' ou=Test"));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithCert,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(  				false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithCert,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(  				false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithCert,The following statement contains a magic number: gen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithCert,The following statement contains a magic number: gen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithPrincipal,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(  				false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithPrincipal,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(  				false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithPrincipal,The following statement contains a magic number: gen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,doTestGenerateWithPrincipal,The following statement contains a magic number: gen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(  				false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(  				false'  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The following statement contains a magic number: gen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The following statement contains a magic number: gen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension("1.1"' true' new DerOctetString(new byte[10]));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The following statement contains a magic number: gen.AddExtension("2.2"' false' new DerOctetString(new byte[20]));
Magic Number,Org.BouncyCastle.Tests,AttrCertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\AttrCertTest.cs,PerformTest,The following statement contains a magic number: !extValue.Equals(new DerOctetString(new byte[10]))
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: cp = new ParametersWithIV(cp' new byte[16]);
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: k.GetKey().Length != (16 + ((i / groupSize) * 8))
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,oidTest,The following statement contains a magic number: k.GetKey().Length != (16 + ((i / groupSize) * 8))
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: byte[] data = {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16};
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: k.GetKey().Length != (16 + (i * 8))
Magic Number,Org.BouncyCastle.Tests,BaseBlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BaseBlockCipherTest.cs,wrapOidTest,The following statement contains a magic number: k.GetKey().Length != (16 + (i * 8))
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,GetIVLength,The following statement contains a magic number: parts.Length < 2
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,GetIVLength,The following statement contains a magic number: return 13;
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,GetIVLength,The following statement contains a magic number: return 15;
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The following statement contains a magic number: i != input.Length/ 2
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The following statement contains a magic number: cOut.Write(input' input.Length/ 2' input.Length- input.Length/ 2);
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The following statement contains a magic number: cOut.Write(input' input.Length/ 2' input.Length- input.Length/ 2);
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The following statement contains a magic number: i != input.Length/ 2
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTest,The following statement contains a magic number: extra.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { 128' 131' 133' 134' 137' 138 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { 128' 131' 133' 134' 137' 138 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { 128' 131' 133' 134' 137' 138 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { 128' 131' 133' 134' 137' 138 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { 128' 131' 133' 134' 137' 138 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { 128' 131' 133' 134' 137' 138 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { (byte)128' (byte)131' (byte)133' (byte)134'                      (byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { (byte)128' (byte)131' (byte)133' (byte)134'                      (byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { (byte)128' (byte)131' (byte)133' (byte)134'                      (byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { (byte)128' (byte)131' (byte)133' (byte)134'                      (byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { (byte)128' (byte)131' (byte)133' (byte)134'                      (byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { (byte)128' (byte)131' (byte)133' (byte)134'                      (byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { (byte)128' (byte)131' (byte)133' (byte)134'                      (byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] rawDESKey = { (byte)128' (byte)131' (byte)133' (byte)134'                      (byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: ecipher.ProcessBytes(new byte[20]' 0' 20' cipherText' 0);
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: ecipher.ProcessBytes(new byte[20]' 0' 20' cipherText' 0);
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: byte[] encoding = new byte[10];
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: encoding[0] = 3;
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: encoding[1] = 8;
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,doTestExceptions,The following statement contains a magic number: ParameterUtilities.GetCipherParameters(                          "AES"'                          ParameterUtilities.CreateKeyParameter("AES"' new byte[16])'                          Asn1Object.FromByteArray(encoding));
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,PerformTest,The following statement contains a magic number: c.Init(true' ParameterUtilities.CreateKeyParameter("AES"' new byte[16]));
Magic Number,Org.BouncyCastle.Tests,BlockCipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\BlockCipherTest.cs,PerformTest,The following statement contains a magic number: c.DoFinal(new byte[4]);
Magic Number,Org.BouncyCastle.Tests,CamelliaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CamelliaTest.cs,TestCiphers,The following statement contains a magic number: doCipherTest(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,CamelliaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CamelliaTest.cs,TestCiphers,The following statement contains a magic number: doCipherTest(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,CamelliaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CamelliaTest.cs,doCipherTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,CamelliaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CamelliaTest.cs,doCipherTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,CamelliaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CamelliaTest.cs,doCipherTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,CamelliaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CamelliaTest.cs,doCipherTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,CamelliaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CamelliaTest.cs,doCipherTest,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,CamelliaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CamelliaTest.cs,doCipherTest,The following statement contains a magic number: extra.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,CertPathBuilderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathBuilderTest.cs,baseTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathBuilderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathBuilderTest.cs,baseTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathBuilderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathBuilderTest.cs,baseTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathBuilderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathBuilderTest.cs,baseTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathBuilderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathBuilderTest.cs,baseTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathBuilderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathBuilderTest.cs,baseTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathBuilderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathBuilderTest.cs,baseTest,The following statement contains a magic number: path.Certificates.Count != 2
Magic Number,Org.BouncyCastle.Tests,CertPathBuilderTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathBuilderTest.cs,v0Test,The following statement contains a magic number: path.Certificates.Count != 2
Magic Number,Org.BouncyCastle.Tests,CertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathTest.cs,doTestExceptions,The following statement contains a magic number: byte[] enc = { (byte)0' (byte)2' (byte)3' (byte)4' (byte)5 };
Magic Number,Org.BouncyCastle.Tests,CertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathTest.cs,doTestExceptions,The following statement contains a magic number: byte[] enc = { (byte)0' (byte)2' (byte)3' (byte)4' (byte)5 };
Magic Number,Org.BouncyCastle.Tests,CertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathTest.cs,doTestExceptions,The following statement contains a magic number: byte[] enc = { (byte)0' (byte)2' (byte)3' (byte)4' (byte)5 };
Magic Number,Org.BouncyCastle.Tests,CertPathTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathTest.cs,doTestExceptions,The following statement contains a magic number: byte[] enc = { (byte)0' (byte)2' (byte)3' (byte)4' (byte)5 };
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: DateTime validDate = new DateTime(2008' 9' 4' 5' 49' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: checker.GetCount() != 2
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: validDate = new DateTime(2004' 3' 20' 19' 21' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: validDate = new DateTime(2004' 3' 20' 19' 21' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: validDate = new DateTime(2004' 3' 20' 19' 21' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: validDate = new DateTime(2004' 3' 20' 19' 21' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: validDate = new DateTime(2004' 3' 20' 19' 21' 10);
Magic Number,Org.BouncyCastle.Tests,CertPathValidatorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertPathValidatorTest.cs,PerformTest,The following statement contains a magic number: validDate = new DateTime(2004' 3' 20' 19' 21' 10);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkKeyUsage,The following statement contains a magic number: cert.GetKeyUsage()[7]
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(                  false'                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(                  false'                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: !cert.GetKeyUsage()[7]
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: certGen1.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation1,The following statement contains a magic number: certGen1.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation2,The following statement contains a magic number: dpg.Init(512' 25' new SecureRandom());
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation2,The following statement contains a magic number: dpg.Init(512' 25' new SecureRandom());
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation2,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation2,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation2,The following statement contains a magic number: certGen1.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation2,The following statement contains a magic number: certGen1.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation3,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151")' // q (or p)                  new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"' 16)'   // a                  new BigInteger("0051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151")' // q (or p)                  new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"' 16)'   // a                  new BigInteger("0051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The following statement contains a magic number: ECDomainParameters spec = new ECDomainParameters(                  curve'  //				curve.DecodePoint(Hex.Decode("02C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66"))' // G                  curve.DecodePoint(Hex.Decode("0200C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66"))' // G                  new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createECCert,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation1,The following statement contains a magic number: kpGen.Init(                  new RsaKeyGenerationParameters(                      BigInteger.ValueOf(0x10001)' new SecureRandom()' 768' 25));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation1,The following statement contains a magic number: kpGen.Init(                  new RsaKeyGenerationParameters(                      BigInteger.ValueOf(0x10001)' new SecureRandom()' 768' 25));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation1,The following statement contains a magic number: crlGen.SetNextUpdate(now.AddSeconds(100));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation2,The following statement contains a magic number: kpGen.Init(                  new RsaKeyGenerationParameters(                      BigInteger.ValueOf(0x10001)' new SecureRandom()' 768' 25));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation2,The following statement contains a magic number: kpGen.Init(                  new RsaKeyGenerationParameters(                      BigInteger.ValueOf(0x10001)' new SecureRandom()' 768' 25));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation2,The following statement contains a magic number: crlGen.SetNextUpdate(now.AddSeconds(100));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation3,The following statement contains a magic number: kpGen.Init(                  new RsaKeyGenerationParameters(                      BigInteger.ValueOf(0x10001)' new SecureRandom()' 768' 25));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation3,The following statement contains a magic number: kpGen.Init(                  new RsaKeyGenerationParameters(                      BigInteger.ValueOf(0x10001)' new SecureRandom()' 768' 25));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation3,The following statement contains a magic number: crlGen.SetNextUpdate(now.AddSeconds(100));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation3,The following statement contains a magic number: crlGen.SetNextUpdate(now.AddSeconds(100));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCrlCreation3,The following statement contains a magic number: count != 2
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation4,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation4,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(                  false'                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(                  false'                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'                  new BigInteger("11"' 16)'                  new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'                  new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'                  new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'                  new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'                  new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'                  new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,checkCreation5,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,pkcs7Test,The following statement contains a magic number: SignedData sigData = new SignedData(                  DerSet.Empty'                  new ContentInfo(CmsObjectIdentifiers.Data' null)'                  new DerSet(                      rootCert'                      new DerTaggedObject(false' 2' Asn1Object.FromByteArray(AttrCertTest.attrCert)))'                  new DerSet(rootCrl)'                  DerSet.Empty);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,pkcs7Test,The following statement contains a magic number: certCol.Count != 4
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createPssCert,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,createPssCert,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(false'                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(false'                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,GenerateLongFixedKeys,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,doTestNullDerNullCert,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,doTestNullDerNullCert,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkCertificate(2' cert2);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkCertificate(3' cert3);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkCertificate(4' cert4);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkCertificate(5' cert5);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkCertificate(7' cert7);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkKeyUsage(8' keyUsage);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(9' uncompressedPtEC);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkNameCertificate(10' nameCert);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(11' probSelfSignedCert);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(12' gostCA1);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(13' gostCA2);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(14' gost341094base);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(15' gost34102001base);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(16' gost341094A);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(17' gost341094B);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkSelfSignedCertificate(17' gost34102001A);
Magic Number,Org.BouncyCastle.Tests,CertTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CertTest.cs,PerformTest,The following statement contains a magic number: checkCertificate(18' emptyDNCert);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key128 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143  				};
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: byte[] key256 = {  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143'  					(byte)128' (byte)131' (byte)133' (byte)134'  					(byte)137' (byte)138' (byte)140' (byte)143 };
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: ecipher.ProcessBytes(new byte[20]' 0' 20' cipherText' 0);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,doTestException,The following statement contains a magic number: ecipher.ProcessBytes(new byte[20]' 0' 20' cipherText' 0);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestSalsa20,The following statement contains a magic number: doRunTest("Salsa20"' 8);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestSalsa20Exception,The following statement contains a magic number: doTestException("Salsa20"' 8);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestHC128,The following statement contains a magic number: doRunTest("HC128"' 16);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestHC128Exception,The following statement contains a magic number: doTestException("HC128"' 16);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestHC256,The following statement contains a magic number: doRunTest("HC256"' 32);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestHC256Exception,The following statement contains a magic number: doTestException("HC256"' 32);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestVmpc,The following statement contains a magic number: doRunTest("VMPC"' 16);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestVmpcException,The following statement contains a magic number: doTestException("VMPC"' 16);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestVmpcKsa3,The following statement contains a magic number: doRunTest("VMPC-KSA3"' 16);
Magic Number,Org.BouncyCastle.Tests,CipherStreamTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\CipherStreamTest.cs,TestVmpcKsa3Exception,The following statement contains a magic number: doTestException("VMPC-KSA3"' 16);
Magic Number,Org.BouncyCastle.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DESedeTest.cs,doTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DESedeTest.cs,doTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DESedeTest.cs,doTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DESedeTest.cs,doTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DESedeTest.cs,doTest,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,DesEdeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DESedeTest.cs,doTest,The following statement contains a magic number: rest.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestECDH,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestECDH,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,doTestDesAndDesEde,The following statement contains a magic number: DHParameters dhParams = new DHParameters(p' g' null' 256);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DH"' 512' 0' g512' p512);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DiffieHellman"' 768' 0' g768' p768);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DIFFIEHELLMAN"' 1024' 0' g1024' p1024);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DH"' 512' 64' g512' p512);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DH"' 512' 64' g512' p512);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DiffieHellman"' 768' 128' g768' p768);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DiffieHellman"' 768' 128' g768' p768);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DIFFIEHELLMAN"' 1024' 256' g1024' p1024);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestGP("DIFFIEHELLMAN"' 1024' 256' g1024' p1024);
Magic Number,Org.BouncyCastle.Tests,DHTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DHTest.cs,TestFunction,The following statement contains a magic number: doTestExplicitWrapping(512' 0' g512' p512);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestNONEwithDSA,The following statement contains a magic number: pGen.Init(512' 80' rand);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestNONEwithDSA,The following statement contains a magic number: pGen.Init(512' 80' rand);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitPrime,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitPrime,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECDomainParameters parameters = new ECDomainParameters(                  curve'                  curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G                  new BigInteger("220855883097298041197912187592864814557886993776713230936715041207411783")' // n                  BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,DoTestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,DoTestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,DoTestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,DoTestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,DoTestECDsa239BitBinary,The following statement contains a magic number: ECDomainParameters parameters = new ECDomainParameters(                  curve'                  curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G                  new BigInteger("220855883097298041197912187592864814557886993776713230936715041207411783")' // n                  BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,doTestBadStrength,The following statement contains a magic number: pGen.Init(strength' 80' rand);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: doTestBadStrength(513);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: doTestBadStrength(510);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: doTestBadStrength(1025);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: pGen.Init(512' 80' rand);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: pGen.Init(512' 80' rand);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: curve = new F2mCurve(                      239' // m                      36' // k                      new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                      new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: curve = new F2mCurve(                      239' // m                      36' // k                      new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                      new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: curve = new F2mCurve(                      239' // m                      36' // k                      new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                      new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: curve = new F2mCurve(                      239' // m                      36' // k                      new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                      new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The following statement contains a magic number: ecSpec = new ECDomainParameters(                  curve'                  curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G                  new BigInteger("220855883097298041197912187592864814557886993776713230936715041207411783")' // n                  BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: a.Init(512' 20' random);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: a.Init(512' 20' random);
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestParameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: a.Init(new DsaParameterGenerationParameters(2048' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: a.Init(new DsaParameterGenerationParameters(2048' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: a.Init(new DsaParameterGenerationParameters(2048' 256' 80' new DsaTestSecureRandom(seed)));
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: !dsaP.Q.Equals(new BigInteger("C24ED361870B61E0D367F008F99F8A1F75525889C89DB1B673C45AF5867CB467"' 16))
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: !dsaP.P.Equals(new BigInteger(                  "F56C2A7D366E3EBDEAA1891FD2A0D099" +                  "436438A673FED4D75F594959CFFEBCA7BE0FC72E4FE67D91" +                  "D801CBA0693AC4ED9E411B41D19E2FD1699C4390AD27D94C" +                  "69C0B143F1DC88932CFE2310C886412047BD9B1C7A67F8A2" +                  "5909132627F51A0C866877E672E555342BDF9355347DBD43" +                  "B47156B2C20BAD9D2B071BC2FDCF9757F75C168C5D9FC431" +                  "31BE162A0756D1BDEC2CA0EB0E3B018A8B38D3EF2487782A" +                  "EB9FBF99D8B30499C55E4F61E5C7DCEE2A2BB55BD7F75FCD" +                  "F00E48F2E8356BDB59D86114028F67B8E07B127744778AFF" +                  "1CF1399A4D679D92FDE7D941C5C85C5D7BFF91BA69F9489D" +                  "531D1EBFA727CFDA651390F8021719FA9F7216CEB177BD75"' 16))
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: !dsaP.G.Equals(new BigInteger(                  "8DC6CC814CAE4A1C05A3E186A6FE27EA" +                  "BA8CDB133FDCE14A963A92E809790CBA096EAA26140550C1" +                  "29FA2B98C16E84236AA33BF919CD6F587E048C52666576DB" +                  "6E925C6CBE9B9EC5C16020F9A44C9F1C8F7A8E611C1F6EC2" +                  "513EA6AA0B8D0F72FED73CA37DF240DB57BBB27431D61869" +                  "7B9E771B0B301D5DF05955425061A30DC6D33BB6D2A32BD0" +                  "A75A0A71D2184F506372ABF84A56AEEEA8EB693BF29A6403" +                  "45FA1298A16E85421B2208D00068A5A42915F82CF0B858C8" +                  "FA39D43D704B6927E0B2F916304E86FB6A1B487F07D8139E" +                  "428BB096C6D67A76EC0B8D4EF274B8A2CF556D279AD267CC" +                  "EF5AF477AFED029F485B5597739F5D0240F67C2D948A6279"' 16))
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: !vKey.Y.Equals(new BigInteger(                  "2828003D7C747199143C370FDD07A286" +                  "1524514ACC57F63F80C38C2087C6B795B62DE1C224BF8D1D" +                  "1424E60CE3F5AE3F76C754A2464AF292286D873A7A30B7EA" +                  "CBBC75AAFDE7191D9157598CDB0B60E0C5AA3F6EBE425500" +                  "C611957DBF5ED35490714A42811FDCDEB19AF2AB30BEADFF" +                  "2907931CEE7F3B55532CFFAEB371F84F01347630EB227A41" +                  "9B1F3F558BC8A509D64A765D8987D493B007C4412C297CAF" +                  "41566E26FAEE475137EC781A0DC088A26C8804A98C23140E" +                  "7C936281864B99571EE95C416AA38CEEBB41FDBFF1EB1D1D" +                  "C97B63CE1355257627C8B0FD840DDB20ED35BE92F08C49AE" +                  "A5613957D7E5C7A6D5A5834B4CB069E0831753ECF65BA02B"' 16))
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: !sKey.X.Equals(                  new BigInteger("0CAF2EF547EC49C4F3A6FE6DF4223A174D01F2C115D49A6F73437C29A2A8458C"' 16))
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestDsa2Parameters,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DigestTest.cs,doTest,The following statement contains a magic number: digest.BlockUpdate(message' 0' message.Length/2);
Magic Number,Org.BouncyCastle.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DigestTest.cs,doTest,The following statement contains a magic number: digest.BlockUpdate(message' message.Length/2' message.Length-message.Length/2);
Magic Number,Org.BouncyCastle.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DigestTest.cs,doTest,The following statement contains a magic number: digest.BlockUpdate(message' message.Length/2' message.Length-message.Length/2);
Magic Number,Org.BouncyCastle.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DigestTest.cs,doTest,The following statement contains a magic number: digest.BlockUpdate(message' 0' message.Length/2);
Magic Number,Org.BouncyCastle.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DigestTest.cs,doTest,The following statement contains a magic number: digest.BlockUpdate(message' 0' message.Length/2);
Magic Number,Org.BouncyCastle.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DigestTest.cs,doTest,The following statement contains a magic number: digest.BlockUpdate(message' message.Length/2' message.Length-message.Length/2);
Magic Number,Org.BouncyCastle.Tests,DigestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DigestTest.cs,doTest,The following statement contains a magic number: digest.BlockUpdate(message' message.Length/2' message.Length-message.Length/2);
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,DecodeTest,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,DecodeTest,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("6277101735386680763835789423207666416083908700390324961279")' // q                  new BigInteger("fffffffffffffffffffffffffffffffefffffffffffffffc"' 16)' // a                  new BigInteger("64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,DecodeTest,The following statement contains a magic number: !x.Equals(new BigInteger("188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012"' 16))
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,DecodeTest,The following statement contains a magic number: !y.Equals(new BigInteger("7192b95ffc8da78631011ed6b24cdd573f977a11e794811"' 16))
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitPrime,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitPrime,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECCurve curve = new F2mCurve(                  239' // m                  36' // k                  new BigInteger("32010857077C5431123A46B808906756F543423E8D27877578125778AC76"' 16)' // a                  new BigInteger("790408F2EEDAF392B012EDEFB3392F30F4327C0CA3F31FC383C422AA8C16"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestECDsa239BitBinary,The following statement contains a magic number: ECDomainParameters parameters = new ECDomainParameters(                  curve'  //				ECPointUtil.DecodePoint(curve' Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G                  curve.DecodePoint(Hex.Decode("0457927098FA932E7C0A96D3FD5B706EF7E5F5C156E16B7E7C86038552E91D61D8EE5077C33FECF6F1A16B268DE469C3C7744EA9A971649FC7A9616305"))' // G                  new BigInteger("220855883097298041197912187592864814557886993776713230936715041207411783")' // n                  BigInteger.ValueOf(4));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,ECDsa5Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECDSA5Test.cs,TestGeneration,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,ECEncodingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECEncodingTest.cs,doTestPointCompression,The following statement contains a magic number: int[] ks = new int[3];
Magic Number,Org.BouncyCastle.Tests,ECEncodingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECEncodingTest.cs,doTestPointCompression,The following statement contains a magic number: ks[2] = k1;
Magic Number,Org.BouncyCastle.Tests,ECEncodingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECEncodingTest.cs,GenerateSelfSignedSoftECCert,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,ECEncodingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECEncodingTest.cs,GenerateSelfSignedSoftECCert,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50000));
Magic Number,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR239bitPrime,The following statement contains a magic number: checkSignature(239' priKey' pubKey' sgr' k' message' r' s);
Magic Number,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR192bitPrime,The following statement contains a magic number: byte[] kData = new BigInteger("dcc5d1f1020906df2782360d36b2de7a17ece37d503784af"' 16).ToByteArrayUnsigned();
Magic Number,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR192bitPrime,The following statement contains a magic number: checkSignature(192' priKey' pubKey' sgr' k' message' r' s);
Magic Number,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR521bitPrime,The following statement contains a magic number: byte[] kData = new BigInteger("cdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"' 16).ToByteArrayUnsigned();
Magic Number,Org.BouncyCastle.Tests,ECNRTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ECNRTest.cs,TestECNR521bitPrime,The following statement contains a magic number: checkSignature(521' priKey' pubKey' sgr' k' message' r' s);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP512,The following statement contains a magic number: doTestGP(512' 0' g512' p512);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP512,The following statement contains a magic number: doTestGP(512' 64' g512' p512);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP512,The following statement contains a magic number: doTestGP(512' 64' g512' p512);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP768,The following statement contains a magic number: doTestGP(768' 0' g768' p768);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP768,The following statement contains a magic number: doTestGP(768' 128' g768' p768);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP768,The following statement contains a magic number: doTestGP(768' 128' g768' p768);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP1024,The following statement contains a magic number: doTestGP(1024' 0' g1024' p1024);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP1024,The following statement contains a magic number: doTestGP(1024' 256' g1024' p1024);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestGP1024,The following statement contains a magic number: doTestGP(1024' 256' g1024' p1024);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,TestRandom256,The following statement contains a magic number: doTestRandom(256);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: cipher.GetOutputSize(inBytes.Length) != (size / 8) * 2
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: cipher.GetOutputSize(inBytes.Length) != (size / 8) * 2
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: cipher.GetOutputSize(outBytes.Length) != (size / 8) - 1
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: int outLen = c1.ProcessBytes(inBytes' 0' 2' out1' 0);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: outLen += c1.DoFinal(inBytes' 2' inBytes.Length - 2' out1' outLen);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: outLen += c1.DoFinal(inBytes' 2' inBytes.Length - 2' out1' outLen);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: outLen = c2.ProcessBytes(out1' 0' 2' out2' 0);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: outLen += c2.DoFinal(out1' 2' out1.Length - 2' out2' outLen);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestGP,The following statement contains a magic number: outLen += c2.DoFinal(out1' 2' out1.Length - 2' out2' outLen);
Magic Number,Org.BouncyCastle.Tests,ElGamalTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\ElGamalTest.cs,doTestRandom,The following statement contains a magic number: a.Init(size' 20' new SecureRandom());
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: fact.Init(new KeyGenerationParameters(new SecureRandom()' 512));
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: byte[] salt = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Org.BouncyCastle.Tests,EncryptedPrivateKeyInfoTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\EncryptedPrivateKeyInfoTest.cs,PerformTest,The following statement contains a magic number: int iterationCount = 100;
Magic Number,Org.BouncyCastle.Tests,FipsDesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\FIPSDESTest.cs,doTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,FipsDesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\FIPSDESTest.cs,doTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,FipsDesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\FIPSDESTest.cs,doTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,FipsDesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\FIPSDESTest.cs,doTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,FipsDesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\FIPSDESTest.cs,doTest,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,FipsDesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\FIPSDESTest.cs,doTest,The following statement contains a magic number: extra.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestEcb,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestEcb,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestEcb,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestEcb,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestEcb,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestEcb,The following statement contains a magic number: extra.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: byte[] iv = {1'2'3'4'5'6'7'8};
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: byte[] iv = {1'2'3'4'5'6'7'8};
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: byte[] iv = {1'2'3'4'5'6'7'8};
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: byte[] iv = {1'2'3'4'5'6'7'8};
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: byte[] iv = {1'2'3'4'5'6'7'8};
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: byte[] iv = {1'2'3'4'5'6'7'8};
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: byte[] iv = {1'2'3'4'5'6'7'8};
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doTestCfb,The following statement contains a magic number: extra.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,doOidTest,The following statement contains a magic number: byte[] iv = new byte[8];
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: doTestEcb(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: doTestEcb(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: doTestCfb(int.Parse(cipherTests[i + 4])'  					Hex.Decode(cipherTests[i + 4 + 1])'  					Hex.Decode(cipherTests[i + 4 + 2])'  					Hex.Decode(cipherTests[i + 4 + 3]));
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: doTestCfb(int.Parse(cipherTests[i + 4])'  					Hex.Decode(cipherTests[i + 4 + 1])'  					Hex.Decode(cipherTests[i + 4 + 2])'  					Hex.Decode(cipherTests[i + 4 + 3]));
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: doTestCfb(int.Parse(cipherTests[i + 4])'  					Hex.Decode(cipherTests[i + 4 + 1])'  					Hex.Decode(cipherTests[i + 4 + 2])'  					Hex.Decode(cipherTests[i + 4 + 3]));
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: doTestCfb(int.Parse(cipherTests[i + 4])'  					Hex.Decode(cipherTests[i + 4 + 1])'  					Hex.Decode(cipherTests[i + 4 + 2])'  					Hex.Decode(cipherTests[i + 4 + 3]));
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: doTestCfb(int.Parse(cipherTests[i + 4])'  					Hex.Decode(cipherTests[i + 4 + 1])'  					Hex.Decode(cipherTests[i + 4 + 2])'  					Hex.Decode(cipherTests[i + 4 + 3]));
Magic Number,Org.BouncyCastle.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST28147Test.cs,PerformTest,The following statement contains a magic number: doTestCfb(int.Parse(cipherTests[i + 4])'  					Hex.Decode(cipherTests[i + 4 + 1])'  					Hex.Decode(cipherTests[i + 4 + 2])'  					Hex.Decode(cipherTests[i + 4 + 3]));
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,generationTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,generationTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,generationTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,generationTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,generationTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,generationTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,generationTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,generationTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,keyStoreTest,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,keyStoreTest,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,parametersTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,parametersTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,parametersTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,parametersTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,parametersTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,parametersTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,parametersTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,parametersTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,decode,The following statement contains a magic number: byte[] r = new byte[32];
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,decode,The following statement contains a magic number: byte[] s = new byte[32];
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,decode,The following statement contains a magic number: Array.Copy(encoding' 0' s' 0' 32);
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,decode,The following statement contains a magic number: Array.Copy(encoding' 32' r' 0' 32);
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,decode,The following statement contains a magic number: Array.Copy(encoding' 32' r' 0' 32);
Magic Number,Org.BouncyCastle.Tests,Gost3410Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\GOST3410Test.cs,decode,The following statement contains a magic number: BigInteger[] sig = new BigInteger[2];
Magic Number,Org.BouncyCastle.Tests,HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\HMacTest.cs,doTestExceptions,The following statement contains a magic number: byte [] b = {(byte)1' (byte)2' (byte)3' (byte)4' (byte)5};
Magic Number,Org.BouncyCastle.Tests,HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\HMacTest.cs,doTestExceptions,The following statement contains a magic number: byte [] b = {(byte)1' (byte)2' (byte)3' (byte)4' (byte)5};
Magic Number,Org.BouncyCastle.Tests,HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\HMacTest.cs,doTestExceptions,The following statement contains a magic number: byte [] b = {(byte)1' (byte)2' (byte)3' (byte)4' (byte)5};
Magic Number,Org.BouncyCastle.Tests,HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\HMacTest.cs,doTestExceptions,The following statement contains a magic number: byte [] b = {(byte)1' (byte)2' (byte)3' (byte)4' (byte)5};
Magic Number,Org.BouncyCastle.Tests,HMacTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\HMacTest.cs,doTestExceptions,The following statement contains a magic number: RC5Parameters rc5Parameters = new RC5Parameters(b' 100);
Magic Number,Org.BouncyCastle.Tests,IesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\IESTest.cs,PerformTest,The following statement contains a magic number: ECCurve curve = new FpCurve(  				new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q  				new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a  				new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,IesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\IESTest.cs,PerformTest,The following statement contains a magic number: ECCurve curve = new FpCurve(  				new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q  				new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a  				new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,IesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\IESTest.cs,PerformTest,The following statement contains a magic number: g.Init(new KeyGenerationParameters(new SecureRandom()' 192));
Magic Number,Org.BouncyCastle.Tests,IesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\IESTest.cs,PerformTest,The following statement contains a magic number: g.Init(new KeyGenerationParameters(new SecureRandom()' 239));
Magic Number,Org.BouncyCastle.Tests,IesTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\IESTest.cs,PerformTest,The following statement contains a magic number: g.Init(new KeyGenerationParameters(new SecureRandom()' 256));
Magic Number,Org.BouncyCastle.Tests,MqvTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\MqvTest.cs,TestECMqv,The following statement contains a magic number: ECCurve curve = new FpCurve(  				new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q  				new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a  				new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,MqvTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\MqvTest.cs,TestECMqv,The following statement contains a magic number: ECCurve curve = new FpCurve(  				new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q  				new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a  				new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,NoekeonTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NoekeonTest.cs,DoTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,NoekeonTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NoekeonTest.cs,DoTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,NoekeonTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NoekeonTest.cs,DoTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,NoekeonTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NoekeonTest.cs,DoTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,NoekeonTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NoekeonTest.cs,DoTest,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,NoekeonTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NoekeonTest.cs,DoTest,The following statement contains a magic number: extra.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,NoekeonTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NoekeonTest.cs,PerformTest,The following statement contains a magic number: DoTest(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,NoekeonTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\NoekeonTest.cs,PerformTest,The following statement contains a magic number: DoTest(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,doTestPbeHMac,The following statement contains a magic number: Asn1Encodable algParams = PbeUtilities.GenerateAlgorithmParameters(  					hmacName' new byte[20]' 100);
Magic Number,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,doTestPbeHMac,The following statement contains a magic number: Asn1Encodable algParams = PbeUtilities.GenerateAlgorithmParameters(  					hmacName' new byte[20]' 100);
Magic Number,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: IBufferedCipher cDec = makePbeCipherUsingParam(  				"PBEWithSHA1AndDES"'  				false'  				password'  				Hex.Decode("7d60435f02e9e0ae")'  				2048);
Magic Number,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: cDec = makePbeCipherWithoutParam(  				"PBEWithSHA1AndDES"'  				false'  				password'  				Hex.Decode("7d60435f02e9e0ae")'  				2048);
Magic Number,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: cDec = makePbeCipherUsingParam(  				"PBEWithSHAAnd3-KeyTripleDES-CBC"'  				false'  				password'  				Hex.Decode("7d60435f02e9e0ae")'  				2048);
Magic Number,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: cDec = makePbeCipherUsingParam(  				"PBEWithSHAAnd40BitRC2-CBC"'  				false'  				password'  				Hex.Decode("7d60435f02e9e0ae")'  				2048);
Magic Number,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: cDec = makePbeCipherUsingParam(  				"PBEWithSHAAnd128BitRC4"'  				false'  				password'  				Hex.Decode("7d60435f02e9e0ae")'  				2048);
Magic Number,Org.BouncyCastle.Tests,PbeTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: cDec = makePbeCipherWithoutParam(  				"PBEWithSHAAnd128BitRC4"'  				false'  				password'  				Hex.Decode("7d60435f02e9e0ae")'  				2048);
Magic Number,Org.BouncyCastle.Tests,OpenSslTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: byte[] salt = new byte[16];
Magic Number,Org.BouncyCastle.Tests,OpenSslTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: int iCount = 100;
Magic Number,Org.BouncyCastle.Tests,Pkcs12Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PBETest.cs,PerformTest,The following statement contains a magic number: int iCount = 100;
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151")' // q (or p)                  new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"' 16)'   // a                  new BigInteger("0051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00"' 16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The following statement contains a magic number: FpCurve curve = new FpCurve(                  new BigInteger("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151")' // q (or p)                  new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"' 16)'   // a                  new BigInteger("0051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00"' 16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createECRequest,The following statement contains a magic number: ECDomainParameters spec = new ECDomainParameters(                  curve'  //				curve.DecodePoint(Hex.Decode("02C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66"))' // G                  curve.DecodePoint(Hex.Decode("0200C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66"))' // G                  new BigInteger("01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409"' 16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(false'                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaKeyParameters pubKey = new RsaKeyParameters(false'                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,createPssTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKey = new RsaPrivateCrtKeyParameters(                  new BigInteger("a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137"'16)'                  new BigInteger("010001"'16)'                  new BigInteger("33a5042a90b27d4f5451ca9bbbd0b44771a101af884340aef9885f2a4bbe92e894a724ac3c568c8f97853ad07c0266c8c6a3ca0929f1e8f11231884429fc4d9ae55fee896a10ce707c3ed7e734e44727a39574501a532683109c2abacaba283c31b4bd2f53c3ee37e352cee34f9e503bd80c0622ad79c6dcee883547c6a3b325"'16)'                  new BigInteger("e7e8942720a877517273a356053ea2a1bc0c94aa72d55c6e86296b2dfc967948c0a72cbccca7eacb35706e09a1df55a1535bd9b3cc34160b3b6dcd3eda8e6443"'16)'                  new BigInteger("b69dca1cf7d4d7ec81e75b90fcca874abcde123fd2700180aa90479b6e48de8d67ed24f9f19d85ba275874f542cd20dc723e6963364a1f9425452b269a6799fd"'16)'                  new BigInteger("28fa13938655be1f8a159cbaca5a72ea190c30089e19cd274a556f36c4f6e19f554b34c077790427bbdd8dd3ede2448328f385d81b30e8e43b2fffa027861979"'16)'                  new BigInteger("1a8b38f398fa712049898d7fb79ee0a77668791299cdfa09efc0e507acb21ed74301ef5bfd48be455eaeb6e1678255827580a8e4e8e14151d1510a82a3f2e729"'16)'                  new BigInteger("27156aba4126d24a81f3a528cbfb27f56886f840a9f6e86e17a44b94fe9319584b8e22fdde1e5a2e3bd8aa5ba8d8584194eb2190acf832b847f13a3d24a79f4d"'16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,nullPointerTest,The following statement contains a magic number: keyGen.Init(new KeyGenerationParameters(new SecureRandom()' 1024));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,PerformTest,The following statement contains a magic number: generationTest(512' "RSA"' "SHA1withRSA");
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,PerformTest,The following statement contains a magic number: generationTest(512' "GOST3410"' "GOST3411withGOST3410");
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,PerformTest,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,Pkcs10CertRequestTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PKCS10CertRequestTest.cs,PerformTest,The following statement contains a magic number: ECCurve curve = new FpCurve(                  new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PSSTest.cs,rawModeTest,The following statement contains a magic number: byte[] sampleMessage = new byte[1000 + random.Next() % 100];
Magic Number,Org.BouncyCastle.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PSSTest.cs,rawModeTest,The following statement contains a magic number: byte[] sampleMessage = new byte[1000 + random.Next() % 100];
Magic Number,Org.BouncyCastle.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PSSTest.cs,rawModeTest,The following statement contains a magic number: byte[] fixedRandomBytes = new byte[128];
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateTrustCert,The following statement contains a magic number: v3CertGen.SetSerialNumber(BigInteger.ValueOf(10));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateTrustCert,The following statement contains a magic number: v3CertGen.SetNotBefore(DateTime.UtcNow.AddDays(-30));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateTrustCert,The following statement contains a magic number: v3CertGen.SetNotAfter(DateTime.UtcNow.AddDays(30));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateIntmedCert,The following statement contains a magic number: v3CertGen.SetSerialNumber(BigInteger.ValueOf(20));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateIntmedCert,The following statement contains a magic number: v3CertGen.SetNotBefore(DateTime.UtcNow.AddDays(-30));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateIntmedCert,The following statement contains a magic number: v3CertGen.SetNotAfter(DateTime.UtcNow.AddDays(30));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateEndEntityCert,The following statement contains a magic number: v3CertGen.SetSerialNumber(BigInteger.ValueOf(20));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateEndEntityCert,The following statement contains a magic number: v3CertGen.SetNotBefore(DateTime.UtcNow.AddDays(-30));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,CreateEndEntityCert,The following statement contains a magic number: v3CertGen.SetNotAfter(DateTime.UtcNow.AddDays(30));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPublicKeyStructure pubKeySpec = new RsaPublicKeyStructure(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPublicKeyStructure pubKeySpec = new RsaPublicKeyStructure(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters privKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b4a7e46170574f16a97082b22be58b6a2a629798419be12872a4bdba626cfae9900f76abfb12139dce5de56564fab2b6543165a040c606887420e33d91ed7ed7"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("9f66f6b05410cd503b2709e88115d55daced94d1a34d4e32bf824d0dde6028ae79c5f07b580f5dce240d7111f7ddb130a7945cd7d957d1920994da389f490c89"' 16)'  				new BigInteger("c0a0758cdf14256f78d4708c86becdead1b50ad4ad6c5c703e2168fbf37884cb"' 16)'  				new BigInteger("f01734d7960ea60070f1b06f2bb81bfac48ff192ae18451d5e56c734a5aab8a5"' 16)'  				new BigInteger("b54bb9edff22051d9ee60f9351a48591b6500a319429c069a3e335a1d6171391"' 16)'  				new BigInteger("d3d83daf2a0cecd3367ae6f8ae1aeb82e9ac2f816c6fc483533d8297dd7884cd"' 16)'  				new BigInteger("b8f52fc6f38593dabb661d3f50f8897f8106eee68b1bce78a95b132b4e5b5d19"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPublicKeyStructure intPubKeySpec = new RsaPublicKeyStructure(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPublicKeyStructure intPubKeySpec = new RsaPublicKeyStructure(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters intPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("8de0d113c5e736969c8d2b047a243f8fe18edad64cde9e842d3669230ca486f7cfdde1f8eec54d1905fff04acc85e61093e180cadc6cea407f193d44bb0e9449b8dbb49784cd9e36260c39e06a947299978c6ed8300724e887198cfede20f3fbde658fa2bd078be946a392bd349f2b49c486e20c405588e306706c9017308e69"' 16)'  				new BigInteger("ffff"' 16)'  				new BigInteger("7deb1b194a85bcfd29cf871411468adbc987650903e3bacc8338c449ca7b32efd39ffc33bc84412fcd7df18d23ce9d7c25ea910b1ae9985373e0273b4dca7f2e0db3b7314056ac67fd277f8f89cf2fd73c34c6ca69f9ba477143d2b0e2445548aa0b4a8473095182631da46844c356f5e5c7522eb54b5a33f11d730ead9c0cff"' 16)'  				new BigInteger("ef4cede573cea47f83699b814de4302edb60eefe426c52e17bd7870ec7c6b7a24fe55282ebb73775f369157726fcfb988def2b40350bdca9e5b418340288f649"' 16)'  				new BigInteger("97c7737d1b9a0088c3c7b528539247fd2a1593e7e01cef18848755be82f4a45aa093276cb0cbf118cb41117540a78f3fc471ba5d69f0042274defc9161265721"' 16)'  				new BigInteger("6c641094e24d172728b8da3c2777e69adfd0839085be7e38c7c4a2dd00b1ae969f2ec9d23e7e37090fcd449a40af0ed463fe1c612d6810d6b4f58b7bfa31eb5f"' 16)'  				new BigInteger("70b7123e8e69dfa76feb1236d0a686144b00e9232ed52b73847e74ef3af71fb45ccb24261f40d27f98101e230cf27b977a5d5f1f15f6cf48d5cb1da2a3a3b87f"' 16)'  				new BigInteger("e38f5750d97e270996a286df2e653fd26c242106436f5bab0f4c7a9e654ce02665d5a281f2c412456f2d1fa26586ef04a9adac9004ca7f913162cb28e13bf40d"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPublicKeyStructure caPubKeySpec = new RsaPublicKeyStructure(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPublicKeyStructure caPubKeySpec = new RsaPublicKeyStructure(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: RsaPrivateCrtKeyParameters caPrivKeySpec = new RsaPrivateCrtKeyParameters(  				new BigInteger("b259d2d6e627a768c94be36164c2d9fc79d97aab9253140e5bf17751197731d6f7540d2509e7b9ffee0a70a6e26d56e92d2edd7f85aba85600b69089f35f6bdbf3c298e05842535d9f064e6b0391cb7d306e0a2d20c4dfb4e7b49a9640bdea26c10ad69c3f05007ce2513cee44cfe01998e62b6c3637d3fc0391079b26ee36d5"' 16)'  				new BigInteger("11"' 16)'  				new BigInteger("92e08f83cc9920746989ca5034dcb384a094fb9c5a6288fcc4304424ab8f56388f72652d8fafc65a4b9020896f2cde297080f2a540e7b7ce5af0b3446e1258d1dd7f245cf54124b4c6e17da21b90a0ebd22605e6f45c9f136d7a13eaac1c0f7487de8bd6d924972408ebb58af71e76fd7b012a8d0e165f3ae2e5077a8648e619"' 16)'  				new BigInteger("f75e80839b9b9379f1cf1128f321639757dba514642c206bbbd99f9a4846208b3e93fbbe5e0527cc59b1d4b929d9555853004c7c8b30ee6a213c3d1bb7415d03"' 16)'  				new BigInteger("b892d9ebdbfc37e397256dd8a5d3123534d1f03726284743ddc6be3a709edb696fc40c7d902ed804c6eee730eee3d5b20bf6bd8d87a296813c87d3b3cc9d7947"' 16)'  				new BigInteger("1d1a2d3ca8e52068b3094d501c9a842fec37f54db16e9a67070a8b3f53cc03d4257ad252a1a640eadd603724d7bf3737914b544ae332eedf4f34436cac25ceb5"' 16)'  				new BigInteger("6c929e4e81672fef49d9c825163fec97c4b7ba7acb26c0824638ac22605d7201c94625770984f78a56e6e25904fe7db407099cad9b14588841b94f5ab498dded"' 16)'  				new BigInteger("dae7651ee69ad1d081ec5e7188ae126f6004ff39556bde90e0b870962fa7b926d070686d8244fe5a9aa709a95686a104614834b0ada4b10f53197a5cb4c97339"' 16));
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: msg = TestPolicies(2' trustCert' intCert' endCert' requirePolicies' true);
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: CheckMessage(2' msg' "");
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: msg = TestPolicies(3' trustCert' intCert' endCert' requirePolicies' true);
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: CheckMessage(3' msg' "");
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: msg = TestPolicies(4' trustCert' intCert' endCert' requirePolicies' true);
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: CheckMessage(4' msg' "");
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: msg = TestPolicies(5' trustCert' intCert' endCert' requirePolicies' false);
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: CheckMessage(5' msg' "Path processing failed on policy.");
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: msg = TestPolicies(6' trustCert' intCert' endCert' requirePolicies' true);
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: CheckMessage(6' msg' "");
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: msg = TestPolicies(7' trustCert' intCert' endCert' requirePolicies' false);
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: CheckMessage(7' msg' "Path processing failed on policy.");
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: msg = TestPolicies(8' trustCert' intCert' endCert' requirePolicies' false);
Magic Number,Org.BouncyCastle.Tests,PkixPolicyMappingTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\PkixPolicyMappingTest.cs,PerformTest,The following statement contains a magic number: CheckMessage(8' msg' "Path processing failed on policy.");
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: Fail("OAEP test failed on encrypt expected " + Hex.ToHexString(output[2]) + " got " + Hex.ToHexString(outBytes));
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: !AreEqual(outBytes' output[2])
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: Fail("OAEP SHA-224 test failed on encrypt expected " + Hex.ToHexString(output[2]) + " got " + Hex.ToHexString(outBytes));
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: !AreEqual(outBytes' output[3])
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: Fail("OAEP SHA-256 test failed on encrypt expected " + Hex.ToHexString(output[2]) + " got " + Hex.ToHexString(outBytes));
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: !AreEqual(outBytes' output[4])
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: Fail("OAEP SHA-384 test failed on encrypt expected " + Hex.ToHexString(output[2]) + " got " + Hex.ToHexString(outBytes));
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: !AreEqual(outBytes' output[5])
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: Fail("OAEP MD5 test failed on encrypt expected " + Hex.ToHexString(output[2]) + " got " + Hex.ToHexString(outBytes));
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: !AreEqual(outBytes' output[6])
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: rop = new RsaesOaepParameters(  				new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance)'  				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance))'  				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdPSpecified' new DerOctetString(new byte[] { 1' 2' 3' 4' 5 }))).GetEncoded();
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: rop = new RsaesOaepParameters(  				new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance)'  				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance))'  				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdPSpecified' new DerOctetString(new byte[] { 1' 2' 3' 4' 5 }))).GetEncoded();
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: rop = new RsaesOaepParameters(  				new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance)'  				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance))'  				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdPSpecified' new DerOctetString(new byte[] { 1' 2' 3' 4' 5 }))).GetEncoded();
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: rop = new RsaesOaepParameters(  				new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance)'  				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdMgf1' new AlgorithmIdentifier(OiwObjectIdentifiers.IdSha1' DerNull.Instance))'  				new AlgorithmIdentifier(PkcsObjectIdentifiers.IdPSpecified' new DerOctetString(new byte[] { 1' 2' 3' 4' 5 }))).GetEncoded();
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: Fail("ISO9796-1 test failed on encrypt expected " + Hex.ToHexString(output[3]) + " got " + Hex.ToHexString(outBytes));
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: !AreEqual(outBytes' output[8])
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: keyPairGen.Init(  				new RsaKeyGenerationParameters(  					BigInteger.ValueOf(0x10001)'  					new SecureRandom()'  					768'  					25));
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The following statement contains a magic number: keyPairGen.Init(  				new RsaKeyGenerationParameters(  					BigInteger.ValueOf(0x10001)'  					new SecureRandom()'  					768'  					25));
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,rawModeTest,The following statement contains a magic number: byte[] sampleMessage = new byte[1000 + random.Next() % 100];
Magic Number,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,rawModeTest,The following statement contains a magic number: byte[] sampleMessage = new byte[1000 + random.Next() % 100];
Magic Number,Org.BouncyCastle.Tests,SeedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SEEDTest.cs,TestCiphers,The following statement contains a magic number: doCipherTest(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,SeedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SEEDTest.cs,TestCiphers,The following statement contains a magic number: doCipherTest(int.Parse(cipherTests[i])'  					Hex.Decode(cipherTests[i + 1])'  					Hex.Decode(cipherTests[i + 2])'  					Hex.Decode(cipherTests[i + 3]));
Magic Number,Org.BouncyCastle.Tests,SeedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SEEDTest.cs,doCipherTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,SeedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SEEDTest.cs,doCipherTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,SeedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SEEDTest.cs,doCipherTest,The following statement contains a magic number: cOut.Write(input' input.Length / 2' input.Length - input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,SeedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SEEDTest.cs,doCipherTest,The following statement contains a magic number: i != input.Length / 2
Magic Number,Org.BouncyCastle.Tests,SeedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SEEDTest.cs,doCipherTest,The following statement contains a magic number: int remaining = bytes.Length - input.Length / 2;
Magic Number,Org.BouncyCastle.Tests,SeedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SEEDTest.cs,doCipherTest,The following statement contains a magic number: extra.CopyTo(bytes' input.Length / 2);
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: byte[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0 };
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: fact.Init(  				new RsaKeyGenerationParameters(  					BigInteger.ValueOf(0x10001)'  					new SecureRandom()'  					768'  					25));
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: fact.Init(  				new RsaKeyGenerationParameters(  					BigInteger.ValueOf(0x10001)'  					new SecureRandom()'  					768'  					25));
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: BigInteger  mod = new BigInteger("ffffffff78f6c55506c59785e871211ee120b0b5dd644aa796d82413a47b24573f1be5745b5cd9950f6b389b52350d4e01e90009669a8720bf265a2865994190a661dea3c7828e2e7ca1b19651adc2d5"' 16);
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: BigInteger  pub = new BigInteger("03"' 16);
Magic Number,Org.BouncyCastle.Tests,SigTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\SigTest.cs,PerformTest,The following statement contains a magic number: BigInteger  pri = new BigInteger("2aaaaaaa942920e38120ee965168302fd0301d73a4e60c7143ceb0adf0bf30b9352f50e8b9e4ceedd65343b2179005b2f099915e4b0c37e41314bb0821ad8330d23cba7f589e0f129b04c46b67dfce9d"' 16);
Magic Number,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateRsaKeyPair,The following statement contains a magic number: kpGen.Init(new KeyGenerationParameters(new SecureRandom()' 1024));
Magic Number,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateRootCert,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateRootCert,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateIntermediateCert,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateIntermediateCert,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateEndEntityCert,The following statement contains a magic number: certGen.SetNotBefore(DateTime.UtcNow.AddSeconds(-50));
Magic Number,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,GenerateEndEntityCert,The following statement contains a magic number: certGen.SetNotAfter(DateTime.UtcNow.AddSeconds(50));
Magic Number,Org.BouncyCastle.Tests,TestUtilities,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\TestUtilities.cs,CreateCrl,The following statement contains a magic number: crlGen.SetNextUpdate(now.AddSeconds(100));
Magic Number,Org.BouncyCastle.Tests,WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\WrapTest.cs,Perform,The following statement contains a magic number: fact.Init(  					new RsaKeyGenerationParameters(  						BigInteger.ValueOf(0x10001)'  						new SecureRandom()'  						512'  						25));
Magic Number,Org.BouncyCastle.Tests,WrapTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\WrapTest.cs,Perform,The following statement contains a magic number: fact.Init(  					new RsaKeyGenerationParameters(  						BigInteger.ValueOf(0x10001)'  						new SecureRandom()'  						512'  						25));
Magic Number,Org.BouncyCastle.Tests,X509StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509StoreTest.cs,certPairTest,The following statement contains a magic number: col.Count != 2
Magic Number,Org.BouncyCastle.Tests,X509StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509StoreTest.cs,PerformTest,The following statement contains a magic number: certs.Count != 2
Magic Number,Org.BouncyCastle.Tests,X509StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509StoreTest.cs,PerformTest,The following statement contains a magic number: attrSelector.AttributeCertificateValid = new DateTimeObject(attrCert.NotBefore.AddMilliseconds(-100));
Magic Number,Org.BouncyCastle.Tests,X509StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509StoreTest.cs,PerformTest,The following statement contains a magic number: attrSelector.AttributeCertificateValid = new DateTimeObject(attrCert.NotAfter.AddMilliseconds(100));
Magic Number,Org.BouncyCastle.Tests,X509StoreTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\X509StoreTest.cs,PerformTest,The following statement contains a magic number: attrSelector.SerialNumber = BigInteger.ValueOf(10000);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestBasic,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestBasic,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestBasic,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(101));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(101));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: request = reqGen.Generate(TspAlgorithms.Sha1' new byte[22]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: request = reqGen.Generate(TspAlgorithms.Sha1' new byte[22]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: request = reqGen.Generate(TspAlgorithms.MD5' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestResponseValidation,The following statement contains a magic number: request = reqGen.Generate(TspAlgorithms.MD5' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestIncorrectHash,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[16]);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestIncorrectHash,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestBadAlgorithm,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate("1.2.3.4.5"' new byte[20]);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestBadAlgorithm,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestTimeNotAvailable,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate("1.2.3.4.5"' new byte[20]);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestBadPolicy,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestBadPolicy,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestCertReq,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestCertReq,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestCertReq,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestTokenEncoding,The following statement contains a magic number: TimeStampRequest           request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestTokenEncoding,The following statement contains a magic number: TimeStampRequest           request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestTokenEncoding,The following statement contains a magic number: TimeStampResponse          tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyZeroCerts,The following statement contains a magic number: tsTokenGen.SetAccuracyMillis(2);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyZeroCerts,The following statement contains a magic number: tsTokenGen.SetAccuracyMicros(3);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyZeroCerts,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyZeroCerts,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyZeroCerts,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyZeroCerts,The following statement contains a magic number: Assert.AreEqual(2' accuracy.Millis);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyZeroCerts,The following statement contains a magic number: Assert.AreEqual(3' accuracy.Micros);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyZeroCerts,The following statement contains a magic number: Assert.AreEqual(BigInteger.ValueOf(23)' tstInfo.SerialNumber);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: tsTokenGen.SetAccuracySeconds(3);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: tsTokenGen.SetAccuracyMicros(2);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(23)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: Assert.AreEqual(3' accuracy.Seconds);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: Assert.AreEqual(2' accuracy.Micros);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: Assert.AreEqual(BigInteger.ValueOf(23)' tstInfo.SerialNumber);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: Assert.AreEqual(tstInfo.Nonce' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestAccuracyWithCertsAndOrdering,The following statement contains a magic number: Assert.AreEqual(2' certificates.Count);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestNoNonce,The following statement contains a magic number: TimeStampRequest request = reqGen.Generate(TspAlgorithms.Sha1' new byte[20]);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestNoNonce,The following statement contains a magic number: TimeStampResponse tsResp = tsRespGen.Generate(request' BigInteger.ValueOf(24)' DateTime.UtcNow);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTest.cs,TestNoNonce,The following statement contains a magic number: Assert.AreEqual(BigInteger.ValueOf(24)' tstInfo.SerialNumber);
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,TspTestUtil,The following statement contains a magic number: kpg.Init(new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' rand' 1024' 25));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,TspTestUtil,The following statement contains a magic number: kpg.Init(new RsaKeyGenerationParameters(  				BigInteger.ValueOf(0x10001)' rand' 1024' 25));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,TspTestUtil,The following statement contains a magic number: desede128kg.Init(new KeyGenerationParameters(rand' 112));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,TspTestUtil,The following statement contains a magic number: desede192kg.Init(new KeyGenerationParameters(rand' 168));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,TspTestUtil,The following statement contains a magic number: rc240kg.Init(new KeyGenerationParameters(rand' 40));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,TspTestUtil,The following statement contains a magic number: rc264kg.Init(new KeyGenerationParameters(rand' 64));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,TspTestUtil,The following statement contains a magic number: rc2128kg.Init(new KeyGenerationParameters(rand' 128));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,DumpBase64,The following statement contains a magic number: buf.Append(Encoding.ASCII.GetString(data' i' 64));
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,DumpBase64,The following statement contains a magic number: i + 64 < data.Length
Magic Number,Org.BouncyCastle.Tsp.Tests,TspTestUtil,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TSPTestUtil.cs,MakeCertificate,The following statement contains a magic number: _v3CertGen.SetNotAfter(DateTime.UtcNow.AddDays(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo1,The following statement contains a magic number: Assert.AreEqual(1130833041000L' DateTimeUtilities.DateTimeToUnixMs(tstInfo.GenTime));
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo1,The following statement contains a magic number: Assert.IsTrue(Arrays.AreEqual(new byte[20]' tstInfo.GetMessageImprintDigest()));
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo2,The following statement contains a magic number: Assert.AreEqual(3' accuracy.Seconds);
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo2,The following statement contains a magic number: Assert.AreEqual(2' accuracy.Micros);
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo2,The following statement contains a magic number: Assert.AreEqual(1130833785000L' DateTimeUtilities.DateTimeToUnixMs(tstInfo.GenTime));
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo2,The following statement contains a magic number: Assert.AreEqual(tstInfo.Nonce' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo3,The following statement contains a magic number: Assert.AreEqual(3' accuracy.Seconds);
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo3,The following statement contains a magic number: Assert.AreEqual(2' accuracy.Micros);
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo3,The following statement contains a magic number: Assert.AreEqual(1130834855000L' DateTimeUtilities.DateTimeToUnixMs(tstInfo.GenTime));
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo3,The following statement contains a magic number: Assert.AreEqual(tstInfo.Nonce' BigInteger.ValueOf(100));
Magic Number,Org.BouncyCastle.Tsp.Tests,TimeStampTokenInfoUnitTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\tsp\test\TimeStampTokenInfoTest.cs,TestTstInfo3,The following statement contains a magic number: Assert.IsTrue(Arrays.AreEqual(new byte[20]' tstInfo.GetMessageImprintDigest()));
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: i != 60
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("CERTIFICATE"' new ArrayList()' new byte[100]);
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("CERTIFICATE"' new ArrayList()' new byte[101]);
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("CERTIFICATE"' new ArrayList()' new byte[102]);
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("CERTIFICATE"' new ArrayList()' new byte[103]);
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("CERTIFICATE"' new ArrayList()' new byte[1000]);
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("CERTIFICATE"' new ArrayList()' new byte[1001]);
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("CERTIFICATE"' new ArrayList()' new byte[1002]);
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("CERTIFICATE"' new ArrayList()' new byte[1003]);
Magic Number,Org.BouncyCastle.Utilities.IO.Pem.Tests,AllTests,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\io\pem\test\AllTests.cs,TestPemLength,The following statement contains a magic number: lengthTest("RSA PRIVATE KEY"' headers' new byte[103]);
Magic Number,Org.BouncyCastle.Utilities.Test,NumberParsing,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\test\NumberParsing.cs,DecodeLongFromHex,The following statement contains a magic number: longAsString = longAsString.Substring(2);
Magic Number,Org.BouncyCastle.Utilities.Test,NumberParsing,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\util\test\NumberParsing.cs,DecodeIntFromHex,The following statement contains a magic number: intAsString = intAsString.Substring(2);
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestRsaDigestSigner,The following statement contains a magic number: byte[] msg = new byte[] { 1' 6' 3' 32' 7' 43' 2' 5' 7' 78' 4' 23 };
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationECDSA,The following statement contains a magic number: FpCurve curve = new FpCurve(                 new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Magic Number,Org.BouncyCastle.X509.Tests,TestCertificateGen,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\x509\test\TestCertificateGen.cs,TestCreationECDSA,The following statement contains a magic number: FpCurve curve = new FpCurve(                 new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839")' // q                  new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc"' 16)' // a                  new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a"' 16));
Duplicate Code,Org.BouncyCastle.Crypto.Prng.Test,HashDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HashDrbgTest.cs,CreateTestVectorData,The method contains a code clone-set at the following line numbers (starting from the method definition): ((172' 191)' (228' 247))
Duplicate Code,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The method contains a code clone-set at the following line numbers (starting from the method definition): ((179' 208)' (299' 328))
Duplicate Code,Org.BouncyCastle.Crypto.Prng.Test,HMacDrbgTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\prng\test\HMacDrbgTest.cs,CreateTestVectorData,The method contains a code clone-set at the following line numbers (starting from the method definition): ((233' 252)' (287' 306))
Duplicate Code,Org.BouncyCastle.Crypto.Tests,CipherTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\CipherTest.cs,bufferSizeCheck,The method contains a code clone-set at the following line numbers (starting from the method definition): ((6' 27)' (30' 51))
Duplicate Code,Org.BouncyCastle.Crypto.Tests,Gost28147Test,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\GOST28147Test.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((99' 120)' (135' 156))
Duplicate Code,Org.BouncyCastle.Crypto.Tests,HkdfGeneratorTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\HKDFGeneratorTest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((28' 51)' (114' 137))
Duplicate Code,Org.BouncyCastle.Crypto.Tests,PssTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\PSSTest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 45)' (53' 77))
Duplicate Code,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((41' 63)' (78' 100))
Duplicate Code,Org.BouncyCastle.Crypto.Tests,RsaBlindedTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RSABlindedTest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((155' 177)' (192' 214))
Duplicate Code,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((41' 63)' (78' 100))
Duplicate Code,Org.BouncyCastle.Crypto.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\crypto\test\RsaTest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((158' 180)' (195' 217))
Duplicate Code,Org.BouncyCastle.Bcpg.OpenPgp.Tests,PgpRsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\test\PGPRSATest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((441' 489)' (517' 565))
Duplicate Code,Org.BouncyCastle.Tests,DsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\DSATest.cs,TestGeneration,The method contains a code clone-set at the following line numbers (starting from the method definition): ((62' 86)' (104' 128))
Duplicate Code,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((61' 84)' (88' 111))
Duplicate Code,Org.BouncyCastle.Tests,RsaTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\test\RSATest.cs,PerformTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((141' 160)' (164' 183))
Missing Default,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,TestDerReading,The following switch statement is missing a default case: switch (count)                  {                      case 0:                          Assert.IsTrue(o is DerInteger);                          break;                      case 1:                          Assert.IsTrue(o is DerObjectIdentifier);                          break;                  }
Missing Default,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,doTestNestedReading,The following switch statement is missing a default case: switch (count)                  {                      case 0:                          Assert.IsTrue(o is DerInteger);                          break;                      case 1:                          Assert.IsTrue(o is DerObjectIdentifier);                          break;                      case 2:                          Assert.IsTrue(o is Asn1SequenceParser);    						Asn1SequenceParser s = (Asn1SequenceParser)o;    						// NB: Must exhaust the nested parser  						while (s.ReadObject() != null)  						{  							// Ignore  						}    						break;                  }
Missing Default,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,TestBerReading,The following switch statement is missing a default case: switch (count)                  {                      case 0:                          Assert.IsTrue(o is DerInteger);                          break;                      case 1:                          Assert.IsTrue(o is DerObjectIdentifier);                          break;                  }
Missing Default,Org.BouncyCastle.Asn1.Tests,Asn1SequenceParserTest,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\asn1\test\ASN1SequenceParserTest.cs,doTestParseWithNull,The following switch statement is missing a default case: switch (count)  				{  					case 0:  						Assert.IsTrue(o is Asn1Null);  						break;  					case 1:  						Assert.IsTrue(o is DerInteger);  						break;  					case 2:  						Assert.IsTrue(o is DerObjectIdentifier);  						break;  				}
Missing Default,Org.BouncyCastle.Bcpg.OpenPgp.Examples,PublicKeyRingDump,C:\research\architectureSmells\repos\onovotny_BouncyCastle-PCL\crypto\test\src\openpgp\examples\PublicKeyRingDump.cs,GetAlgorithm,The following switch statement is missing a default case: switch (algId)              {                  case PublicKeyAlgorithmTag.RsaGeneral:                      return "RsaGeneral";                  case PublicKeyAlgorithmTag.RsaEncrypt:                      return "RsaEncrypt";                  case PublicKeyAlgorithmTag.RsaSign:                      return "RsaSign";                  case PublicKeyAlgorithmTag.ElGamalEncrypt:                      return "ElGamalEncrypt";                  case PublicKeyAlgorithmTag.Dsa:                      return "DSA";                  case PublicKeyAlgorithmTag.ECDH:                      return "ECDH";                  case PublicKeyAlgorithmTag.ECDsa:                      return "ECDSA";                  case PublicKeyAlgorithmTag.ElGamalGeneral:                      return "ElGamalGeneral";                  case PublicKeyAlgorithmTag.DiffieHellman:                      return "DiffieHellman";              }
