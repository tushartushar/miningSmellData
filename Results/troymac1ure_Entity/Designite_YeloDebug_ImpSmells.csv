Implementation smell,Namespace,Class,File,Method,Description
Long Method,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The method has 119 lines of code.
Long Method,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The method has 133 lines of code.
Long Method,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The method has 373 lines of code.
Complex Method,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,QueryXboxConnections,Cyclomatic complexity of the method is 11
Complex Method,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Connect,Cyclomatic complexity of the method is 8
Complex Method,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ConnectToIP,Cyclomatic complexity of the method is 10
Complex Method,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,Cyclomatic complexity of the method is 8
Complex Method,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,Cyclomatic complexity of the method is 11
Complex Method,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,Cyclomatic complexity of the method is 21
Long Parameter List,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadFilePartial,The method has 5 parameters. Parameters: name' offset' buffer' length' read
Long Parameter List,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Getmem,The method has 5 parameters. Parameters: address' length' buffer' offset' read
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter ExAcquireReadWriteLockExclusive is 31.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter ExInterlockedAddLargeStatistic is 30.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter ExInterlockedCompareExchange64 is 30.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter HalRegisterShutdownNotification is 31.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter IoSynchronousDeviceIoControlRequest is 35.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter NtSignalAndWaitForSingleObjectEx is 32.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter PsSetCreateThreadNotifyRoutine is 30.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter RtlAppendUnicodeStringToString is 30.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter RtlEnterCriticalSectionAndRegion is 32.
Long Identifier,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,,The length of the parameter RtlLeaveCriticalSectionAndRegion is 32.
Long Statement,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ExtractResource,The length of the statement  "			Stream ResourceStream = System.Reflection.Assembly.GetExecutingAssembly().GetManifestResourceStream("YeloDebug." + Path + Name); " is 128.
Long Statement,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,SaveResourceToFile,The length of the statement  "			FileStream fs = new FileStream(ExtractionPath + ResourceName' FileMode.Create' FileAccess.ReadWrite' FileShare.ReadWrite); " is 122.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,QueryXboxConnections,The length of the statement  "                                    connections.Add(new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' ""))); " is 151.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,QueryXboxConnections,The length of the statement  "                        throw new NoConnectionException("Multiple consoles found that have the same connection information.  Please ensure that each box connected to the network has different debug names and ips."); " is 191.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Connect,The length of the statement  "                        if (!found) throw new NoConnectionException("Unable to distinguish between multiple connections. Please turn off all other consoles or try to connect again using a specific ip."); " is 179.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ConnectToIP,The length of the statement  "                                dc = new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' "")); " is 139.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Reboot,The length of the statement  "                    connection.Client.Send(ASCIIEncoding.ASCII.GetBytes("magicboot title=\"" + XbeInfo.LaunchPath + "\" debug" + Environment.NewLine)); " is 131.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The length of the statement  "            if (CallAddressEx(Kernel.HalReadSMBusValue' null' true' SMBusDevices.VideoEncoderXcalibur' VideoEncoderCommand.Detect' 0' scratchBuffer) == 0) videoEncoderType = VideoEncoder.Xcalibur; " is 184.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The length of the statement  "            else if (CallAddressEx(Kernel.HalReadSMBusValue' null' true' SMBusDevices.VideoEncoderConnexant' VideoEncoderCommand.Detect' 0' scratchBuffer) == 0) videoEncoderType = VideoEncoder.Connexant; " is 191.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The length of the statement  "            else if (CallAddressEx(Kernel.HalReadSMBusValue' null' true' SMBusDevices.VideoEncoderFocus' VideoEncoderCommand.Detect' 0' scratchBuffer) == 0) videoEncoderType = VideoEncoder.Focus; " is 183.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The length of the statement  "            else if (processorInformation.Model == 8 && processorInformation.Stepping == 6) cpuFrequency = "1.00 GHz";   // Intel Pentium III Coppermine " is 140.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveStatusResponse,The length of the statement  "				return new StatusResponse(response' (ResponseType)Convert.ToInt32(response.ToString().Remove(3))' response.Remove(0' 5).ToString()); " is 132.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetFileAttributes,The length of the statement  "			if ((attributes & FileAttributes.Normal) != FileAttributes.Normal && (attributes & FileAttributes.ReadOnly) != FileAttributes.ReadOnly && (attributes & FileAttributes.Hidden) != FileAttributes.Hidden) " is 200.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Getmem,The length of the statement  "				response = SendCommand("getmem2 addr=0x{0} length={1}"' Convert.ToString(address + read' 16).PadLeft(8' '0')' maxBufferSize); " is 125.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Getmem,The length of the statement  "                response = SendCommand("getmem2 addr=0x{0} length={1}"' Convert.ToString(address + read' 16).PadLeft(8' '0')' remainder); " is 121.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Setmem,The length of the statement  "                    Response = ReceiveStatusResponse(); // garbage number of bytes set...it keeps track of total' dont really care to find how to reset it " is 134.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetMemory,The length of the statement  "					case TypeCode.String: bw.Write(ASCIIEncoding.ASCII.GetBytes((string)obj + "\0")); break;    // assumes youre writing an ascii string " is 132.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawFramebufferDump,The length of the statement  "            byte[] data = new byte[width * height * pixelSizeInBytes];  // assumes 640x480 resolution with rgba channels of 8 bits each " is 123.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The length of the statement  "			bw.Write((ushort)24); // ushort biBitCount - Bits per pixel (1=black/white' 4=16 colors' 8=256 colors' 24=16.7 million colors) " is 126.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The length of the statement  "			string fileWriteSpeed = (((float)16 * (float)fileBufferSize * toMegs) / (float)fileWriteElapse.TotalSeconds).ToString(); " is 120.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetTrayState,The length of the statement  "            //Closing =         0x51	1010001     Busy | Open | Closed - weird' but interpret as it being open but in the process of closing " is 127.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,DisableDVDEjectReset,The length of the statement  "            CallAddressEx(Kernel.HalWriteSMBusValue' null' false' SMBusDevices.PIC' PICCommand.ResetOnEject' 0' ResetOnEjectSubCommand.Disable); " is 132.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,EnableDVDEjectReset,The length of the statement  "            CallAddressEx(Kernel.HalWriteSMBusValue' null' false' SMBusDevices.PIC' PICCommand.ResetOnEject' 0' ResetOnEjectSubCommand.Enable); " is 131.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,EjectTray,The length of the statement  "            CallAddressEx(Kernel.HalWriteSMBusValue' null' false' SMBusDevices.PIC' PICCommand.Eject' 0' EjectSubCommand.Eject); // eject tray " is 130.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,LoadTray,The length of the statement  "            CallAddressEx(Kernel.HalWriteSMBusValue' null' false' SMBusDevices.PIC' PICCommand.Eject' 0' EjectSubCommand.Load); // load tray " is 128.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadEEPROM,The length of the statement  "            byte[] one = { 0x60' 0x66' 0xC7' 0x04' 0x01' 0x00' 0x00' 0x8D' 0x1C' 0x01' 0x53' 0x6A' 0x00' 0x51' 0x68' 0xA8' 0x00' 0x00' 0x00' 0xBA }; " is 136.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadEEPROM,The length of the statement  "            byte[] three = { 0xF3' 0x90' 0xE2' 0xFC' 0x59' 0x41' 0x81' 0xF9' 0xFF' 0x00' 0x00' 0x00' 0x7C' 0xD1' 0xB8' 0x00' 0x00' 0xDB' 0x02' 0xC2' 0x10' 0x00 }; " is 150.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ChangeScriptBufferSize,The length of the statement  "            SetMemory(0xB00292D0' ScriptBufferAddress);   // reroutes the ScriptBufferAddress ptr...(assumes were already running v7887 xbdm) " is 129.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddress,The length of the statement  "            if (callBuffer.Length > ScriptBufferSize) throw new Exception("Script too big. Try allocating more memory and specifying new script buffer information."); " is 154.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The length of the statement  "            if (callScript.Length > ScriptBufferSize) throw new Exception("Script too big. Try allocating more memory and specifying new script buffer information."); " is 154.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,LoadAllocationTable,The length of the statement  "				throw new Exception("Allocation table corruption."); // maximum allocation count has either been exceeded' or theres a corruption " is 129.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,IsEnoughMemory,The length of the statement  "				else throw new OutOfMemoryException("Failed to allocate additional xbox memory.");  // cant steal any more from filecache ;( " is 124.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateVirtualMemoryEx,The length of the statement  "			uint res = (uint)CallAddressEx(Kernel.NtAllocateVirtualMemory' null' true' pAddress' 0' pSize' MEMORY_FLAGS.MEM_RESERVE' 4); " is 124.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateVirtualMemoryEx,The length of the statement  "            uint result = (uint)CallAddressEx(Kernel.NtAllocateVirtualMemory' null' true' pAddress' 0' pSize' MEMORY_FLAGS.MEM_COMMIT' 4); " is 126.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateHistoryPages,The length of the statement  "			byte[] pt1 = { 0x6A' 0x04' 0x68' 0x00' 0x20' 0x00' 0x00' 0x68' 0x00' 0x00' 0x01' 0x00' 0x6A' 0x00' 0x68' 0x04' 0x00' 0x01' 0x00' 0xB8 }; " is 136.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateHistoryPages,The length of the statement  "			byte[] pt3 = { 0x6A' 0x04' 0x68' 0x00' 0x10' 0x00' 0x00' 0x68' 0x00' 0x00' 0x01' 0x00' 0x6A' 0x00' 0x68' 0x04' 0x00' 0x01' 0x00' 0xB8 }; " is 136.
Long Statement,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,XInputGetStateAddress,The length of the statement  "			throw new Exception("Unable to find XInputGetState() in memory' you must manually specify this address instead if you wish to initialize a controller hook."); " is 158.
Long Statement,YeloDebug,FileStream,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Seek,The length of the statement  "                    case SeekOrigin.End: return position = (uint)Length - (uint)offset;  // not recommended to be used since it has to talk to xbox to get length " is 141.
Long Statement,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,SaveAsFile,The length of the statement  "            FileStream fs = new FileStream(Xbox.Version + " Kernel v" + Xbox.KernelVersion + " " + Xbox.Modules[0].TimeStamp.ToString().Replace(':'' '.').Replace('/'''.') + " (UTC) .exe"' FileMode.Create); " is 193.
Complex Conditional,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StateChanged,The conditional expression  "oldState.Buttons != newState.Buttons ||                  oldState.ThumbRX != newState.ThumbRX ||                  oldState.ThumbRY != newState.ThumbRY ||                  oldState.ThumbLX != newState.ThumbLX ||                  oldState.ThumbLY != newState.ThumbLY"  is complex.
Empty Catch Block,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The method has an empty catch block.
Empty Catch Block,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ContinueThread,The method has an empty catch block.
Empty Catch Block,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ContinueAllThreads,The method has an empty catch block.
Empty Catch Block,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Pause,The method has an empty catch block.
Empty Catch Block,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Continue,The method has an empty catch block.
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,TimeStampToLocalDateTime,The following statement contains a magic number: return new DateTime(1970' 1' 1' 0' 0' 0) + new TimeSpan(0' 0' (int)timestamp);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,TimeStampToUniversalDateTime,The following statement contains a magic number: return new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime() + new TimeSpan(0' 0' (int)timestamp);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,StringToHexBytes,The following statement contains a magic number: byte[] Hex = new byte[str.Length / 2];
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,StringToHexBytes,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++)  				Hex[i] = Convert.ToByte(str.Substring(i * 2' 2)' 16);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,StringToHexBytes,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++)  				Hex[i] = Convert.ToByte(str.Substring(i * 2' 2)' 16);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,StringToHexBytes,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++)  				Hex[i] = Convert.ToByte(str.Substring(i * 2' 2)' 16);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,StringToHexBytes,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++)  				Hex[i] = Convert.ToByte(str.Substring(i * 2' 2)' 16);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,HexBytesToString,The following statement contains a magic number: for (int i = 0; i < hexBytes.Length; i++)                  hexStr += Convert.ToString(hexBytes[i]' 16).PadLeft(2' '0').ToUpper();
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,HexBytesToString,The following statement contains a magic number: for (int i = 0; i < hexBytes.Length; i++)                  hexStr += Convert.ToString(hexBytes[i]' 16).PadLeft(2' '0').ToUpper();
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,BuildScript,The following statement contains a magic number: for (int i = 0; i < script.Length - 4; i++)              {                  if (br.ReadUInt32() == 0xEFBEADDE)  // DEADBEEF                  {                      // replace with special                      ms.Position -= 4;                      bw.Write((uint)args[specialIndex]);                      specialIndex++;                  }                  ms.Position -= 3;              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,BuildScript,The following statement contains a magic number: for (int i = 0; i < script.Length - 4; i++)              {                  if (br.ReadUInt32() == 0xEFBEADDE)  // DEADBEEF                  {                      // replace with special                      ms.Position -= 4;                      bw.Write((uint)args[specialIndex]);                      specialIndex++;                  }                  ms.Position -= 3;              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,BuildScript,The following statement contains a magic number: for (int i = 0; i < script.Length - 4; i++)              {                  if (br.ReadUInt32() == 0xEFBEADDE)  // DEADBEEF                  {                      // replace with special                      ms.Position -= 4;                      bw.Write((uint)args[specialIndex]);                      specialIndex++;                  }                  ms.Position -= 3;              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,GetResponseInfo,The following statement contains a magic number: if (val[0] == '\"') return (string)val.Substring(1' val.Length - 2);              else if (val.Length > 2 && val.Remove(2) == "0x") return (uint)Convert.ToUInt32(val.Substring(2)' 16);              else return (uint)Convert.ToUInt32(val);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,GetResponseInfo,The following statement contains a magic number: if (val[0] == '\"') return (string)val.Substring(1' val.Length - 2);              else if (val.Length > 2 && val.Remove(2) == "0x") return (uint)Convert.ToUInt32(val.Substring(2)' 16);              else return (uint)Convert.ToUInt32(val);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,GetResponseInfo,The following statement contains a magic number: if (val[0] == '\"') return (string)val.Substring(1' val.Length - 2);              else if (val.Length > 2 && val.Remove(2) == "0x") return (uint)Convert.ToUInt32(val.Substring(2)' 16);              else return (uint)Convert.ToUInt32(val);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,GetResponseInfo,The following statement contains a magic number: if (val[0] == '\"') return (string)val.Substring(1' val.Length - 2);              else if (val.Length > 2 && val.Remove(2) == "0x") return (uint)Convert.ToUInt32(val.Substring(2)' 16);              else return (uint)Convert.ToUInt32(val);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,GetResponseInfo,The following statement contains a magic number: if (val[0] == '\"') return (string)val.Substring(1' val.Length - 2);              else if (val.Length > 2 && val.Remove(2) == "0x") return (uint)Convert.ToUInt32(val.Substring(2)' 16);              else return (uint)Convert.ToUInt32(val);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ExtractResponseInformation,The following statement contains a magic number: foreach (string value in values)              {                  string val = value.Remove(value.IndexOfAny(delimiters));                    if (val[0] == '\"') responses.Add((string)val.Substring(1' val.Length - 2));                  else if (val.Length > 2 && val.Remove(2) == "0x") responses.Add((uint)Convert.ToUInt32(val.Substring(2)' 16));                  else responses.Add((uint)Convert.ToUInt32(val));              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ExtractResponseInformation,The following statement contains a magic number: foreach (string value in values)              {                  string val = value.Remove(value.IndexOfAny(delimiters));                    if (val[0] == '\"') responses.Add((string)val.Substring(1' val.Length - 2));                  else if (val.Length > 2 && val.Remove(2) == "0x") responses.Add((uint)Convert.ToUInt32(val.Substring(2)' 16));                  else responses.Add((uint)Convert.ToUInt32(val));              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ExtractResponseInformation,The following statement contains a magic number: foreach (string value in values)              {                  string val = value.Remove(value.IndexOfAny(delimiters));                    if (val[0] == '\"') responses.Add((string)val.Substring(1' val.Length - 2));                  else if (val.Length > 2 && val.Remove(2) == "0x") responses.Add((uint)Convert.ToUInt32(val.Substring(2)' 16));                  else responses.Add((uint)Convert.ToUInt32(val));              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ExtractResponseInformation,The following statement contains a magic number: foreach (string value in values)              {                  string val = value.Remove(value.IndexOfAny(delimiters));                    if (val[0] == '\"') responses.Add((string)val.Substring(1' val.Length - 2));                  else if (val.Length > 2 && val.Remove(2) == "0x") responses.Add((uint)Convert.ToUInt32(val.Substring(2)' 16));                  else responses.Add((uint)Convert.ToUInt32(val));              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ExtractResponseInformation,The following statement contains a magic number: foreach (string value in values)              {                  string val = value.Remove(value.IndexOfAny(delimiters));                    if (val[0] == '\"') responses.Add((string)val.Substring(1' val.Length - 2));                  else if (val.Length > 2 && val.Remove(2) == "0x") responses.Add((uint)Convert.ToUInt32(val.Substring(2)' 16));                  else responses.Add((uint)Convert.ToUInt32(val));              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,CelsiusToFahrenheit,The following statement contains a magic number: return (uint)(1.8f * degrees + 32);
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ToHexString,The following statement contains a magic number: while (value > 0)              {                  byte val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;                  val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ToHexString,The following statement contains a magic number: while (value > 0)              {                  byte val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;                  val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ToHexString,The following statement contains a magic number: while (value > 0)              {                  byte val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;                  val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ToHexString,The following statement contains a magic number: while (value > 0)              {                  byte val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;                  val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ToHexString,The following statement contains a magic number: while (value > 0)              {                  byte val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;                  val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;              }
Magic Number,YeloDebug,Util,C:\repos\troymac1ure_Entity\YeloDebug\Util.cs,ToHexString,The following statement contains a magic number: while (value > 0)              {                  byte val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;                  val = (byte)(value & 0x0f);                  str = (char)(val > 0x09 ? ((val & 0x0f) + 65 - 0x09) : (val & 0x0f) + 48) + str;                  value >>= 8;              }
Magic Number,YeloDebug,StatusResponse,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StatusResponse,The following statement contains a magic number: Success = ((int)type & 200) == 200;
Magic Number,YeloDebug,StatusResponse,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StatusResponse,The following statement contains a magic number: Success = ((int)type & 200) == 200;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Xbox,The following statement contains a magic number: try              {                  // load settings file                  XmlDocument xmlDoc = new XmlDocument();                  xmlDoc.Load(Application.StartupPath + "\\YeloDebugSettings.xml");                    // check that setting and assembly versions match                  string assemblyVersion = Assembly.GetExecutingAssembly().FullName.Substring(19' 10);                  string settingsVersion = xmlDoc.GetElementsByTagName("Version")[0].InnerText;                  if (assemblyVersion != settingsVersion) throw new ApiException("YeloDebug version does not match the version of the settings file.");                    // get settings information                  xdkRegistryPath = xmlDoc.GetElementsByTagName("XdkRegistryPath")[0].InnerText;              }              catch              {                  if (MessageBox.Show("YeloDebugSettings.xml not found or unreadable.\nAttempt to continue?"' "Yelo Error"' MessageBoxButtons.YesNo) == DialogResult.No)                      throw new Exception("YeloDebugSettings.xml not found or unreadable.");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Xbox,The following statement contains a magic number: try              {                  // load settings file                  XmlDocument xmlDoc = new XmlDocument();                  xmlDoc.Load(Application.StartupPath + "\\YeloDebugSettings.xml");                    // check that setting and assembly versions match                  string assemblyVersion = Assembly.GetExecutingAssembly().FullName.Substring(19' 10);                  string settingsVersion = xmlDoc.GetElementsByTagName("Version")[0].InnerText;                  if (assemblyVersion != settingsVersion) throw new ApiException("YeloDebug version does not match the version of the settings file.");                    // get settings information                  xdkRegistryPath = xmlDoc.GetElementsByTagName("XdkRegistryPath")[0].InnerText;              }              catch              {                  if (MessageBox.Show("YeloDebugSettings.xml not found or unreadable.\nAttempt to continue?"' "Yelo Error"' MessageBoxButtons.YesNo) == DialogResult.No)                      throw new Exception("YeloDebugSettings.xml not found or unreadable.");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,QueryXboxConnections,The following statement contains a magic number: try              {                  // Cycle through all available network interfaces                  foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces())                      foreach (var ua in i.GetIPProperties().UnicastAddresses)                      {                          try                          {                              // Bind to our chosen network interfaces Local IP Address                              s.Bind(new IPEndPoint(ua.Address' 0));                                // broadcast our request                              byte[] sendBuf = { 3' 0 };                              s.SendTo(sendBuf' new IPEndPoint(IPAddress.Broadcast' 731));                                // wait for response                              DateTime before = DateTime.Now;                              TimeSpan elapse = new TimeSpan();                              while (s.Available == 0)                              {                                  Thread.Sleep(0);                                  elapse = DateTime.Now - before;                                  if (elapse.TotalMilliseconds > timeout)                                      break;                              }                                // If we find a connection' break out                              if (s.Available != 0)                              {                                  // parse any information returned                                  byte[] data = new byte[s.Available];                                  EndPoint end = new IPEndPoint(IPAddress.Any' 0);                                  while (s.Available > 0)                                  {                                      s.ReceiveFrom(data' ref end);                                      IPEndPoint endpoint = (IPEndPoint)end;                                      connections.Add(new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' "")));                                  }                              }                                                            // Destroy our binded socket                              s.Close();                              s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                              s.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.Broadcast' 1);                          }                          catch (Exception ex)                          {                              MessageBox.Show(ex.Message + "\n" + ex.StackTrace);                          }                      }                    // If no connections were found' throw an exception                  if (connections.Count == 0)                      throw new NoConnectionException("No xbox connection detected.");              }              finally              {                  // close the connection                  s.Close();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,QueryXboxConnections,The following statement contains a magic number: try              {                  // Cycle through all available network interfaces                  foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces())                      foreach (var ua in i.GetIPProperties().UnicastAddresses)                      {                          try                          {                              // Bind to our chosen network interfaces Local IP Address                              s.Bind(new IPEndPoint(ua.Address' 0));                                // broadcast our request                              byte[] sendBuf = { 3' 0 };                              s.SendTo(sendBuf' new IPEndPoint(IPAddress.Broadcast' 731));                                // wait for response                              DateTime before = DateTime.Now;                              TimeSpan elapse = new TimeSpan();                              while (s.Available == 0)                              {                                  Thread.Sleep(0);                                  elapse = DateTime.Now - before;                                  if (elapse.TotalMilliseconds > timeout)                                      break;                              }                                // If we find a connection' break out                              if (s.Available != 0)                              {                                  // parse any information returned                                  byte[] data = new byte[s.Available];                                  EndPoint end = new IPEndPoint(IPAddress.Any' 0);                                  while (s.Available > 0)                                  {                                      s.ReceiveFrom(data' ref end);                                      IPEndPoint endpoint = (IPEndPoint)end;                                      connections.Add(new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' "")));                                  }                              }                                                            // Destroy our binded socket                              s.Close();                              s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                              s.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.Broadcast' 1);                          }                          catch (Exception ex)                          {                              MessageBox.Show(ex.Message + "\n" + ex.StackTrace);                          }                      }                    // If no connections were found' throw an exception                  if (connections.Count == 0)                      throw new NoConnectionException("No xbox connection detected.");              }              finally              {                  // close the connection                  s.Close();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,QueryXboxConnections,The following statement contains a magic number: try              {                  // Cycle through all available network interfaces                  foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces())                      foreach (var ua in i.GetIPProperties().UnicastAddresses)                      {                          try                          {                              // Bind to our chosen network interfaces Local IP Address                              s.Bind(new IPEndPoint(ua.Address' 0));                                // broadcast our request                              byte[] sendBuf = { 3' 0 };                              s.SendTo(sendBuf' new IPEndPoint(IPAddress.Broadcast' 731));                                // wait for response                              DateTime before = DateTime.Now;                              TimeSpan elapse = new TimeSpan();                              while (s.Available == 0)                              {                                  Thread.Sleep(0);                                  elapse = DateTime.Now - before;                                  if (elapse.TotalMilliseconds > timeout)                                      break;                              }                                // If we find a connection' break out                              if (s.Available != 0)                              {                                  // parse any information returned                                  byte[] data = new byte[s.Available];                                  EndPoint end = new IPEndPoint(IPAddress.Any' 0);                                  while (s.Available > 0)                                  {                                      s.ReceiveFrom(data' ref end);                                      IPEndPoint endpoint = (IPEndPoint)end;                                      connections.Add(new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' "")));                                  }                              }                                                            // Destroy our binded socket                              s.Close();                              s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                              s.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.Broadcast' 1);                          }                          catch (Exception ex)                          {                              MessageBox.Show(ex.Message + "\n" + ex.StackTrace);                          }                      }                    // If no connections were found' throw an exception                  if (connections.Count == 0)                      throw new NoConnectionException("No xbox connection detected.");              }              finally              {                  // close the connection                  s.Close();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,QueryXboxConnections,The following statement contains a magic number: try              {                  // Cycle through all available network interfaces                  foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces())                      foreach (var ua in i.GetIPProperties().UnicastAddresses)                      {                          try                          {                              // Bind to our chosen network interfaces Local IP Address                              s.Bind(new IPEndPoint(ua.Address' 0));                                // broadcast our request                              byte[] sendBuf = { 3' 0 };                              s.SendTo(sendBuf' new IPEndPoint(IPAddress.Broadcast' 731));                                // wait for response                              DateTime before = DateTime.Now;                              TimeSpan elapse = new TimeSpan();                              while (s.Available == 0)                              {                                  Thread.Sleep(0);                                  elapse = DateTime.Now - before;                                  if (elapse.TotalMilliseconds > timeout)                                      break;                              }                                // If we find a connection' break out                              if (s.Available != 0)                              {                                  // parse any information returned                                  byte[] data = new byte[s.Available];                                  EndPoint end = new IPEndPoint(IPAddress.Any' 0);                                  while (s.Available > 0)                                  {                                      s.ReceiveFrom(data' ref end);                                      IPEndPoint endpoint = (IPEndPoint)end;                                      connections.Add(new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' "")));                                  }                              }                                                            // Destroy our binded socket                              s.Close();                              s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                              s.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.Broadcast' 1);                          }                          catch (Exception ex)                          {                              MessageBox.Show(ex.Message + "\n" + ex.StackTrace);                          }                      }                    // If no connections were found' throw an exception                  if (connections.Count == 0)                      throw new NoConnectionException("No xbox connection detected.");              }              finally              {                  // close the connection                  s.Close();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,_connect,The following statement contains a magic number: connection.ReceiveBufferSize = 20 * 0x100000;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,_connect,The following statement contains a magic number: connection.SendBufferSize = 20 * 0x100000;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,_connect,The following statement contains a magic number: connected = Ping(100);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Connect,The following statement contains a magic number: try              {                  connected = Ping(100); // update connection status                  if (!connected)                  {                      Disconnect();   // destroy any old connection we might have had                        // determines the debug names and ips of the connected xbox systems                      List<DebugConnection> connections = QueryXboxConnections();                        // attempt to narrow the list down to one connection                      if (connections.Count > 1)                      {                            #region Create a form to allow an Xbox choice selection                          Form tempForm = new Form() { Size = new Size(200' 400) };                          ListBox lb = new ListBox() { Dock = DockStyle.Fill  };                          tempForm.Controls.Add(lb);                          foreach ( DebugConnection dc in connections)                               lb.Items.Add(dc.IP + " [" + dc.Name + "]");                          tempForm.ShowDialog();                          #endregion                            bool found = false;                          foreach (DebugConnection dbgConnection in connections)                          {                              if (LastConnectionUsed == null) break;                              if (dbgConnection.IP.ToString() == LastConnectionUsed || dbgConnection.Name == LastConnectionUsed)                              {                                    //store debug info                                  debugName = LastConnectionUsed = dbgConnection.Name;                                  debugIP = dbgConnection.IP;                                  found = true;                                  break;                              }                          }                          if (!found) throw new NoConnectionException("Unable to distinguish between multiple connections. Please turn off all other consoles or try to connect again using a specific ip.");                        }                      else if (connections.Count == 1)                      {                          //store debug info                          debugName = LastConnectionUsed = connections[0].Name;                          debugIP = connections[0].IP;                      }                      else throw new NoConnectionException("Unable to detect a connection.");                        // Call shared connect function                      _connect();                  }                  else throw new NoConnectionException("You are already connected.");              }              catch              {                  connected = false;                  throw new NoConnectionException("Unable to connect.");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Connect,The following statement contains a magic number: try              {                  connected = Ping(100); // update connection status                  if (!connected)                  {                      Disconnect();   // destroy any old connection we might have had                        // determines the debug names and ips of the connected xbox systems                      List<DebugConnection> connections = QueryXboxConnections();                        // attempt to narrow the list down to one connection                      if (connections.Count > 1)                      {                            #region Create a form to allow an Xbox choice selection                          Form tempForm = new Form() { Size = new Size(200' 400) };                          ListBox lb = new ListBox() { Dock = DockStyle.Fill  };                          tempForm.Controls.Add(lb);                          foreach ( DebugConnection dc in connections)                               lb.Items.Add(dc.IP + " [" + dc.Name + "]");                          tempForm.ShowDialog();                          #endregion                            bool found = false;                          foreach (DebugConnection dbgConnection in connections)                          {                              if (LastConnectionUsed == null) break;                              if (dbgConnection.IP.ToString() == LastConnectionUsed || dbgConnection.Name == LastConnectionUsed)                              {                                    //store debug info                                  debugName = LastConnectionUsed = dbgConnection.Name;                                  debugIP = dbgConnection.IP;                                  found = true;                                  break;                              }                          }                          if (!found) throw new NoConnectionException("Unable to distinguish between multiple connections. Please turn off all other consoles or try to connect again using a specific ip.");                        }                      else if (connections.Count == 1)                      {                          //store debug info                          debugName = LastConnectionUsed = connections[0].Name;                          debugIP = connections[0].IP;                      }                      else throw new NoConnectionException("Unable to detect a connection.");                        // Call shared connect function                      _connect();                  }                  else throw new NoConnectionException("You are already connected.");              }              catch              {                  connected = false;                  throw new NoConnectionException("Unable to connect.");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Connect,The following statement contains a magic number: try              {                  connected = Ping(100); // update connection status                  if (!connected)                  {                      Disconnect();   // destroy any old connection we might have had                        // determines the debug names and ips of the connected xbox systems                      List<DebugConnection> connections = QueryXboxConnections();                        // attempt to narrow the list down to one connection                      if (connections.Count > 1)                      {                            #region Create a form to allow an Xbox choice selection                          Form tempForm = new Form() { Size = new Size(200' 400) };                          ListBox lb = new ListBox() { Dock = DockStyle.Fill  };                          tempForm.Controls.Add(lb);                          foreach ( DebugConnection dc in connections)                               lb.Items.Add(dc.IP + " [" + dc.Name + "]");                          tempForm.ShowDialog();                          #endregion                            bool found = false;                          foreach (DebugConnection dbgConnection in connections)                          {                              if (LastConnectionUsed == null) break;                              if (dbgConnection.IP.ToString() == LastConnectionUsed || dbgConnection.Name == LastConnectionUsed)                              {                                    //store debug info                                  debugName = LastConnectionUsed = dbgConnection.Name;                                  debugIP = dbgConnection.IP;                                  found = true;                                  break;                              }                          }                          if (!found) throw new NoConnectionException("Unable to distinguish between multiple connections. Please turn off all other consoles or try to connect again using a specific ip.");                        }                      else if (connections.Count == 1)                      {                          //store debug info                          debugName = LastConnectionUsed = connections[0].Name;                          debugIP = connections[0].IP;                      }                      else throw new NoConnectionException("Unable to detect a connection.");                        // Call shared connect function                      _connect();                  }                  else throw new NoConnectionException("You are already connected.");              }              catch              {                  connected = false;                  throw new NoConnectionException("Unable to connect.");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Connect,The following statement contains a magic number: try              {                  connected = Ping(100); // update connection status                  if (!connected)                  {                      Disconnect();   // destroy any old connection we might have had                        // determines the debug name and ip of the specified xbox system                      int index = -1;                      if (connections.Count == 0)                          connections = QueryXboxConnections();                      for (int i = 0; i < connections.Count; i++)                          if (connections[i].Name.ToLower() == xbox.ToLower() || connections[i].IP.ToString().ToLower() == xbox.ToLower())                          {                              index = i;                              break;                          }                      if (index == -1) throw new NoConnectionException("Unable to connect to the specified xbox.");                        //store debug info                      debugName = LastConnectionUsed = connections[index].Name;                      debugIP = connections[index].IP;                        // Call shared connect function                      _connect();                  }              }              catch              {                  connected = false;                  throw new NoConnectionException("No xbox connection detected.");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ConnectToIP,The following statement contains a magic number: byte[] bytes = new byte[4];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ConnectToIP,The following statement contains a magic number: try              {                  for (int i = 0; i < 4; i++)                      bytes[i] = byte.Parse(ipStrs[i]);              }              catch              {                  throw new Exception("Invalid IP Address");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ConnectToIP,The following statement contains a magic number: try              {                  foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces())                      foreach (var ua in i.GetIPProperties().UnicastAddresses)                      {                          s.Bind(new IPEndPoint(ua.Address' 0));                          byte[] sendBuf = { 3' 0 };                          IPEndPoint IPEnd = new IPEndPoint(new IPAddress(bytes)' notificationPort);                          s.SendTo(sendBuf' IPEnd);                            // wait for response                          DateTime before = DateTime.Now;                          TimeSpan elapse = new TimeSpan();                          while (s.Available == 0)                          {                              Thread.Sleep(0);                              elapse = DateTime.Now - before;                              if (elapse.TotalMilliseconds > timeout)                                  break;                          }                            if (s.Available != 0)                          {                              // parse any information returned                              byte[] data = new byte[s.Available];                              EndPoint end = new IPEndPoint(IPEnd.Address' 0);                              DebugConnection dc = new DebugConnection();                              while (s.Available > 0)                              {                                  s.ReceiveFrom(data' ref end);                                  IPEndPoint endpoint = (IPEndPoint)end;                                  dc = new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' ""));                              }                                // If we don't receive data back' then don't try to connect                              if (dc.IP == null)                              {                                  s.Close();                                  s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                                  s.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.Broadcast' 1);                                  continue;                              }                                //store debug info                              connections.Clear();                              connections.Add(dc);                              debugName = LastConnectionUsed = dc.Name;                              debugIP = dc.IP;                              connected = true;                                // close the connection                              s.Close();                              s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                                // Call shared connect function                              _connect();                              return;                          }                          // close the connection                          s.Close();                          s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                      }              }              finally              {                  s.Close();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ConnectToIP,The following statement contains a magic number: try              {                  foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces())                      foreach (var ua in i.GetIPProperties().UnicastAddresses)                      {                          s.Bind(new IPEndPoint(ua.Address' 0));                          byte[] sendBuf = { 3' 0 };                          IPEndPoint IPEnd = new IPEndPoint(new IPAddress(bytes)' notificationPort);                          s.SendTo(sendBuf' IPEnd);                            // wait for response                          DateTime before = DateTime.Now;                          TimeSpan elapse = new TimeSpan();                          while (s.Available == 0)                          {                              Thread.Sleep(0);                              elapse = DateTime.Now - before;                              if (elapse.TotalMilliseconds > timeout)                                  break;                          }                            if (s.Available != 0)                          {                              // parse any information returned                              byte[] data = new byte[s.Available];                              EndPoint end = new IPEndPoint(IPEnd.Address' 0);                              DebugConnection dc = new DebugConnection();                              while (s.Available > 0)                              {                                  s.ReceiveFrom(data' ref end);                                  IPEndPoint endpoint = (IPEndPoint)end;                                  dc = new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' ""));                              }                                // If we don't receive data back' then don't try to connect                              if (dc.IP == null)                              {                                  s.Close();                                  s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                                  s.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.Broadcast' 1);                                  continue;                              }                                //store debug info                              connections.Clear();                              connections.Add(dc);                              debugName = LastConnectionUsed = dc.Name;                              debugIP = dc.IP;                              connected = true;                                // close the connection                              s.Close();                              s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                                // Call shared connect function                              _connect();                              return;                          }                          // close the connection                          s.Close();                          s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                      }              }              finally              {                  s.Close();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ConnectToIP,The following statement contains a magic number: try              {                  foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces())                      foreach (var ua in i.GetIPProperties().UnicastAddresses)                      {                          s.Bind(new IPEndPoint(ua.Address' 0));                          byte[] sendBuf = { 3' 0 };                          IPEndPoint IPEnd = new IPEndPoint(new IPAddress(bytes)' notificationPort);                          s.SendTo(sendBuf' IPEnd);                            // wait for response                          DateTime before = DateTime.Now;                          TimeSpan elapse = new TimeSpan();                          while (s.Available == 0)                          {                              Thread.Sleep(0);                              elapse = DateTime.Now - before;                              if (elapse.TotalMilliseconds > timeout)                                  break;                          }                            if (s.Available != 0)                          {                              // parse any information returned                              byte[] data = new byte[s.Available];                              EndPoint end = new IPEndPoint(IPEnd.Address' 0);                              DebugConnection dc = new DebugConnection();                              while (s.Available > 0)                              {                                  s.ReceiveFrom(data' ref end);                                  IPEndPoint endpoint = (IPEndPoint)end;                                  dc = new DebugConnection(ua.Address' ((IPEndPoint)end).Address' ASCIIEncoding.ASCII.GetString(data' 2' data.Length - 2).Replace("\0"' ""));                              }                                // If we don't receive data back' then don't try to connect                              if (dc.IP == null)                              {                                  s.Close();                                  s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                                  s.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.Broadcast' 1);                                  continue;                              }                                //store debug info                              connections.Clear();                              connections.Add(dc);                              debugName = LastConnectionUsed = dc.Name;                              debugIP = dc.IP;                              connected = true;                                // close the connection                              s.Close();                              s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                                // Call shared connect function                              _connect();                              return;                          }                          // close the connection                          s.Close();                          s = new Socket(AddressFamily.InterNetwork' SocketType.Dgram' ProtocolType.Udp);                      }              }              finally              {                  s.Close();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Reconnect,The following statement contains a magic number: Reconnect(1000);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ConnectionCheck,The following statement contains a magic number: if (!connected) Reconnect(1000);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Reboot,The following statement contains a magic number: Reconnect(15000);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,LaunchTitle,The following statement contains a magic number: Reconnect(15000);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: CallAddressEx(Kernel.HalReadSMBusValue' null' false' SMBusDevices.PIC' PICCommand.Version' 0' scratchBuffer + 2);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: string code = ASCIIEncoding.ASCII.GetString(GetMemory(scratchBuffer' 3));
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: processorInformation.Model = (eax >> 4) & 0xf;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: processorInformation.Family = (eax >> 8) & 0xf;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: if (processorInformation.Model == 11) cpuFrequency = "1.48 GHz"; // DreamX console              else if (processorInformation.Model == 8 && processorInformation.Stepping == 6) cpuFrequency = "1.00 GHz";   // Intel Pentium III Coppermine              else cpuFrequency = "733.33 MHz";
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: if (processorInformation.Model == 11) cpuFrequency = "1.48 GHz"; // DreamX console              else if (processorInformation.Model == 8 && processorInformation.Stepping == 6) cpuFrequency = "1.00 GHz";   // Intel Pentium III Coppermine              else cpuFrequency = "733.33 MHz";
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: if (processorInformation.Model == 11) cpuFrequency = "1.48 GHz"; // DreamX console              else if (processorInformation.Model == 8 && processorInformation.Stepping == 6) cpuFrequency = "1.00 GHz";   // Intel Pentium III Coppermine              else cpuFrequency = "733.33 MHz";
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: string vstr = Convert.ToString(ver' 16).PadLeft(8' '0');
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: string vstr = Convert.ToString(ver' 16).PadLeft(8' '0');
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: string vstr2 = Util.HexBytesToString(GetMemory(Kernel.HardwareInfo + 4' 2)).Insert(2' " ");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: string vstr2 = Util.HexBytesToString(GetMemory(Kernel.HardwareInfo + 4' 2)).Insert(2' " ");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: string vstr2 = Util.HexBytesToString(GetMemory(Kernel.HardwareInfo + 4' 2)).Insert(2' " ");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: macAddress = BitConverter.ToString(eeprom' 0x40' 6).Replace('-'' ':');
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: serialNumber = Convert.ToUInt64(ASCIIEncoding.ASCII.GetString(eeprom' 0x34' 12));
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: lanKey = GetMemory(Kernel.XboxLANKey' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: signatureKey = GetMemory(Kernel.XboxSignatureKey' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: eepromKey = GetMemory(Kernel.XboxEEPROMKey' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: hardDriveKey = GetMemory(Kernel.XboxHDKey' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: byte[] hdModelInfo = GetMemory(Kernel.HalDiskModelNumber' 40);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: uint index = BitConverter.ToUInt32(hdModelInfo' 4);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: hardDriveModel = ASCIIEncoding.ASCII.GetString(hdModelInfo' 8' 32).Trim().Replace("\0"' "");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: hardDriveModel = ASCIIEncoding.ASCII.GetString(hdModelInfo' 8' 32).Trim().Replace("\0"' "");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: byte[] hdSerialInfo = GetMemory(Kernel.HalDiskSerialNumber' 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: index = BitConverter.ToUInt32(hdSerialInfo' 4);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: hardDriveSerial = ASCIIEncoding.ASCII.GetString(hdSerialInfo' 8' 16).Trim().Replace("\0"' "");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: hardDriveSerial = ASCIIEncoding.ASCII.GetString(hdSerialInfo' 8' 16).Trim().Replace("\0"' "");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: alternateSignatureKeys = new byte[16][];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: byte[] keyData = GetMemory(Kernel.XboxAlternateSignatureKeys' 256);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: for (int i = 0; i < 16; i++)              {                  alternateSignatureKeys[i] = new byte[16];                  Buffer.BlockCopy(keyData' i * 16' alternateSignatureKeys[i]' 0' 16);              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: for (int i = 0; i < 16; i++)              {                  alternateSignatureKeys[i] = new byte[16];                  Buffer.BlockCopy(keyData' i * 16' alternateSignatureKeys[i]' 0' 16);              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: for (int i = 0; i < 16; i++)              {                  alternateSignatureKeys[i] = new byte[16];                  Buffer.BlockCopy(keyData' i * 16' alternateSignatureKeys[i]' 0' 16);              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: for (int i = 0; i < 16; i++)              {                  alternateSignatureKeys[i] = new byte[16];                  Buffer.BlockCopy(keyData' i * 16' alternateSignatureKeys[i]' 0' 16);              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: byte[] krnlVersion = GetMemory(Kernel.XboxKrnlVersion' 8);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: krnlStr.AppendFormat("{0}.{1}.{2}.{3}"'                  BitConverter.ToUInt16(krnlVersion' 0)'                  BitConverter.ToUInt16(krnlVersion' 2)'                  BitConverter.ToUInt16(krnlVersion' 4)'                  BitConverter.ToUInt16(krnlVersion' 6)                  );
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: krnlStr.AppendFormat("{0}.{1}.{2}.{3}"'                  BitConverter.ToUInt16(krnlVersion' 0)'                  BitConverter.ToUInt16(krnlVersion' 2)'                  BitConverter.ToUInt16(krnlVersion' 4)'                  BitConverter.ToUInt16(krnlVersion' 6)                  );
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: krnlStr.AppendFormat("{0}.{1}.{2}.{3}"'                  BitConverter.ToUInt16(krnlVersion' 0)'                  BitConverter.ToUInt16(krnlVersion' 2)'                  BitConverter.ToUInt16(krnlVersion' 4)'                  BitConverter.ToUInt16(krnlVersion' 6)                  );
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: while (line[0] != '.')              {                  ModuleInfo module = new ModuleInfo();                  module.Sections = new List<ModuleSection>();                  List<object> info = Util.ExtractResponseInformation(line);                  module.Name = (string)info[0];                  module.BaseAddress = (uint)info[1];                  module.Size = (uint)info[2];                  module.Checksum = (uint)info[3];                    module.TimeStamp = Util.TimeStampToUniversalDateTime((uint)info[4]);                  modules.Add(module);                  line = ReceiveSocketLine();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: while (line[0] != '.')              {                  ModuleInfo module = new ModuleInfo();                  module.Sections = new List<ModuleSection>();                  List<object> info = Util.ExtractResponseInformation(line);                  module.Name = (string)info[0];                  module.BaseAddress = (uint)info[1];                  module.Size = (uint)info[2];                  module.Checksum = (uint)info[3];                    module.TimeStamp = Util.TimeStampToUniversalDateTime((uint)info[4]);                  modules.Add(module);                  line = ReceiveSocketLine();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: while (line[0] != '.')              {                  ModuleInfo module = new ModuleInfo();                  module.Sections = new List<ModuleSection>();                  List<object> info = Util.ExtractResponseInformation(line);                  module.Name = (string)info[0];                  module.BaseAddress = (uint)info[1];                  module.Size = (uint)info[2];                  module.Checksum = (uint)info[3];                    module.TimeStamp = Util.TimeStampToUniversalDateTime((uint)info[4]);                  modules.Add(module);                  line = ReceiveSocketLine();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: foreach (ModuleInfo module in modules)              {                  SendCommand("modsections name={0}"' module.Name);                  line = ReceiveSocketLine();                  while (line[0] != '.')                  {                      ModuleSection modSection = new ModuleSection();                      List<object> info = Util.ExtractResponseInformation(line);                      modSection.Name = (string)info[0];                      modSection.Base = (uint)info[1];                      modSection.Size = (uint)info[2];                      modSection.Index = (uint)info[3];                      modSection.Flags = (uint)info[4];                      module.Sections.Add(modSection);                      line = ReceiveSocketLine();                  }              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: foreach (ModuleInfo module in modules)              {                  SendCommand("modsections name={0}"' module.Name);                  line = ReceiveSocketLine();                  while (line[0] != '.')                  {                      ModuleSection modSection = new ModuleSection();                      List<object> info = Util.ExtractResponseInformation(line);                      modSection.Name = (string)info[0];                      modSection.Base = (uint)info[1];                      modSection.Size = (uint)info[2];                      modSection.Index = (uint)info[3];                      modSection.Flags = (uint)info[4];                      module.Sections.Add(modSection);                      line = ReceiveSocketLine();                  }              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: foreach (ModuleInfo module in modules)              {                  SendCommand("modsections name={0}"' module.Name);                  line = ReceiveSocketLine();                  while (line[0] != '.')                  {                      ModuleSection modSection = new ModuleSection();                      List<object> info = Util.ExtractResponseInformation(line);                      modSection.Name = (string)info[0];                      modSection.Base = (uint)info[1];                      modSection.Size = (uint)info[2];                      modSection.Index = (uint)info[3];                      modSection.Flags = (uint)info[4];                      module.Sections.Add(modSection);                      line = ReceiveSocketLine();                  }              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetXboxInformation,The following statement contains a magic number: string hex = SendCommand("altaddr").Message.Substring(7);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,getTitleInformation,The following statement contains a magic number: processID = Convert.ToUInt32(SendCommand("getpid").Message.Substring(6)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,getTitleInformation,The following statement contains a magic number: processID = Convert.ToUInt32(SendCommand("getpid").Message.Substring(6)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveSocketLine,The following statement contains a magic number: const int bData_sizeof = 1024;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveSocketLine,The following statement contains a magic number: try              {                  string sData;                  byte[] bData = new byte[bData_sizeof];                    try                  {                      // peek at the received data                      int avail = connection.Available;   // only get once                      if (avail < bData_sizeof)                          connection.Client.Receive(bData' avail' SocketFlags.Peek);                      else                          connection.Client.Receive(bData' bData_sizeof' SocketFlags.Peek);                        // determine the length of the string                      sData = ASCIIEncoding.ASCII.GetString(bData);                      sData = sData.Substring(0' sData.IndexOf("\r\n") + 2);                  }                  catch   // newline not detected...try waiting a little more                  {                      Thread.Sleep(1);    // this could really hurt performance...make a blocking call with a spin-wait instead!                        // peek at the received data                      int avail = connection.Available;   // only get once                      if (avail < bData_sizeof)                          connection.Client.Receive(bData' avail' SocketFlags.Peek);                      else                          connection.Client.Receive(bData' bData_sizeof' SocketFlags.Peek);                        // determine the length of the string                      sData = ASCIIEncoding.ASCII.GetString(bData);                      sData = sData.Substring(0' sData.IndexOf("\r\n") + 2);                  }                  connection.Client.Receive(bData' sData.Length' SocketFlags.None);                  return sData;              }              catch              {                  Disconnect();                  throw new NoConnectionException();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveSocketLine,The following statement contains a magic number: try              {                  string sData;                  byte[] bData = new byte[bData_sizeof];                    try                  {                      // peek at the received data                      int avail = connection.Available;   // only get once                      if (avail < bData_sizeof)                          connection.Client.Receive(bData' avail' SocketFlags.Peek);                      else                          connection.Client.Receive(bData' bData_sizeof' SocketFlags.Peek);                        // determine the length of the string                      sData = ASCIIEncoding.ASCII.GetString(bData);                      sData = sData.Substring(0' sData.IndexOf("\r\n") + 2);                  }                  catch   // newline not detected...try waiting a little more                  {                      Thread.Sleep(1);    // this could really hurt performance...make a blocking call with a spin-wait instead!                        // peek at the received data                      int avail = connection.Available;   // only get once                      if (avail < bData_sizeof)                          connection.Client.Receive(bData' avail' SocketFlags.Peek);                      else                          connection.Client.Receive(bData' bData_sizeof' SocketFlags.Peek);                        // determine the length of the string                      sData = ASCIIEncoding.ASCII.GetString(bData);                      sData = sData.Substring(0' sData.IndexOf("\r\n") + 2);                  }                  connection.Client.Receive(bData' sData.Length' SocketFlags.None);                  return sData;              }              catch              {                  Disconnect();                  throw new NoConnectionException();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveNotification,The following statement contains a magic number: try              {                  const int bData_sizeof = 256;                    // peek at the received data                  int avail = NotificationSession.Available;                  byte[] bData = new byte[bData_sizeof];                  if (avail == 0) return false;                  else if (avail < bData_sizeof)                      NotificationSession.Client.Receive(bData' avail' SocketFlags.Peek);                  else                      NotificationSession.Client.Receive(bData' bData_sizeof' SocketFlags.Peek);                    // extract the notification                  string notification = string.Empty;                  string sData = ASCIIEncoding.ASCII.GetString(bData);                  notification = sData.Substring(0' sData.IndexOf("\r\n"));                  NotificationSession.Client.Receive(bData' notification.Length + 2' SocketFlags.None);                    notifications.Add(notification);                  return true;              }              catch              {                  Disconnect();                  throw new NoConnectionException();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveNotification,The following statement contains a magic number: try              {                  const int bData_sizeof = 256;                    // peek at the received data                  int avail = NotificationSession.Available;                  byte[] bData = new byte[bData_sizeof];                  if (avail == 0) return false;                  else if (avail < bData_sizeof)                      NotificationSession.Client.Receive(bData' avail' SocketFlags.Peek);                  else                      NotificationSession.Client.Receive(bData' bData_sizeof' SocketFlags.Peek);                    // extract the notification                  string notification = string.Empty;                  string sData = ASCIIEncoding.ASCII.GetString(bData);                  notification = sData.Substring(0' sData.IndexOf("\r\n"));                  NotificationSession.Client.Receive(bData' notification.Length + 2' SocketFlags.None);                    notifications.Add(notification);                  return true;              }              catch              {                  Disconnect();                  throw new NoConnectionException();              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveStatusResponse,The following statement contains a magic number: response = response.Remove(response.Length - 2);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveStatusResponse,The following statement contains a magic number: if (response.Length > 0)  				return new StatusResponse(response' (ResponseType)Convert.ToInt32(response.ToString().Remove(3))' response.Remove(0' 5).ToString());  			else  			{  				connected = false;                  return new StatusResponse(response' ResponseType.UndefinedError' "No connection detected.");  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveStatusResponse,The following statement contains a magic number: if (response.Length > 0)  				return new StatusResponse(response' (ResponseType)Convert.ToInt32(response.ToString().Remove(3))' response.Remove(0' 5).ToString());  			else  			{  				connected = false;                  return new StatusResponse(response' ResponseType.UndefinedError' "No connection detected.");  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadFilePartial,The following statement contains a magic number: int bufferSize = 0x1000 * 64;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadFilePartial,The following statement contains a magic number: for (int i = 0; i < iterations; i++)  			{  				Response = SendCommand("getfile name={0} offset={1} size={2}"' name' offset + index' bufferSize);  				if (Response.Type == ResponseType.BinaryResponse)  				{  					Wait(4);  					int bytesRead;  					byte[] temp = new byte[4];  					connection.Client.Receive(temp' 4' SocketFlags.None);  					bytesRead = BitConverter.ToInt32(temp' 0);  					read += bytesRead;    					Wait((int)bytesRead);  					connection.Client.Receive(buffer' index' bufferSize' SocketFlags.None);  					index += bufferSize;  				}  				else throw new Exceptions.ApiException("SendCommand");  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadFilePartial,The following statement contains a magic number: for (int i = 0; i < iterations; i++)  			{  				Response = SendCommand("getfile name={0} offset={1} size={2}"' name' offset + index' bufferSize);  				if (Response.Type == ResponseType.BinaryResponse)  				{  					Wait(4);  					int bytesRead;  					byte[] temp = new byte[4];  					connection.Client.Receive(temp' 4' SocketFlags.None);  					bytesRead = BitConverter.ToInt32(temp' 0);  					read += bytesRead;    					Wait((int)bytesRead);  					connection.Client.Receive(buffer' index' bufferSize' SocketFlags.None);  					index += bufferSize;  				}  				else throw new Exceptions.ApiException("SendCommand");  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadFilePartial,The following statement contains a magic number: for (int i = 0; i < iterations; i++)  			{  				Response = SendCommand("getfile name={0} offset={1} size={2}"' name' offset + index' bufferSize);  				if (Response.Type == ResponseType.BinaryResponse)  				{  					Wait(4);  					int bytesRead;  					byte[] temp = new byte[4];  					connection.Client.Receive(temp' 4' SocketFlags.None);  					bytesRead = BitConverter.ToInt32(temp' 0);  					read += bytesRead;    					Wait((int)bytesRead);  					connection.Client.Receive(buffer' index' bufferSize' SocketFlags.None);  					index += bufferSize;  				}  				else throw new Exceptions.ApiException("SendCommand");  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadFilePartial,The following statement contains a magic number: if (remainder > 0)              {                  Response = SendCommand("getfile name={0} offset={1} size={2}"' name' offset + index' remainder);                  if (Response.Type == ResponseType.BinaryResponse)                  {                      Wait(4);                      int bytesRead;                      byte[] temp = new byte[4];                      connection.Client.Receive(temp' 4' SocketFlags.None);                      bytesRead = BitConverter.ToInt32(temp' 0);                          read += bytesRead;                        Wait((int)bytesRead);                      connection.Client.Receive(buffer' index' remainder' SocketFlags.None);                  }                  else throw new Exceptions.ApiException("SendCommand");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadFilePartial,The following statement contains a magic number: if (remainder > 0)              {                  Response = SendCommand("getfile name={0} offset={1} size={2}"' name' offset + index' remainder);                  if (Response.Type == ResponseType.BinaryResponse)                  {                      Wait(4);                      int bytesRead;                      byte[] temp = new byte[4];                      connection.Client.Receive(temp' 4' SocketFlags.None);                      bytesRead = BitConverter.ToInt32(temp' 0);                          read += bytesRead;                        Wait((int)bytesRead);                      connection.Client.Receive(buffer' index' remainder' SocketFlags.None);                  }                  else throw new Exceptions.ApiException("SendCommand");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadFilePartial,The following statement contains a magic number: if (remainder > 0)              {                  Response = SendCommand("getfile name={0} offset={1} size={2}"' name' offset + index' remainder);                  if (Response.Type == ResponseType.BinaryResponse)                  {                      Wait(4);                      int bytesRead;                      byte[] temp = new byte[4];                      connection.Client.Receive(temp' 4' SocketFlags.None);                      bytesRead = BitConverter.ToInt32(temp' 0);                          read += bytesRead;                        Wait((int)bytesRead);                      connection.Client.Receive(buffer' index' remainder' SocketFlags.None);                  }                  else throw new Exceptions.ApiException("SendCommand");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: freeBytes = Convert.ToUInt64(msg.Substring(msg.IndexOf("freetocallerlo") + 17' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: freeBytes = Convert.ToUInt64(msg.Substring(msg.IndexOf("freetocallerlo") + 17' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: freeBytes = Convert.ToUInt64(msg.Substring(msg.IndexOf("freetocallerlo") + 17' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: freeBytes |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("freetocallerhi") + 17' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: freeBytes |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("freetocallerhi") + 17' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: freeBytes |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("freetocallerhi") + 17' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: freeBytes |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("freetocallerhi") + 17' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: driveSize = Convert.ToUInt64(msg.Substring(msg.IndexOf("totalbyteslo") + 15' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: driveSize = Convert.ToUInt64(msg.Substring(msg.IndexOf("totalbyteslo") + 15' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: driveSize = Convert.ToUInt64(msg.Substring(msg.IndexOf("totalbyteslo") + 15' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: driveSize |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("totalbyteshi") + 15' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: driveSize |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("totalbyteshi") + 15' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: driveSize |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("totalbyteshi") + 15' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: driveSize |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("totalbyteshi") + 15' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: totalFreeBytes = Convert.ToUInt64(msg.Substring(msg.IndexOf("totalfreebyteslo") + 19' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: totalFreeBytes = Convert.ToUInt64(msg.Substring(msg.IndexOf("totalfreebyteslo") + 19' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: totalFreeBytes = Convert.ToUInt64(msg.Substring(msg.IndexOf("totalfreebyteslo") + 19' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: totalFreeBytes |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("totalfreebyteshi") + 19' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: totalFreeBytes |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("totalfreebyteshi") + 19' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: totalFreeBytes |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("totalfreebyteshi") + 19' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDriveInformation,The following statement contains a magic number: totalFreeBytes |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("totalfreebyteshi") + 19' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetPartitions,The following statement contains a magic number: timeout = 10000;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetDirectoryList,The following statement contains a magic number: if (response.Type == ResponseType.MultiResponse)  			{  				string msg = ReceiveSocketLine();  				while (msg[0] != '.')  				{  					FileInformation info = new FileInformation();    					info.Name = msg.Substring(msg.IndexOf("\"") + 1' msg.LastIndexOf("\"") - msg.IndexOf("\"") - 1);    					// devs fucked up size output so we need to parse carefully... ;X  					int sizehistart = msg.IndexOf("sizehi") + 9;  					int sizehiend = msg.IndexOf("sizelo") - 1;  					int sizelostart = sizehiend + 10;  					int sizeloend = msg.IndexOf("createhi") - 1;    					info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);  					info.Size |= (Convert.ToUInt64(msg.Substring(sizehistart' sizehiend - sizehistart)' 16) << 32);    					ulong createtime;  					createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);  					createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);  					info.CreationTime = DateTime.FromFileTime((long)createtime);    					ulong changetime;  					changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);  					changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);  					info.ChangeTime = DateTime.FromFileTime((long)changetime);    					if (msg.Contains("directory"))	info.Attributes |= FileAttributes.Directory;  					else							info.Attributes |= FileAttributes.Normal;    					if (msg.Contains("readonly"))	info.Attributes |= FileAttributes.ReadOnly;  					if (msg.Contains("hidden"))		info.Attributes |= FileAttributes.Hidden;    					files.Add(info);  					msg = ReceiveSocketLine();  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReceiveFile,The following statement contains a magic number: int fileSize = BitConverter.ToInt32(ReceiveBinaryData(4)' 0);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetFileInformation,The following statement contains a magic number: uint createhi = (uint)(info.CreationTime.ToFileTime() >> 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetFileInformation,The following statement contains a magic number: uint changehi = (uint)(info.ChangeTime.ToFileTime() >> 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetFileInformation,The following statement contains a magic number: SendCommand("setfileattributes name=\"{0}\" createhi=0x{1} createlo=0x{2} changehi=0x{3} changelo=0x{4} {5}"'  				fileName'  				Convert.ToString(createhi' 16)' Convert.ToString(createlo' 16)'  				Convert.ToString(changehi' 16)' Convert.ToString(changelo' 16)'  				attr);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetFileInformation,The following statement contains a magic number: SendCommand("setfileattributes name=\"{0}\" createhi=0x{1} createlo=0x{2} changehi=0x{3} changelo=0x{4} {5}"'  				fileName'  				Convert.ToString(createhi' 16)' Convert.ToString(createlo' 16)'  				Convert.ToString(changehi' 16)' Convert.ToString(changelo' 16)'  				attr);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetFileInformation,The following statement contains a magic number: SendCommand("setfileattributes name=\"{0}\" createhi=0x{1} createlo=0x{2} changehi=0x{3} changelo=0x{4} {5}"'  				fileName'  				Convert.ToString(createhi' 16)' Convert.ToString(createlo' 16)'  				Convert.ToString(changehi' 16)' Convert.ToString(changelo' 16)'  				attr);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetFileInformation,The following statement contains a magic number: SendCommand("setfileattributes name=\"{0}\" createhi=0x{1} createlo=0x{2} changehi=0x{3} changelo=0x{4} {5}"'  				fileName'  				Convert.ToString(createhi' 16)' Convert.ToString(createlo' 16)'  				Convert.ToString(changehi' 16)' Convert.ToString(changelo' 16)'  				attr);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: int sizelostart = sizehiend + 10;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: info.Size = Convert.ToUInt64(msg.Substring(sizelostart' sizeloend - sizelostart)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: info.Size |= (Convert.ToUInt64(msg.Substring(9' sizehiend - 9)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: info.Size |= (Convert.ToUInt64(msg.Substring(9' sizehiend - 9)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: info.Size |= (Convert.ToUInt64(msg.Substring(9' sizehiend - 9)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: info.Size |= (Convert.ToUInt64(msg.Substring(9' sizehiend - 9)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: createtime = Convert.ToUInt64(msg.Substring(msg.IndexOf("createlo") + 11' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: createtime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("createhi") + 11' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: changetime = Convert.ToUInt64(msg.Substring(msg.IndexOf("changelo") + 11' 8)' 16);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetFileInformation,The following statement contains a magic number: changetime |= (Convert.ToUInt64(msg.Substring(msg.IndexOf("changehi") + 11' 8)' 16) << 32);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,MountDevice,The following statement contains a magic number: SetMemory(scratchBuffer' (ushort)driveName.Length' (ushort)(driveName.Length + 1)'                  (uint)(scratchBuffer + 16)' (ushort)deviceName.Length' (ushort)(deviceName.Length + 1)'                  (uint)(scratchBuffer + 16 + driveName.Length + 1)' driveName' deviceName);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,MountDevice,The following statement contains a magic number: SetMemory(scratchBuffer' (ushort)driveName.Length' (ushort)(driveName.Length + 1)'                  (uint)(scratchBuffer + 16)' (ushort)deviceName.Length' (ushort)(deviceName.Length + 1)'                  (uint)(scratchBuffer + 16 + driveName.Length + 1)' driveName' deviceName);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,MountDevice,The following statement contains a magic number: uint error = CallAddressEx(Kernel.IoCreateSymbolicLink' null' true' scratchBuffer' scratchBuffer + 8);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,UnMountDevice,The following statement contains a magic number: SetMemory(scratchBuffer' (ushort)driveName.Length' (ushort)(driveName.Length + 1)'                  (uint)(scratchBuffer + 8)' driveName);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Getmem,The following statement contains a magic number: for (int i = 0; i < iterations; i++)  			{  				response = SendCommand("getmem2 addr=0x{0} length={1}"' Convert.ToString(address + read' 16).PadLeft(8' '0')' maxBufferSize);  				Wait(maxBufferSize);  				connection.Client.Receive(buffer' (int)(offset + read)' maxBufferSize' SocketFlags.None);  				read += maxBufferSize;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Getmem,The following statement contains a magic number: for (int i = 0; i < iterations; i++)  			{  				response = SendCommand("getmem2 addr=0x{0} length={1}"' Convert.ToString(address + read' 16).PadLeft(8' '0')' maxBufferSize);  				Wait(maxBufferSize);  				connection.Client.Receive(buffer' (int)(offset + read)' maxBufferSize' SocketFlags.None);  				read += maxBufferSize;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Getmem,The following statement contains a magic number: if (remainder > 0)              {                  response = SendCommand("getmem2 addr=0x{0} length={1}"' Convert.ToString(address + read' 16).PadLeft(8' '0')' remainder);                  Wait(remainder);                  connection.Client.Receive(buffer' (int)(offset + read)' remainder' SocketFlags.None);                  read += remainder;              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Getmem,The following statement contains a magic number: if (remainder > 0)              {                  response = SendCommand("getmem2 addr=0x{0} length={1}"' Convert.ToString(address + read' 16).PadLeft(8' '0')' remainder);                  Wait(remainder);                  connection.Client.Receive(buffer' (int)(offset + read)' remainder' SocketFlags.None);                  read += remainder;              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Setmem,The following statement contains a magic number: for (int i = 0; i < iterations; i++)              {                  Response = SendCommand("writefile name=| offset=0x" + Convert.ToString(address' 16) + " length=" + bufferSize);                  if (Response.Type == ResponseType.ReadyForBinary)                  {                      connection.Client.Send(buffer' offset' bufferSize' SocketFlags.None);                      Response = ReceiveStatusResponse(); // garbage number of bytes set...it keeps track of total' dont really care to find how to reset it                      // check for failure                      index += bufferSize;                  }                  else throw new Exceptions.ApiException("SendCommand");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Setmem,The following statement contains a magic number: if (remainder > 0)              {                  Response = SendCommand("writefile name=| offset=0x" + Convert.ToString(address' 16) + " length=" + remainder);                  if (Response.Type == ResponseType.ReadyForBinary)                  {                      connection.Client.Send(buffer' offset' remainder' SocketFlags.None);                      Response = ReceiveStatusResponse();                      // check for failure - parse message and determine bytes written' then return                       index += bufferSize;                  }                  else throw new Exceptions.ApiException("SendCommand");              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetMemoryChecksum,The following statement contains a magic number: if ((address % 8) != 0)     throw new ApiException("Address must be aligned on an 8-byte boundary.");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetMemoryChecksum,The following statement contains a magic number: if ((length % 8) != 0)      throw new ApiException("Length must be a multiple of 8.");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetMemoryChecksum,The following statement contains a magic number: return BitConverter.ToUInt32(ReceiveBinaryData(4)' 0);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,DumpMemory,The following statement contains a magic number: timeout = 7000;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetString,The following statement contains a magic number: byte[] StringBuffer = new byte[1026];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetString,The following statement contains a magic number: memoryReader.Read(StringBuffer' 0' 1026);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetASCIIString,The following statement contains a magic number: byte[] StringBuffer = new byte[512];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetASCIIString,The following statement contains a magic number: memoryReader.Read(StringBuffer' 0' 512);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetUnicodeString,The following statement contains a magic number: byte[] StringBuffer = new byte[1024];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetUnicodeString,The following statement contains a magic number: memoryReader.Read(StringBuffer' 0' 1024);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,IsValidAddress,The following statement contains a magic number: StatusResponse response = SendCommand("getmem addr=0x{0} length=1"' Convert.ToString(address' 16));
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,IsValidAddress,The following statement contains a magic number: string mem = ReceiveSocketLine().Remove(2);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawFramebufferDump,The following statement contains a magic number: Thread.Sleep(25);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Screenshot,The following statement contains a magic number: Thread.Sleep(25);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Screenshot,The following statement contains a magic number: byte[] data = new byte[640 * 480 * 4];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Screenshot,The following statement contains a magic number: byte[] data = new byte[640 * 480 * 4];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Screenshot,The following statement contains a magic number: byte[] data = new byte[640 * 480 * 4];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int[] block = {  							  0'  1'  2'  3'  4'  5'  6'  7'  8'  9'  10' 11' 12' 13' 14' 15'  							  18' 19' 16' 17' 22' 23' 20' 21' 26' 27' 24' 25' 30' 31' 28' 29'  							  33' 34' 35' 32' 37' 38' 39' 36' 41' 42' 43' 40' 45' 46' 47' 44'  							  51' 48' 49' 50' 55' 52' 53' 54' 59' 56' 57' 58' 63' 60' 61' 62  						  };
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: Byte[] deswizzled = new Byte[1228800];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: int deswiz = 1226240;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Deswizzle,The following statement contains a magic number: for (i = 0; i < 30; i++)  			{  				for (j = 0; j < 10; j++)  				{  					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz -= 256;  						else deswiz += 256;    					for (l = 0; l < 4; l++)  					{  						for (k = 0; k < 16; k++)  						{  							offset = (((int)(block[index] & 0xFFFFFFFE) >> 2) * 256) + ((block[index] & 3) * 16);  							index = (index + 1) & 63;  							for (int v = 0; v < 15; v++)  								if ((v & 3) != 3)  								{  									deswizzled[deswiz + v] = swizzled[swiz + offset + v];  									deswizzled[deswiz - 2560 + v] = swizzled[swiz + offset + 64 + v];  									deswizzled[deswiz - 5120 + v] = swizzled[swiz + offset + 128 + v];  									deswizzled[deswiz - 7680 + v] = swizzled[swiz + offset + 192 + v];  								}  							deswiz += 16;  						}  						deswiz -= 10496;  					}  					deswiz += 41216;  					swiz += 4096;    					if ((i & 1) == 1)  						if ((j & 1) == 1) deswiz += 256;  						else deswiz -= 256;  				}  				deswiz -= 43520;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: if (raw.Length != 1228800)  			{  				return null;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((uint)824);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((uint)54);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((uint)40);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((uint)640);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((uint)480);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((ushort)24);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((uint)770);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((uint)2834);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: bw.Write((uint)2834);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: for (int offset = 0; offset < 1228800; offset += 2560)  			{  				for (int i = 0; i < 2560; i += 4)  				{  					bw.Write(raw[offset + i]);  					bw.Write(raw[offset + i + 1]);  					bw.Write(raw[offset + i + 2]);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: for (int offset = 0; offset < 1228800; offset += 2560)  			{  				for (int i = 0; i < 2560; i += 4)  				{  					bw.Write(raw[offset + i]);  					bw.Write(raw[offset + i + 1]);  					bw.Write(raw[offset + i + 2]);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: for (int offset = 0; offset < 1228800; offset += 2560)  			{  				for (int i = 0; i < 2560; i += 4)  				{  					bw.Write(raw[offset + i]);  					bw.Write(raw[offset + i + 1]);  					bw.Write(raw[offset + i + 2]);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: for (int offset = 0; offset < 1228800; offset += 2560)  			{  				for (int i = 0; i < 2560; i += 4)  				{  					bw.Write(raw[offset + i]);  					bw.Write(raw[offset + i + 1]);  					bw.Write(raw[offset + i + 2]);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RawToBMP,The following statement contains a magic number: for (int offset = 0; offset < 1228800; offset += 2560)  			{  				for (int i = 0; i < 2560; i += 4)  				{  					bw.Write(raw[offset + i]);  					bw.Write(raw[offset + i + 1]);  					bw.Write(raw[offset + i + 2]);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The following statement contains a magic number: for (int i = 0; i < 400; i++)  				membuf = GetMemory(TestBuffer' memBufferSize);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The following statement contains a magic number: string memReadSpeed = (((float)400 * (float)memBufferSize * toMegs) / (float)memReadElapse.TotalSeconds).ToString();
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The following statement contains a magic number: for (int i = 0; i < 400; i++)              {                  Setmem((int)TestBuffer' (int)membuf.Length' ref membuf' 0);              }
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The following statement contains a magic number: string memWriteSpeed = (((float)400 * (float)memBufferSize * toMegs) / (float)memWriteElapse.TotalSeconds).ToString();
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The following statement contains a magic number: for (int i = 0; i < 16; i++)  			{  				xbfs.Position = 0;  				bw.Write(filebuf' 0' fileBufferSize);  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The following statement contains a magic number: string fileWriteSpeed = (((float)16 * (float)fileBufferSize * toMegs) / (float)fileWriteElapse.TotalSeconds).ToString();
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The following statement contains a magic number: for (int i = 0; i < 16; i++)  			{  				xbfs.Position = 0;  				filebuf = br.ReadBytes(fileBufferSize);  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StreamTest,The following statement contains a magic number: string fileReadSpeed = (((float)16 * (float)fileBufferSize * toMegs) / (float)fileReadElapse.TotalSeconds).ToString();
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CyclePower,The following statement contains a magic number: Thread.Sleep(25);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Reset,The following statement contains a magic number: Reconnect(15000);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Shutdown,The following statement contains a magic number: Thread.Sleep(25);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,EjectTray,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,LoadTray,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetLEDState,The following statement contains a magic number: State |= (byte)((byte)state3 >> 2);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetLEDState,The following statement contains a magic number: State |= (byte)((byte)state4 >> 3);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetLEDState,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,RestoreDefaultLEDState,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetVideoFlags,The following statement contains a magic number: CallAddressEx(Kernel.ExQueryNonVolatileSetting' null' false' 0x8' 0x10008' 0x10004' 4' 0);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetVideoFlags,The following statement contains a magic number: return (VideoFlags)((GetUInt32(0x10004) >> 16) & 0x5F);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,GetVideoStandard,The following statement contains a magic number: CallAddressEx(Kernel.ExQueryNonVolatileSetting' null' false' 0x103' 0x10008' 0x10004' 4' 0);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadEEPROM,The following statement contains a magic number: byte[] callScript = new byte[62];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ReadEEPROM,The following statement contains a magic number: return GetMemory(scratchBuffer' 256);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: if (context != null)  			{  				// assign registers  				if (context.Eax != null)  				{  					call.Write((byte)0xB8); //mov eax  					call.Write(Convert.ToUInt32(context.Eax));  				}  				if (context.Ebx != null)  				{  					call.Write((byte)0xBB); //mov ebx  					call.Write(Convert.ToUInt32(context.Ebx));  				}  				if (context.Ecx != null)  				{  					call.Write((byte)0xB9); //mov ecx  					call.Write(Convert.ToUInt32(context.Ecx));  				}  				if (context.Edx != null)  				{  					call.Write((byte)0xBA); //mov edx  					call.Write(Convert.ToUInt32(context.Edx));  				}  				if (context.Esi != null)  				{  					call.Write((byte)0xBE); //mov esi  					call.Write(Convert.ToUInt32(context.Esi));  				}  				if (context.Edi != null)  				{  					call.Write((byte)0xBF); //mov edi  					call.Write(Convert.ToUInt32(context.Edi));  				}  				if (context.Esp != null)  				{  					call.Write((byte)0xBC); //mov esp  					call.Write(Convert.ToUInt32(context.Esp));  				}  				if (context.Ebp != null)  				{  					call.Write((byte)0xBD); //mov ebp  					call.Write(Convert.ToUInt32(context.Ebp));  				}    				// assign xmm registers  				// remember that its a pointer' not a value you are db'ing  				// so we need to dump the values somewhere' then store the pointers to those...                    uint XmmContextBuffer = 0x10004;                  if (context.Xmm0 != null)  				{                      SetMemory(XmmContextBuffer' Convert.ToSingle(context.Xmm0));  					call.Write(0x05100FF3); //movss xmm0  					call.Write(XmmContextBuffer);   //dword ptr ds:[addr]  				}                  if (context.Xmm1 != null)  				{  					SetMemory(XmmContextBuffer + 4' Convert.ToSingle(context.Xmm1));  					call.Write(0x0D100FF3); //movss xmm1  					call.Write(XmmContextBuffer + 4);  				}                  if (context.Xmm2 != null)  				{  					SetMemory(XmmContextBuffer + 8' Convert.ToSingle(context.Xmm2));  					call.Write(0x15100FF3); //movss xmm2  					call.Write(XmmContextBuffer + 8);  				}                  if (context.Xmm3 != null)  				{  					SetMemory(XmmContextBuffer + 12' Convert.ToSingle(context.Xmm3));  					call.Write(0x1D100FF3); //movss xmm3  					call.Write(XmmContextBuffer + 12);  				}                  if (context.Xmm4 != null)  				{  					SetMemory(XmmContextBuffer + 16' Convert.ToSingle(context.Xmm4));  					call.Write(0x25100FF3); //movss xmm4  					call.Write(XmmContextBuffer + 16);  				}                  if (context.Xmm5 != null)  				{  					SetMemory(XmmContextBuffer + 20' Convert.ToSingle(context.Xmm5));  					call.Write(0x2D100FF3); //movss xmm5  					call.Write(XmmContextBuffer + 20);  				}                  if (context.Xmm6 != null)  				{  					SetMemory(XmmContextBuffer + 24' Convert.ToSingle(context.Xmm6));  					call.Write(0x35100FF3); //movss xmm6  					call.Write(XmmContextBuffer + 24);  				}  				if (context.Xmm7 != null)  				{  					SetMemory(XmmContextBuffer + 28' Convert.ToSingle(context.Xmm7));  					call.Write(0x3D100FF3); //movss xmm7  					call.Write(XmmContextBuffer + 28);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,CallAddressEx,The following statement contains a magic number: call.Write((uint)(ScriptBufferAddress + call.BaseStream.Position + 17));
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,LoadAllocationTable,The following statement contains a magic number: byte[] allocBuffer = GetMemory(History.AllocationTable.BufferAddress' tableCount * 9);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,LoadAllocationTable,The following statement contains a magic number: for (int i = 0; i < tableCount; i++)  			{  				// check for unaligned addresses as signs of a corrupted table  				uint address = alloc.ReadUInt32();  				if ((address & 0xFFF) > 0)  					throw new Exception("Allocation table corruption.");    				// check for sizes greater than 128mb as signs of corrupted data  				uint size = alloc.ReadUInt32();  				if (size > 0x8000000)  					throw new Exception("Allocation table corruption.");    				// check for invalid type as signs of corrupted data  				AllocationType type = (AllocationType)alloc.ReadByte();  				if ((byte)type > 3)  					throw new Exception("Allocation table corruption.");    				// otherwise add to table  				if (allocationTable.Count < MaxAllocTableSize)  					allocationTable.Add(new AllocationEntry(address' size' type));  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SyncAllocationTable,The following statement contains a magic number: byte[] allocBuffer = new byte[AllocationTable.Count * 9 + 4];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SyncAllocationTable,The following statement contains a magic number: byte[] allocBuffer = new byte[AllocationTable.Count * 9 + 4];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateDebugMemory,The following statement contains a magic number: uint ptr = (uint)CallAddressEx(Kernel.MmDbgAllocateMemory' null' true' size' 4);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocatePhysicalMemoryEx,The following statement contains a magic number: uint ptr = (uint)CallAddressEx(Kernel.MmAllocateContiguousMemoryEx' null' true' size' range.Low' range.High' 0' 4);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateVirtualMemory,The following statement contains a magic number: uint pAddress = History.RemoteExecution.ArgumentBuffer + 4;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateVirtualMemory,The following statement contains a magic number: uint result = (uint)CallAddressEx(Kernel.NtAllocateVirtualMemory' null' true' pAddress' 0' pSize' 0x1000' 4);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateVirtualMemoryEx,The following statement contains a magic number: uint pAddress = History.RemoteExecution.ArgumentBuffer + 4;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateVirtualMemoryEx,The following statement contains a magic number: uint res = (uint)CallAddressEx(Kernel.NtAllocateVirtualMemory' null' true' pAddress' 0' pSize' MEMORY_FLAGS.MEM_RESERVE' 4);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateVirtualMemoryEx,The following statement contains a magic number: uint result = (uint)CallAddressEx(Kernel.NtAllocateVirtualMemory' null' true' pAddress' 0' pSize' MEMORY_FLAGS.MEM_COMMIT' 4);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,FreeVirtualMemory,The following statement contains a magic number: uint pAddress = History.RemoteExecution.ArgumentBuffer + 4;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,AllocateSystemMemory,The following statement contains a magic number: uint ptr = (uint)CallAddressEx(Kernel.MmAllocateSystemMemory' null' true' size' 4);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,VirtualProtect,The following statement contains a magic number: uint pSize = History.RemoteExecution.ArgumentBuffer + 4;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,VirtualProtect,The following statement contains a magic number: uint pAddress = History.RemoteExecution.ArgumentBuffer + 8;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,InitializeHistory,The following statement contains a magic number: if (IsHistoryPresent())  			{  				// restore our current allocations  				AllocationTable = LoadAllocationTable();    				// check other settings like controller hook etc...  				XInputGetState = GetUInt32(History.Gamepad.XInputGetState);  				OriginalGamepadCode = GetMemory(History.Gamepad.OriginalCodeBuffer' 10);  			}  			else  			{  				// allocate memory for our history pages  				AllocateHistoryPages(History.Size);  				SetMemory(History.BaseAddress' 0x6F6C6559);   // "Yelo"  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,IsHistoryPresent,The following statement contains a magic number: SendCommand("getmem addr=0x{0} length=4"' Convert.ToString(History.BaseAddress' 16));
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,XInputGetStateAddress,The following statement contains a magic number: for (int i = 0; i < SegmentCount; i++)  			{  				header.BaseStream.Position = (uint)(SegmentBase + i * 56) + 4;  				uint SegAddress = header.ReadUInt32();  				uint SegSize = header.ReadUInt32();  				header.BaseStream.Position += 8;  				header.BaseStream.Position = header.ReadUInt32() - 0x10000;  				string SegName = ASCIIEncoding.ASCII.GetString(header.ReadBytes(3));    				if (SegName.Equals("XPP"))  				{  					//dumps xpp segment  					byte[] SegDump = GetMemory(SegAddress' SegSize);    					//searches for xinputgetstate function  					for (int j = 0; j < SegSize; j++)  						if ((BitConverter.ToUInt64(SegDump' j) & 0xFFFFFFFFFFFF) == 0x000015FFDB335653)  							return (uint)(SegAddress + j);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,XInputGetStateAddress,The following statement contains a magic number: for (int i = 0; i < SegmentCount; i++)  			{  				header.BaseStream.Position = (uint)(SegmentBase + i * 56) + 4;  				uint SegAddress = header.ReadUInt32();  				uint SegSize = header.ReadUInt32();  				header.BaseStream.Position += 8;  				header.BaseStream.Position = header.ReadUInt32() - 0x10000;  				string SegName = ASCIIEncoding.ASCII.GetString(header.ReadBytes(3));    				if (SegName.Equals("XPP"))  				{  					//dumps xpp segment  					byte[] SegDump = GetMemory(SegAddress' SegSize);    					//searches for xinputgetstate function  					for (int j = 0; j < SegSize; j++)  						if ((BitConverter.ToUInt64(SegDump' j) & 0xFFFFFFFFFFFF) == 0x000015FFDB335653)  							return (uint)(SegAddress + j);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,XInputGetStateAddress,The following statement contains a magic number: for (int i = 0; i < SegmentCount; i++)  			{  				header.BaseStream.Position = (uint)(SegmentBase + i * 56) + 4;  				uint SegAddress = header.ReadUInt32();  				uint SegSize = header.ReadUInt32();  				header.BaseStream.Position += 8;  				header.BaseStream.Position = header.ReadUInt32() - 0x10000;  				string SegName = ASCIIEncoding.ASCII.GetString(header.ReadBytes(3));    				if (SegName.Equals("XPP"))  				{  					//dumps xpp segment  					byte[] SegDump = GetMemory(SegAddress' SegSize);    					//searches for xinputgetstate function  					for (int j = 0; j < SegSize; j++)  						if ((BitConverter.ToUInt64(SegDump' j) & 0xFFFFFFFFFFFF) == 0x000015FFDB335653)  							return (uint)(SegAddress + j);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,XInputGetStateAddress,The following statement contains a magic number: for (int i = 0; i < SegmentCount; i++)  			{  				header.BaseStream.Position = (uint)(SegmentBase + i * 56) + 4;  				uint SegAddress = header.ReadUInt32();  				uint SegSize = header.ReadUInt32();  				header.BaseStream.Position += 8;  				header.BaseStream.Position = header.ReadUInt32() - 0x10000;  				string SegName = ASCIIEncoding.ASCII.GetString(header.ReadBytes(3));    				if (SegName.Equals("XPP"))  				{  					//dumps xpp segment  					byte[] SegDump = GetMemory(SegAddress' SegSize);    					//searches for xinputgetstate function  					for (int j = 0; j < SegSize; j++)  						if ((BitConverter.ToUInt64(SegDump' j) & 0xFFFFFFFFFFFF) == 0x000015FFDB335653)  							return (uint)(SegAddress + j);  				}  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,StateChanged,The following statement contains a magic number: for (int i = 0; i < 8; i++)                  if (oldState.AnalogButtons[i] != newState.AnalogButtons[i])                      return true;
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,InitializeControllerHook,The following statement contains a magic number: byte[] origCode = GetMemory(XInputGetState' 10);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,InitializeControllerHook,The following statement contains a magic number: byte[] scriptData = new byte[71];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,InitializeControllerHook,The following statement contains a magic number: script.Write(XInputGetState + 10);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,InitializeControllerHook,The following statement contains a magic number: byte[] hookData = new byte[10];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ManuallyInitializeControllerHook,The following statement contains a magic number: byte[] origCode = GetMemory(XInputGetState' 10);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ManuallyInitializeControllerHook,The following statement contains a magic number: byte[] scriptData = new byte[71];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ManuallyInitializeControllerHook,The following statement contains a magic number: script.Write(XInputGetState + 10);
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,ManuallyInitializeControllerHook,The following statement contains a magic number: byte[] hookData = new byte[10];
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,OverrideControllers,The following statement contains a magic number: if (enabled)  				SetMemory(History.Gamepad.EnabledAddress' (int)1);  			else  			{  				// clear states so if we re-enable' it doesnt perform old actions...  				SetMemory(History.Gamepad.StateBufferAddress' new byte[32 * 4]);  				SetMemory(History.Gamepad.EnabledAddress' (int)0);  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,OverrideControllers,The following statement contains a magic number: if (enabled)  				SetMemory(History.Gamepad.EnabledAddress' (int)1);  			else  			{  				// clear states so if we re-enable' it doesnt perform old actions...  				SetMemory(History.Gamepad.StateBufferAddress' new byte[32 * 4]);  				SetMemory(History.Gamepad.EnabledAddress' (int)0);  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetGamepadState,The following statement contains a magic number: if (port > 3)  				throw new Exception("Invalid controller port specified.  Valid ports are within the range of [0-3].");
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetGamepadState,The following statement contains a magic number: if (StateChanged(PreviousState' input))  			{  				// get our XINPUT_STATE address  				uint inputState = History.Gamepad.StateBufferAddress + port * 32;    				// indicate a changed gamepad state  				GamepadPacketNumber++;    				//convert pad to byte array  				byte[] gamepadData = new byte[22];                  BinaryWriter pad = new BinaryWriter(new System.IO.MemoryStream(gamepadData));  				pad.BaseStream.Position = 0;  				pad.Write(GamepadPacketNumber);  				pad.Write((ushort)input.Buttons);  				pad.Write(BitConverter.ToUInt64(input.AnalogButtons' 0));  				pad.Write((short)input.ThumbLX);  				pad.Write((short)input.ThumbLY);  				pad.Write((short)input.ThumbRX);  				pad.Write((short)input.ThumbRY);  				pad.Close();    				// store new state  				SetMemory(inputState' gamepadData);    				// replace old with new  				PreviousState = input;  			}
Magic Number,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,SetGamepadState,The following statement contains a magic number: if (StateChanged(PreviousState' input))  			{  				// get our XINPUT_STATE address  				uint inputState = History.Gamepad.StateBufferAddress + port * 32;    				// indicate a changed gamepad state  				GamepadPacketNumber++;    				//convert pad to byte array  				byte[] gamepadData = new byte[22];                  BinaryWriter pad = new BinaryWriter(new System.IO.MemoryStream(gamepadData));  				pad.BaseStream.Position = 0;  				pad.Write(GamepadPacketNumber);  				pad.Write((ushort)input.Buttons);  				pad.Write(BitConverter.ToUInt64(input.AnalogButtons' 0));  				pad.Write((short)input.ThumbLX);  				pad.Write((short)input.ThumbLY);  				pad.Write((short)input.ThumbRX);  				pad.Write((short)input.ThumbRY);  				pad.Close();    				// store new state  				SetMemory(inputState' gamepadData);    				// replace old with new  				PreviousState = input;  			}
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,GetExportTable,The following statement contains a magic number: byte[] RawExportTable = Xbox.GetMemory(TempPtr' ExportCount * 4);
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,GetExportTable,The following statement contains a magic number: uint[] ExportTable = new uint[450];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,GetExportTable,The following statement contains a magic number: for (int i = 0; i < ExportCount; i++)  				ExportTable[i + 1] = Base + BitConverter.ToUInt32(RawExportTable' i * 4);
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: AvSendTVEncoderOption = ExportTable[2];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: AvSetDisplayMode = ExportTable[3];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: AvSetSavedDataAddress = ExportTable[4];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: DbgBreakPoint = ExportTable[5];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: DbgBreakPointWithStatus = ExportTable[6];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: DbgLoadImageSymbols = ExportTable[7];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: DbgPrint = ExportTable[8];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalReadSMCTrayState = ExportTable[9];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: DbgPrompt = ExportTable[10];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: DbgUnLoadImageSymbols = ExportTable[11];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExAcquireReadWriteLockExclusive = ExportTable[12];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExAcquireReadWriteLockShared = ExportTable[13];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExAllocatePool = ExportTable[14];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExAllocatePoolWithTag = ExportTable[15];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExEventObjectType = ExportTable[16];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExFreePool = ExportTable[17];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExInitializeReadWriteLock = ExportTable[18];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExInterlockedAddLargeInteger = ExportTable[19];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExInterlockedAddLargeStatistic = ExportTable[20];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExInterlockedCompareExchange64 = ExportTable[21];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExMutantObjectType = ExportTable[22];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExQueryPoolBlockSize = ExportTable[23];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExQueryNonVolatileSetting = ExportTable[24];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExReadWriteRefurbInfo = ExportTable[25];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExRaiseException = ExportTable[26];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExRaiseStatus = ExportTable[27];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExReleaseReadWriteLock = ExportTable[28];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExSaveNonVolatileSetting = ExportTable[29];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExSemaphoreObjectType = ExportTable[30];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExTimerObjectType = ExportTable[31];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExfInterlockedInsertHeadList = ExportTable[32];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExfInterlockedInsertTailList = ExportTable[33];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ExfInterlockedRemoveHeadList = ExportTable[34];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: FscGetCacheSize = ExportTable[35];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: FscInvalidateIdleBlocks = ExportTable[36];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: FscSetCacheSize = ExportTable[37];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalClearSoftwareInterrupt = ExportTable[38];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalDisableSystemInterrupt = ExportTable[39];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IdexDiskPartitionPrefixBuffer = ExportTable[40];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalDiskModelNumber = ExportTable[41];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalDiskSerialNumber = ExportTable[42];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalEnableSystemInterrupt = ExportTable[43];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalGetInterruptVector = ExportTable[44];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalReadSMBusValue = ExportTable[45];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalReadWritePCISpace = ExportTable[46];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalRegisterShutdownNotification = ExportTable[47];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalRequestSoftwareInterrupt = ExportTable[48];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalReturnToFirmware = ExportTable[49];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalWriteSMBusValue = ExportTable[50];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: InterlockedCompareExchange = ExportTable[51];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: InterlockedDecrement = ExportTable[52];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: InterlockedIncrement = ExportTable[53];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: InterlockedExchange = ExportTable[54];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: InterlockedExchangeAdd = ExportTable[55];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: InterlockedFlushSList = ExportTable[56];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: InterlockedPopEntrySList = ExportTable[57];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: InterlockedPushEntrySList = ExportTable[58];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoAllocateIrp = ExportTable[59];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoBuildAsynchronousFsdRequest = ExportTable[60];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoBuildDeviceIoControlRequest = ExportTable[61];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoBuildSynchronousFsdRequest = ExportTable[62];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoCheckShareAccess = ExportTable[63];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoCompletionObjectType = ExportTable[64];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoCreateDevice = ExportTable[65];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoCreateFile = ExportTable[66];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoCreateSymbolicLink = ExportTable[67];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoDeleteDevice = ExportTable[68];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoDeleteSymbolicLink = ExportTable[69];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoFileObjectType = ExportTable[71];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoFreeIrp = ExportTable[72];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoInitializeIrp = ExportTable[73];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoInvalidDeviceRequest = ExportTable[74];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoQueryFileInformation = ExportTable[75];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoQueryVolumeInformation = ExportTable[76];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoQueueThreadIrp = ExportTable[77];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoRemoveShareAccess = ExportTable[78];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoSetIoCompletion = ExportTable[79];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoSetShareAccess = ExportTable[80];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoStartNextPacket = ExportTable[81];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoStartNextPacketByKey = ExportTable[82];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoStartPacket = ExportTable[83];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoSynchronousDeviceIoControlRequest = ExportTable[84];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoSynchronousFsdRequest = ExportTable[85];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IofCallDriver = ExportTable[86];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IofCompleteRequest = ExportTable[87];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KdDebuggerEnabled = ExportTable[88];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KdDebuggerNotPresent = ExportTable[89];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoDismountVolume = ExportTable[90];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoDismountVolumeByName = ExportTable[91];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeAlertResumeThread = ExportTable[92];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeAlertThread = ExportTable[93];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeBoostPriorityThread = ExportTable[94];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeBugCheck = ExportTable[95];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeBugCheckEx = ExportTable[96];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeCancelTimer = ExportTable[97];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeConnectInterrupt = ExportTable[98];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeDelayExecutionThread = ExportTable[99];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeDisconnectInterrupt = ExportTable[100];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeEnterCriticalRegion = ExportTable[101];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmGlobalData = ExportTable[102];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeGetCurrentIrql = ExportTable[103];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeGetCurrentThread = ExportTable[104];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeApc = ExportTable[105];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeDeviceQueue = ExportTable[106];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeDpc = ExportTable[107];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeEvent = ExportTable[108];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeInterrupt = ExportTable[109];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeMutant = ExportTable[110];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeQueue = ExportTable[111];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeSemaphore = ExportTable[112];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInitializeTimerEx = ExportTable[113];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInsertByKeyDeviceQueue = ExportTable[114];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInsertDeviceQueue = ExportTable[115];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInsertHeadQueue = ExportTable[116];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInsertQueue = ExportTable[117];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInsertQueueApc = ExportTable[118];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInsertQueueDpc = ExportTable[119];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeInterruptTime = ExportTable[120];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeIsExecutingDpc = ExportTable[121];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeLeaveCriticalRegion = ExportTable[122];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KePulseEvent = ExportTable[123];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeQueryBasePriorityThread = ExportTable[124];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeQueryInterruptTime = ExportTable[125];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeQueryPerformanceCounter = ExportTable[126];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeQueryPerformanceFrequency = ExportTable[127];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeQuerySystemTime = ExportTable[128];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRaiseIrqlToDpcLevel = ExportTable[129];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRaiseIrqlToSynchLevel = ExportTable[130];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeReleaseMutant = ExportTable[131];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeReleaseSemaphore = ExportTable[132];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRemoveByKeyDeviceQueue = ExportTable[133];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRemoveDeviceQueue = ExportTable[134];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRemoveEntryDeviceQueue = ExportTable[135];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRemoveQueue = ExportTable[136];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRemoveQueueDpc = ExportTable[137];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeResetEvent = ExportTable[138];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRestoreFloatingPointState = ExportTable[139];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeResumeThread = ExportTable[140];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeRundownQueue = ExportTable[141];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSaveFloatingPointState = ExportTable[142];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSetBasePriorityThread = ExportTable[143];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSetDisableBoostThread = ExportTable[144];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSetEvent = ExportTable[145];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSetEventBoostPriority = ExportTable[146];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSetPriorityProcess = ExportTable[147];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSetPriorityThread = ExportTable[148];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSetTimer = ExportTable[149];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSetTimerEx = ExportTable[150];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeStallExecutionProcessor = ExportTable[151];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSuspendThread = ExportTable[152];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSynchronizeExecution = ExportTable[153];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeSystemTime = ExportTable[154];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeTestAlertThread = ExportTable[155];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeTickCount = ExportTable[156];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeTimeIncrement = ExportTable[157];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeWaitForMultipleObjects = ExportTable[158];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KeWaitForSingleObject = ExportTable[159];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KfRaiseIrql = ExportTable[160];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KfLowerIrql = ExportTable[161];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KiBugCheckData = ExportTable[162];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: KiUnlockDispatcherDatabase = ExportTable[163];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: LaunchDataPage = ExportTable[164];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmAllocateContiguousMemory = ExportTable[165];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmAllocateContiguousMemoryEx = ExportTable[166];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmAllocateSystemMemory = ExportTable[167];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmClaimGpuInstanceMemory = ExportTable[168];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmCreateKernelStack = ExportTable[169];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmDeleteKernelStack = ExportTable[170];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmFreeContiguousMemory = ExportTable[171];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmFreeSystemMemory = ExportTable[172];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmGetPhysicalAddress = ExportTable[172];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmIsAddressValid = ExportTable[174];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmLockUnlockBufferPages = ExportTable[175];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmLockUnlockPhysicalPage = ExportTable[176];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmMapIoSpace = ExportTable[177];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmPersistContiguousMemory = ExportTable[178];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmQueryAddressProtect = ExportTable[179];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmQueryAllocationSize = ExportTable[180];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmQueryStatistics = ExportTable[181];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmSetAddressProtect = ExportTable[182];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmUnmapIoSpace = ExportTable[183];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtAllocateVirtualMemory = ExportTable[184];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtCancelTimer = ExportTable[185];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtClearEvent = ExportTable[186];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtClose = ExportTable[187];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtCreateDirectoryObject = ExportTable[188];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtCreateEvent = ExportTable[189];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtCreateFile = ExportTable[190];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtCreateIoCompletion = ExportTable[191];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtCreateMutant = ExportTable[192];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtCreateSemaphore = ExportTable[193];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtCreateTimer = ExportTable[194];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtDeleteFile = ExportTable[195];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtDeviceIoControlFile = ExportTable[196];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtDuplicateObject = ExportTable[197];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtFlushBuffersFile = ExportTable[198];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtFreeVirtualMemory = ExportTable[199];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtFsControlFile = ExportTable[200];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtOpenDirectoryObject = ExportTable[201];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtOpenFile = ExportTable[202];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtOpenSymbolicLinkObject = ExportTable[203];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtProtectVirtualMemory = ExportTable[204];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtPulseEvent = ExportTable[205];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueueApcThread = ExportTable[206];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryDirectoryFile = ExportTable[207];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryDirectoryObject = ExportTable[208];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryEvent = ExportTable[209];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryFullAttributesFile = ExportTable[210];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryInformationFile = ExportTable[211];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryIoCompletion = ExportTable[212];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryMutant = ExportTable[213];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQuerySemaphore = ExportTable[214];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQuerySymbolicLinkObject = ExportTable[215];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryTimer = ExportTable[216];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryVirtualMemory = ExportTable[217];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtQueryVolumeInformationFile = ExportTable[218];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtReadFile = ExportTable[219];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtReadFileScatter = ExportTable[220];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtReleaseMutant = ExportTable[221];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtReleaseSemaphore = ExportTable[222];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtRemoveIoCompletion = ExportTable[223];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtResumeThread = ExportTable[224];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtSetEvent = ExportTable[225];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtSetInformationFile = ExportTable[226];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtSetIoCompletion = ExportTable[227];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtSetSystemTime = ExportTable[228];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtSetTimerEx = ExportTable[229];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtSignalAndWaitForSingleObjectEx = ExportTable[230];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtSuspendThread = ExportTable[231];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtUserIoApcDispatcher = ExportTable[232];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtWaitForSingleObject = ExportTable[233];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtWaitForSingleObjectEx = ExportTable[234];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtWaitForMultipleObjectsEx = ExportTable[235];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtWriteFile = ExportTable[236];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtWriteFileGather = ExportTable[237];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: NtYieldExecution = ExportTable[238];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObCreateObject = ExportTable[239];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObDirectoryObjectType = ExportTable[240];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObInsertObject = ExportTable[241];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObMakeTemporaryObject = ExportTable[242];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObOpenObjectByName = ExportTable[243];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObOpenObjectByPointer = ExportTable[244];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObpObjectHandleTable = ExportTable[245];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObReferenceObjectByHandle = ExportTable[246];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObReferenceObjectByName = ExportTable[247];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObReferenceObjectByPointer = ExportTable[248];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObSymbolicLinkObjectType = ExportTable[249];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObfDereferenceObject = ExportTable[250];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: ObfReferenceObject = ExportTable[251];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: PhyGetLinkState = ExportTable[252];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: PhyInitialize = ExportTable[253];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: PsCreateSystemThread = ExportTable[254];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: PsCreateSystemThreadEx = ExportTable[255];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: PsQueryStatistics = ExportTable[256];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: PsSetCreateThreadNotifyRoutine = ExportTable[257];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: PsTerminateSystemThread = ExportTable[258];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: PsThreadObjectType = ExportTable[259];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlAnsiStringToUnicodeString = ExportTable[260];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlAppendStringToString = ExportTable[261];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlAppendUnicodeStringToString = ExportTable[262];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlAppendUnicodeToString = ExportTable[263];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlAssert = ExportTable[264];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCaptureContext = ExportTable[265];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCaptureStackBackTrace = ExportTable[266];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCharToInteger = ExportTable[267];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCompareMemory = ExportTable[268];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCompareMemoryUlong = ExportTable[269];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCompareString = ExportTable[270];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCompareUnicodeString = ExportTable[271];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCopyString = ExportTable[272];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCopyUnicodeString = ExportTable[273];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlCreateUnicodeString = ExportTable[274];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlDowncaseUnicodeChar = ExportTable[275];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlDowncaseUnicodeString = ExportTable[276];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlEnterCriticalSection = ExportTable[277];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlEnterCriticalSectionAndRegion = ExportTable[278];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlEqualString = ExportTable[279];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlEqualUnicodeString = ExportTable[280];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlExtendedIntegerMultiply = ExportTable[281];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlExtendedLargeIntegerDivide = ExportTable[282];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlExtendedMagicDivide = ExportTable[283];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlFillMemory = ExportTable[284];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlFillMemoryUlong = ExportTable[285];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlFreeAnsiString = ExportTable[286];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlGetCallersAddress = ExportTable[288];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlInitAnsiString = ExportTable[289];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlInitUnicodeString = ExportTable[290];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlInitializeCriticalSection = ExportTable[291];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlIntegerToChar = ExportTable[292];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlIntegerToUnicodeString = ExportTable[293];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlLeaveCriticalSection = ExportTable[294];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlLeaveCriticalSectionAndRegion = ExportTable[295];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlLowerChar = ExportTable[296];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlMapGenericMask = ExportTable[297];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlMoveMemory = ExportTable[298];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlMultiByteToUnicodeN = ExportTable[299];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlMultiByteToUnicodeSize = ExportTable[300];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlNtStatusToDosError = ExportTable[301];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlRaiseException = ExportTable[302];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlRaiseStatus = ExportTable[303];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlTimeFieldsToTime = ExportTable[304];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlTimeToTimeFields = ExportTable[305];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlTryEnterCriticalSection = ExportTable[306];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUlongByteSwap = ExportTable[307];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUnicodeStringToAnsiString = ExportTable[308];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUnicodeStringToInteger = ExportTable[309];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUnicodeToMultiByteN = ExportTable[310];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUnicodeToMultiByteSize = ExportTable[311];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUnwind = ExportTable[312];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUpcaseUnicodeChar = ExportTable[313];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUpcaseUnicodeString = ExportTable[314];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUpcaseUnicodeToMultiByteN = ExportTable[315];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUpperChar = ExportTable[316];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUpperString = ExportTable[317];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlUshortByteSwap = ExportTable[318];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlWalkFrameChain = ExportTable[319];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlZeroMemory = ExportTable[320];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XboxEEPROMKey = ExportTable[321];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HardwareInfo = ExportTable[322];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XboxHDKey = ExportTable[323];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XboxKrnlVersion = ExportTable[324];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XboxSignatureKey = ExportTable[325];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XeImageFileName = ExportTable[326];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XeLoadSection = ExportTable[327];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XeUnloadSection = ExportTable[328];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: READ_PORT_BUFFER_UCHAR = ExportTable[329];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: READ_PORT_BUFFER_USHORT = ExportTable[330];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: READ_PORT_BUFFER_ULONG = ExportTable[331];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: WRITE_PORT_BUFFER_UCHAR = ExportTable[332];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: WRITE_PORT_BUFFER_USHORT = ExportTable[333];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: WRITE_PORT_BUFFER_ULONG = ExportTable[334];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcSHAInit = ExportTable[335];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcSHAUpdate = ExportTable[336];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcSHAFinal = ExportTable[337];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcRC4Key = ExportTable[338];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcRC4Crypt = ExportTable[339];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcHMAC = ExportTable[340];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcPKEncPublic = ExportTable[341];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcPKDecPrivate = ExportTable[342];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcPKGetKeyLen = ExportTable[343];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcVerifyPKCS1Signature = ExportTable[344];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcModExp = ExportTable[345];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcDESKeyParity = ExportTable[346];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcKeyTable = ExportTable[347];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcBlockCrypt = ExportTable[348];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcBlockCryptCBC = ExportTable[349];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcCryptService = ExportTable[350];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XcUpdateCrypto = ExportTable[351];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: RtlRip = ExportTable[352];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XboxLANKey = ExportTable[353];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XboxAlternateSignatureKeys = ExportTable[354];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: XePublicKeyData = ExportTable[355];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalBootSMCVideoMode = ExportTable[356];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IdexChannelObject = ExportTable[357];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalIsResetOrShutdownPending = ExportTable[358];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: IoMarkIrpMustComplete = ExportTable[359];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalInitiateShutdown = ExportTable[360];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: snprintf = ExportTable[361];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: sprintf = ExportTable[362];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: vsnprintf = ExportTable[363];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: vsprintf = ExportTable[364];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalEnableSecureTrayEject = ExportTable[365];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: HalWriteSMCScratchRegister = ExportTable[366];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmDbgAllocateMemory = ExportTable[374];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmDbgFreeMemory = ExportTable[375];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmDbgQueryAvailablePages = ExportTable[376];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmDbgReleaseAddress = ExportTable[377];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,InitializeKernelExports,The following statement contains a magic number: MmDbgWriteCheck = ExportTable[378];
Magic Number,YeloDebug,XboxKernel,C:\repos\troymac1ure_Entity\YeloDebug\XboxKernel.cs,GetExportAddress,The following statement contains a magic number: addr = Xbox.GetUInt32(addr + (ordinal - 1) * 4);
Missing Default,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Reboot,The following switch statement is missing a default case: switch (flag)  			{  				case BootFlag.Cold:		SendCommand("reboot");			break;  				case BootFlag.Warm:		SendCommand("reboot warm");		break;  				case BootFlag.NoDebug:	SendCommand("reboot nodebug");	break;  				case BootFlag.Wait:		SendCommand("reboot wait");		break;  				case BootFlag.Stop:		SendCommand("reboot stop");		break;  				case BootFlag.Current:  					FlushSocketBuffer();                      connection.Client.Send(ASCIIEncoding.ASCII.GetBytes("magicboot title=\"" + XbeInfo.LaunchPath + "\" debug" + Environment.NewLine));                      if (connection.Available > 0)                          connection.Client.Receive(new byte[connection.Available]);  					break;  			}
Missing Default,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,Wait,The following switch statement is missing a default case: switch (type)  			{  				case WaitType.Partial:  					while (connection.Available == 0)  					{  						Thread.Sleep(0);  						elapse = DateTime.Now - before;                          if (elapse.TotalMilliseconds > timeout)                          {                              Disconnect();                              throw new TimeoutException("Operation timed out.");                          }  					}  					break;    				case WaitType.Full:    					// do a partial wait first  					while (connection.Available == 0)  					{  						Thread.Sleep(0);  						elapse = DateTime.Now - before;                          if (elapse.TotalMilliseconds > timeout)                          {                              Disconnect();                              throw new TimeoutException("Operation timed out.");                          }  					}    					// wait for rest of data to be received  					int avail = connection.Available;  					while (connection.Available != avail)  					{  						avail = connection.Available;  						Thread.Sleep(0);  					}  					break;  			}
Missing Default,YeloDebug,Xbox,C:\repos\troymac1ure_Entity\YeloDebug\Xbox.cs,MountDevice,The following switch statement is missing a default case: switch (device)              {                  case Device.CDRom: deviceName = "\\Device\\CdRom0"; break;                  case Device.DriveC: deviceName = "\\Device\\Harddisk0\\Partition2"; break;                  case Device.DriveE: deviceName = "\\Device\\Harddisk0\\Partition1"; break;                  case Device.DriveF: deviceName = "\\Device\\Harddisk0\\Partition6"; break;                  //case Device.DriveG: deviceName = "\\Device\\Harddisk0\\Partition7"; break;    // seems to be disabled in debug bios                  //case Device.DriveH: deviceName = "\\Device\\Harddisk0\\Partition8"; break;    // seems to be disabled in debug bios                  case Device.DriveX: deviceName = "\\Device\\Harddisk0\\Partition3"; break;                  case Device.DriveY: deviceName = "\\Device\\Harddisk0\\Partition4"; break;                  case Device.DriveZ: deviceName = "\\Device\\Harddisk0\\Partition5"; break;              }
