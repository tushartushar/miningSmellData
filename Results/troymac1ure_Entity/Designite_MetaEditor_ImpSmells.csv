Implementation smell,Namespace,Class,File,Method,Description
Long Method,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The method has 469 lines of code.
Long Method,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Indices,The method has 114 lines of code.
Long Method,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,GetItems,The method has 142 lines of code.
Long Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The method has 503 lines of code.
Long Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The method has 187 lines of code.
Long Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The method has 239 lines of code.
Long Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The method has 157 lines of code.
Long Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The method has 216 lines of code.
Long Method,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The method has 163 lines of code.
Long Method,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The method has 360 lines of code.
Long Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The method has 149 lines of code.
Long Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,EntItemsTreeView_AfterSelect,The method has 107 lines of code.
Long Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,UpdateIndices,The method has 105 lines of code.
Long Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttSaveCurrentItem_Click,The method has 113 lines of code.
Long Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The method has 131 lines of code.
Long Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The method has 809 lines of code.
Long Method,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The method has 134 lines of code.
Long Method,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,LoadENTControls,The method has 496 lines of code.
Long Method,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The method has 259 lines of code.
Complex Method,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Save,Cyclomatic complexity of the method is 8
Complex Method,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,MakeControls,Cyclomatic complexity of the method is 10
Complex Method,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Populate,Cyclomatic complexity of the method is 10
Complex Method,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Save,Cyclomatic complexity of the method is 10
Complex Method,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,Save,Cyclomatic complexity of the method is 8
Complex Method,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,UpdateComboBox,Cyclomatic complexity of the method is 8
Complex Method,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Indices,Cyclomatic complexity of the method is 16
Complex Method,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,Cyclomatic complexity of the method is 13
Complex Method,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Populate,Cyclomatic complexity of the method is 9
Complex Method,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Save,Cyclomatic complexity of the method is 15
Complex Method,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,GetItems,Cyclomatic complexity of the method is 22
Complex Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,Cyclomatic complexity of the method is 62
Complex Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,PokeRecursively,Cyclomatic complexity of the method is 8
Complex Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,SaveRecursively,Cyclomatic complexity of the method is 10
Complex Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,SetFocusRecursively,Cyclomatic complexity of the method is 10
Complex Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadMetaIntoControlsForThisReflexive,Cyclomatic complexity of the method is 12
Complex Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,Cyclomatic complexity of the method is 29
Complex Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,Cyclomatic complexity of the method is 22
Complex Method,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,Cyclomatic complexity of the method is 22
Complex Method,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,SIDLoader_DropDown,Cyclomatic complexity of the method is 8
Complex Method,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,Cyclomatic complexity of the method is 24
Complex Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,Cyclomatic complexity of the method is 22
Complex Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,EntItemsTreeView_AfterSelect,Cyclomatic complexity of the method is 14
Complex Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,UpdateIndices,Cyclomatic complexity of the method is 17
Complex Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttItemDelete_Click,Cyclomatic complexity of the method is 8
Complex Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttSaveCurrentItem_Click,Cyclomatic complexity of the method is 12
Complex Method,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,Cyclomatic complexity of the method is 10
Complex Method,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,textBox1_KeyDown,Cyclomatic complexity of the method is 13
Complex Method,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,ReloadMetaForSameTagType,Cyclomatic complexity of the method is 11
Complex Method,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,LoadENTControls,Cyclomatic complexity of the method is 59
Complex Method,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,PokeRecursively,Cyclomatic complexity of the method is 8
Complex Method,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,SaveRecursively,Cyclomatic complexity of the method is 10
Complex Method,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,SetFocusRecursively,Cyclomatic complexity of the method is 9
Long Parameter List,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Bitmask,The method has 6 parameters. Parameters: iEntName' map' iOffsetInChunk' iBitCount' ioptions' iLineNumber
Long Parameter List,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,DataValues,The method has 5 parameters. Parameters: iEntName' map' iOffsetInChunk' type' iLineNumber
Long Parameter List,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,EntStrings,The method has 6 parameters. Parameters: iEntName' map' iOffsetInChunk' ilength' itype' iLineNumber
Long Parameter List,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Enums,The method has 6 parameters. Parameters: iEntName' map' iOffsetInChunk' iType' ioptions' iLineNumber
Long Parameter List,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,Ident,The method has 5 parameters. Parameters: iEntName' map' iOffsetInChunk' idoesHaveTagType' iLineNumber
Long Parameter List,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Indices,The method has 5 parameters. Parameters: iEntName' map' iOffsetInChunk' iValueType' iIndex
Long Parameter List,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,ReflexiveControl,The method has 5 parameters. Parameters: map' offset' iHasChunkCount' iLineNumber' me
Long Parameter List,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The method has 6 parameters. Parameters: reflexive' entArray' clearControls' layer' tabIndex' customPluginPath
Long Parameter List,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,getDataOf,The method has 5 parameters. Parameters: cntl' name' size' chunkoffset' lineNum
Long Parameter List,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,SetVariables,The method has 6 parameters. Parameters: Stred' Stblue' Stgreen' Shred' Shblue' Shgreen
Long Identifier,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,,The length of the parameter indexedReflexiveTranslatedOffset is 32.
Long Identifier,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,tempComboBox_KeyPress,The length of the parameter ReflexiveChunkSelectionBoxItemLength is 36.
Long Statement,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,brightnessPictureBox_Paint,The length of the statement  "            e.Graphics.DrawRectangle(Pens.White' 0' e.Graphics.VisibleClipBounds.Height - (hsvColor.value * e.Graphics.VisibleClipBounds.Height / 100) - 1' brightnessBitmap.Width - 3' 3); " is 175.
Long Statement,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The length of the statement  "            this.LabEntString.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 148.
Long Statement,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,UpdateValue,The length of the statement  "            // if some n00b (read xbox7887) decided to type something stupid into the enum box' here we just test to see if it'll work. " is 123.
Long Statement,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The length of the statement  "            this.comboBox1.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The length of the statement  "                // ((System.Windows.Forms.ComboBox)panelControl.Controls[controlIndexer]).Items.Add(counter.ToString() + " : " + tempvalue.ToString()); " is 135.
Long Statement,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The length of the statement  "            // ((System.Windows.Forms.ComboBox)panelControl.Controls[controlIndexer]).Text = ((System.Windows.Forms.ComboBox)this.Controls[controlIndexer]).Items[0].ToString(); " is 164.
Long Statement,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The length of the statement  "                    if (BN is Entity.TagRefNode) Value = "[" + ((TagRefNode)BN).TagType.ToString().PadLeft(4) + "] " + ((TagRefNode)BN).TagPath.ToString(); " is 135.
Long Statement,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The length of the statement  "                    if (MessageBox.Show("This will change all the \"" + BN.Name + "\" values within the \"" + BNP.Name + "\" reflexive to \"" + Value + "\".\nThis cannot be undone' continue?"' "Floodfill Values?"' MessageBoxButtons.YesNo) == DialogResult.No) " is 238.
Long Statement,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The length of the statement  "            this.comboBox1.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The length of the statement  "            this.labelOrigType.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Italic' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The length of the statement  "                    parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Byte' parent.lineNum)); " is 137.
Long Statement,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The length of the statement  "                    parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Short' parent.lineNum)); " is 138.
Long Statement,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The length of the statement  "                    parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Int' parent.lineNum)); " is 136.
Long Statement,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The length of the statement  "                    parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Float' parent.lineNum)); " is 138.
Long Statement,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,EntItemsTreeView_AfterSelect,The length of the statement  "            // ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType = (IFPIO.ObjectEnum)System.Enum.Parse(typeof(IFPIO.ObjectEnum)' this.combType.Text); " is 136.
Long Statement,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttAddItemBeforeSelected_Click,The length of the statement  "                    "Adding to the first element is disabled atm' please wait until a working version is released to add to the beginning of the plugin"); " is 134.
Long Statement,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The length of the statement  "            // ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType = (IFPIO.ObjectEnum)System.Enum.Parse(typeof(IFPIO.ObjectEnum)' this.combType.Text); " is 136.
Long Statement,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The length of the statement  "                            string.Empty' string.Empty' string.Empty' ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType.ToString()' string.Empty' lineNumber); " is 129.
Long Statement,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The length of the statement  "            this.EntItemsTreeView.NodeMouseDoubleClick += new System.Windows.Forms.TreeNodeMouseClickEventHandler(this.EntItemsTreeView_NodeMouseDoubleClick); " is 146.
Long Statement,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The length of the statement  "            this.textBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 141.
Long Statement,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The length of the statement  "            this.label2.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 141.
Long Statement,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The length of the statement  "            this.listBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 143.
Long Statement,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The length of the statement  "            this.checkBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MetaEditor)); " is 130.
Complex Conditional,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The conditional expression  "tempstring1.Contains(" Is Invalid. On Line ") || tempstring1.Contains("Something is wrong with this ") ||                  tempstring1.Contains(" : Value is Too Small To Be An Index") ||                  tempstring1.Contains(" : Value is Too Large To Be The Indexer")"  is complex.
Complex Conditional,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Save,The conditional expression  "tempstring1.Contains(" Is Invalid. On Line ") || tempstring1.Contains("Something is wrong with this ") ||                  tempstring1.Contains(" : Value is Too Small To Be An Index") ||                  tempstring1.Contains(" : Value is Too Large To Be The Indexer")"  is complex.
Complex Conditional,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The conditional expression  "(MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt)"  is complex.
Complex Conditional,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The conditional expression  "(MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte)"  is complex.
Complex Conditional,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,LoadENTControls,The conditional expression  "(ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                          (ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                          (ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                          (ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt)"  is complex.
Complex Conditional,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,LoadENTControls,The conditional expression  "(ShowBlockIndex32s == false &&                                           (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                            tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                          (ShowBlockIndex16s == false &&                                           (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                            tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                          (ShowBlockIndex8s == false && tempbase.ObjectType == IFPIO.ObjectEnum.Byte)"  is complex.
Empty Catch Block,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,txtBRed_TextChanged,The method has an empty catch block.
Empty Catch Block,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The method has an empty catch block.
Empty Catch Block,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,UpdateValue,The method has an empty catch block.
Empty Catch Block,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The method has an empty catch block.
Empty Catch Block,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,toolStripButton2_Click,The method has an empty catch block.
Empty Catch Block,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,ReadPlugin,The method has an empty catch block.
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,HSVtoRGB,The following statement contains a magic number: h = ((double)HSV.Hue) % 360;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,HSVtoRGB,The following statement contains a magic number: s = (double)HSV.Saturation / 100;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,HSVtoRGB,The following statement contains a magic number: v = (double)HSV.value / 100;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,HSVtoRGB,The following statement contains a magic number: return new RGB((int)(r * 255)' (int)(g * 255)' (int)(b * 255));
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,HSVtoRGB,The following statement contains a magic number: return new RGB((int)(r * 255)' (int)(g * 255)' (int)(b * 255));
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,HSVtoRGB,The following statement contains a magic number: return new RGB((int)(r * 255)' (int)(g * 255)' (int)(b * 255));
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: double r = (double)RGB.Red * (RGB.Alpha / 255f) / 255;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: double r = (double)RGB.Red * (RGB.Alpha / 255f) / 255;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: double g = (double)RGB.Green * (RGB.Alpha / 255f) / 255;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: double g = (double)RGB.Green * (RGB.Alpha / 255f) / 255;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: double b = (double)RGB.Blue * (RGB.Alpha / 255f) / 255;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: double b = (double)RGB.Blue * (RGB.Alpha / 255f) / 255;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: h *= 60;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: h += 360;
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: return new HSV((int)h' (int)(s * 100)' (int)(v * 100));
Magic Number,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGBtoHSV,The following statement contains a magic number: return new HSV((int)h' (int)(s * 100)' (int)(v * 100));
Magic Number,MetaEditor.ColorShifting,RGB,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,RGB,The following statement contains a magic number: Alpha = 255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,SetStartingColorPreview,The following statement contains a magic number: this.labStartingColorPreview.BackColor = Color.FromArgb(                  255' hScrlBRed.Value' hScrlBGreen.Value' hScrlBBlue.Value);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,UpdateLayersPreview,The following statement contains a magic number: this.Controls[counter].BackColor = Color.FromArgb(                      255'                      ShiftColors.Shifter(incrementer' hScrlBRedToShift.Value' hScrlBRed.Value)'                      ShiftColors.Shifter(incrementer' hScrlBGreenToShift.Value' hScrlBGreen.Value)'                      ShiftColors.Shifter(incrementer' hScrlBBlueToShift.Value' hScrlBBlue.Value));
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRed.Location = new System.Drawing.Point(105' 29);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRed.Location = new System.Drawing.Point(105' 29);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRed.Maximum = 255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRed.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRed.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlue.Location = new System.Drawing.Point(105' 81);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlue.Location = new System.Drawing.Point(105' 81);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlue.Maximum = 255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlue.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlue.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreen.Location = new System.Drawing.Point(105' 55);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreen.Location = new System.Drawing.Point(105' 55);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreen.Maximum = 255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreen.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreen.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreen.TabIndex = 2;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBRed.Location = new System.Drawing.Point(217' 26);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBRed.Location = new System.Drawing.Point(217' 26);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBRed.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBRed.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBRed.TabIndex = 3;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBGreen.Location = new System.Drawing.Point(217' 52);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBGreen.Location = new System.Drawing.Point(217' 52);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBGreen.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBGreen.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBGreen.TabIndex = 4;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBBlue.Location = new System.Drawing.Point(217' 78);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBBlue.Location = new System.Drawing.Point(217' 78);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBBlue.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBBlue.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtBBlue.TabIndex = 5;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 29);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 29);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(81' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(81' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 6;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(12' 81);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(12' 81);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(82' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(82' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 7;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(12' 55);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(12' 55);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(90' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(90' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 8;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labStartingColorPreview.Location = new System.Drawing.Point(267' 26);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labStartingColorPreview.Location = new System.Drawing.Point(267' 26);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labStartingColorPreview.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labStartingColorPreview.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labStartingColorPreview.TabIndex = 9;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(295' 55);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(295' 55);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(76' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(76' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 18;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(295' 81);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(295' 81);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(68' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(68' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label6.TabIndex = 17;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(295' 29);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(295' 29);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(67' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(67' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label7.TabIndex = 16;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbBlueToShift.Location = new System.Drawing.Point(486' 78);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbBlueToShift.Location = new System.Drawing.Point(486' 78);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbBlueToShift.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbBlueToShift.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbBlueToShift.TabIndex = 15;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbGreenToShift.Location = new System.Drawing.Point(486' 52);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbGreenToShift.Location = new System.Drawing.Point(486' 52);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbGreenToShift.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbGreenToShift.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbGreenToShift.TabIndex = 14;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbRedToShift.Location = new System.Drawing.Point(486' 26);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbRedToShift.Location = new System.Drawing.Point(486' 26);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbRedToShift.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbRedToShift.Size = new System.Drawing.Size(44' 20);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.txtbRedToShift.TabIndex = 13;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreenToShift.Location = new System.Drawing.Point(374' 51);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreenToShift.Location = new System.Drawing.Point(374' 51);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreenToShift.Maximum = 255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreenToShift.Minimum = -255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreenToShift.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreenToShift.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBGreenToShift.TabIndex = 12;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlueToShift.Location = new System.Drawing.Point(374' 77);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlueToShift.Location = new System.Drawing.Point(374' 77);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlueToShift.Maximum = 255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlueToShift.Minimum = -255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlueToShift.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlueToShift.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBBlueToShift.TabIndex = 11;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRedToShift.Location = new System.Drawing.Point(374' 25);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRedToShift.Location = new System.Drawing.Point(374' 25);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRedToShift.Maximum = 255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRedToShift.Minimum = -255;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRedToShift.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRedToShift.Size = new System.Drawing.Size(109' 17);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.hScrlBRedToShift.TabIndex = 10;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers1.Location = new System.Drawing.Point(12' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers1.Location = new System.Drawing.Point(12' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers1.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers1.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers1.TabIndex = 19;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers2.Location = new System.Drawing.Point(40' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers2.Location = new System.Drawing.Point(40' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers2.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers2.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers2.TabIndex = 20;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers3.Location = new System.Drawing.Point(68' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers3.Location = new System.Drawing.Point(68' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers3.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers3.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers3.TabIndex = 21;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers4.Location = new System.Drawing.Point(96' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers4.Location = new System.Drawing.Point(96' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers4.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers4.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers4.TabIndex = 22;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers5.Location = new System.Drawing.Point(124' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers5.Location = new System.Drawing.Point(124' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers5.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers5.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers5.TabIndex = 23;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers6.Location = new System.Drawing.Point(152' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers6.Location = new System.Drawing.Point(152' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers6.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers6.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers6.TabIndex = 24;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers7.Location = new System.Drawing.Point(180' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers7.Location = new System.Drawing.Point(180' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers7.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers7.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers7.TabIndex = 25;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers8.Location = new System.Drawing.Point(208' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers8.Location = new System.Drawing.Point(208' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers8.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers8.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers8.TabIndex = 26;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers9.Location = new System.Drawing.Point(236' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers9.Location = new System.Drawing.Point(236' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers9.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers9.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers9.TabIndex = 27;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers10.Location = new System.Drawing.Point(264' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers10.Location = new System.Drawing.Point(264' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers10.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers10.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers10.TabIndex = 28;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers11.Location = new System.Drawing.Point(292' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers11.Location = new System.Drawing.Point(292' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers11.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers11.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers11.TabIndex = 29;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers12.Location = new System.Drawing.Point(320' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers12.Location = new System.Drawing.Point(320' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers12.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers12.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers12.TabIndex = 30;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers13.Location = new System.Drawing.Point(348' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers13.Location = new System.Drawing.Point(348' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers13.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers13.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers13.TabIndex = 31;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers14.Location = new System.Drawing.Point(376' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers14.Location = new System.Drawing.Point(376' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers14.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers14.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers14.TabIndex = 32;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers15.Location = new System.Drawing.Point(404' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers15.Location = new System.Drawing.Point(404' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers15.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers15.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers15.TabIndex = 33;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers16.Location = new System.Drawing.Point(432' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers16.Location = new System.Drawing.Point(432' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers16.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers16.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers16.TabIndex = 34;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers17.Location = new System.Drawing.Point(460' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers17.Location = new System.Drawing.Point(460' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers17.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers17.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers17.TabIndex = 35;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers18.Location = new System.Drawing.Point(488' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers18.Location = new System.Drawing.Point(488' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers18.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers18.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers18.TabIndex = 36;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers19.Location = new System.Drawing.Point(516' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers19.Location = new System.Drawing.Point(516' 124);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers19.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers19.Size = new System.Drawing.Size(22' 72);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.labLayers19.TabIndex = 37;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttSave.Location = new System.Drawing.Point(374' 207);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttSave.Location = new System.Drawing.Point(374' 207);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttSave.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttSave.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttSave.TabIndex = 38;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.Location = new System.Drawing.Point(463' 207);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.Location = new System.Drawing.Point(463' 207);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.TabIndex = 39;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(176' 101);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(176' 101);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(186' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(186' 13);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 40;
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(547' 242);
Magic Number,MetaEditor.ColorShifting,ColorShifting,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorShifting.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(547' 242);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Bitmask,The following statement contains a magic number: this.label1.Left -= iBitCount.ToString().Length * 8;
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Poke,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.value)' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Poke,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.value)' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Poke,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.value)' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Poke,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.value)' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Poke,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.value)' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Poke,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.value)' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Populate,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          this.value = map.BR.ReadByte();                          break;                      }                    case 16:                      {                          this.value = map.BR.ReadUInt16();                          break;                      }                    case 32:                      {                          this.value = map.BR.ReadUInt32();                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Populate,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          this.value = map.BR.ReadByte();                          break;                      }                    case 16:                      {                          this.value = map.BR.ReadUInt16();                          break;                      }                    case 32:                      {                          this.value = map.BR.ReadUInt32();                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Populate,The following statement contains a magic number: switch (this.bitCount)              {                  case 8:                      {                          this.value = map.BR.ReadByte();                          break;                      }                    case 16:                      {                          this.value = map.BR.ReadUInt16();                          break;                      }                    case 32:                      {                          this.value = map.BR.ReadUInt32();                          break;                      }              }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Save,The following statement contains a magic number: switch (this.bitCount)                  {                      case 8:                          {                              map.BW.Write(Convert.ToByte(this.value));                              break;                          }                        case 16:                          {                              map.BW.Write(Convert.ToUInt16(this.value));                              break;                          }                        case 32:                          {                              map.BW.Write(Convert.ToUInt32(this.value));                              break;                          }                  }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Save,The following statement contains a magic number: switch (this.bitCount)                  {                      case 8:                          {                              map.BW.Write(Convert.ToByte(this.value));                              break;                          }                        case 16:                          {                              map.BW.Write(Convert.ToUInt16(this.value));                              break;                          }                        case 32:                          {                              map.BW.Write(Convert.ToUInt32(this.value));                              break;                          }                  }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Save,The following statement contains a magic number: switch (this.bitCount)                  {                      case 8:                          {                              map.BW.Write(Convert.ToByte(this.value));                              break;                          }                        case 16:                          {                              map.BW.Write(Convert.ToUInt16(this.value));                              break;                          }                        case 32:                          {                              map.BW.Write(Convert.ToUInt32(this.value));                              break;                          }                  }
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,MakeControls,The following statement contains a magic number: tempcheckBox1.Size = new Size(80' 17);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,MakeControls,The following statement contains a magic number: tempcheckBox1.Size = new Size(80' 17);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,MakeControls,The following statement contains a magic number: int down = 19;
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,MakeControls,The following statement contains a magic number: int over = 6;
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,MakeControls,The following statement contains a magic number: down += 23;
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,MakeControls,The following statement contains a magic number: over = 6;
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,MakeControls,The following statement contains a magic number: (CounterForPlacementKeeping + 1) % 3 == 0
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,getLongestName,The following statement contains a magic number: this.optionNamePadding = this.checkBox1.PreferredSize.Width + 5;
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(3' 3);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(3' 3);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(92' 59);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(92' 59);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(6' 19);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(6' 19);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(80' 17);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(80' 17);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(120' 12);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(120' 12);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(44' 13);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(44' 13);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 2;
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(167' 69);
Magic Number,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(167' 69);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,updateBox,The following statement contains a magic number: alphaText.Text = (this.color.Alpha / 255f).ToString();
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,updateBox,The following statement contains a magic number: redText.Text = (this.color.Red / 255f).ToString();
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,updateBox,The following statement contains a magic number: greenText.Text = (this.color.Green / 255f).ToString();
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,updateBox,The following statement contains a magic number: blueText.Text = (this.color.Blue / 255f).ToString();
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GetCirclePoints,The following statement contains a magic number: float theta = (i / (float)colorTesselation) * 2 * (float)Math.PI;
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The following statement contains a magic number: this.color.Alpha = Math.Max(0' Math.Min(255' (int)(float.Parse(c.Text) * 255)));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The following statement contains a magic number: this.color.Alpha = Math.Max(0' Math.Min(255' (int)(float.Parse(c.Text) * 255)));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The following statement contains a magic number: this.color.Red = Math.Max(0' Math.Min(255' (int)(float.Parse(c.Text) * 255)));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The following statement contains a magic number: this.color.Red = Math.Max(0' Math.Min(255' (int)(float.Parse(c.Text) * 255)));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The following statement contains a magic number: this.color.Green = Math.Max(0' Math.Min(255' (int)(float.Parse(c.Text) * 255)));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The following statement contains a magic number: this.color.Green = Math.Max(0' Math.Min(255' (int)(float.Parse(c.Text) * 255)));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The following statement contains a magic number: this.color.Blue = Math.Max(0' Math.Min(255' (int)(float.Parse(c.Text) * 255)));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,Control_TextChanged,The following statement contains a magic number: this.color.Blue = Math.Max(0' Math.Min(255' (int)(float.Parse(c.Text) * 255)));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,DrawBar,The following statement contains a magic number: PointF[] points = new PointF[2];
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,DrawBar,The following statement contains a magic number: points[i].X = width / 2;
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,DrawBar,The following statement contains a magic number: ColorHandler.HSV col = new ColorHandler.HSV(hsvColor.Hue' hsvColor.Saturation' 100);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,DrawWheel,The following statement contains a magic number: g.FillEllipse(pgb' 0' 0' radius * 2' radius * 2);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,DrawWheel,The following statement contains a magic number: g.FillEllipse(pgb' 0' 0' radius * 2' radius * 2);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GetColors,The following statement contains a magic number: int hue = (i * 360) / colorTesselation;
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GetColors,The following statement contains a magic number: colors[i] = ColorHandler.HSVtoColor(new ColorHandler.HSV(hue' 100' 100));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GetColors,The following statement contains a magic number: colors[i] = ColorHandler.HSVtoColor(new ColorHandler.HSV(hue' 100' 100));
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitRenderSurface,The following statement contains a magic number: renderBitmap = new Bitmap(                  Math.Max(1' (wheelDiameter * 4) / 3)' Math.Max(1' (wheelDiameter * 4) / 3)' PixelFormat.Format24bppRgb);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitRenderSurface,The following statement contains a magic number: renderBitmap = new Bitmap(                  Math.Max(1' (wheelDiameter * 4) / 3)' Math.Max(1' (wheelDiameter * 4) / 3)' PixelFormat.Format24bppRgb);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitRenderSurface,The following statement contains a magic number: renderBitmap = new Bitmap(                  Math.Max(1' (wheelDiameter * 4) / 3)' Math.Max(1' (wheelDiameter * 4) / 3)' PixelFormat.Format24bppRgb);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitRenderSurface,The following statement contains a magic number: renderBitmap = new Bitmap(                  Math.Max(1' (wheelDiameter * 4) / 3)' Math.Max(1' (wheelDiameter * 4) / 3)' PixelFormat.Format24bppRgb);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitializeComponent,The following statement contains a magic number: this.brightnessPictureBox.Location = new System.Drawing.Point(180' 11);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitializeComponent,The following statement contains a magic number: this.brightnessPictureBox.Location = new System.Drawing.Point(180' 11);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitializeComponent,The following statement contains a magic number: this.brightnessPictureBox.Size = new Size(20' 128);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitializeComponent,The following statement contains a magic number: this.brightnessPictureBox.Size = new Size(20' 128);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitializeComponent,The following statement contains a magic number: this.colorBox.Location = new System.Drawing.Point(230' 21);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitializeComponent,The following statement contains a magic number: this.colorBox.Location = new System.Drawing.Point(230' 21);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitializeComponent,The following statement contains a magic number: this.colorBox.Size = new Size(100' 100);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,InitializeComponent,The following statement contains a magic number: this.colorBox.Size = new Size(100' 100);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,wheelPictureBox_Paint,The following statement contains a magic number: float theta = ((float)HSVColor.Hue / 360.0f) * 2.0f * (float)Math.PI;
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,wheelPictureBox_Paint,The following statement contains a magic number: float theta = ((float)HSVColor.Hue / 360.0f) * 2.0f * (float)Math.PI;
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,wheelPictureBox_Paint,The following statement contains a magic number: float alpha = ((float)HSVColor.Saturation / 100.0f);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,wheelPictureBox_Paint,The following statement contains a magic number: e.Graphics.DrawRectangle(Pens.Black' ix - 1' iy - 1' 3' 3);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,wheelPictureBox_Paint,The following statement contains a magic number: e.Graphics.DrawRectangle(Pens.Black' ix - 1' iy - 1' 3' 3);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,brightnessPictureBox_Paint,The following statement contains a magic number: e.Graphics.DrawRectangle(Pens.White' 0' e.Graphics.VisibleClipBounds.Height - (hsvColor.value * e.Graphics.VisibleClipBounds.Height / 100) - 1' brightnessBitmap.Width - 3' 3);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,brightnessPictureBox_Paint,The following statement contains a magic number: e.Graphics.DrawRectangle(Pens.White' 0' e.Graphics.VisibleClipBounds.Height - (hsvColor.value * e.Graphics.VisibleClipBounds.Height / 100) - 1' brightnessBitmap.Width - 3' 3);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,brightnessPictureBox_Paint,The following statement contains a magic number: e.Graphics.DrawRectangle(Pens.White' 0' e.Graphics.VisibleClipBounds.Height - (hsvColor.value * e.Graphics.VisibleClipBounds.Height / 100) - 1' brightnessBitmap.Width - 3' 3);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,ComputeRadius,The following statement contains a magic number: return Math.Min((float)size.Width / 2' (float)size.Height / 2);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,ComputeRadius,The following statement contains a magic number: return Math.Min((float)size.Width / 2' (float)size.Height / 2);
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following statement contains a magic number: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,DataValues,The following statement contains a magic number: this.Controls[2].Text = type.ToString();
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          uint val = Convert.ToUInt32(Convert.ToSingle(this.Value));                          RTH_Imports.Poke(Address' val' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          uint val = Convert.ToUInt32(Convert.ToSingle(this.Value));                          RTH_Imports.Poke(Address' val' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          uint val = Convert.ToUInt32(Convert.ToSingle(this.Value));                          RTH_Imports.Poke(Address' val' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          uint val = Convert.ToUInt32(Convert.ToSingle(this.Value));                          RTH_Imports.Poke(Address' val' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          uint val = Convert.ToUInt32(Convert.ToSingle(this.Value));                          RTH_Imports.Poke(Address' val' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          uint val = Convert.ToUInt32(Convert.ToSingle(this.Value));                          RTH_Imports.Poke(Address' val' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          uint val = Convert.ToUInt32(Convert.ToSingle(this.Value));                          RTH_Imports.Poke(Address' val' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(389' 7);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(389' 7);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(100' 20);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(100' 20);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(191' 13);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(191' 13);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(427' 30);
Magic Number,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(427' 30);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,Populate,The following statement contains a magic number: this.Controls[0].Width += 5;
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,Save,The following statement contains a magic number: counter < this.length / 4
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,textBox1_TextChanged,The following statement contains a magic number: this.Controls[1].Location =                  new Point(((TextBox)sender).Location.X + ((TextBox)sender).PreferredSize.Width + 5' 6);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,textBox1_TextChanged,The following statement contains a magic number: this.Controls[1].Location =                  new Point(((TextBox)sender).Location.X + ((TextBox)sender).PreferredSize.Width + 5' 6);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.LabEntString.Location = new System.Drawing.Point(504' 7);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.LabEntString.Location = new System.Drawing.Point(504' 7);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.LabEntString.Margin = new System.Windows.Forms.Padding(3' 0' 0' 0);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.LabEntString.Size = new System.Drawing.Size(34' 13);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.LabEntString.Size = new System.Drawing.Size(34' 13);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(191' 13);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(191' 13);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.MinimumSize = new System.Drawing.Size(50' 4);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.MinimumSize = new System.Drawing.Size(50' 4);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(175' 20);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(175' 20);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.TabIndex = 3;
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(538' 30);
Magic Number,MetaEditor.Components,EntStrings,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\EntStrings.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(538' 30);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Enums,The following statement contains a magic number: switch (iType)              {                  case 8:                      {                          this.Controls[2].Text = "Enum8";                          break;                      }                    case 16:                      {                          this.Controls[2].Text = "Enum16";                          break;                      }                    case 32:                      {                          this.Controls[2].Text = "Enum32";                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Enums,The following statement contains a magic number: switch (iType)              {                  case 8:                      {                          this.Controls[2].Text = "Enum8";                          break;                      }                    case 16:                      {                          this.Controls[2].Text = "Enum16";                          break;                      }                    case 32:                      {                          this.Controls[2].Text = "Enum32";                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Enums,The following statement contains a magic number: switch (iType)              {                  case 8:                      {                          this.Controls[2].Text = "Enum8";                          break;                      }                    case 16:                      {                          this.Controls[2].Text = "Enum16";                          break;                      }                    case 32:                      {                          this.Controls[2].Text = "Enum32";                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Enums,The following statement contains a magic number: switch (iType)              {                  case 8:                      {                          this.Controls[2].Text = "Enum8";                          break;                      }                    case 16:                      {                          this.Controls[2].Text = "Enum16";                          break;                      }                    case 32:                      {                          this.Controls[2].Text = "Enum32";                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Enums,The following statement contains a magic number: switch (iType)              {                  case 8:                      {                          this.Controls[2].Text = "Enum8";                          break;                      }                    case 16:                      {                          this.Controls[2].Text = "Enum16";                          break;                      }                    case 32:                      {                          this.Controls[2].Text = "Enum32";                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Enums,The following statement contains a magic number: switch (iType)              {                  case 8:                      {                          this.Controls[2].Text = "Enum8";                          break;                      }                    case 16:                      {                          this.Controls[2].Text = "Enum16";                          break;                      }                    case 32:                      {                          this.Controls[2].Text = "Enum32";                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Poke,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)this.value' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Poke,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)this.value' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Poke,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)this.value' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Poke,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)this.value' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Poke,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)this.value' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Poke,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)this.value' 32);                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Populate,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          this.value = map.BR.ReadByte();                          break;                      }                    case 16:                      {                          this.value = map.BR.ReadInt16();                          break;                      }                    case 32:                      {                          this.value = map.BR.ReadInt32();                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Populate,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          this.value = map.BR.ReadByte();                          break;                      }                    case 16:                      {                          this.value = map.BR.ReadInt16();                          break;                      }                    case 32:                      {                          this.value = map.BR.ReadInt32();                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Populate,The following statement contains a magic number: switch (this.enumType)              {                  case 8:                      {                          this.value = map.BR.ReadByte();                          break;                      }                    case 16:                      {                          this.value = map.BR.ReadInt16();                          break;                      }                    case 32:                      {                          this.value = map.BR.ReadInt32();                          break;                      }              }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Save,The following statement contains a magic number: switch (this.enumType)                  {                      case 8:                          {                              map.BW.Write(Convert.ToByte(this.value));                              break;                          }                        case 16:                          {                              map.BW.Write(Convert.ToInt16(this.value));                              break;                          }                        case 32:                          {                              map.BW.Write(this.value);                              break;                          }                  }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Save,The following statement contains a magic number: switch (this.enumType)                  {                      case 8:                          {                              map.BW.Write(Convert.ToByte(this.value));                              break;                          }                        case 16:                          {                              map.BW.Write(Convert.ToInt16(this.value));                              break;                          }                        case 32:                          {                              map.BW.Write(this.value);                              break;                          }                  }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Save,The following statement contains a magic number: switch (this.enumType)                  {                      case 8:                          {                              map.BW.Write(Convert.ToByte(this.value));                              break;                          }                        case 16:                          {                              map.BW.Write(Convert.ToInt16(this.value));                              break;                          }                        case 32:                          {                              map.BW.Write(this.value);                              break;                          }                  }
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(505' 7);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(505' 7);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(43' 13);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(43' 13);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(191' 13);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(191' 13);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(184' 21);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(184' 21);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.TabIndex = 2;
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(551' 30);
Magic Number,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(551' 30);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,Populate,The following statement contains a magic number: this.Controls[2].Text = value.ToString();
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(40' 7);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(40' 7);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(140' 20);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(140' 20);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(186' 10);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(186' 10);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(4' 10);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(4' 10);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(30' 13);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(30' 13);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(243' 34);
Magic Number,MetaEditor.Components,Float,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Float.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(243' 34);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,Poke,The following statement contains a magic number: RTH_Imports.Poke(Address' (uint)this.identInt32' 32);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,Save,The following statement contains a magic number: map.BW.BaseStream.Position = this.offsetInMap - 4;
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,Save,The following statement contains a magic number: tempList.AddRange(this.tagType.ToCharArray(0' 4));
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,FillTagBoxWithNames,The following statement contains a magic number: this.Controls[2].Text != "null"
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,comboBox1_TextChanged,The following statement contains a magic number: ((ComboBox)sender).Width = (((ComboBox)sender).Text.Length * 5) + 50;
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,comboBox1_TextChanged,The following statement contains a magic number: ((ComboBox)sender).Width = (((ComboBox)sender).Text.Length * 5) + 50;
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(653' 7);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(653' 7);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 4;
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label4.Padding = new System.Windows.Forms.Padding(0' 3' 0' 0);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(191' 16);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(191' 16);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(263' 4);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(263' 4);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(358' 21);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(358' 21);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.TabIndex = 3;
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.Size = new System.Drawing.Size(57' 21);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.Size = new System.Drawing.Size(57' 21);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.TabIndex = 2;
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 5' 0' 0);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(682' 30);
Magic Number,MetaEditor.Components,Ident,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Ident.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(682' 30);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The following statement contains a magic number: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,GetItems,The following statement contains a magic number: switch (this.EntIndex.ItemType.ToLower())                      {                          case "short":                              {                                  tempValueString = counter + " : " + map.BR.ReadInt16();                                  break;                              }                            case "int":                              {                                  tempValueString = counter + " : " + map.BR.ReadInt32();                                  break;                              }                            case "ushort":                              {                                  tempValueString = counter + " : " + map.BR.ReadUInt16();                                  break;                              }                            case "uint":                              {                                  tempValueString = counter + " : " + map.BR.ReadUInt32();                                  break;                              }                            case "float":                              {                                  tempValueString = counter + " : " + map.BR.ReadSingle();                                  break;                              }                            case "stringid":                              {                                  int sidIndexer = map.BR.ReadInt16();                                  if (sidIndexer > -1 && sidIndexer < map.Strings.Name.Length)                                  {                                      tempValueString = counter + " : " + map.Strings.Name[sidIndexer];                                  }                                  else                                  {                                      tempValueString = counter + " : Not a String ID";                                  }                                    break;                              }                            case "ident":                              {                                  int tempint = map.BR.ReadInt32();                                  int tagIndex = map.Functions.ForMeta.FindMetaByID(tempint);                                  if (tagIndex != -1)                                  {                                      if (tempint != -1)                                      {                                          tempValueString = counter + " : " + map.MetaInfo.TagType[tagIndex] + " - " +                                                            map.FileNames.Name[tagIndex];                                      }                                      else                                      {                                          tempValueString = counter +                                                            " : Probably is NOT an ident' choose another data type";                                      }                                  }                                  else if (tagIndex == -1)                                  {                                      tempValueString = counter + " : nulled ident";                                  }                                  else                                  {                                      tempValueString = counter + " : Probably is NOT an ident' choose another data type";                                  }                                    break;                              }                            case "string32":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(32);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "unicodestring64":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(64);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "string256":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(256);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "unicodestring256":                              {                                  goto case "string256";                              }                      }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,GetItems,The following statement contains a magic number: switch (this.EntIndex.ItemType.ToLower())                      {                          case "short":                              {                                  tempValueString = counter + " : " + map.BR.ReadInt16();                                  break;                              }                            case "int":                              {                                  tempValueString = counter + " : " + map.BR.ReadInt32();                                  break;                              }                            case "ushort":                              {                                  tempValueString = counter + " : " + map.BR.ReadUInt16();                                  break;                              }                            case "uint":                              {                                  tempValueString = counter + " : " + map.BR.ReadUInt32();                                  break;                              }                            case "float":                              {                                  tempValueString = counter + " : " + map.BR.ReadSingle();                                  break;                              }                            case "stringid":                              {                                  int sidIndexer = map.BR.ReadInt16();                                  if (sidIndexer > -1 && sidIndexer < map.Strings.Name.Length)                                  {                                      tempValueString = counter + " : " + map.Strings.Name[sidIndexer];                                  }                                  else                                  {                                      tempValueString = counter + " : Not a String ID";                                  }                                    break;                              }                            case "ident":                              {                                  int tempint = map.BR.ReadInt32();                                  int tagIndex = map.Functions.ForMeta.FindMetaByID(tempint);                                  if (tagIndex != -1)                                  {                                      if (tempint != -1)                                      {                                          tempValueString = counter + " : " + map.MetaInfo.TagType[tagIndex] + " - " +                                                            map.FileNames.Name[tagIndex];                                      }                                      else                                      {                                          tempValueString = counter +                                                            " : Probably is NOT an ident' choose another data type";                                      }                                  }                                  else if (tagIndex == -1)                                  {                                      tempValueString = counter + " : nulled ident";                                  }                                  else                                  {                                      tempValueString = counter + " : Probably is NOT an ident' choose another data type";                                  }                                    break;                              }                            case "string32":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(32);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "unicodestring64":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(64);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "string256":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(256);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "unicodestring256":                              {                                  goto case "string256";                              }                      }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,GetItems,The following statement contains a magic number: switch (this.EntIndex.ItemType.ToLower())                      {                          case "short":                              {                                  tempValueString = counter + " : " + map.BR.ReadInt16();                                  break;                              }                            case "int":                              {                                  tempValueString = counter + " : " + map.BR.ReadInt32();                                  break;                              }                            case "ushort":                              {                                  tempValueString = counter + " : " + map.BR.ReadUInt16();                                  break;                              }                            case "uint":                              {                                  tempValueString = counter + " : " + map.BR.ReadUInt32();                                  break;                              }                            case "float":                              {                                  tempValueString = counter + " : " + map.BR.ReadSingle();                                  break;                              }                            case "stringid":                              {                                  int sidIndexer = map.BR.ReadInt16();                                  if (sidIndexer > -1 && sidIndexer < map.Strings.Name.Length)                                  {                                      tempValueString = counter + " : " + map.Strings.Name[sidIndexer];                                  }                                  else                                  {                                      tempValueString = counter + " : Not a String ID";                                  }                                    break;                              }                            case "ident":                              {                                  int tempint = map.BR.ReadInt32();                                  int tagIndex = map.Functions.ForMeta.FindMetaByID(tempint);                                  if (tagIndex != -1)                                  {                                      if (tempint != -1)                                      {                                          tempValueString = counter + " : " + map.MetaInfo.TagType[tagIndex] + " - " +                                                            map.FileNames.Name[tagIndex];                                      }                                      else                                      {                                          tempValueString = counter +                                                            " : Probably is NOT an ident' choose another data type";                                      }                                  }                                  else if (tagIndex == -1)                                  {                                      tempValueString = counter + " : nulled ident";                                  }                                  else                                  {                                      tempValueString = counter + " : Probably is NOT an ident' choose another data type";                                  }                                    break;                              }                            case "string32":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(32);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "unicodestring64":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(64);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "string256":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(256);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "unicodestring256":                              {                                  goto case "string256";                              }                      }
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(222' 21);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(222' 21);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(468' 7);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(468' 7);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(97' 13);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(97' 13);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(568' 30);
Magic Number,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(568' 30);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,ReflexiveControl,The following statement contains a magic number: ToolTip1.InitialDelay = 800;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: this.Padding = new Padding(10' 0' 0' 0);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: int colorSpaceCount = 3;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: cbox.Width = 95;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: switch (tempbase.ObjectType)                  {                      case IFPIO.ObjectEnum.Struct:                          {                              if (MetaEditor.ShowReflexives == false)                              {                                  continue;                              }                                Label tempLabel1 = new Label();                              tempLabel1.AutoSize = true;                              tempLabel1.Location = new Point(0' 0);                              tempLabel1.Name = "label1";                              tempLabel1.Dock = DockStyle.Top;                              tempLabel1.Size = new Size(35' 13);                              tempLabel1.TabIndex = 1;                              ReflexiveControl tempReflexive = new ReflexiveControl(                                  map' translatedOffset' ((IFPIO.Reflexive)tempbase).HasCount' tempbase.lineNumber);                              tempReflexive.Name = "reflexive";                              tempReflexive.LoadENTControls(                                  (IFPIO.Reflexive)tempbase'                                   ((IFPIO.Reflexive)tempbase).items'                                   true'                                   layer + 1'                                   ref tabIndex'                                   customPluginPath + "\\" + tempbase.offset);                                // Label' Combobox & Button are always added ( = 3)                              if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                              {                                  bottomPanel.Controls.Add(tempLabel1);                                  tempLabel1.BringToFront();                                  bottomPanel.Controls.Add(tempReflexive);                                  tempReflexive.BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Block:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                TagBlock tempBlock = new TagBlock(                                  tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempBlock.Name = "tagblock";                              tempBlock.Controls[1].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempBlock);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                Ident tempident = new Ident(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Ident)tempbase).hasTagType'                                   tempbase.lineNumber);                              tempident.Name = "ident";                              tempident.Controls[1].ContextMenuStrip = identContext;                              tempident.Controls[2].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempident);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              if (MetaEditor.ShowSIDs == false)                              {                                  continue;                              }                                SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempSID.Name = "sid";                              bottomPanel.Controls.Add(tempSID);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              if (MetaEditor.ShowFloats == false)                              {                                  continue;                              }                                DataValues tempFloat = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempFloat.Name = "float";                              bottomPanel.Controls.Add(tempFloat);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                              {                                  continue;                              }                                EntStrings tempstring = new EntStrings(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPString)tempbase).size'                                   ((IFPIO.IFPString)tempbase).type'                                   tempbase.lineNumber);                              tempstring.Name = "string";                              tempstring.TabIndex = tabIndex;                              bottomPanel.Controls.Add(tempstring);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              if (MetaEditor.ShowUnicodeString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              if (MetaEditor.ShowUnicodeString64s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              if (MetaEditor.ShowString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.Int:                          {                              if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                              {                                  if ((MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                  {                                      continue;                                  }                                    DataValues tempdatavalues = new DataValues(                                      tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if ((MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPInt)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              if (MetaEditor.ShowUndefineds == false)                              {                                  continue;                              }                                DataValues tempUndefined = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempUndefined.Name = "tempUndefined";                              bottomPanel.Controls.Add(tempUndefined);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte_Flags:                          {                              if (MetaEditor.ShowBitmask8s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 8)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Word_Flags:                          {                              if (MetaEditor.ShowBitmask16s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 16)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Flags:                          {                              if (MetaEditor.ShowBitmask32s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 32)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                              {                                  if (MetaEditor.ShowBytes == false)                                  {                                      continue;                                  }                                    DataValues tempByte = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempByte);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if (MetaEditor.ShowBlockIndex8s == false)                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPByte)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Char_Enum:                          {                              if (MetaEditor.ShowEnum8s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Enum:                          {                              if (MetaEditor.ShowEnum16s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Enum:                          {                              if (MetaEditor.ShowEnum32s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Unused:                          {                              DataValues tempUnused = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                              tempUnused.TabIndex = tabIndex;                              tempUnused.Populate(map.SelectedMeta.offset);                              bottomPanel.Controls.Add(tempUnused);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.TagType:                          continue;                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: switch (tempbase.ObjectType)                  {                      case IFPIO.ObjectEnum.Struct:                          {                              if (MetaEditor.ShowReflexives == false)                              {                                  continue;                              }                                Label tempLabel1 = new Label();                              tempLabel1.AutoSize = true;                              tempLabel1.Location = new Point(0' 0);                              tempLabel1.Name = "label1";                              tempLabel1.Dock = DockStyle.Top;                              tempLabel1.Size = new Size(35' 13);                              tempLabel1.TabIndex = 1;                              ReflexiveControl tempReflexive = new ReflexiveControl(                                  map' translatedOffset' ((IFPIO.Reflexive)tempbase).HasCount' tempbase.lineNumber);                              tempReflexive.Name = "reflexive";                              tempReflexive.LoadENTControls(                                  (IFPIO.Reflexive)tempbase'                                   ((IFPIO.Reflexive)tempbase).items'                                   true'                                   layer + 1'                                   ref tabIndex'                                   customPluginPath + "\\" + tempbase.offset);                                // Label' Combobox & Button are always added ( = 3)                              if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                              {                                  bottomPanel.Controls.Add(tempLabel1);                                  tempLabel1.BringToFront();                                  bottomPanel.Controls.Add(tempReflexive);                                  tempReflexive.BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Block:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                TagBlock tempBlock = new TagBlock(                                  tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempBlock.Name = "tagblock";                              tempBlock.Controls[1].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempBlock);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                Ident tempident = new Ident(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Ident)tempbase).hasTagType'                                   tempbase.lineNumber);                              tempident.Name = "ident";                              tempident.Controls[1].ContextMenuStrip = identContext;                              tempident.Controls[2].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempident);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              if (MetaEditor.ShowSIDs == false)                              {                                  continue;                              }                                SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempSID.Name = "sid";                              bottomPanel.Controls.Add(tempSID);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              if (MetaEditor.ShowFloats == false)                              {                                  continue;                              }                                DataValues tempFloat = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempFloat.Name = "float";                              bottomPanel.Controls.Add(tempFloat);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                              {                                  continue;                              }                                EntStrings tempstring = new EntStrings(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPString)tempbase).size'                                   ((IFPIO.IFPString)tempbase).type'                                   tempbase.lineNumber);                              tempstring.Name = "string";                              tempstring.TabIndex = tabIndex;                              bottomPanel.Controls.Add(tempstring);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              if (MetaEditor.ShowUnicodeString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              if (MetaEditor.ShowUnicodeString64s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              if (MetaEditor.ShowString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.Int:                          {                              if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                              {                                  if ((MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                  {                                      continue;                                  }                                    DataValues tempdatavalues = new DataValues(                                      tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if ((MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPInt)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              if (MetaEditor.ShowUndefineds == false)                              {                                  continue;                              }                                DataValues tempUndefined = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempUndefined.Name = "tempUndefined";                              bottomPanel.Controls.Add(tempUndefined);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte_Flags:                          {                              if (MetaEditor.ShowBitmask8s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 8)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Word_Flags:                          {                              if (MetaEditor.ShowBitmask16s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 16)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Flags:                          {                              if (MetaEditor.ShowBitmask32s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 32)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                              {                                  if (MetaEditor.ShowBytes == false)                                  {                                      continue;                                  }                                    DataValues tempByte = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempByte);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if (MetaEditor.ShowBlockIndex8s == false)                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPByte)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Char_Enum:                          {                              if (MetaEditor.ShowEnum8s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Enum:                          {                              if (MetaEditor.ShowEnum16s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Enum:                          {                              if (MetaEditor.ShowEnum32s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Unused:                          {                              DataValues tempUnused = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                              tempUnused.TabIndex = tabIndex;                              tempUnused.Populate(map.SelectedMeta.offset);                              bottomPanel.Controls.Add(tempUnused);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.TagType:                          continue;                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: switch (tempbase.ObjectType)                  {                      case IFPIO.ObjectEnum.Struct:                          {                              if (MetaEditor.ShowReflexives == false)                              {                                  continue;                              }                                Label tempLabel1 = new Label();                              tempLabel1.AutoSize = true;                              tempLabel1.Location = new Point(0' 0);                              tempLabel1.Name = "label1";                              tempLabel1.Dock = DockStyle.Top;                              tempLabel1.Size = new Size(35' 13);                              tempLabel1.TabIndex = 1;                              ReflexiveControl tempReflexive = new ReflexiveControl(                                  map' translatedOffset' ((IFPIO.Reflexive)tempbase).HasCount' tempbase.lineNumber);                              tempReflexive.Name = "reflexive";                              tempReflexive.LoadENTControls(                                  (IFPIO.Reflexive)tempbase'                                   ((IFPIO.Reflexive)tempbase).items'                                   true'                                   layer + 1'                                   ref tabIndex'                                   customPluginPath + "\\" + tempbase.offset);                                // Label' Combobox & Button are always added ( = 3)                              if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                              {                                  bottomPanel.Controls.Add(tempLabel1);                                  tempLabel1.BringToFront();                                  bottomPanel.Controls.Add(tempReflexive);                                  tempReflexive.BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Block:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                TagBlock tempBlock = new TagBlock(                                  tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempBlock.Name = "tagblock";                              tempBlock.Controls[1].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempBlock);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                Ident tempident = new Ident(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Ident)tempbase).hasTagType'                                   tempbase.lineNumber);                              tempident.Name = "ident";                              tempident.Controls[1].ContextMenuStrip = identContext;                              tempident.Controls[2].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempident);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              if (MetaEditor.ShowSIDs == false)                              {                                  continue;                              }                                SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempSID.Name = "sid";                              bottomPanel.Controls.Add(tempSID);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              if (MetaEditor.ShowFloats == false)                              {                                  continue;                              }                                DataValues tempFloat = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempFloat.Name = "float";                              bottomPanel.Controls.Add(tempFloat);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                              {                                  continue;                              }                                EntStrings tempstring = new EntStrings(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPString)tempbase).size'                                   ((IFPIO.IFPString)tempbase).type'                                   tempbase.lineNumber);                              tempstring.Name = "string";                              tempstring.TabIndex = tabIndex;                              bottomPanel.Controls.Add(tempstring);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              if (MetaEditor.ShowUnicodeString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              if (MetaEditor.ShowUnicodeString64s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              if (MetaEditor.ShowString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.Int:                          {                              if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                              {                                  if ((MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                  {                                      continue;                                  }                                    DataValues tempdatavalues = new DataValues(                                      tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if ((MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPInt)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              if (MetaEditor.ShowUndefineds == false)                              {                                  continue;                              }                                DataValues tempUndefined = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempUndefined.Name = "tempUndefined";                              bottomPanel.Controls.Add(tempUndefined);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte_Flags:                          {                              if (MetaEditor.ShowBitmask8s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 8)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Word_Flags:                          {                              if (MetaEditor.ShowBitmask16s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 16)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Flags:                          {                              if (MetaEditor.ShowBitmask32s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 32)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                              {                                  if (MetaEditor.ShowBytes == false)                                  {                                      continue;                                  }                                    DataValues tempByte = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempByte);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if (MetaEditor.ShowBlockIndex8s == false)                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPByte)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Char_Enum:                          {                              if (MetaEditor.ShowEnum8s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Enum:                          {                              if (MetaEditor.ShowEnum16s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Enum:                          {                              if (MetaEditor.ShowEnum32s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Unused:                          {                              DataValues tempUnused = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                              tempUnused.TabIndex = tabIndex;                              tempUnused.Populate(map.SelectedMeta.offset);                              bottomPanel.Controls.Add(tempUnused);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.TagType:                          continue;                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: switch (tempbase.ObjectType)                  {                      case IFPIO.ObjectEnum.Struct:                          {                              if (MetaEditor.ShowReflexives == false)                              {                                  continue;                              }                                Label tempLabel1 = new Label();                              tempLabel1.AutoSize = true;                              tempLabel1.Location = new Point(0' 0);                              tempLabel1.Name = "label1";                              tempLabel1.Dock = DockStyle.Top;                              tempLabel1.Size = new Size(35' 13);                              tempLabel1.TabIndex = 1;                              ReflexiveControl tempReflexive = new ReflexiveControl(                                  map' translatedOffset' ((IFPIO.Reflexive)tempbase).HasCount' tempbase.lineNumber);                              tempReflexive.Name = "reflexive";                              tempReflexive.LoadENTControls(                                  (IFPIO.Reflexive)tempbase'                                   ((IFPIO.Reflexive)tempbase).items'                                   true'                                   layer + 1'                                   ref tabIndex'                                   customPluginPath + "\\" + tempbase.offset);                                // Label' Combobox & Button are always added ( = 3)                              if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                              {                                  bottomPanel.Controls.Add(tempLabel1);                                  tempLabel1.BringToFront();                                  bottomPanel.Controls.Add(tempReflexive);                                  tempReflexive.BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Block:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                TagBlock tempBlock = new TagBlock(                                  tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempBlock.Name = "tagblock";                              tempBlock.Controls[1].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempBlock);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                Ident tempident = new Ident(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Ident)tempbase).hasTagType'                                   tempbase.lineNumber);                              tempident.Name = "ident";                              tempident.Controls[1].ContextMenuStrip = identContext;                              tempident.Controls[2].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempident);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              if (MetaEditor.ShowSIDs == false)                              {                                  continue;                              }                                SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempSID.Name = "sid";                              bottomPanel.Controls.Add(tempSID);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              if (MetaEditor.ShowFloats == false)                              {                                  continue;                              }                                DataValues tempFloat = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempFloat.Name = "float";                              bottomPanel.Controls.Add(tempFloat);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                              {                                  continue;                              }                                EntStrings tempstring = new EntStrings(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPString)tempbase).size'                                   ((IFPIO.IFPString)tempbase).type'                                   tempbase.lineNumber);                              tempstring.Name = "string";                              tempstring.TabIndex = tabIndex;                              bottomPanel.Controls.Add(tempstring);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              if (MetaEditor.ShowUnicodeString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              if (MetaEditor.ShowUnicodeString64s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              if (MetaEditor.ShowString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.Int:                          {                              if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                              {                                  if ((MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                  {                                      continue;                                  }                                    DataValues tempdatavalues = new DataValues(                                      tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if ((MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPInt)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              if (MetaEditor.ShowUndefineds == false)                              {                                  continue;                              }                                DataValues tempUndefined = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempUndefined.Name = "tempUndefined";                              bottomPanel.Controls.Add(tempUndefined);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte_Flags:                          {                              if (MetaEditor.ShowBitmask8s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 8)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Word_Flags:                          {                              if (MetaEditor.ShowBitmask16s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 16)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Flags:                          {                              if (MetaEditor.ShowBitmask32s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 32)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                              {                                  if (MetaEditor.ShowBytes == false)                                  {                                      continue;                                  }                                    DataValues tempByte = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempByte);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if (MetaEditor.ShowBlockIndex8s == false)                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPByte)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Char_Enum:                          {                              if (MetaEditor.ShowEnum8s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Enum:                          {                              if (MetaEditor.ShowEnum16s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Enum:                          {                              if (MetaEditor.ShowEnum32s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Unused:                          {                              DataValues tempUnused = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                              tempUnused.TabIndex = tabIndex;                              tempUnused.Populate(map.SelectedMeta.offset);                              bottomPanel.Controls.Add(tempUnused);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.TagType:                          continue;                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: switch (tempbase.ObjectType)                  {                      case IFPIO.ObjectEnum.Struct:                          {                              if (MetaEditor.ShowReflexives == false)                              {                                  continue;                              }                                Label tempLabel1 = new Label();                              tempLabel1.AutoSize = true;                              tempLabel1.Location = new Point(0' 0);                              tempLabel1.Name = "label1";                              tempLabel1.Dock = DockStyle.Top;                              tempLabel1.Size = new Size(35' 13);                              tempLabel1.TabIndex = 1;                              ReflexiveControl tempReflexive = new ReflexiveControl(                                  map' translatedOffset' ((IFPIO.Reflexive)tempbase).HasCount' tempbase.lineNumber);                              tempReflexive.Name = "reflexive";                              tempReflexive.LoadENTControls(                                  (IFPIO.Reflexive)tempbase'                                   ((IFPIO.Reflexive)tempbase).items'                                   true'                                   layer + 1'                                   ref tabIndex'                                   customPluginPath + "\\" + tempbase.offset);                                // Label' Combobox & Button are always added ( = 3)                              if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                              {                                  bottomPanel.Controls.Add(tempLabel1);                                  tempLabel1.BringToFront();                                  bottomPanel.Controls.Add(tempReflexive);                                  tempReflexive.BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Block:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                TagBlock tempBlock = new TagBlock(                                  tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempBlock.Name = "tagblock";                              tempBlock.Controls[1].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempBlock);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                Ident tempident = new Ident(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Ident)tempbase).hasTagType'                                   tempbase.lineNumber);                              tempident.Name = "ident";                              tempident.Controls[1].ContextMenuStrip = identContext;                              tempident.Controls[2].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempident);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              if (MetaEditor.ShowSIDs == false)                              {                                  continue;                              }                                SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempSID.Name = "sid";                              bottomPanel.Controls.Add(tempSID);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              if (MetaEditor.ShowFloats == false)                              {                                  continue;                              }                                DataValues tempFloat = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempFloat.Name = "float";                              bottomPanel.Controls.Add(tempFloat);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                              {                                  continue;                              }                                EntStrings tempstring = new EntStrings(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPString)tempbase).size'                                   ((IFPIO.IFPString)tempbase).type'                                   tempbase.lineNumber);                              tempstring.Name = "string";                              tempstring.TabIndex = tabIndex;                              bottomPanel.Controls.Add(tempstring);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              if (MetaEditor.ShowUnicodeString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              if (MetaEditor.ShowUnicodeString64s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              if (MetaEditor.ShowString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.Int:                          {                              if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                              {                                  if ((MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                  {                                      continue;                                  }                                    DataValues tempdatavalues = new DataValues(                                      tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if ((MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPInt)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              if (MetaEditor.ShowUndefineds == false)                              {                                  continue;                              }                                DataValues tempUndefined = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempUndefined.Name = "tempUndefined";                              bottomPanel.Controls.Add(tempUndefined);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte_Flags:                          {                              if (MetaEditor.ShowBitmask8s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 8)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Word_Flags:                          {                              if (MetaEditor.ShowBitmask16s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 16)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Flags:                          {                              if (MetaEditor.ShowBitmask32s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 32)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                              {                                  if (MetaEditor.ShowBytes == false)                                  {                                      continue;                                  }                                    DataValues tempByte = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempByte);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if (MetaEditor.ShowBlockIndex8s == false)                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPByte)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Char_Enum:                          {                              if (MetaEditor.ShowEnum8s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Enum:                          {                              if (MetaEditor.ShowEnum16s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Enum:                          {                              if (MetaEditor.ShowEnum32s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Unused:                          {                              DataValues tempUnused = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                              tempUnused.TabIndex = tabIndex;                              tempUnused.Populate(map.SelectedMeta.offset);                              bottomPanel.Controls.Add(tempUnused);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.TagType:                          continue;                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: switch (tempbase.ObjectType)                  {                      case IFPIO.ObjectEnum.Struct:                          {                              if (MetaEditor.ShowReflexives == false)                              {                                  continue;                              }                                Label tempLabel1 = new Label();                              tempLabel1.AutoSize = true;                              tempLabel1.Location = new Point(0' 0);                              tempLabel1.Name = "label1";                              tempLabel1.Dock = DockStyle.Top;                              tempLabel1.Size = new Size(35' 13);                              tempLabel1.TabIndex = 1;                              ReflexiveControl tempReflexive = new ReflexiveControl(                                  map' translatedOffset' ((IFPIO.Reflexive)tempbase).HasCount' tempbase.lineNumber);                              tempReflexive.Name = "reflexive";                              tempReflexive.LoadENTControls(                                  (IFPIO.Reflexive)tempbase'                                   ((IFPIO.Reflexive)tempbase).items'                                   true'                                   layer + 1'                                   ref tabIndex'                                   customPluginPath + "\\" + tempbase.offset);                                // Label' Combobox & Button are always added ( = 3)                              if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                              {                                  bottomPanel.Controls.Add(tempLabel1);                                  tempLabel1.BringToFront();                                  bottomPanel.Controls.Add(tempReflexive);                                  tempReflexive.BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Block:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                TagBlock tempBlock = new TagBlock(                                  tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempBlock.Name = "tagblock";                              tempBlock.Controls[1].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempBlock);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                Ident tempident = new Ident(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Ident)tempbase).hasTagType'                                   tempbase.lineNumber);                              tempident.Name = "ident";                              tempident.Controls[1].ContextMenuStrip = identContext;                              tempident.Controls[2].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempident);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              if (MetaEditor.ShowSIDs == false)                              {                                  continue;                              }                                SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempSID.Name = "sid";                              bottomPanel.Controls.Add(tempSID);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              if (MetaEditor.ShowFloats == false)                              {                                  continue;                              }                                DataValues tempFloat = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempFloat.Name = "float";                              bottomPanel.Controls.Add(tempFloat);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                              {                                  continue;                              }                                EntStrings tempstring = new EntStrings(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPString)tempbase).size'                                   ((IFPIO.IFPString)tempbase).type'                                   tempbase.lineNumber);                              tempstring.Name = "string";                              tempstring.TabIndex = tabIndex;                              bottomPanel.Controls.Add(tempstring);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              if (MetaEditor.ShowUnicodeString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              if (MetaEditor.ShowUnicodeString64s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              if (MetaEditor.ShowString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.Int:                          {                              if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                              {                                  if ((MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                  {                                      continue;                                  }                                    DataValues tempdatavalues = new DataValues(                                      tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if ((MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPInt)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              if (MetaEditor.ShowUndefineds == false)                              {                                  continue;                              }                                DataValues tempUndefined = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempUndefined.Name = "tempUndefined";                              bottomPanel.Controls.Add(tempUndefined);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte_Flags:                          {                              if (MetaEditor.ShowBitmask8s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 8)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Word_Flags:                          {                              if (MetaEditor.ShowBitmask16s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 16)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Flags:                          {                              if (MetaEditor.ShowBitmask32s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 32)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                              {                                  if (MetaEditor.ShowBytes == false)                                  {                                      continue;                                  }                                    DataValues tempByte = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempByte);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if (MetaEditor.ShowBlockIndex8s == false)                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPByte)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Char_Enum:                          {                              if (MetaEditor.ShowEnum8s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Enum:                          {                              if (MetaEditor.ShowEnum16s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Enum:                          {                              if (MetaEditor.ShowEnum32s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Unused:                          {                              DataValues tempUnused = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                              tempUnused.TabIndex = tabIndex;                              tempUnused.Populate(map.SelectedMeta.offset);                              bottomPanel.Controls.Add(tempUnused);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.TagType:                          continue;                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following statement contains a magic number: switch (tempbase.ObjectType)                  {                      case IFPIO.ObjectEnum.Struct:                          {                              if (MetaEditor.ShowReflexives == false)                              {                                  continue;                              }                                Label tempLabel1 = new Label();                              tempLabel1.AutoSize = true;                              tempLabel1.Location = new Point(0' 0);                              tempLabel1.Name = "label1";                              tempLabel1.Dock = DockStyle.Top;                              tempLabel1.Size = new Size(35' 13);                              tempLabel1.TabIndex = 1;                              ReflexiveControl tempReflexive = new ReflexiveControl(                                  map' translatedOffset' ((IFPIO.Reflexive)tempbase).HasCount' tempbase.lineNumber);                              tempReflexive.Name = "reflexive";                              tempReflexive.LoadENTControls(                                  (IFPIO.Reflexive)tempbase'                                   ((IFPIO.Reflexive)tempbase).items'                                   true'                                   layer + 1'                                   ref tabIndex'                                   customPluginPath + "\\" + tempbase.offset);                                // Label' Combobox & Button are always added ( = 3)                              if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                              {                                  bottomPanel.Controls.Add(tempLabel1);                                  tempLabel1.BringToFront();                                  bottomPanel.Controls.Add(tempReflexive);                                  tempReflexive.BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Block:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                TagBlock tempBlock = new TagBlock(                                  tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempBlock.Name = "tagblock";                              tempBlock.Controls[1].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempBlock);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                Ident tempident = new Ident(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Ident)tempbase).hasTagType'                                   tempbase.lineNumber);                              tempident.Name = "ident";                              tempident.Controls[1].ContextMenuStrip = identContext;                              tempident.Controls[2].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempident);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              if (MetaEditor.ShowSIDs == false)                              {                                  continue;                              }                                SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempSID.Name = "sid";                              bottomPanel.Controls.Add(tempSID);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              if (MetaEditor.ShowFloats == false)                              {                                  continue;                              }                                DataValues tempFloat = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempFloat.Name = "float";                              bottomPanel.Controls.Add(tempFloat);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                              {                                  continue;                              }                                EntStrings tempstring = new EntStrings(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPString)tempbase).size'                                   ((IFPIO.IFPString)tempbase).type'                                   tempbase.lineNumber);                              tempstring.Name = "string";                              tempstring.TabIndex = tabIndex;                              bottomPanel.Controls.Add(tempstring);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              if (MetaEditor.ShowUnicodeString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              if (MetaEditor.ShowUnicodeString64s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              if (MetaEditor.ShowString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.Int:                          {                              if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                              {                                  if ((MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                  {                                      continue;                                  }                                    DataValues tempdatavalues = new DataValues(                                      tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if ((MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPInt)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              if (MetaEditor.ShowUndefineds == false)                              {                                  continue;                              }                                DataValues tempUndefined = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempUndefined.Name = "tempUndefined";                              bottomPanel.Controls.Add(tempUndefined);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte_Flags:                          {                              if (MetaEditor.ShowBitmask8s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 8)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Word_Flags:                          {                              if (MetaEditor.ShowBitmask16s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 16)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Flags:                          {                              if (MetaEditor.ShowBitmask32s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 32)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                              {                                  if (MetaEditor.ShowBytes == false)                                  {                                      continue;                                  }                                    DataValues tempByte = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempByte);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if (MetaEditor.ShowBlockIndex8s == false)                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPByte)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Char_Enum:                          {                              if (MetaEditor.ShowEnum8s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Enum:                          {                              if (MetaEditor.ShowEnum16s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Enum:                          {                              if (MetaEditor.ShowEnum32s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Unused:                          {                              DataValues tempUnused = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                              tempUnused.TabIndex = tabIndex;                              tempUnused.Populate(map.SelectedMeta.offset);                              bottomPanel.Controls.Add(tempUnused);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.TagType:                          continue;                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadMetaIntoControls,The following statement contains a magic number: map.BR.BaseStream.Position = this.hasChunkCount                                                        ? startingOffset + offsetInMeta + 4                                                        : startingOffset + offsetInMeta;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The following statement contains a magic number: switch (tempbase.ObjectType)                      {                          case IFPIO.ObjectEnum.Ident:                              {                                  labelType = IFPIO.ObjectEnum.Ident;                                  break;                              }                            case IFPIO.ObjectEnum.StringID:                              {                                  labelType = IFPIO.ObjectEnum.StringID;                                  break;                              }                            case IFPIO.ObjectEnum.Float:                              {                                  labelType = IFPIO.ObjectEnum.Float;                                  break;                              }                            case IFPIO.ObjectEnum.String32:                              {                                  labelType = ((IFPIO.IFPString)tempbase).type == false                                                  ? ((IFPIO.IFPString)tempbase).size == 32                                                        ? IFPIO.ObjectEnum.String32                                                        : IFPIO.ObjectEnum.String256                                                  : ((IFPIO.IFPString)tempbase).size == 64                                                        ? IFPIO.ObjectEnum.UnicodeString64                                                        : IFPIO.ObjectEnum.UnicodeString256;                                  break;                              }                            case IFPIO.ObjectEnum.UnicodeString256:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.String256:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.UnicodeString64:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.Int:                              {                                  labelType = IFPIO.ObjectEnum.Int;                                  break;                              }                            case IFPIO.ObjectEnum.Short:                              {                                  labelType = IFPIO.ObjectEnum.Short;                                  break;                              }                            case IFPIO.ObjectEnum.UShort:                              {                                  labelType = IFPIO.ObjectEnum.UShort;                                  break;                              }                            case IFPIO.ObjectEnum.UInt:                              {                                  labelType = IFPIO.ObjectEnum.UInt;                                  break;                              }                            case IFPIO.ObjectEnum.Unknown:                              {                                  goto case IFPIO.ObjectEnum.Float;                              }                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The following statement contains a magic number: switch (tempbase.ObjectType)                      {                          case IFPIO.ObjectEnum.Ident:                              {                                  labelType = IFPIO.ObjectEnum.Ident;                                  break;                              }                            case IFPIO.ObjectEnum.StringID:                              {                                  labelType = IFPIO.ObjectEnum.StringID;                                  break;                              }                            case IFPIO.ObjectEnum.Float:                              {                                  labelType = IFPIO.ObjectEnum.Float;                                  break;                              }                            case IFPIO.ObjectEnum.String32:                              {                                  labelType = ((IFPIO.IFPString)tempbase).type == false                                                  ? ((IFPIO.IFPString)tempbase).size == 32                                                        ? IFPIO.ObjectEnum.String32                                                        : IFPIO.ObjectEnum.String256                                                  : ((IFPIO.IFPString)tempbase).size == 64                                                        ? IFPIO.ObjectEnum.UnicodeString64                                                        : IFPIO.ObjectEnum.UnicodeString256;                                  break;                              }                            case IFPIO.ObjectEnum.UnicodeString256:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.String256:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.UnicodeString64:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.Int:                              {                                  labelType = IFPIO.ObjectEnum.Int;                                  break;                              }                            case IFPIO.ObjectEnum.Short:                              {                                  labelType = IFPIO.ObjectEnum.Short;                                  break;                              }                            case IFPIO.ObjectEnum.UShort:                              {                                  labelType = IFPIO.ObjectEnum.UShort;                                  break;                              }                            case IFPIO.ObjectEnum.UInt:                              {                                  labelType = IFPIO.ObjectEnum.UInt;                                  break;                              }                            case IFPIO.ObjectEnum.Unknown:                              {                                  goto case IFPIO.ObjectEnum.Float;                              }                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The following statement contains a magic number: switch (labelType)                  {                      case IFPIO.ObjectEnum.Short:                          {                              tempvalue = map.BR.ReadInt16();                              break;                          }                        case IFPIO.ObjectEnum.Int:                          {                              tempvalue = map.BR.ReadInt32();                              break;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              tempvalue = map.BR.ReadUInt16();                              break;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              tempvalue = map.BR.ReadUInt32();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              tempvalue = map.BR.ReadSingle();                              break;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              tempvalue = map.BR.ReadSingle();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              int sidIndexer = map.BR.ReadInt16();                              tempvalue = map.Strings.Name[sidIndexer];                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              int tempint = map.BR.ReadInt32();                              int tagIndex = map.Functions.ForMeta.FindMetaByID(tempint);                              if (tempint != -1)                              {                                  tempvalue = map.MetaInfo.TagType[tagIndex] + " - " +                                              map.FileNames.Name[tagIndex];                              }                              else                              {                                  tempvalue = "null";                              }                                break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(32);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(64);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.String256:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(256);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              goto case IFPIO.ObjectEnum.String256;                          }                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The following statement contains a magic number: switch (labelType)                  {                      case IFPIO.ObjectEnum.Short:                          {                              tempvalue = map.BR.ReadInt16();                              break;                          }                        case IFPIO.ObjectEnum.Int:                          {                              tempvalue = map.BR.ReadInt32();                              break;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              tempvalue = map.BR.ReadUInt16();                              break;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              tempvalue = map.BR.ReadUInt32();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              tempvalue = map.BR.ReadSingle();                              break;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              tempvalue = map.BR.ReadSingle();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              int sidIndexer = map.BR.ReadInt16();                              tempvalue = map.Strings.Name[sidIndexer];                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              int tempint = map.BR.ReadInt32();                              int tagIndex = map.Functions.ForMeta.FindMetaByID(tempint);                              if (tempint != -1)                              {                                  tempvalue = map.MetaInfo.TagType[tagIndex] + " - " +                                              map.FileNames.Name[tagIndex];                              }                              else                              {                                  tempvalue = "null";                              }                                break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(32);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(64);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.String256:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(256);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              goto case IFPIO.ObjectEnum.String256;                          }                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The following statement contains a magic number: switch (labelType)                  {                      case IFPIO.ObjectEnum.Short:                          {                              tempvalue = map.BR.ReadInt16();                              break;                          }                        case IFPIO.ObjectEnum.Int:                          {                              tempvalue = map.BR.ReadInt32();                              break;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              tempvalue = map.BR.ReadUInt16();                              break;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              tempvalue = map.BR.ReadUInt32();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              tempvalue = map.BR.ReadSingle();                              break;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              tempvalue = map.BR.ReadSingle();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              int sidIndexer = map.BR.ReadInt16();                              tempvalue = map.Strings.Name[sidIndexer];                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              int tempint = map.BR.ReadInt32();                              int tagIndex = map.Functions.ForMeta.FindMetaByID(tempint);                              if (tempint != -1)                              {                                  tempvalue = map.MetaInfo.TagType[tagIndex] + " - " +                                              map.FileNames.Name[tagIndex];                              }                              else                              {                                  tempvalue = "null";                              }                                break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(32);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(64);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.String256:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(256);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              goto case IFPIO.ObjectEnum.String256;                          }                  }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: ComboBox refl = (ComboBox)c.Parent.Parent.Parent.Controls[1].Controls[2];
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: Value = "[" + c.Parent.Controls[2].Text.PadLeft(4) + "] " + c.Parent.Controls[1].Text;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: Value = "[" + c.Parent.Controls[2].Text.PadLeft(4) + "] " + c.Parent.Controls[1].Text;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: switch (c.Parent.ToString())                      {                          case "Entity.MetaEditor.Ident":                              char[] TagType = Value.Substring(1' 4).ToCharArray();                              int TagPath = ((Ident)c.Parent).tagIndex;                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write(TagType);                              map.BW.Write(map.MetaInfo.Ident[TagPath]);                              break;                                #region Bitmask                            case "Entity.MetaEditor.Bitmask":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Bitmask)c.Parent).bitCount)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Bitmask)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region DataValues                            case "Entity.MetaEditor.DataValues":                              map.BW.BaseStream.Position = mapOffset;                              switch (((DataValues)c.Parent).ValueType)                              {                                  case IFPIO.ObjectEnum.Byte:                                      map.BW.Write(byte.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Short:                                      map.BW.Write(short.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.UShort:                                      map.BW.Write(ushort.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Int:                                      map.BW.Write(int.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Float:                                  case IFPIO.ObjectEnum.Unknown:                                  case IFPIO.ObjectEnum.Unused:                                      map.BW.Write(Single.Parse(Value));                                      break;                                  default:                                      MessageBox.Show(                                          ((DataValues)c.Parent).ValueType +                                          " support not added (AKA forgotten)' please inform developer!");                                      count = chunkCount - 1;                                      break;                              }                                break;                                #endregion                                #region Enums                            case "Entity.MetaEditor.Enums":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Enums)c.Parent).enumType)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Enums)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Enums)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Enums)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region StringID                            case "Entity.MetaEditor.SID":                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write((short)((SID)c.Parent).sidIndexer);                              map.BW.Write((byte)0);                              map.BW.Write((byte)map.Strings.Length[((SID)c.Parent).sidIndexer]);                              break;                                #endregion                            default:                              MessageBox.Show(c.Parent + " support not added (AKA forgotten)' please inform developer!");                              count = chunkCount - 1;                              break;                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: switch (c.Parent.ToString())                      {                          case "Entity.MetaEditor.Ident":                              char[] TagType = Value.Substring(1' 4).ToCharArray();                              int TagPath = ((Ident)c.Parent).tagIndex;                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write(TagType);                              map.BW.Write(map.MetaInfo.Ident[TagPath]);                              break;                                #region Bitmask                            case "Entity.MetaEditor.Bitmask":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Bitmask)c.Parent).bitCount)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Bitmask)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region DataValues                            case "Entity.MetaEditor.DataValues":                              map.BW.BaseStream.Position = mapOffset;                              switch (((DataValues)c.Parent).ValueType)                              {                                  case IFPIO.ObjectEnum.Byte:                                      map.BW.Write(byte.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Short:                                      map.BW.Write(short.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.UShort:                                      map.BW.Write(ushort.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Int:                                      map.BW.Write(int.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Float:                                  case IFPIO.ObjectEnum.Unknown:                                  case IFPIO.ObjectEnum.Unused:                                      map.BW.Write(Single.Parse(Value));                                      break;                                  default:                                      MessageBox.Show(                                          ((DataValues)c.Parent).ValueType +                                          " support not added (AKA forgotten)' please inform developer!");                                      count = chunkCount - 1;                                      break;                              }                                break;                                #endregion                                #region Enums                            case "Entity.MetaEditor.Enums":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Enums)c.Parent).enumType)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Enums)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Enums)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Enums)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region StringID                            case "Entity.MetaEditor.SID":                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write((short)((SID)c.Parent).sidIndexer);                              map.BW.Write((byte)0);                              map.BW.Write((byte)map.Strings.Length[((SID)c.Parent).sidIndexer]);                              break;                                #endregion                            default:                              MessageBox.Show(c.Parent + " support not added (AKA forgotten)' please inform developer!");                              count = chunkCount - 1;                              break;                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: switch (c.Parent.ToString())                      {                          case "Entity.MetaEditor.Ident":                              char[] TagType = Value.Substring(1' 4).ToCharArray();                              int TagPath = ((Ident)c.Parent).tagIndex;                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write(TagType);                              map.BW.Write(map.MetaInfo.Ident[TagPath]);                              break;                                #region Bitmask                            case "Entity.MetaEditor.Bitmask":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Bitmask)c.Parent).bitCount)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Bitmask)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region DataValues                            case "Entity.MetaEditor.DataValues":                              map.BW.BaseStream.Position = mapOffset;                              switch (((DataValues)c.Parent).ValueType)                              {                                  case IFPIO.ObjectEnum.Byte:                                      map.BW.Write(byte.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Short:                                      map.BW.Write(short.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.UShort:                                      map.BW.Write(ushort.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Int:                                      map.BW.Write(int.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Float:                                  case IFPIO.ObjectEnum.Unknown:                                  case IFPIO.ObjectEnum.Unused:                                      map.BW.Write(Single.Parse(Value));                                      break;                                  default:                                      MessageBox.Show(                                          ((DataValues)c.Parent).ValueType +                                          " support not added (AKA forgotten)' please inform developer!");                                      count = chunkCount - 1;                                      break;                              }                                break;                                #endregion                                #region Enums                            case "Entity.MetaEditor.Enums":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Enums)c.Parent).enumType)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Enums)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Enums)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Enums)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region StringID                            case "Entity.MetaEditor.SID":                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write((short)((SID)c.Parent).sidIndexer);                              map.BW.Write((byte)0);                              map.BW.Write((byte)map.Strings.Length[((SID)c.Parent).sidIndexer]);                              break;                                #endregion                            default:                              MessageBox.Show(c.Parent + " support not added (AKA forgotten)' please inform developer!");                              count = chunkCount - 1;                              break;                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: switch (c.Parent.ToString())                      {                          case "Entity.MetaEditor.Ident":                              char[] TagType = Value.Substring(1' 4).ToCharArray();                              int TagPath = ((Ident)c.Parent).tagIndex;                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write(TagType);                              map.BW.Write(map.MetaInfo.Ident[TagPath]);                              break;                                #region Bitmask                            case "Entity.MetaEditor.Bitmask":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Bitmask)c.Parent).bitCount)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Bitmask)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region DataValues                            case "Entity.MetaEditor.DataValues":                              map.BW.BaseStream.Position = mapOffset;                              switch (((DataValues)c.Parent).ValueType)                              {                                  case IFPIO.ObjectEnum.Byte:                                      map.BW.Write(byte.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Short:                                      map.BW.Write(short.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.UShort:                                      map.BW.Write(ushort.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Int:                                      map.BW.Write(int.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Float:                                  case IFPIO.ObjectEnum.Unknown:                                  case IFPIO.ObjectEnum.Unused:                                      map.BW.Write(Single.Parse(Value));                                      break;                                  default:                                      MessageBox.Show(                                          ((DataValues)c.Parent).ValueType +                                          " support not added (AKA forgotten)' please inform developer!");                                      count = chunkCount - 1;                                      break;                              }                                break;                                #endregion                                #region Enums                            case "Entity.MetaEditor.Enums":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Enums)c.Parent).enumType)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Enums)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Enums)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Enums)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region StringID                            case "Entity.MetaEditor.SID":                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write((short)((SID)c.Parent).sidIndexer);                              map.BW.Write((byte)0);                              map.BW.Write((byte)map.Strings.Length[((SID)c.Parent).sidIndexer]);                              break;                                #endregion                            default:                              MessageBox.Show(c.Parent + " support not added (AKA forgotten)' please inform developer!");                              count = chunkCount - 1;                              break;                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: switch (c.Parent.ToString())                      {                          case "Entity.MetaEditor.Ident":                              char[] TagType = Value.Substring(1' 4).ToCharArray();                              int TagPath = ((Ident)c.Parent).tagIndex;                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write(TagType);                              map.BW.Write(map.MetaInfo.Ident[TagPath]);                              break;                                #region Bitmask                            case "Entity.MetaEditor.Bitmask":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Bitmask)c.Parent).bitCount)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Bitmask)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region DataValues                            case "Entity.MetaEditor.DataValues":                              map.BW.BaseStream.Position = mapOffset;                              switch (((DataValues)c.Parent).ValueType)                              {                                  case IFPIO.ObjectEnum.Byte:                                      map.BW.Write(byte.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Short:                                      map.BW.Write(short.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.UShort:                                      map.BW.Write(ushort.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Int:                                      map.BW.Write(int.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Float:                                  case IFPIO.ObjectEnum.Unknown:                                  case IFPIO.ObjectEnum.Unused:                                      map.BW.Write(Single.Parse(Value));                                      break;                                  default:                                      MessageBox.Show(                                          ((DataValues)c.Parent).ValueType +                                          " support not added (AKA forgotten)' please inform developer!");                                      count = chunkCount - 1;                                      break;                              }                                break;                                #endregion                                #region Enums                            case "Entity.MetaEditor.Enums":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Enums)c.Parent).enumType)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Enums)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Enums)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Enums)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region StringID                            case "Entity.MetaEditor.SID":                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write((short)((SID)c.Parent).sidIndexer);                              map.BW.Write((byte)0);                              map.BW.Write((byte)map.Strings.Length[((SID)c.Parent).sidIndexer]);                              break;                                #endregion                            default:                              MessageBox.Show(c.Parent + " support not added (AKA forgotten)' please inform developer!");                              count = chunkCount - 1;                              break;                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: switch (c.Parent.ToString())                      {                          case "Entity.MetaEditor.Ident":                              char[] TagType = Value.Substring(1' 4).ToCharArray();                              int TagPath = ((Ident)c.Parent).tagIndex;                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write(TagType);                              map.BW.Write(map.MetaInfo.Ident[TagPath]);                              break;                                #region Bitmask                            case "Entity.MetaEditor.Bitmask":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Bitmask)c.Parent).bitCount)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Bitmask)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region DataValues                            case "Entity.MetaEditor.DataValues":                              map.BW.BaseStream.Position = mapOffset;                              switch (((DataValues)c.Parent).ValueType)                              {                                  case IFPIO.ObjectEnum.Byte:                                      map.BW.Write(byte.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Short:                                      map.BW.Write(short.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.UShort:                                      map.BW.Write(ushort.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Int:                                      map.BW.Write(int.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Float:                                  case IFPIO.ObjectEnum.Unknown:                                  case IFPIO.ObjectEnum.Unused:                                      map.BW.Write(Single.Parse(Value));                                      break;                                  default:                                      MessageBox.Show(                                          ((DataValues)c.Parent).ValueType +                                          " support not added (AKA forgotten)' please inform developer!");                                      count = chunkCount - 1;                                      break;                              }                                break;                                #endregion                                #region Enums                            case "Entity.MetaEditor.Enums":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Enums)c.Parent).enumType)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Enums)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Enums)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Enums)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region StringID                            case "Entity.MetaEditor.SID":                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write((short)((SID)c.Parent).sidIndexer);                              map.BW.Write((byte)0);                              map.BW.Write((byte)map.Strings.Length[((SID)c.Parent).sidIndexer]);                              break;                                #endregion                            default:                              MessageBox.Show(c.Parent + " support not added (AKA forgotten)' please inform developer!");                              count = chunkCount - 1;                              break;                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following statement contains a magic number: switch (c.Parent.ToString())                      {                          case "Entity.MetaEditor.Ident":                              char[] TagType = Value.Substring(1' 4).ToCharArray();                              int TagPath = ((Ident)c.Parent).tagIndex;                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write(TagType);                              map.BW.Write(map.MetaInfo.Ident[TagPath]);                              break;                                #region Bitmask                            case "Entity.MetaEditor.Bitmask":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Bitmask)c.Parent).bitCount)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Bitmask)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region DataValues                            case "Entity.MetaEditor.DataValues":                              map.BW.BaseStream.Position = mapOffset;                              switch (((DataValues)c.Parent).ValueType)                              {                                  case IFPIO.ObjectEnum.Byte:                                      map.BW.Write(byte.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Short:                                      map.BW.Write(short.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.UShort:                                      map.BW.Write(ushort.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Int:                                      map.BW.Write(int.Parse(Value));                                      break;                                  case IFPIO.ObjectEnum.Float:                                  case IFPIO.ObjectEnum.Unknown:                                  case IFPIO.ObjectEnum.Unused:                                      map.BW.Write(Single.Parse(Value));                                      break;                                  default:                                      MessageBox.Show(                                          ((DataValues)c.Parent).ValueType +                                          " support not added (AKA forgotten)' please inform developer!");                                      count = chunkCount - 1;                                      break;                              }                                break;                                #endregion                                #region Enums                            case "Entity.MetaEditor.Enums":                              map.BW.BaseStream.Position = mapOffset;                              switch (((Enums)c.Parent).enumType)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Enums)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Enums)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Enums)c.Parent).Value));                                      break;                              }                                break;                                #endregion                                #region StringID                            case "Entity.MetaEditor.SID":                              map.BW.BaseStream.Position = mapOffset;                              map.BW.Write((short)((SID)c.Parent).sidIndexer);                              map.BW.Write((byte)0);                              map.BW.Write((byte)map.Strings.Length[((SID)c.Parent).sidIndexer]);                              break;                                #endregion                            default:                              MessageBox.Show(c.Parent + " support not added (AKA forgotten)' please inform developer!");                              count = chunkCount - 1;                              break;                      }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (c.ToString())              {                  case "Entity.MetaEditor.Bitmask":                      Bitmask bt = (Bitmask)c;                      name = bt.EntName;                      offset = bt.offsetInMap;                      chunkoffset = bt.chunkOffset;                      lineNum = bt.LineNumber;                      sizeCount = bt.bitCount >> 3;                      break;                  case "Entity.MetaEditor.DataValues":                      DataValues dv = (DataValues)c;                      name = dv.EntName;                      offset = dv.offsetInMap;                      chunkoffset = dv.chunkOffset;                      lineNum = dv.LineNumber;                      switch (dv.ValueType)                      {                          case IFPIO.ObjectEnum.Byte:                              // case DataValues.ENTType.ub:                              sizeCount = 1;                              break;                          case IFPIO.ObjectEnum.Short:                          case IFPIO.ObjectEnum.UShort:                              sizeCount = 2;                              break;                          case IFPIO.ObjectEnum.Float:                          case IFPIO.ObjectEnum.Int:                          case IFPIO.ObjectEnum.UInt:                              sizeCount = 4;                              break;                      }                        break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (c.ToString())              {                  case "Entity.MetaEditor.Bitmask":                      Bitmask bt = (Bitmask)c;                      name = bt.EntName;                      offset = bt.offsetInMap;                      chunkoffset = bt.chunkOffset;                      lineNum = bt.LineNumber;                      sizeCount = bt.bitCount >> 3;                      break;                  case "Entity.MetaEditor.DataValues":                      DataValues dv = (DataValues)c;                      name = dv.EntName;                      offset = dv.offsetInMap;                      chunkoffset = dv.chunkOffset;                      lineNum = dv.LineNumber;                      switch (dv.ValueType)                      {                          case IFPIO.ObjectEnum.Byte:                              // case DataValues.ENTType.ub:                              sizeCount = 1;                              break;                          case IFPIO.ObjectEnum.Short:                          case IFPIO.ObjectEnum.UShort:                              sizeCount = 2;                              break;                          case IFPIO.ObjectEnum.Float:                          case IFPIO.ObjectEnum.Int:                          case IFPIO.ObjectEnum.UInt:                              sizeCount = 4;                              break;                      }                        break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (c.ToString())              {                  case "Entity.MetaEditor.Bitmask":                      Bitmask bt = (Bitmask)c;                      name = bt.EntName;                      offset = bt.offsetInMap;                      chunkoffset = bt.chunkOffset;                      lineNum = bt.LineNumber;                      sizeCount = bt.bitCount >> 3;                      break;                  case "Entity.MetaEditor.DataValues":                      DataValues dv = (DataValues)c;                      name = dv.EntName;                      offset = dv.offsetInMap;                      chunkoffset = dv.chunkOffset;                      lineNum = dv.LineNumber;                      switch (dv.ValueType)                      {                          case IFPIO.ObjectEnum.Byte:                              // case DataValues.ENTType.ub:                              sizeCount = 1;                              break;                          case IFPIO.ObjectEnum.Short:                          case IFPIO.ObjectEnum.UShort:                              sizeCount = 2;                              break;                          case IFPIO.ObjectEnum.Float:                          case IFPIO.ObjectEnum.Int:                          case IFPIO.ObjectEnum.UInt:                              sizeCount = 4;                              break;                      }                        break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following statement contains a magic number: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,identContext_Opening,The following statement contains a magic number: tag = "[" + c.Parent.Controls[2].Text + "] " + c.Text;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.identContext.Size = new System.Drawing.Size(117' 120);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.identContext.Size = new System.Drawing.Size(117' 120);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.gotoToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.gotoToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.copyToAllToolStripMenuItem.Size = new System.Drawing.Size(186' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.copyToAllToolStripMenuItem.Size = new System.Drawing.Size(186' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator.Size = new System.Drawing.Size(113' 6);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator.Size = new System.Drawing.Size(113' 6);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.cutToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.cutToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.copyToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.copyToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.pasteToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.pasteToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripMenuItem.Size = new System.Drawing.Size(116' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.topPanel.MinimumSize = new System.Drawing.Size(0' 28);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.topPanel.Size = new System.Drawing.Size(713' 28);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.topPanel.Size = new System.Drawing.Size(713' 28);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempButton.Location = new System.Drawing.Point(5' 1);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempButton.Size = new System.Drawing.Size(28' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempButton.Size = new System.Drawing.Size(28' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempLabel.Location = new System.Drawing.Point(34' 6);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempLabel.Location = new System.Drawing.Point(34' 6);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempLabel.Size = new System.Drawing.Size(160' 13);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempLabel.Size = new System.Drawing.Size(160' 13);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempComboBox.Location = new System.Drawing.Point(200' 2);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempComboBox.Location = new System.Drawing.Point(200' 2);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempComboBox.Size = new System.Drawing.Size(140' 21);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempComboBox.Size = new System.Drawing.Size(140' 21);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.tempComboBox.TabIndex = 2;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.addButton.Location = new System.Drawing.Point(350' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.addButton.Location = new System.Drawing.Point(350' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.addButton.Size = new System.Drawing.Size(40' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.addButton.Size = new System.Drawing.Size(40' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.addButton.TabIndex = 3;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.insertButton.Location = new System.Drawing.Point(396' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.insertButton.Location = new System.Drawing.Point(396' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.insertButton.Size = new System.Drawing.Size(55' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.insertButton.Size = new System.Drawing.Size(55' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.insertButton.TabIndex = 4;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.duplicateButton.Location = new System.Drawing.Point(457' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.duplicateButton.Location = new System.Drawing.Point(457' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.duplicateButton.Size = new System.Drawing.Size(60' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.duplicateButton.Size = new System.Drawing.Size(60' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.duplicateButton.TabIndex = 5;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteButton.Location = new System.Drawing.Point(523' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteButton.Location = new System.Drawing.Point(523' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteButton.Size = new System.Drawing.Size(55' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteButton.Size = new System.Drawing.Size(55' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteButton.TabIndex = 6;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteAllButton.Location = new System.Drawing.Point(584' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteAllButton.Location = new System.Drawing.Point(584' 3);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteAllButton.Size = new System.Drawing.Size(65' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteAllButton.Size = new System.Drawing.Size(65' 22);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.deleteAllButton.TabIndex = 7;
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.bottomPanel.Location = new System.Drawing.Point(0' 28);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.bottomPanel.Size = new System.Drawing.Size(713' 0);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(4' 28);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(4' 28);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(713' 75);
Magic Number,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(713' 75);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,Poke,The following statement contains a magic number: uint StringID =                      (uint)(((ushort)this.sidIndexer) | ((byte)map.Strings.Length[this.sidIndexer] << 24));
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,Poke,The following statement contains a magic number: RTH_Imports.Poke(Address' StringID' 32);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label3.Padding = new System.Windows.Forms.Padding(0' 3' 0' 0);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(68' 16);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(68' 16);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 3;
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(175' 21);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(175' 21);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(457' 7);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(457' 7);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label1.Padding = new System.Windows.Forms.Padding(0' 3' 0' 0);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(25' 16);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(25' 16);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(485' 30);
Magic Number,MetaEditor.Components,SID,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\SID.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(485' 30);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,Poke,The following statement contains a magic number: RTH_Imports.Poke(Address' (uint)this.identInt32' 32);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,Populate,The following statement contains a magic number: char[] cc = map.BR.ReadChars(4);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,Save,The following statement contains a magic number: tempList.AddRange(this.tagType.ToCharArray(0' 4));
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,Save,The following statement contains a magic number: map.BW.BaseStream.Position = this.offsetInMap + 4;
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,FillTagBoxWithNames,The following statement contains a magic number: this.Controls[2].Text != "null"
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,comboBox1_TextChanged,The following statement contains a magic number: ((ComboBox)sender).Width = (((ComboBox)sender).Text.Length * 5) + 50;
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,comboBox1_TextChanged,The following statement contains a magic number: ((ComboBox)sender).Width = (((ComboBox)sender).Text.Length * 5) + 50;
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(653' 7);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(653' 7);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 4;
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(3' 7);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label4.Padding = new System.Windows.Forms.Padding(0' 3' 0' 0);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(191' 16);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(191' 16);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(263' 4);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(263' 4);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(358' 21);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(358' 21);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.TabIndex = 3;
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.Location = new System.Drawing.Point(200' 4);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.Size = new System.Drawing.Size(57' 21);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.Size = new System.Drawing.Size(57' 21);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.comboBox2.TabIndex = 2;
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 5' 0' 0);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(682' 30);
Magic Number,MetaEditor.Components,TagBlock,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\TagBlock.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(682' 30);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,getSizeOf,The following statement contains a magic number: switch (name.ToLower())              {                  case "byte":                  case "byte_flags":                  case "char_enum":                      return 1;                  case "enum":                  case "int16":                  case "short":                  case "word_flags":                      return 2;                  case "int":                  case "float":                  case "long_enum":                  case "long_flags":                  case "sid":                      return 4;                  case "ident":                  case "tagblock":                      return 8;                  case "string32":                      return 32;                  case "unicode64":                      return 64;                  case "string":                  case "string256":                  case "unicode256":                      return 256;              }
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,getSizeOf,The following statement contains a magic number: switch (name.ToLower())              {                  case "byte":                  case "byte_flags":                  case "char_enum":                      return 1;                  case "enum":                  case "int16":                  case "short":                  case "word_flags":                      return 2;                  case "int":                  case "float":                  case "long_enum":                  case "long_flags":                  case "sid":                      return 4;                  case "ident":                  case "tagblock":                      return 8;                  case "string32":                      return 32;                  case "unicode64":                      return 64;                  case "string":                  case "string256":                  case "unicode256":                      return 256;              }
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,getSizeOf,The following statement contains a magic number: switch (name.ToLower())              {                  case "byte":                  case "byte_flags":                  case "char_enum":                      return 1;                  case "enum":                  case "int16":                  case "short":                  case "word_flags":                      return 2;                  case "int":                  case "float":                  case "long_enum":                  case "long_flags":                  case "sid":                      return 4;                  case "ident":                  case "tagblock":                      return 8;                  case "string32":                      return 32;                  case "unicode64":                      return 64;                  case "string":                  case "string256":                  case "unicode256":                      return 256;              }
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,getSizeOf,The following statement contains a magic number: switch (name.ToLower())              {                  case "byte":                  case "byte_flags":                  case "char_enum":                      return 1;                  case "enum":                  case "int16":                  case "short":                  case "word_flags":                      return 2;                  case "int":                  case "float":                  case "long_enum":                  case "long_flags":                  case "sid":                      return 4;                  case "ident":                  case "tagblock":                      return 8;                  case "string32":                      return 32;                  case "unicode64":                      return 64;                  case "string":                  case "string256":                  case "unicode256":                      return 256;              }
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,getSizeOf,The following statement contains a magic number: switch (name.ToLower())              {                  case "byte":                  case "byte_flags":                  case "char_enum":                      return 1;                  case "enum":                  case "int16":                  case "short":                  case "word_flags":                      return 2;                  case "int":                  case "float":                  case "long_enum":                  case "long_flags":                  case "sid":                      return 4;                  case "ident":                  case "tagblock":                      return 8;                  case "string32":                      return 32;                  case "unicode64":                      return 64;                  case "string":                  case "string256":                  case "unicode256":                      return 256;              }
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,getSizeOf,The following statement contains a magic number: switch (name.ToLower())              {                  case "byte":                  case "byte_flags":                  case "char_enum":                      return 1;                  case "enum":                  case "int16":                  case "short":                  case "word_flags":                      return 2;                  case "int":                  case "float":                  case "long_enum":                  case "long_flags":                  case "sid":                      return 4;                  case "ident":                  case "tagblock":                      return 8;                  case "string32":                      return 32;                  case "unicode64":                      return 64;                  case "string":                  case "string256":                  case "unicode256":                      return 256;              }
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(581' 304);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(581' 304);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 91;
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.labelOrigType.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Italic' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.labelOrigType.Location = new System.Drawing.Point(3' 0);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.labelOrigType.Padding = new System.Windows.Forms.Padding(5' 5' 0' 1);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.labelOrigType.Padding = new System.Windows.Forms.Padding(5' 5' 0' 1);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.labelOrigType.Size = new System.Drawing.Size(40' 19);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.labelOrigType.Size = new System.Drawing.Size(40' 19);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(395' 137);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(395' 137);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(126' 21);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(126' 21);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(527' 136);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(527' 136);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(27' 22);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(27' 22);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(0' 308);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(581' 13);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(581' 13);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(581' 321);
Magic Number,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(581' 321);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,selectionBox,The following statement contains a magic number: this.button1.Size = new Size(27' 22);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,selectionBox,The following statement contains a magic number: this.button1.Size = new Size(27' 22);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,selectionBox,The following statement contains a magic number: this.comboBox1.Size = new Size(126' 21);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,selectionBox,The following statement contains a magic number: this.comboBox1.Size = new Size(126' 21);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,selectionBox,The following statement contains a magic number: this.Size = new Size(400' 24);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,selectionBox,The following statement contains a magic number: this.Size = new Size(400' 24);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The following statement contains a magic number: switch (((dataTypeStruct)comboBox1.SelectedItem).name.ToLower())                  {                      /*                      parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Byte' parent.lineNum));                      parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Short' parent.lineNum));                      parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Int' parent.lineNum));                      parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Float' parent.lineNum));                  */                      case "byte":                      case "short":                      case "ushort":                      case "int":                      case "uint":                      case "float":                      case "unknown":                      case "unused":                          con = new DataValues(                              parent.name'                              null'                              parent.chunkoffset'                              (IFPIO.ObjectEnum)                              Enum.Parse(typeof(IFPIO.ObjectEnum)' ((dataTypeStruct)comboBox1.SelectedItem).name' true)'                              parent.lineNum);                          break;                      case "char_enum":                      case "enum":                      case "long_enum":                          options = new IFPIO.Option[((dataTypeStruct)comboBox1.SelectedItem).size << 3];                            // Size * 8 bits                          for (int x = 0; x < options.Length; x++)                          {                              options[x] = new IFPIO.Option("Bit " + x' ""' x.ToString()' parent.lineNum);                          }                            if (parent.splitContainer1.Panel1.Controls[0] is Bitmask)                          {                              Bitmask b = (Bitmask)parent.splitContainer1.Panel1.Controls[0];                              foreach (IFPIO.Option o in b.Options)                              {                                  if (o.value < options.Length)                                  {                                      options[o.value].name = o.name;                                  }                              }                          }                            ;                          if (parent.splitContainer1.Panel1.Controls[0] is Enums)                          {                              Enums en = (Enums)parent.splitContainer1.Panel1.Controls[0];                              foreach (IFPIO.Option o in en.Options)                              {                                  if (o.value < options.Length)                                  {                                      options[o.value].name = o.name;                                  }                              }                          }                            ;                          con = new Enums(parent.name' null' parent.chunkoffset' options.Length' options' parent.lineNum);                          break;                      case "byte_flags":                      case "word_flags":                      case "long_flags":                          options = new IFPIO.Option[((dataTypeStruct)comboBox1.SelectedItem).size << 3];                            // Size * 8 bits                          for (int x = 0; x < options.Length; x++)                          {                              options[x] = new IFPIO.Option("Bit " + x' ""' x.ToString()' parent.lineNum);                          }                            if (parent.splitContainer1.Panel1.Controls[0] is Bitmask)                          {                              Bitmask b = (Bitmask)parent.splitContainer1.Panel1.Controls[0];                              foreach (IFPIO.Option o in b.Options)                              {                                  options[o.value].name = o.name;                              }                          }                            ;                          if (parent.splitContainer1.Panel1.Controls[0] is Enums)                          {                              Enums en = (Enums)parent.splitContainer1.Panel1.Controls[0];                              foreach (IFPIO.Option o in en.Options)                              {                                  options[o.value].name = o.name;                              }                          }                            ;                          con = new Bitmask(                              parent.name' null' parent.chunkoffset' options.Length' options' parent.lineNum);                          break;                      case "stringid":                          con = new SID(parent.name' null' parent.chunkoffset' parent.lineNum);                          break;                      case "string":                          con = new EntStrings(                              parent.name'                              null'                              parent.chunkoffset'                              ((dataTypeStruct)comboBox1.SelectedItem).size'                              false'                              parent.lineNum);                          break;                      case "unicodestring":                          con = new EntStrings(                              parent.name'                              null'                              parent.chunkoffset'                              ((dataTypeStruct)comboBox1.SelectedItem).size'                              true'                              parent.lineNum);                          break;                      case "block":                          con = new TagBlock(parent.name' null' parent.chunkoffset' parent.lineNum);                          break;                      case "ident":                          con = new Ident(parent.name' null' parent.chunkoffset' true' parent.lineNum);                          break;                      case "struct":                            // Unhandled                          //int ifkdn = 0;                          break;                      default:                          {                              return;                          }                  }
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The following statement contains a magic number: switch (((dataTypeStruct)comboBox1.SelectedItem).name.ToLower())                  {                      /*                      parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Byte' parent.lineNum));                      parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Short' parent.lineNum));                      parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Int' parent.lineNum));                      parent.splitContainer1.Panel2.Controls.Add(new DataValues(parent.name' null' parent.chunkoffset' IFPIO.ObjectEnum.Float' parent.lineNum));                  */                      case "byte":                      case "short":                      case "ushort":                      case "int":                      case "uint":                      case "float":                      case "unknown":                      case "unused":                          con = new DataValues(                              parent.name'                              null'                              parent.chunkoffset'                              (IFPIO.ObjectEnum)                              Enum.Parse(typeof(IFPIO.ObjectEnum)' ((dataTypeStruct)comboBox1.SelectedItem).name' true)'                              parent.lineNum);                          break;                      case "char_enum":                      case "enum":                      case "long_enum":                          options = new IFPIO.Option[((dataTypeStruct)comboBox1.SelectedItem).size << 3];                            // Size * 8 bits                          for (int x = 0; x < options.Length; x++)                          {                              options[x] = new IFPIO.Option("Bit " + x' ""' x.ToString()' parent.lineNum);                          }                            if (parent.splitContainer1.Panel1.Controls[0] is Bitmask)                          {                              Bitmask b = (Bitmask)parent.splitContainer1.Panel1.Controls[0];                              foreach (IFPIO.Option o in b.Options)                              {                                  if (o.value < options.Length)                                  {                                      options[o.value].name = o.name;                                  }                              }                          }                            ;                          if (parent.splitContainer1.Panel1.Controls[0] is Enums)                          {                              Enums en = (Enums)parent.splitContainer1.Panel1.Controls[0];                              foreach (IFPIO.Option o in en.Options)                              {                                  if (o.value < options.Length)                                  {                                      options[o.value].name = o.name;                                  }                              }                          }                            ;                          con = new Enums(parent.name' null' parent.chunkoffset' options.Length' options' parent.lineNum);                          break;                      case "byte_flags":                      case "word_flags":                      case "long_flags":                          options = new IFPIO.Option[((dataTypeStruct)comboBox1.SelectedItem).size << 3];                            // Size * 8 bits                          for (int x = 0; x < options.Length; x++)                          {                              options[x] = new IFPIO.Option("Bit " + x' ""' x.ToString()' parent.lineNum);                          }                            if (parent.splitContainer1.Panel1.Controls[0] is Bitmask)                          {                              Bitmask b = (Bitmask)parent.splitContainer1.Panel1.Controls[0];                              foreach (IFPIO.Option o in b.Options)                              {                                  options[o.value].name = o.name;                              }                          }                            ;                          if (parent.splitContainer1.Panel1.Controls[0] is Enums)                          {                              Enums en = (Enums)parent.splitContainer1.Panel1.Controls[0];                              foreach (IFPIO.Option o in en.Options)                              {                                  options[o.value].name = o.name;                              }                          }                            ;                          con = new Bitmask(                              parent.name' null' parent.chunkoffset' options.Length' options' parent.lineNum);                          break;                      case "stringid":                          con = new SID(parent.name' null' parent.chunkoffset' parent.lineNum);                          break;                      case "string":                          con = new EntStrings(                              parent.name'                              null'                              parent.chunkoffset'                              ((dataTypeStruct)comboBox1.SelectedItem).size'                              false'                              parent.lineNum);                          break;                      case "unicodestring":                          con = new EntStrings(                              parent.name'                              null'                              parent.chunkoffset'                              ((dataTypeStruct)comboBox1.SelectedItem).size'                              true'                              parent.lineNum);                          break;                      case "block":                          con = new TagBlock(parent.name' null' parent.chunkoffset' parent.lineNum);                          break;                      case "ident":                          con = new Ident(parent.name' null' parent.chunkoffset' true' parent.lineNum);                          break;                      case "struct":                            // Unhandled                          //int ifkdn = 0;                          break;                      default:                          {                              return;                          }                  }
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The following statement contains a magic number: but.Size = new Size(30' 30);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The following statement contains a magic number: but.Size = new Size(30' 30);
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The following statement contains a magic number: Point loc = con.Controls[con.Controls.Count - 2].Location;
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The following statement contains a magic number: loc.X -= 50;
Magic Number,MetaEditor.Forms,selectionBox,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,button1_Click,The following statement contains a magic number: con.Controls[con.Controls.Count - 2].Location = loc;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkbReflexives.Location = new System.Drawing.Point(12' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkbReflexives.Location = new System.Drawing.Point(12' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkbReflexives.Size = new System.Drawing.Size(75' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkbReflexives.Size = new System.Drawing.Size(75' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(159' 9);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(159' 9);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(166' 13);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(166' 13);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBIdents.Location = new System.Drawing.Point(93' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBIdents.Location = new System.Drawing.Point(93' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBIdents.Size = new System.Drawing.Size(55' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBIdents.Size = new System.Drawing.Size(55' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBIdents.TabIndex = 2;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBSIDS.Location = new System.Drawing.Point(154' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBSIDS.Location = new System.Drawing.Point(154' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBSIDS.Size = new System.Drawing.Size(70' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBSIDS.Size = new System.Drawing.Size(70' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBSIDS.TabIndex = 3;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBFloats.Location = new System.Drawing.Point(414' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBFloats.Location = new System.Drawing.Point(414' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBFloats.Size = new System.Drawing.Size(54' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBFloats.Size = new System.Drawing.Size(54' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBFloats.TabIndex = 4;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString32s.Location = new System.Drawing.Point(12' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString32s.Location = new System.Drawing.Point(12' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString32s.Size = new System.Drawing.Size(70' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString32s.Size = new System.Drawing.Size(70' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString32s.TabIndex = 5;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString256s.Location = new System.Drawing.Point(88' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString256s.Location = new System.Drawing.Point(88' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString256s.Size = new System.Drawing.Size(76' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString256s.Size = new System.Drawing.Size(76' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBString256s.TabIndex = 6;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString64s.Location = new System.Drawing.Point(170' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString64s.Location = new System.Drawing.Point(170' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString64s.Size = new System.Drawing.Size(113' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString64s.Size = new System.Drawing.Size(113' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString64s.TabIndex = 7;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString256s.Location = new System.Drawing.Point(289' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString256s.Location = new System.Drawing.Point(289' 48);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString256s.Size = new System.Drawing.Size(119' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString256s.Size = new System.Drawing.Size(119' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUnicodeString256s.TabIndex = 8;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInts.Location = new System.Drawing.Point(230' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInts.Location = new System.Drawing.Point(230' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInts.Size = new System.Drawing.Size(43' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInts.Size = new System.Drawing.Size(43' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInts.TabIndex = 9;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUints.Location = new System.Drawing.Point(279' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUints.Location = new System.Drawing.Point(279' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUints.Size = new System.Drawing.Size(50' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUints.Size = new System.Drawing.Size(50' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUints.TabIndex = 10;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBShorts.Location = new System.Drawing.Point(335' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBShorts.Location = new System.Drawing.Point(335' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBShorts.Size = new System.Drawing.Size(56' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBShorts.Size = new System.Drawing.Size(56' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBShorts.TabIndex = 11;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUshorts.Location = new System.Drawing.Point(397' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUshorts.Location = new System.Drawing.Point(397' 25);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUshorts.Size = new System.Drawing.Size(62' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUshorts.Size = new System.Drawing.Size(62' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUshorts.TabIndex = 12;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask32s.Location = new System.Drawing.Point(12' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask32s.Location = new System.Drawing.Point(12' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask32s.Size = new System.Drawing.Size(80' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask32s.Size = new System.Drawing.Size(80' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask32s.TabIndex = 13;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask16s.Location = new System.Drawing.Point(98' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask16s.Location = new System.Drawing.Point(98' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask16s.Size = new System.Drawing.Size(80' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask16s.Size = new System.Drawing.Size(80' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask16s.TabIndex = 14;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask8s.Location = new System.Drawing.Point(184' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask8s.Location = new System.Drawing.Point(184' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask8s.Size = new System.Drawing.Size(74' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask8s.Size = new System.Drawing.Size(74' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBitmask8s.TabIndex = 15;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum32s.Location = new System.Drawing.Point(264' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum32s.Location = new System.Drawing.Point(264' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum32s.Size = new System.Drawing.Size(70' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum32s.Size = new System.Drawing.Size(70' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum32s.TabIndex = 16;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum16s.Location = new System.Drawing.Point(340' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum16s.Location = new System.Drawing.Point(340' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum16s.Size = new System.Drawing.Size(70' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum16s.Size = new System.Drawing.Size(70' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum16s.TabIndex = 17;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum8s.Location = new System.Drawing.Point(416' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum8s.Location = new System.Drawing.Point(416' 71);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum8s.Size = new System.Drawing.Size(64' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum8s.Size = new System.Drawing.Size(64' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBEnum8s.TabIndex = 18;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex32s.Location = new System.Drawing.Point(12' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex32s.Location = new System.Drawing.Point(12' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex32s.Size = new System.Drawing.Size(102' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex32s.Size = new System.Drawing.Size(102' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex32s.TabIndex = 19;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex16s.Location = new System.Drawing.Point(120' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex16s.Location = new System.Drawing.Point(120' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex16s.Size = new System.Drawing.Size(102' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex16s.Size = new System.Drawing.Size(102' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex16s.TabIndex = 20;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex8s.Location = new System.Drawing.Point(228' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex8s.Location = new System.Drawing.Point(228' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex8s.Size = new System.Drawing.Size(96' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex8s.Size = new System.Drawing.Size(96' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBlockIndex8s.TabIndex = 21;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBytes.Location = new System.Drawing.Point(330' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBytes.Location = new System.Drawing.Point(330' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBytes.Size = new System.Drawing.Size(52' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBytes.Size = new System.Drawing.Size(52' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBBytes.TabIndex = 22;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttOK.Location = new System.Drawing.Point(333' 138);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttOK.Location = new System.Drawing.Point(333' 138);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttOK.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttOK.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttOK.TabIndex = 23;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.Location = new System.Drawing.Point(414' 138);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.Location = new System.Drawing.Point(414' 138);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCancel.TabIndex = 24;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUndefined.Location = new System.Drawing.Point(388' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUndefined.Location = new System.Drawing.Point(388' 94);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUndefined.Size = new System.Drawing.Size(80' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUndefined.Size = new System.Drawing.Size(80' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBUndefined.TabIndex = 25;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInvisibles.Location = new System.Drawing.Point(12' 142);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInvisibles.Location = new System.Drawing.Point(12' 142);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInvisibles.Size = new System.Drawing.Size(99' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInvisibles.Size = new System.Drawing.Size(99' 17);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.checkBInvisibles.TabIndex = 26;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttUncheckAll.Location = new System.Drawing.Point(254' 138);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttUncheckAll.Location = new System.Drawing.Point(254' 138);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttUncheckAll.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttUncheckAll.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttUncheckAll.TabIndex = 27;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCheckAll.Location = new System.Drawing.Point(173' 138);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCheckAll.Location = new System.Drawing.Point(173' 138);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCheckAll.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCheckAll.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.buttCheckAll.TabIndex = 28;
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(501' 173);
Magic Number,MetaEditor.Forms,ItemsToShow,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ItemsToShow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(501' 173);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following statement contains a magic number: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,ButtWritePlugin_Click,The following statement contains a magic number: counter < 2
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttBitmaskMoveDown_Click,The following statement contains a magic number: this.combBitmaskBits.SelectedIndex < 1 ||                  this.combBitmaskBits.SelectedIndex > this.combBitmaskBits.Items.Count - 2
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttBitmaskMoveUp_Click,The following statement contains a magic number: this.combBitmaskBits.SelectedIndex < 2
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttEnumsMoveItemDownOne_Click,The following statement contains a magic number: this.combEnumsItems.SelectedIndex < 1 ||                  this.combEnumsItems.SelectedIndex > this.combEnumsItems.Items.Count - 2
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttEnumsMoveUpOne_Click,The following statement contains a magic number: this.combEnumsItems.SelectedIndex < 2
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The following statement contains a magic number: switch ((IFPIO.ObjectEnum)tempIndexer)              {                      case IFPIO.ObjectEnum.Struct:                      {                          this.buttGoTo.Tag = new IFPIO.Reflexive(                              lineNumber' offset' visible' name' string.Empty' string.Empty' null' 0' 0' false' parent' prevSibling);                          this.radbReflexiveHCTrue.Checked = ((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.radbReflexiveHCFalse.Checked = !((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.txtbReflexiveChunkSize.Text = ((IFPIO.Reflexive)this.buttGoTo.Tag).chunkSize.ToString();                          this.LoadReflexiveLabel(                              ((IFPIO.Reflexive)this.buttGoTo.Tag).child' ((IFPIO.Reflexive)this.buttGoTo.Tag).label);                          this.panReflexiveContainer.Show();                          break;                      }                        #region Strings                    case IFPIO.ObjectEnum.String32:                  case IFPIO.ObjectEnum.String256:                  case IFPIO.ObjectEnum.UnicodeString64:                  case IFPIO.ObjectEnum.UnicodeString256:                      {                          bool unicode = false;                          int ifpSize = 256;                          switch ((IFPIO.ObjectEnum)tempIndexer)                          {                              case IFPIO.ObjectEnum.String32:                                  {                                      ifpSize = 32;                                      break;                                  }                                case IFPIO.ObjectEnum.String256:                                  {                                      ifpSize = 256;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString64:                                  {                                      ifpSize = 64;                                      unicode = true;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString256:                                  {                                      ifpSize = 256;                                      unicode = true;                                      break;                                  }                          }                            this.buttGoTo.Tag = new IFPIO.IFPString(                              name' string.Empty' visible' offset' ifpSize' unicode' lineNumber' parent' prevSibling);                          this.radbStringString.Checked = !((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.radbStringUnicode.Checked = ((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.combStringSize.Text = ((IFPIO.IFPString)this.buttGoTo.Tag).size.ToString();                          this.panStringContainer.Show();                          break;                      }                    #endregion                    #region Ints and Bytes                    case IFPIO.ObjectEnum.Float:                      {                          this.buttGoTo.Tag = new IFPIO.IFPFloat(offset' visible' name' ""' lineNumber' parent' prevSibling);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                  case IFPIO.ObjectEnum.Short:                  case IFPIO.ObjectEnum.UShort:                  case IFPIO.ObjectEnum.UInt:                  case IFPIO.ObjectEnum.Int:                      {                          IFPIO.Index Index = new IFPIO.Index(                              string.Empty' string.Empty' string.Empty' ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType.ToString()' string.Empty' lineNumber);                          this.buttGoTo.Tag = new IFPIO.IFPInt(                              offset'                              (IFPIO.ObjectEnum)tempIndexer'                              visible'                              name'                              string.Empty'                              Index'                              lineNumber'                              parent'                              prevSibling);                          this.panIndices.Show();                          if (((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex.nulled)                          {                              this.indicesEnable(false);                          }                          else                          {                              this.indicesEnable(true);                              this.LoadIndices(((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex);                          }                            break;                      }                    #endregion                    #region Bitmasks                    case IFPIO.ObjectEnum.Byte_Flags:                  case IFPIO.ObjectEnum.Word_Flags:                  case IFPIO.ObjectEnum.Long_Flags:                      {                          this.buttGoTo.Tag = new IFPIO.Bitmask(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panBitmask.Show();                          this.BitmaskLoadBitNames();                          break;                      }                    #endregion                    #region Enums                    case IFPIO.ObjectEnum.Char_Enum:                  case IFPIO.ObjectEnum.Enum:                  case IFPIO.ObjectEnum.Long_Enum:                      {                          this.buttGoTo.Tag = new IFPIO.IFPEnum(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panEnums.Show();                            // this.EnumLoadItemNames();                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The following statement contains a magic number: switch ((IFPIO.ObjectEnum)tempIndexer)              {                      case IFPIO.ObjectEnum.Struct:                      {                          this.buttGoTo.Tag = new IFPIO.Reflexive(                              lineNumber' offset' visible' name' string.Empty' string.Empty' null' 0' 0' false' parent' prevSibling);                          this.radbReflexiveHCTrue.Checked = ((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.radbReflexiveHCFalse.Checked = !((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.txtbReflexiveChunkSize.Text = ((IFPIO.Reflexive)this.buttGoTo.Tag).chunkSize.ToString();                          this.LoadReflexiveLabel(                              ((IFPIO.Reflexive)this.buttGoTo.Tag).child' ((IFPIO.Reflexive)this.buttGoTo.Tag).label);                          this.panReflexiveContainer.Show();                          break;                      }                        #region Strings                    case IFPIO.ObjectEnum.String32:                  case IFPIO.ObjectEnum.String256:                  case IFPIO.ObjectEnum.UnicodeString64:                  case IFPIO.ObjectEnum.UnicodeString256:                      {                          bool unicode = false;                          int ifpSize = 256;                          switch ((IFPIO.ObjectEnum)tempIndexer)                          {                              case IFPIO.ObjectEnum.String32:                                  {                                      ifpSize = 32;                                      break;                                  }                                case IFPIO.ObjectEnum.String256:                                  {                                      ifpSize = 256;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString64:                                  {                                      ifpSize = 64;                                      unicode = true;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString256:                                  {                                      ifpSize = 256;                                      unicode = true;                                      break;                                  }                          }                            this.buttGoTo.Tag = new IFPIO.IFPString(                              name' string.Empty' visible' offset' ifpSize' unicode' lineNumber' parent' prevSibling);                          this.radbStringString.Checked = !((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.radbStringUnicode.Checked = ((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.combStringSize.Text = ((IFPIO.IFPString)this.buttGoTo.Tag).size.ToString();                          this.panStringContainer.Show();                          break;                      }                    #endregion                    #region Ints and Bytes                    case IFPIO.ObjectEnum.Float:                      {                          this.buttGoTo.Tag = new IFPIO.IFPFloat(offset' visible' name' ""' lineNumber' parent' prevSibling);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                  case IFPIO.ObjectEnum.Short:                  case IFPIO.ObjectEnum.UShort:                  case IFPIO.ObjectEnum.UInt:                  case IFPIO.ObjectEnum.Int:                      {                          IFPIO.Index Index = new IFPIO.Index(                              string.Empty' string.Empty' string.Empty' ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType.ToString()' string.Empty' lineNumber);                          this.buttGoTo.Tag = new IFPIO.IFPInt(                              offset'                              (IFPIO.ObjectEnum)tempIndexer'                              visible'                              name'                              string.Empty'                              Index'                              lineNumber'                              parent'                              prevSibling);                          this.panIndices.Show();                          if (((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex.nulled)                          {                              this.indicesEnable(false);                          }                          else                          {                              this.indicesEnable(true);                              this.LoadIndices(((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex);                          }                            break;                      }                    #endregion                    #region Bitmasks                    case IFPIO.ObjectEnum.Byte_Flags:                  case IFPIO.ObjectEnum.Word_Flags:                  case IFPIO.ObjectEnum.Long_Flags:                      {                          this.buttGoTo.Tag = new IFPIO.Bitmask(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panBitmask.Show();                          this.BitmaskLoadBitNames();                          break;                      }                    #endregion                    #region Enums                    case IFPIO.ObjectEnum.Char_Enum:                  case IFPIO.ObjectEnum.Enum:                  case IFPIO.ObjectEnum.Long_Enum:                      {                          this.buttGoTo.Tag = new IFPIO.IFPEnum(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panEnums.Show();                            // this.EnumLoadItemNames();                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The following statement contains a magic number: switch ((IFPIO.ObjectEnum)tempIndexer)              {                      case IFPIO.ObjectEnum.Struct:                      {                          this.buttGoTo.Tag = new IFPIO.Reflexive(                              lineNumber' offset' visible' name' string.Empty' string.Empty' null' 0' 0' false' parent' prevSibling);                          this.radbReflexiveHCTrue.Checked = ((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.radbReflexiveHCFalse.Checked = !((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.txtbReflexiveChunkSize.Text = ((IFPIO.Reflexive)this.buttGoTo.Tag).chunkSize.ToString();                          this.LoadReflexiveLabel(                              ((IFPIO.Reflexive)this.buttGoTo.Tag).child' ((IFPIO.Reflexive)this.buttGoTo.Tag).label);                          this.panReflexiveContainer.Show();                          break;                      }                        #region Strings                    case IFPIO.ObjectEnum.String32:                  case IFPIO.ObjectEnum.String256:                  case IFPIO.ObjectEnum.UnicodeString64:                  case IFPIO.ObjectEnum.UnicodeString256:                      {                          bool unicode = false;                          int ifpSize = 256;                          switch ((IFPIO.ObjectEnum)tempIndexer)                          {                              case IFPIO.ObjectEnum.String32:                                  {                                      ifpSize = 32;                                      break;                                  }                                case IFPIO.ObjectEnum.String256:                                  {                                      ifpSize = 256;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString64:                                  {                                      ifpSize = 64;                                      unicode = true;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString256:                                  {                                      ifpSize = 256;                                      unicode = true;                                      break;                                  }                          }                            this.buttGoTo.Tag = new IFPIO.IFPString(                              name' string.Empty' visible' offset' ifpSize' unicode' lineNumber' parent' prevSibling);                          this.radbStringString.Checked = !((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.radbStringUnicode.Checked = ((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.combStringSize.Text = ((IFPIO.IFPString)this.buttGoTo.Tag).size.ToString();                          this.panStringContainer.Show();                          break;                      }                    #endregion                    #region Ints and Bytes                    case IFPIO.ObjectEnum.Float:                      {                          this.buttGoTo.Tag = new IFPIO.IFPFloat(offset' visible' name' ""' lineNumber' parent' prevSibling);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                  case IFPIO.ObjectEnum.Short:                  case IFPIO.ObjectEnum.UShort:                  case IFPIO.ObjectEnum.UInt:                  case IFPIO.ObjectEnum.Int:                      {                          IFPIO.Index Index = new IFPIO.Index(                              string.Empty' string.Empty' string.Empty' ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType.ToString()' string.Empty' lineNumber);                          this.buttGoTo.Tag = new IFPIO.IFPInt(                              offset'                              (IFPIO.ObjectEnum)tempIndexer'                              visible'                              name'                              string.Empty'                              Index'                              lineNumber'                              parent'                              prevSibling);                          this.panIndices.Show();                          if (((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex.nulled)                          {                              this.indicesEnable(false);                          }                          else                          {                              this.indicesEnable(true);                              this.LoadIndices(((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex);                          }                            break;                      }                    #endregion                    #region Bitmasks                    case IFPIO.ObjectEnum.Byte_Flags:                  case IFPIO.ObjectEnum.Word_Flags:                  case IFPIO.ObjectEnum.Long_Flags:                      {                          this.buttGoTo.Tag = new IFPIO.Bitmask(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panBitmask.Show();                          this.BitmaskLoadBitNames();                          break;                      }                    #endregion                    #region Enums                    case IFPIO.ObjectEnum.Char_Enum:                  case IFPIO.ObjectEnum.Enum:                  case IFPIO.ObjectEnum.Long_Enum:                      {                          this.buttGoTo.Tag = new IFPIO.IFPEnum(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panEnums.Show();                            // this.EnumLoadItemNames();                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The following statement contains a magic number: switch ((IFPIO.ObjectEnum)tempIndexer)              {                      case IFPIO.ObjectEnum.Struct:                      {                          this.buttGoTo.Tag = new IFPIO.Reflexive(                              lineNumber' offset' visible' name' string.Empty' string.Empty' null' 0' 0' false' parent' prevSibling);                          this.radbReflexiveHCTrue.Checked = ((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.radbReflexiveHCFalse.Checked = !((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.txtbReflexiveChunkSize.Text = ((IFPIO.Reflexive)this.buttGoTo.Tag).chunkSize.ToString();                          this.LoadReflexiveLabel(                              ((IFPIO.Reflexive)this.buttGoTo.Tag).child' ((IFPIO.Reflexive)this.buttGoTo.Tag).label);                          this.panReflexiveContainer.Show();                          break;                      }                        #region Strings                    case IFPIO.ObjectEnum.String32:                  case IFPIO.ObjectEnum.String256:                  case IFPIO.ObjectEnum.UnicodeString64:                  case IFPIO.ObjectEnum.UnicodeString256:                      {                          bool unicode = false;                          int ifpSize = 256;                          switch ((IFPIO.ObjectEnum)tempIndexer)                          {                              case IFPIO.ObjectEnum.String32:                                  {                                      ifpSize = 32;                                      break;                                  }                                case IFPIO.ObjectEnum.String256:                                  {                                      ifpSize = 256;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString64:                                  {                                      ifpSize = 64;                                      unicode = true;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString256:                                  {                                      ifpSize = 256;                                      unicode = true;                                      break;                                  }                          }                            this.buttGoTo.Tag = new IFPIO.IFPString(                              name' string.Empty' visible' offset' ifpSize' unicode' lineNumber' parent' prevSibling);                          this.radbStringString.Checked = !((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.radbStringUnicode.Checked = ((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.combStringSize.Text = ((IFPIO.IFPString)this.buttGoTo.Tag).size.ToString();                          this.panStringContainer.Show();                          break;                      }                    #endregion                    #region Ints and Bytes                    case IFPIO.ObjectEnum.Float:                      {                          this.buttGoTo.Tag = new IFPIO.IFPFloat(offset' visible' name' ""' lineNumber' parent' prevSibling);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                  case IFPIO.ObjectEnum.Short:                  case IFPIO.ObjectEnum.UShort:                  case IFPIO.ObjectEnum.UInt:                  case IFPIO.ObjectEnum.Int:                      {                          IFPIO.Index Index = new IFPIO.Index(                              string.Empty' string.Empty' string.Empty' ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType.ToString()' string.Empty' lineNumber);                          this.buttGoTo.Tag = new IFPIO.IFPInt(                              offset'                              (IFPIO.ObjectEnum)tempIndexer'                              visible'                              name'                              string.Empty'                              Index'                              lineNumber'                              parent'                              prevSibling);                          this.panIndices.Show();                          if (((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex.nulled)                          {                              this.indicesEnable(false);                          }                          else                          {                              this.indicesEnable(true);                              this.LoadIndices(((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex);                          }                            break;                      }                    #endregion                    #region Bitmasks                    case IFPIO.ObjectEnum.Byte_Flags:                  case IFPIO.ObjectEnum.Word_Flags:                  case IFPIO.ObjectEnum.Long_Flags:                      {                          this.buttGoTo.Tag = new IFPIO.Bitmask(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panBitmask.Show();                          this.BitmaskLoadBitNames();                          break;                      }                    #endregion                    #region Enums                    case IFPIO.ObjectEnum.Char_Enum:                  case IFPIO.ObjectEnum.Enum:                  case IFPIO.ObjectEnum.Long_Enum:                      {                          this.buttGoTo.Tag = new IFPIO.IFPEnum(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panEnums.Show();                            // this.EnumLoadItemNames();                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The following statement contains a magic number: switch ((IFPIO.ObjectEnum)tempIndexer)              {                      case IFPIO.ObjectEnum.Struct:                      {                          this.buttGoTo.Tag = new IFPIO.Reflexive(                              lineNumber' offset' visible' name' string.Empty' string.Empty' null' 0' 0' false' parent' prevSibling);                          this.radbReflexiveHCTrue.Checked = ((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.radbReflexiveHCFalse.Checked = !((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.txtbReflexiveChunkSize.Text = ((IFPIO.Reflexive)this.buttGoTo.Tag).chunkSize.ToString();                          this.LoadReflexiveLabel(                              ((IFPIO.Reflexive)this.buttGoTo.Tag).child' ((IFPIO.Reflexive)this.buttGoTo.Tag).label);                          this.panReflexiveContainer.Show();                          break;                      }                        #region Strings                    case IFPIO.ObjectEnum.String32:                  case IFPIO.ObjectEnum.String256:                  case IFPIO.ObjectEnum.UnicodeString64:                  case IFPIO.ObjectEnum.UnicodeString256:                      {                          bool unicode = false;                          int ifpSize = 256;                          switch ((IFPIO.ObjectEnum)tempIndexer)                          {                              case IFPIO.ObjectEnum.String32:                                  {                                      ifpSize = 32;                                      break;                                  }                                case IFPIO.ObjectEnum.String256:                                  {                                      ifpSize = 256;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString64:                                  {                                      ifpSize = 64;                                      unicode = true;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString256:                                  {                                      ifpSize = 256;                                      unicode = true;                                      break;                                  }                          }                            this.buttGoTo.Tag = new IFPIO.IFPString(                              name' string.Empty' visible' offset' ifpSize' unicode' lineNumber' parent' prevSibling);                          this.radbStringString.Checked = !((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.radbStringUnicode.Checked = ((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.combStringSize.Text = ((IFPIO.IFPString)this.buttGoTo.Tag).size.ToString();                          this.panStringContainer.Show();                          break;                      }                    #endregion                    #region Ints and Bytes                    case IFPIO.ObjectEnum.Float:                      {                          this.buttGoTo.Tag = new IFPIO.IFPFloat(offset' visible' name' ""' lineNumber' parent' prevSibling);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                  case IFPIO.ObjectEnum.Short:                  case IFPIO.ObjectEnum.UShort:                  case IFPIO.ObjectEnum.UInt:                  case IFPIO.ObjectEnum.Int:                      {                          IFPIO.Index Index = new IFPIO.Index(                              string.Empty' string.Empty' string.Empty' ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType.ToString()' string.Empty' lineNumber);                          this.buttGoTo.Tag = new IFPIO.IFPInt(                              offset'                              (IFPIO.ObjectEnum)tempIndexer'                              visible'                              name'                              string.Empty'                              Index'                              lineNumber'                              parent'                              prevSibling);                          this.panIndices.Show();                          if (((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex.nulled)                          {                              this.indicesEnable(false);                          }                          else                          {                              this.indicesEnable(true);                              this.LoadIndices(((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex);                          }                            break;                      }                    #endregion                    #region Bitmasks                    case IFPIO.ObjectEnum.Byte_Flags:                  case IFPIO.ObjectEnum.Word_Flags:                  case IFPIO.ObjectEnum.Long_Flags:                      {                          this.buttGoTo.Tag = new IFPIO.Bitmask(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panBitmask.Show();                          this.BitmaskLoadBitNames();                          break;                      }                    #endregion                    #region Enums                    case IFPIO.ObjectEnum.Char_Enum:                  case IFPIO.ObjectEnum.Enum:                  case IFPIO.ObjectEnum.Long_Enum:                      {                          this.buttGoTo.Tag = new IFPIO.IFPEnum(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panEnums.Show();                            // this.EnumLoadItemNames();                          break;                      }                    #endregion              }
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.EntItemsTreeView.Location = new System.Drawing.Point(12' 12);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.EntItemsTreeView.Location = new System.Drawing.Point(12' 12);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.EntItemsTreeView.Size = new System.Drawing.Size(348' 311);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.EntItemsTreeView.Size = new System.Drawing.Size(348' 311);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttGoTo.Location = new System.Drawing.Point(366' 12);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttGoTo.Location = new System.Drawing.Point(366' 12);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttGoTo.Size = new System.Drawing.Size(140' 35);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttGoTo.Size = new System.Drawing.Size(140' 35);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttGoTo.TabIndex = 2;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttSaveCurrentItem.Location = new System.Drawing.Point(366' 271);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttSaveCurrentItem.Location = new System.Drawing.Point(366' 271);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttSaveCurrentItem.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttSaveCurrentItem.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttSaveCurrentItem.TabIndex = 3;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Location = new System.Drawing.Point(50' 329);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Location = new System.Drawing.Point(50' 329);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Size = new System.Drawing.Size(456' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtName.Size = new System.Drawing.Size(456' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtName.TabIndex = 4;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labName.Location = new System.Drawing.Point(9' 332);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labName.Location = new System.Drawing.Point(9' 332);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labName.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labName.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labName.TabIndex = 5;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combType.Location = new System.Drawing.Point(49' 355);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combType.Location = new System.Drawing.Point(49' 355);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combType.Size = new System.Drawing.Size(146' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combType.Size = new System.Drawing.Size(146' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combType.TabIndex = 6;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labType.Location = new System.Drawing.Point(9' 358);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labType.Location = new System.Drawing.Point(9' 358);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labType.Size = new System.Drawing.Size(31' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labType.Size = new System.Drawing.Size(31' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labType.TabIndex = 7;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labVisible.Location = new System.Drawing.Point(0' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labVisible.Size = new System.Drawing.Size(37' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labVisible.Size = new System.Drawing.Size(37' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labVisible.TabIndex = 8;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radBTrue.Location = new System.Drawing.Point(43' 1);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radBTrue.Size = new System.Drawing.Size(47' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radBTrue.Size = new System.Drawing.Size(47' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radBTrue.TabIndex = 9;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radBFalse.Location = new System.Drawing.Point(96' 1);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radBFalse.Size = new System.Drawing.Size(50' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radBFalse.Size = new System.Drawing.Size(50' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radBFalse.TabIndex = 10;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbOffset.Location = new System.Drawing.Point(395' 355);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbOffset.Location = new System.Drawing.Point(395' 355);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbOffset.Size = new System.Drawing.Size(111' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbOffset.Size = new System.Drawing.Size(111' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbOffset.TabIndex = 11;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labOffset.Location = new System.Drawing.Point(354' 358);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labOffset.Location = new System.Drawing.Point(354' 358);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labOffset.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labOffset.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labOffset.TabIndex = 12;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.ButtWritePlugin.Location = new System.Drawing.Point(366' 300);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.ButtWritePlugin.Location = new System.Drawing.Point(366' 300);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.ButtWritePlugin.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.ButtWritePlugin.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.ButtWritePlugin.TabIndex = 13;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panVisible.Location = new System.Drawing.Point(201' 355);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panVisible.Location = new System.Drawing.Point(201' 355);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panVisible.Size = new System.Drawing.Size(146' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panVisible.Size = new System.Drawing.Size(146' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panVisible.TabIndex = 14;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveChunkSize.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveChunkSize.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveChunkSize.Size = new System.Drawing.Size(61' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveChunkSize.Size = new System.Drawing.Size(61' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveChunkSize.TabIndex = 5;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbReflexiveChunkSize.Location = new System.Drawing.Point(64' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbReflexiveChunkSize.Size = new System.Drawing.Size(99' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbReflexiveChunkSize.Size = new System.Drawing.Size(99' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbReflexiveChunkSize.TabIndex = 4;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveHasCount.Location = new System.Drawing.Point(169' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveHasCount.Location = new System.Drawing.Point(169' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveHasCount.Size = new System.Drawing.Size(165' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveHasCount.Size = new System.Drawing.Size(165' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveHasCount.TabIndex = 3;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveHasCount.Location = new System.Drawing.Point(-1' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveHasCount.Size = new System.Drawing.Size(57' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveHasCount.Size = new System.Drawing.Size(57' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbReflexiveHCTrue.Location = new System.Drawing.Point(62' 1);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbReflexiveHCTrue.Size = new System.Drawing.Size(47' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbReflexiveHCTrue.Size = new System.Drawing.Size(47' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbReflexiveHCTrue.TabIndex = 9;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbReflexiveHCFalse.Location = new System.Drawing.Point(115' 1);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbReflexiveHCFalse.Size = new System.Drawing.Size(50' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbReflexiveHCFalse.Size = new System.Drawing.Size(50' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbReflexiveHCFalse.TabIndex = 10;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbStringString.Location = new System.Drawing.Point(3' 1);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbStringString.Size = new System.Drawing.Size(52' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbStringString.Size = new System.Drawing.Size(52' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbStringUnicode.Location = new System.Drawing.Point(61' 1);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbStringUnicode.Size = new System.Drawing.Size(65' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.radbStringUnicode.Size = new System.Drawing.Size(65' 17);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combStringSize.Location = new System.Drawing.Point(30' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combStringSize.Size = new System.Drawing.Size(57' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combStringSize.Size = new System.Drawing.Size(57' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combStringSize.TabIndex = 15;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labStringSize.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labStringSize.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labStringSize.Size = new System.Drawing.Size(27' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labStringSize.Size = new System.Drawing.Size(27' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labStringSize.TabIndex = 16;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringType.Location = new System.Drawing.Point(93' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringType.Size = new System.Drawing.Size(128' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringType.Size = new System.Drawing.Size(128' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringType.TabIndex = 18;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringContainer.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringContainer.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringContainer.Size = new System.Drawing.Size(225' 25);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringContainer.Size = new System.Drawing.Size(225' 25);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panStringContainer.TabIndex = 19;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveContainer.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveContainer.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveContainer.Size = new System.Drawing.Size(494' 65);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveContainer.Size = new System.Drawing.Size(494' 65);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panReflexiveContainer.TabIndex = 20;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combReflexiveLabel.Location = new System.Drawing.Point(38' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combReflexiveLabel.Location = new System.Drawing.Point(38' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combReflexiveLabel.Size = new System.Drawing.Size(209' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combReflexiveLabel.Size = new System.Drawing.Size(209' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combReflexiveLabel.TabIndex = 7;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveLabel.Location = new System.Drawing.Point(-1' 29);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveLabel.Size = new System.Drawing.Size(33' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveLabel.Size = new System.Drawing.Size(33' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labReflexiveLabel.TabIndex = 6;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panIndices.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panIndices.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panIndices.Size = new System.Drawing.Size(494' 65);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panIndices.Size = new System.Drawing.Size(494' 65);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panIndices.TabIndex = 20;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesItem.Location = new System.Drawing.Point(75' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesItem.Location = new System.Drawing.Point(75' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesItem.Size = new System.Drawing.Size(182' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesItem.Size = new System.Drawing.Size(182' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesItem.TabIndex = 15;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexItemToUseAsLabel.Location = new System.Drawing.Point(-3' 30);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexItemToUseAsLabel.Location = new System.Drawing.Point(-3' 30);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexItemToUseAsLabel.Size = new System.Drawing.Size(72' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexItemToUseAsLabel.Size = new System.Drawing.Size(72' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexItemToUseAsLabel.TabIndex = 14;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexCreate.Location = new System.Drawing.Point(373' 25);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexCreate.Location = new System.Drawing.Point(373' 25);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexCreate.Size = new System.Drawing.Size(121' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexCreate.Size = new System.Drawing.Size(121' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexCreate.TabIndex = 13;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexDelete.Location = new System.Drawing.Point(373' 25);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexDelete.Location = new System.Drawing.Point(373' 25);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexDelete.Size = new System.Drawing.Size(121' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexDelete.Size = new System.Drawing.Size(121' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttIndexDelete.TabIndex = 12;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexLayer.Location = new System.Drawing.Point(287' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexLayer.Location = new System.Drawing.Point(287' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexLayer.Size = new System.Drawing.Size(80' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexLayer.Size = new System.Drawing.Size(80' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexLayer.TabIndex = 11;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesLayer.Location = new System.Drawing.Point(373' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesLayer.Size = new System.Drawing.Size(121' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesLayer.Size = new System.Drawing.Size(121' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesLayer.TabIndex = 10;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesRToIndex.Location = new System.Drawing.Point(99' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesRToIndex.Size = new System.Drawing.Size(182' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesRToIndex.Size = new System.Drawing.Size(182' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combIndicesRToIndex.TabIndex = 9;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexReflexive.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexReflexive.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexReflexive.Size = new System.Drawing.Size(96' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexReflexive.Size = new System.Drawing.Size(96' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labIndexReflexive.TabIndex = 8;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panBitmask.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panBitmask.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panBitmask.Size = new System.Drawing.Size(494' 60);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panBitmask.Size = new System.Drawing.Size(494' 60);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panBitmask.TabIndex = 21;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveDown.Location = new System.Drawing.Point(285' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveDown.Location = new System.Drawing.Point(285' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveDown.Size = new System.Drawing.Size(128' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveDown.Size = new System.Drawing.Size(128' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveDown.TabIndex = 10;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveUp.Location = new System.Drawing.Point(162' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveUp.Location = new System.Drawing.Point(162' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveUp.Size = new System.Drawing.Size(117' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveUp.Size = new System.Drawing.Size(117' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskMoveUp.TabIndex = 9;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskCreate.Location = new System.Drawing.Point(81' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskCreate.Location = new System.Drawing.Point(81' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskCreate.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskCreate.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskCreate.TabIndex = 8;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskDelete.Location = new System.Drawing.Point(0' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskDelete.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskDelete.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskDelete.TabIndex = 7;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskSave.Location = new System.Drawing.Point(419' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskSave.Location = new System.Drawing.Point(419' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskSave.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskSave.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttBitmaskSave.TabIndex = 6;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskName.Location = new System.Drawing.Point(189' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskName.Location = new System.Drawing.Point(189' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskName.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskName.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskName.TabIndex = 5;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskBitNumber.Location = new System.Drawing.Point(354' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskBitNumber.Location = new System.Drawing.Point(354' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskBitNumber.Size = new System.Drawing.Size(19' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskBitNumber.Size = new System.Drawing.Size(19' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskBitNumber.TabIndex = 4;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbBitmaskBitNumber.Location = new System.Drawing.Point(379' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbBitmaskBitNumber.Size = new System.Drawing.Size(115' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbBitmaskBitNumber.Size = new System.Drawing.Size(115' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbBitmaskBitNumber.TabIndex = 3;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbBitmaskName.Location = new System.Drawing.Point(230' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbBitmaskName.Size = new System.Drawing.Size(118' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbBitmaskName.Size = new System.Drawing.Size(118' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbBitmaskName.TabIndex = 2;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combBitmaskBits.Location = new System.Drawing.Point(27' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combBitmaskBits.Size = new System.Drawing.Size(156' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combBitmaskBits.Size = new System.Drawing.Size(156' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskbits.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskbits.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskbits.Size = new System.Drawing.Size(24' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labBitmaskbits.Size = new System.Drawing.Size(24' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panEnums.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panEnums.Location = new System.Drawing.Point(12' 382);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panEnums.Size = new System.Drawing.Size(494' 57);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panEnums.Size = new System.Drawing.Size(494' 57);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.panEnums.TabIndex = 23;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsSave.Location = new System.Drawing.Point(419' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsSave.Location = new System.Drawing.Point(419' 26);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsSave.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsSave.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsSave.TabIndex = 11;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveItemDownOne.Location = new System.Drawing.Point(285' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveItemDownOne.Location = new System.Drawing.Point(285' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveItemDownOne.Size = new System.Drawing.Size(128' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveItemDownOne.Size = new System.Drawing.Size(128' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveItemDownOne.TabIndex = 10;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveUpOne.Location = new System.Drawing.Point(165' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveUpOne.Location = new System.Drawing.Point(165' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveUpOne.Size = new System.Drawing.Size(114' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveUpOne.Size = new System.Drawing.Size(114' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsMoveUpOne.TabIndex = 9;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsCreate.Location = new System.Drawing.Point(84' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsCreate.Location = new System.Drawing.Point(84' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsCreate.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsCreate.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsCreate.TabIndex = 7;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsDelete.Location = new System.Drawing.Point(3' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsDelete.Location = new System.Drawing.Point(3' 27);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsDelete.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsDelete.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttEnumsDelete.TabIndex = 6;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbEnumsValue.Location = new System.Drawing.Point(403' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbEnumsValue.Size = new System.Drawing.Size(91' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbEnumsValue.Size = new System.Drawing.Size(91' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbEnumsValue.TabIndex = 5;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbEnumsName.Location = new System.Drawing.Point(230' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbEnumsName.Size = new System.Drawing.Size(127' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbEnumsName.Size = new System.Drawing.Size(127' 20);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.txtbEnumsName.TabIndex = 4;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsValue.Location = new System.Drawing.Point(363' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsValue.Location = new System.Drawing.Point(363' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsValue.Size = new System.Drawing.Size(34' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsValue.Size = new System.Drawing.Size(34' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsValue.TabIndex = 3;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsName.Location = new System.Drawing.Point(189' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsName.Location = new System.Drawing.Point(189' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsName.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsName.Size = new System.Drawing.Size(35' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsName.TabIndex = 2;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combEnumsItems.Location = new System.Drawing.Point(35' 0);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combEnumsItems.Size = new System.Drawing.Size(148' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.combEnumsItems.Size = new System.Drawing.Size(148' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsItems.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsItems.Location = new System.Drawing.Point(-3' 3);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsItems.Size = new System.Drawing.Size(32' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.labEnumsItems.Size = new System.Drawing.Size(32' 13);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttItemDelete.Location = new System.Drawing.Point(366' 213);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttItemDelete.Location = new System.Drawing.Point(366' 213);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttItemDelete.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttItemDelete.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttItemDelete.TabIndex = 24;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(366' 99);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(366' 99);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(140' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(140' 21);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.TabIndex = 26;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemBeforeSelected.Location = new System.Drawing.Point(366' 126);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemBeforeSelected.Location = new System.Drawing.Point(366' 126);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemBeforeSelected.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemBeforeSelected.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemBeforeSelected.TabIndex = 27;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemAfterSelected.Location = new System.Drawing.Point(366' 155);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemAfterSelected.Location = new System.Drawing.Point(366' 155);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemAfterSelected.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemAfterSelected.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddItemAfterSelected.TabIndex = 28;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddChildOfSelected.Location = new System.Drawing.Point(366' 184);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddChildOfSelected.Location = new System.Drawing.Point(366' 184);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddChildOfSelected.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddChildOfSelected.Size = new System.Drawing.Size(140' 23);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.buttAddChildOfSelected.TabIndex = 29;
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(520' 451);
Magic Number,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(520' 451);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,MEStringsSelector_Load,The following statement contains a magic number: i < dataGridView1.RowCount - 2
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,textBox1_TextChanged,The following statement contains a magic number: timer1.Interval = 700;
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(133' 165);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(133' 165);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 16;
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(253' 61);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(253' 61);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(6' 314);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(6' 314);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(268' 20);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(268' 20);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 6);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 6);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label1.Padding = new System.Windows.Forms.Padding(0' 0' 0' 6);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(396' 20);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(396' 20);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 2;
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(6' 301);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(6' 301);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(396' 13);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(396' 13);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.timer1.Interval = 700;
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(6' 30);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(6' 30);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(396' 264);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(396' 264);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.TabIndex = 3;
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(278' 316);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(278' 316);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(123' 17);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(123' 17);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.TabIndex = 4;
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(408' 340);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(408' 340);
Magic Number,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(6);
Magic Number,MetaEditor.Forms,ViewAllValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ViewAllValues.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,ViewAllValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ViewAllValues.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor.Forms,ViewAllValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ViewAllValues.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(237' 340);
Magic Number,MetaEditor.Forms,ViewAllValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ViewAllValues.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(237' 340);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,loadControls,The following statement contains a magic number: ToolTip1.InitialDelay = 800;
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,LoadENTControls,The following statement contains a magic number: int colorSpaceCount = 4;
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,MetaEditor_SizeChanged,The following statement contains a magic number: this.panel1.Height = this.Height - totalSize - 2;
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,MetaEditor_SizeChanged,The following statement contains a magic number: this.panel1.Width = this.Width - (this.Padding.Left + this.Padding.Right + 10);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.identContext.Size = new System.Drawing.Size(187' 164);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.identContext.Size = new System.Drawing.Size(187' 164);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.gotoToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.gotoToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator.Size = new System.Drawing.Size(176' 6);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator.Size = new System.Drawing.Size(176' 6);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.cutToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.cutToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.copyToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.copyToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.pasteToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.pasteToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripMenuItem.Size = new System.Drawing.Size(179' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Location = new System.Drawing.Point(0' 2);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(581' 25);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(581' 25);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.TabIndex = 6;
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(56' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(56' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.ButtonSave.Padding = new System.Windows.Forms.Padding(10' 0' 0' 0);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.ButtonSave.Size = new System.Drawing.Size(45' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.ButtonSave.Size = new System.Drawing.Size(45' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSplitButton1.Size = new System.Drawing.Size(48' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSplitButton1.Size = new System.Drawing.Size(48' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem2.Size = new System.Drawing.Size(200' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem2.Size = new System.Drawing.Size(200' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripShowAll.Size = new System.Drawing.Size(200' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripShowAll.Size = new System.Drawing.Size(200' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripColorShifting.Size = new System.Drawing.Size(200' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripColorShifting.Size = new System.Drawing.Size(200' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem3.Size = new System.Drawing.Size(200' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem3.Size = new System.Drawing.Size(200' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Padding = new System.Windows.Forms.Padding(10' 0' 0' 0);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(71' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(71' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(10' 35);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(10' 35);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Padding = new System.Windows.Forms.Padding(10' 0' 10' 0);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Padding = new System.Windows.Forms.Padding(10' 0' 10' 0);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(561' 524);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(561' 524);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 10;
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Location = new System.Drawing.Point(0' 710);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size(581' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size(581' 22);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.TabIndex = 11;
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTagType.Size = new System.Drawing.Size(36' 17);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTagType.Size = new System.Drawing.Size(36' 17);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTagName.Size = new System.Drawing.Size(427' 17);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTagName.Size = new System.Drawing.Size(427' 17);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripReflexiveNumber.Size = new System.Drawing.Size(56' 17);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripReflexiveNumber.Size = new System.Drawing.Size(56' 17);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripInformation.Size = new System.Drawing.Size(47' 17);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.toolStripInformation.Size = new System.Drawing.Size(47' 17);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 0);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(581' 732);
Magic Number,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(581' 732);
Magic Number,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,SetVariables,The following statement contains a magic number: Stred < 256 && Stred > -1
Magic Number,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,SetVariables,The following statement contains a magic number: Stblue < 256 && Stblue > -1
Magic Number,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,SetVariables,The following statement contains a magic number: Stgreen < 256 && Stgreen > -1
Magic Number,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,Shifter,The following statement contains a magic number: int temptemp = tempForReturn - 254;
Magic Number,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,Shifter,The following statement contains a magic number: tempForReturn = 254 - temptemp;
Magic Number,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,Shifter,The following statement contains a magic number: tempForReturn > 255
Magic Number,MetaEditor,METoolBar,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\METoolBar.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.Location = new System.Drawing.Point(3' 3);
Magic Number,MetaEditor,METoolBar,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\METoolBar.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.Location = new System.Drawing.Point(3' 3);
Magic Number,MetaEditor,METoolBar,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\METoolBar.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor,METoolBar,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\METoolBar.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.Size = new System.Drawing.Size(75' 23);
Magic Number,MetaEditor,METoolBar,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\METoolBar.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor,METoolBar,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\METoolBar.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,MetaEditor,METoolBar,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\METoolBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(403' 34);
Magic Number,MetaEditor,METoolBar,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\METoolBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(403' 34);
Duplicate Code,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The method contains a code clone-set at the following line numbers (starting from the method definition): ((160' 191)' (232' 263))
Duplicate Code,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,LoadENTControls,The method contains a code clone-set at the following line numbers (starting from the method definition): ((150' 170)' (202' 222))
Missing Default,MetaEditor.ColorShifting,ColorHandler,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorShifting\ColorHandler.cs,HSVtoRGB,The following switch statement is missing a default case: switch (sectorNumber)                  {                      case 0:                          r = v;                          g = t;                          b = p;                          break;                        case 1:                          r = q;                          g = v;                          b = p;                          break;                        case 2:                          r = p;                          g = v;                          b = t;                          break;                        case 3:                          r = p;                          g = q;                          b = v;                          break;                        case 4:                          r = t;                          g = p;                          b = v;                          break;                        case 5:                          r = v;                          g = p;                          b = q;                          break;                  }
Missing Default,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Poke,The following switch statement is missing a default case: switch (this.bitCount)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.value)' 32);                          break;                      }              }
Missing Default,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Populate,The following switch statement is missing a default case: switch (this.bitCount)              {                  case 8:                      {                          this.value = map.BR.ReadByte();                          break;                      }                    case 16:                      {                          this.value = map.BR.ReadUInt16();                          break;                      }                    case 32:                      {                          this.value = map.BR.ReadUInt32();                          break;                      }              }
Missing Default,MetaEditor.Components,Bitmask,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Bitmask.cs,Save,The following switch statement is missing a default case: switch (this.bitCount)                  {                      case 8:                          {                              map.BW.Write(Convert.ToByte(this.value));                              break;                          }                        case 16:                          {                              map.BW.Write(Convert.ToUInt16(this.value));                              break;                          }                        case 32:                          {                              map.BW.Write(Convert.ToUInt32(this.value));                              break;                          }                  }
Missing Default,MetaEditor.Components,ColorWheel,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ColorWheel.cs,GrabColor,The following switch statement is missing a default case: switch (cntlNum)               {                  case 0:                      // center our coordinate system so the middle is (0'0)' and positive Y is facing up                      cx -=  (this.Controls[cntlNum].Width / 2);                      cy -= (this.Controls[cntlNum].Height / 2);                      if (cx < this.Controls[cntlNum].Width / 2)                      {                          double theta = Math.Atan2(cy' cx);                            if (theta < 0)                          {                              theta += 2 * Math.PI;                          }                            double alpha = Math.Sqrt((cx * cx) + (cy * cy));                            int h = (int)((theta / (Math.PI * 2)) * 360.0);                          int s = (int)Math.Min(100.0' (alpha / (double)(this.Controls[0].Width / 2)) * 100);                          int v = hsvColor.value;                            hsvColor = new ColorHandler.HSV(h' s' v);                            OnColorChanged();                          updateBar();                      }                      break;                  case 1:                      if (cx < this.Controls[cntlNum].Width)                      {                          hsvColor.value = Math.Max(0' Math.Min(100'100 - (cy * 100 / this.Controls[cntlNum].Height)));                          updateBox();                      }                      break;              }
Missing Default,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Poke,The following switch statement is missing a default case: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          uint val = Convert.ToUInt32(Convert.ToSingle(this.Value));                          RTH_Imports.Poke(Address' val' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Missing Default,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Populate,The following switch statement is missing a default case: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          this.Value = map.BR.ReadInt16();                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          this.Value = map.BR.ReadInt32();                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          this.Value = map.BR.ReadUInt16();                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          this.Value = map.BR.ReadUInt32();                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          this.Value = map.BR.ReadSingle();                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          this.Value = map.BR.ReadSingle();                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          this.Value = map.BR.ReadByte();                          break;                      }              }
Missing Default,MetaEditor.Components,DataValues,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\DataValues.cs,Save,The following switch statement is missing a default case: switch (ValueType)                  {                      case IFPIO.ObjectEnum.Short:                          {                              map.BW.Write(Convert.ToInt16(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.Int:                          {                              map.BW.Write(Convert.ToInt32(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              map.BW.Write(Convert.ToUInt16(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              map.BW.Write(Convert.ToUInt32(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              map.BW.Write(Convert.ToSingle(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              map.BW.Write(Convert.ToSingle(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              map.BW.Write(Convert.ToByte(this.Value));                              break;                          }                  }
Missing Default,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Enums,The following switch statement is missing a default case: switch (iType)              {                  case 8:                      {                          this.Controls[2].Text = "Enum8";                          break;                      }                    case 16:                      {                          this.Controls[2].Text = "Enum16";                          break;                      }                    case 32:                      {                          this.Controls[2].Text = "Enum32";                          break;                      }              }
Missing Default,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Poke,The following switch statement is missing a default case: switch (this.enumType)              {                  case 8:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.value)' 8);                          break;                      }                    case 16:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.value)' 16);                          break;                      }                    case 32:                      {                          RTH_Imports.Poke(Address' (uint)this.value' 32);                          break;                      }              }
Missing Default,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Populate,The following switch statement is missing a default case: switch (this.enumType)              {                  case 8:                      {                          this.value = map.BR.ReadByte();                          break;                      }                    case 16:                      {                          this.value = map.BR.ReadInt16();                          break;                      }                    case 32:                      {                          this.value = map.BR.ReadInt32();                          break;                      }              }
Missing Default,MetaEditor.Components,Enums,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Enums.cs,Save,The following switch statement is missing a default case: switch (this.enumType)                  {                      case 8:                          {                              map.BW.Write(Convert.ToByte(this.value));                              break;                          }                        case 16:                          {                              map.BW.Write(Convert.ToInt16(this.value));                              break;                          }                        case 32:                          {                              map.BW.Write(this.value);                              break;                          }                  }
Missing Default,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Indices,The following switch statement is missing a default case: switch (iValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          this.label1.Text = "Int16 Block Index";                          this.ValueType = IFPIO.ObjectEnum.Short;                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          this.label1.Text = "Int32 Block Index";                          this.ValueType = IFPIO.ObjectEnum.Int;                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          this.label1.Text = "Uint16 Block Index";                          this.ValueType = IFPIO.ObjectEnum.UShort;                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          this.label1.Text = "Uint32 Block Index";                          this.ValueType = IFPIO.ObjectEnum.UInt;                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          this.label1.Text = "Byte Block Index";                          this.ValueType = IFPIO.ObjectEnum.Byte;                          break;                      }              }
Missing Default,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Poke,The following switch statement is missing a default case: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          RTH_Imports.Poke(Address' (uint)Convert.ToInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt16(this.Value)' 16);                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          RTH_Imports.Poke(Address' Convert.ToUInt32(this.Value)' 32);                          break;                      }                    case IFPIO.ObjectEnum.Float:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Unknown:                      {                          RTH_Imports.Poke(Address' RTH_Imports.ConvertFloat(Convert.ToSingle(this.Value))' 32);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          RTH_Imports.Poke(Address' Convert.ToByte(this.Value)' 8);                          break;                      }              }
Missing Default,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Populate,The following switch statement is missing a default case: switch (ValueType)              {                  case IFPIO.ObjectEnum.Short:                      {                          this.Value = map.BR.ReadInt16();                          break;                      }                    case IFPIO.ObjectEnum.Int:                      {                          this.Value = map.BR.ReadInt32();                          break;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          this.Value = map.BR.ReadUInt16();                          break;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          this.Value = (int)map.BR.ReadUInt32();                          break;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          this.Value = map.BR.ReadByte();                          break;                      }              }
Missing Default,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,Save,The following switch statement is missing a default case: switch (ValueType)                  {                      case IFPIO.ObjectEnum.Short:                          {                              map.BW.Write(Convert.ToInt16(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.Int:                          {                              map.BW.Write(Convert.ToInt32(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              map.BW.Write(Convert.ToUInt16(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              map.BW.Write(Convert.ToUInt32(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              map.BW.Write(Convert.ToSingle(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              map.BW.Write(Convert.ToSingle(this.Value));                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              map.BW.Write(Convert.ToByte(this.Value));                              break;                          }                  }
Missing Default,MetaEditor.Components,Indices,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\Indices.cs,GetItems,The following switch statement is missing a default case: switch (this.EntIndex.ItemType.ToLower())                      {                          case "short":                              {                                  tempValueString = counter + " : " + map.BR.ReadInt16();                                  break;                              }                            case "int":                              {                                  tempValueString = counter + " : " + map.BR.ReadInt32();                                  break;                              }                            case "ushort":                              {                                  tempValueString = counter + " : " + map.BR.ReadUInt16();                                  break;                              }                            case "uint":                              {                                  tempValueString = counter + " : " + map.BR.ReadUInt32();                                  break;                              }                            case "float":                              {                                  tempValueString = counter + " : " + map.BR.ReadSingle();                                  break;                              }                            case "stringid":                              {                                  int sidIndexer = map.BR.ReadInt16();                                  if (sidIndexer > -1 && sidIndexer < map.Strings.Name.Length)                                  {                                      tempValueString = counter + " : " + map.Strings.Name[sidIndexer];                                  }                                  else                                  {                                      tempValueString = counter + " : Not a String ID";                                  }                                    break;                              }                            case "ident":                              {                                  int tempint = map.BR.ReadInt32();                                  int tagIndex = map.Functions.ForMeta.FindMetaByID(tempint);                                  if (tagIndex != -1)                                  {                                      if (tempint != -1)                                      {                                          tempValueString = counter + " : " + map.MetaInfo.TagType[tagIndex] + " - " +                                                            map.FileNames.Name[tagIndex];                                      }                                      else                                      {                                          tempValueString = counter +                                                            " : Probably is NOT an ident' choose another data type";                                      }                                  }                                  else if (tagIndex == -1)                                  {                                      tempValueString = counter + " : nulled ident";                                  }                                  else                                  {                                      tempValueString = counter + " : Probably is NOT an ident' choose another data type";                                  }                                    break;                              }                            case "string32":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(32);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "unicodestring64":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(64);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "string256":                              {                                  Encoding decode = Encoding.UTF8;                                  byte[] tempbytes = map.BR.ReadBytes(256);                                  tempValueString = counter + " : " + decode.GetString(tempbytes);                                  break;                              }                            case "unicodestring256":                              {                                  goto case "string256";                              }                      }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadENTControls,The following switch statement is missing a default case: switch (tempbase.ObjectType)                  {                      case IFPIO.ObjectEnum.Struct:                          {                              if (MetaEditor.ShowReflexives == false)                              {                                  continue;                              }                                Label tempLabel1 = new Label();                              tempLabel1.AutoSize = true;                              tempLabel1.Location = new Point(0' 0);                              tempLabel1.Name = "label1";                              tempLabel1.Dock = DockStyle.Top;                              tempLabel1.Size = new Size(35' 13);                              tempLabel1.TabIndex = 1;                              ReflexiveControl tempReflexive = new ReflexiveControl(                                  map' translatedOffset' ((IFPIO.Reflexive)tempbase).HasCount' tempbase.lineNumber);                              tempReflexive.Name = "reflexive";                              tempReflexive.LoadENTControls(                                  (IFPIO.Reflexive)tempbase'                                   ((IFPIO.Reflexive)tempbase).items'                                   true'                                   layer + 1'                                   ref tabIndex'                                   customPluginPath + "\\" + tempbase.offset);                                // Label' Combobox & Button are always added ( = 3)                              if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                              {                                  bottomPanel.Controls.Add(tempLabel1);                                  tempLabel1.BringToFront();                                  bottomPanel.Controls.Add(tempReflexive);                                  tempReflexive.BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Block:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                TagBlock tempBlock = new TagBlock(                                  tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempBlock.Name = "tagblock";                              tempBlock.Controls[1].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempBlock);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              if (MetaEditor.ShowIdents == false)                              {                                  continue;                              }                                Ident tempident = new Ident(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Ident)tempbase).hasTagType'                                   tempbase.lineNumber);                              tempident.Name = "ident";                              tempident.Controls[1].ContextMenuStrip = identContext;                              tempident.Controls[2].ContextMenuStrip = identContext;                              bottomPanel.Controls.Add(tempident);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              if (MetaEditor.ShowSIDs == false)                              {                                  continue;                              }                                SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                              tempSID.Name = "sid";                              bottomPanel.Controls.Add(tempSID);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              if (MetaEditor.ShowFloats == false)                              {                                  continue;                              }                                DataValues tempFloat = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempFloat.Name = "float";                              bottomPanel.Controls.Add(tempFloat);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                              {                                  continue;                              }                                EntStrings tempstring = new EntStrings(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPString)tempbase).size'                                   ((IFPIO.IFPString)tempbase).type'                                   tempbase.lineNumber);                              tempstring.Name = "string";                              tempstring.TabIndex = tabIndex;                              bottomPanel.Controls.Add(tempstring);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              if (MetaEditor.ShowUnicodeString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              if (MetaEditor.ShowUnicodeString64s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              if (MetaEditor.ShowString256s == false)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String:                          {                              if (MetaEditor.ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String)                              {                                  continue;                              }                                goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.Int:                          {                              if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                              {                                  if ((MetaEditor.ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                      (MetaEditor.ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                      (MetaEditor.ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                      (MetaEditor.ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                  {                                      continue;                                  }                                    DataValues tempdatavalues = new DataValues(                                      tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if ((MetaEditor.ShowBlockIndex32s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                      (MetaEditor.ShowBlockIndex16s == false &&                                       (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                        tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                      (MetaEditor.ShowBlockIndex8s == false &&                                       tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPInt)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              if (MetaEditor.ShowUndefineds == false)                              {                                  continue;                              }                                DataValues tempUndefined = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                // Float tempFloat = new Float(tempbase.name' map' tempbase.offset);                              tempUndefined.Name = "tempUndefined";                              bottomPanel.Controls.Add(tempUndefined);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte_Flags:                          {                              if (MetaEditor.ShowBitmask8s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 8)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Word_Flags:                          {                              if (MetaEditor.ShowBitmask16s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 16)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Flags:                          {                              if (MetaEditor.ShowBitmask32s == false && ((IFPIO.Bitmask)tempbase).bitmaskSize == 32)                              {                                  continue;                              }                                Bitmask tempbitmask = new Bitmask(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.Bitmask)tempbase).bitmaskSize'                                   ((IFPIO.Bitmask)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempbitmask);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                              {                                  if (MetaEditor.ShowBytes == false)                                  {                                      continue;                                  }                                    DataValues tempByte = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                  bottomPanel.Controls.Add(tempByte);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                              else                              {                                  if (MetaEditor.ShowBlockIndex8s == false)                                  {                                      continue;                                  }                                    Indices tempdatavalues = new Indices(                                      tempbase.name'                                       map'                                       tempbase.offset'                                       tempbase.ObjectType'                                       ((IFPIO.IFPByte)tempbase).entIndex);                                  bottomPanel.Controls.Add(tempdatavalues);                                  bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              }                                break;                          }                        case IFPIO.ObjectEnum.Char_Enum:                          {                              if (MetaEditor.ShowEnum8s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Enum:                          {                              if (MetaEditor.ShowEnum16s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Long_Enum:                          {                              if (MetaEditor.ShowEnum32s == false)                              {                                  continue;                              }                                Enums tempenum = new Enums(                                  tempbase.name'                                   map'                                   tempbase.offset'                                   ((IFPIO.IFPEnum)tempbase).enumSize'                                   ((IFPIO.IFPEnum)tempbase).options'                                   tempbase.lineNumber);                              bottomPanel.Controls.Add(tempenum);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.Unused:                          {                              DataValues tempUnused = new DataValues(                                  tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                              tempUnused.TabIndex = tabIndex;                              tempUnused.Populate(map.SelectedMeta.offset);                              bottomPanel.Controls.Add(tempUnused);                              bottomPanel.Controls[bottomPanel.Controls.Count - 1].BringToFront();                              break;                          }                        case IFPIO.ObjectEnum.TagType:                          continue;                  }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,PokeRecursively,The following switch statement is missing a default case: switch (reflControl[counter].GetType().ToString())                  {                      case "MetaEditor.Components.SID":                          {                              ((SID)reflControl[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.ReflexiveControl":                          {                              ((ReflexiveControl)reflControl[counter]).PokeRecursively();                              break;                          }                        case "MetaEditor.Components.Ident":                          {                              ((Ident)reflControl[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.Bitmask":                          {                              ((Bitmask)reflControl[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.DataValues":                          {                              ((DataValues)reflControl[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.Enums":                          {                              ((Enums)reflControl[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.Indices":                          {                              ((Indices)reflControl[counter]).Poke();                              break;                          }                  }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,SaveRecursively,The following switch statement is missing a default case: switch (reflControl[counter].GetType().ToString())                  {                      case "MetaEditor.Components.SID":                          {                              ((SID)reflControl[counter]).Save();                              break;                          }                        case "MetaEditor.Components.ReflexiveControl":                          {                              ((ReflexiveControl)reflControl[counter]).SaveRecursively();                              break;                          }                        case "MetaEditor.Components.Ident":                          {                              ((Ident)reflControl[counter]).Save();                              break;                          }                        case "MetaEditor.Components.Float":                          {                              ((Float)reflControl[counter]).Save();                              break;                          }                        case "MetaEditor.Components.EntStrings":                          {                              ((EntStrings)reflControl[counter]).Save();                              break;                          }                        case "MetaEditor.Components.Bitmask":                          {                              ((Bitmask)reflControl[counter]).Save();                              break;                          }                        case "MetaEditor.Components.DataValues":                          {                              ((DataValues)reflControl[counter]).Save();                              break;                          }                        case "MetaEditor.Components.Enums":                          {                              ((Enums)reflControl[counter]).Save();                              break;                          }                        case "MetaEditor.Components.Indices":                          {                              ((Indices)reflControl[counter]).Save();                              break;                          }                  }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,SetFocusRecursively,The following switch statement is missing a default case: switch (reflControl[counter].GetType().ToString())                  {                      case "MetaEditor.Components.SID":                          {                              ((SID)reflControl[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.ReflexiveControl":                          {                              ((ReflexiveControl)reflControl[counter]).SetFocusRecursively(LineToCheck);                              break;                          }                        case "MetaEditor.Components.Ident":                          {                              ((Ident)reflControl[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.EntStrings":                          {                              ((EntStrings)reflControl[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.Bitmask":                          {                              ((Bitmask)reflControl[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.DataValues":                          {                              ((DataValues)reflControl[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.Enums":                          {                              ((Enums)reflControl[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.Indices":                          {                              ((Indices)reflControl[counter]).SetFocus(LineToCheck);                              break;                          }                  }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,LoadMetaIntoControlsForThisReflexive,The following switch statement is missing a default case: switch (bottomPanel.Controls[counter].GetType().ToString())                  {                      case "MetaEditor.Components.SID":                          {                              ((SID)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize));                              break;                          }                        case "MetaEditor.Components.ReflexiveControl":                          {                              ((ReflexiveControl)this.bottomPanel.Controls[counter]).LoadMetaIntoControls(                                  translatedOffset + (this.selectedChunk * this.chunkSize)' this.translatedOffset);                              break;                          }                        case "MetaEditor.Components.TagBlock":                          {                              ((TagBlock)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize));                              break;                          }                        case "MetaEditor.Components.Ident":                          {                              ((Ident)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize));                              break;                          }                        case "MetaEditor.Components.Float":                          {                              ((Float)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize));                              break;                          }                        case "MetaEditor.Components.EntStrings":                          {                              ((EntStrings)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize));                              break;                          }                        case "MetaEditor.Components.DataValues":                          {                              ((DataValues)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize));                              break;                          }                        case "MetaEditor.Components.Bitmask":                          {                              ((Bitmask)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize));                              break;                          }                        case "MetaEditor.Components.Enums":                          {                              ((Enums)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize));                              break;                          }                        case "MetaEditor.Components.Indices":                          {                              ((Indices)this.bottomPanel.Controls[counter]).Populate(                                  this.translatedOffset + (this.selectedChunk * this.chunkSize)'                                   this.oneUpReflexiveBlockOffset);                              break;                          }                  }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The following switch statement is missing a default case: switch (tempbase.ObjectType)                      {                          case IFPIO.ObjectEnum.Ident:                              {                                  labelType = IFPIO.ObjectEnum.Ident;                                  break;                              }                            case IFPIO.ObjectEnum.StringID:                              {                                  labelType = IFPIO.ObjectEnum.StringID;                                  break;                              }                            case IFPIO.ObjectEnum.Float:                              {                                  labelType = IFPIO.ObjectEnum.Float;                                  break;                              }                            case IFPIO.ObjectEnum.String32:                              {                                  labelType = ((IFPIO.IFPString)tempbase).type == false                                                  ? ((IFPIO.IFPString)tempbase).size == 32                                                        ? IFPIO.ObjectEnum.String32                                                        : IFPIO.ObjectEnum.String256                                                  : ((IFPIO.IFPString)tempbase).size == 64                                                        ? IFPIO.ObjectEnum.UnicodeString64                                                        : IFPIO.ObjectEnum.UnicodeString256;                                  break;                              }                            case IFPIO.ObjectEnum.UnicodeString256:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.String256:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.UnicodeString64:                              {                                  goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.Int:                              {                                  labelType = IFPIO.ObjectEnum.Int;                                  break;                              }                            case IFPIO.ObjectEnum.Short:                              {                                  labelType = IFPIO.ObjectEnum.Short;                                  break;                              }                            case IFPIO.ObjectEnum.UShort:                              {                                  labelType = IFPIO.ObjectEnum.UShort;                                  break;                              }                            case IFPIO.ObjectEnum.UInt:                              {                                  labelType = IFPIO.ObjectEnum.UInt;                                  break;                              }                            case IFPIO.ObjectEnum.Unknown:                              {                                  goto case IFPIO.ObjectEnum.Float;                              }                      }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,UpdateReflexiveSelectionBox,The following switch statement is missing a default case: switch (labelType)                  {                      case IFPIO.ObjectEnum.Short:                          {                              tempvalue = map.BR.ReadInt16();                              break;                          }                        case IFPIO.ObjectEnum.Int:                          {                              tempvalue = map.BR.ReadInt32();                              break;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              tempvalue = map.BR.ReadUInt16();                              break;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              tempvalue = map.BR.ReadUInt32();                              break;                          }                        case IFPIO.ObjectEnum.Float:                          {                              tempvalue = map.BR.ReadSingle();                              break;                          }                        case IFPIO.ObjectEnum.Unknown:                          {                              tempvalue = map.BR.ReadSingle();                              break;                          }                        case IFPIO.ObjectEnum.StringID:                          {                              int sidIndexer = map.BR.ReadInt16();                              tempvalue = map.Strings.Name[sidIndexer];                              break;                          }                        case IFPIO.ObjectEnum.Ident:                          {                              int tempint = map.BR.ReadInt32();                              int tagIndex = map.Functions.ForMeta.FindMetaByID(tempint);                              if (tempint != -1)                              {                                  tempvalue = map.MetaInfo.TagType[tagIndex] + " - " +                                              map.FileNames.Name[tagIndex];                              }                              else                              {                                  tempvalue = "null";                              }                                break;                          }                        case IFPIO.ObjectEnum.String32:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(32);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(64);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.String256:                          {                              Encoding decode = Encoding.Unicode;                              byte[] tempbytes = map.BR.ReadBytes(256);                              tempvalue = decode.GetString(tempbytes);                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              goto case IFPIO.ObjectEnum.String256;                          }                  }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following switch statement is missing a default case: switch (((Bitmask)c.Parent).bitCount)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Bitmask)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Bitmask)c.Parent).Value));                                      break;                              }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,copyToAllToolStripMenuItem_Click,The following switch statement is missing a default case: switch (((Enums)c.Parent).enumType)                              {                                  case 8:                                      map.BW.Write(byte.Parse(((Enums)c.Parent).Value));                                      break;                                  case 16:                                      map.BW.Write(short.Parse(((Enums)c.Parent).Value));                                      break;                                  case 32:                                      map.BW.Write(int.Parse(((Enums)c.Parent).Value));                                      break;                              }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following switch statement is missing a default case: switch (c.ToString())              {                  case "Entity.MetaEditor.Bitmask":                      Bitmask bt = (Bitmask)c;                      name = bt.EntName;                      offset = bt.offsetInMap;                      chunkoffset = bt.chunkOffset;                      lineNum = bt.LineNumber;                      sizeCount = bt.bitCount >> 3;                      break;                  case "Entity.MetaEditor.DataValues":                      DataValues dv = (DataValues)c;                      name = dv.EntName;                      offset = dv.offsetInMap;                      chunkoffset = dv.chunkOffset;                      lineNum = dv.LineNumber;                      switch (dv.ValueType)                      {                          case IFPIO.ObjectEnum.Byte:                              // case DataValues.ENTType.ub:                              sizeCount = 1;                              break;                          case IFPIO.ObjectEnum.Short:                          case IFPIO.ObjectEnum.UShort:                              sizeCount = 2;                              break;                          case IFPIO.ObjectEnum.Float:                          case IFPIO.ObjectEnum.Int:                          case IFPIO.ObjectEnum.UInt:                              sizeCount = 4;                              break;                      }                        break;              }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following switch statement is missing a default case: switch (dv.ValueType)                      {                          case IFPIO.ObjectEnum.Byte:                              // case DataValues.ENTType.ub:                              sizeCount = 1;                              break;                          case IFPIO.ObjectEnum.Short:                          case IFPIO.ObjectEnum.UShort:                              sizeCount = 2;                              break;                          case IFPIO.ObjectEnum.Float:                          case IFPIO.ObjectEnum.Int:                          case IFPIO.ObjectEnum.UInt:                              sizeCount = 4;                              break;                      }
Missing Default,MetaEditor.Components,ReflexiveControl,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Components\ReflexiveControl.cs,fieldTypeChanged,The following switch statement is missing a default case: switch (((string)((ComboBox)sender).SelectedItem).ToLower())              {                  case "byte":                      if (sizeCount < 1)                      {                          break;                      }                        DataValues dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Byte' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 1;                      break;                  case "short":                      if (sizeCount < 2)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Short' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 2;                      break;                  case "int":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Int' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "float":                      if (sizeCount < 4)                      {                          break;                      }                        dv = new DataValues(name' map' chunkoffset' IFPIO.ObjectEnum.Float' lineNum);                      dv.Controls.RemoveAt(dv.Controls.Count - 1);                      c2 = dv;                      sizeCount -= 4;                      break;                  case "byte_flags":                      if (sizeCount < 1)                      {                          break;                      }                        IFPIO.Option[] options = new IFPIO.Option[8];                      for (int x = 0; x < 8; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        Bitmask bt = new Bitmask(name' map' chunkoffset' 8' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 1;                      break;                  case "word_flags":                      if (sizeCount < 2)                      {                          break;                      }                        options = new IFPIO.Option[16];                      for (int x = 0; x < 16; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 16' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 2;                      break;                  case "long_flags":                      if (sizeCount < 4)                      {                          break;                      }                        options = new IFPIO.Option[32];                      for (int x = 0; x < 32; x++)                      {                          options[x] = new IFPIO.Option("bit " + x' ""' x.ToString()' lineNum);                      }                        bt = new Bitmask(name' map' chunkoffset' 32' options' lineNum);                      bt.Controls.RemoveAt(bt.Controls.Count - 1);                      c2 = bt;                      sizeCount -= 4;                      break;              }
Missing Default,MetaEditor.Forms,ControlSwapper,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ControlSwapper.cs,getSizeOf,The following switch statement is missing a default case: switch (name.ToLower())              {                  case "byte":                  case "byte_flags":                  case "char_enum":                      return 1;                  case "enum":                  case "int16":                  case "short":                  case "word_flags":                      return 2;                  case "int":                  case "float":                  case "long_enum":                  case "long_flags":                  case "sid":                      return 4;                  case "ident":                  case "tagblock":                      return 8;                  case "string32":                      return 32;                  case "unicode64":                      return 64;                  case "string":                  case "string256":                  case "unicode256":                      return 256;              }
Missing Default,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,AddItemToEntElements,The following switch statement is missing a default case: switch (TheEnum)              {                  case "Reflexive":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.Reflexive(-1' -1' false' "unnamed"' ""' string.Empty' null' -1' 0' true' -1' -1));                          break;                      }                    #region Strings                    case "String32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 32' false' -1' -1' -1));                          break;                      }                    case "UnicodeString256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' true' -1' -1' -1));                          break;                      }                    case "UnicodeString64":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 64' true' -1' -1' -1));                          break;                      }                    case "String256":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPString("unnamed"' ""' false' -1' 256' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Ints and Bytes                    case "Int":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPInt(                                  -1'                                  (IFPIO.ObjectEnum)Enum.Parse(typeof(IFPIO.ObjectEnum)' TheEnum)'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    case "Short":                      {                          goto case "Int";                      }                    case "UShort":                      {                          goto case "Int";                      }                    case "UInt":                      {                          goto case "Int";                      }                    case "Byte":                      {                          this.Ent.ENTElements.Add(                              new IFPIO.IFPByte(                                  -1'                                  false'                                  "unnamed"'                                  ""'                                  new IFPIO.Index(                                      string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' -1)'                                  -1'                                  -1'                                  -1));                          break;                      }                    #endregion                    #region Bitmasks                    case "Bitmask32":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Bitmask16":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Bitmask8":                      {                          this.Ent.ENTElements.Add(new IFPIO.Bitmask(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Enums                    case "Enum32":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 32' -1' -1' -1));                          break;                      }                    case "Enum16":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 16' -1' -1' -1));                          break;                      }                    case "Enum8":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPEnum(-1' false' "unnamed"' ""' null' 8' -1' -1' -1));                          break;                      }                    #endregion                    #region Idents                    case "TagBlock":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagBlock("unnamed"' ""' false' -1' -1' -1' -1));                          break;                      }                    // To be outdated                  case "TagType":                      {                          this.Ent.ENTElements.Add(new IFPIO.TagType(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Ident":                      {                          this.Ent.ENTElements.Add(new IFPIO.Ident("unnamed"' ""' false' -1' false' -1' -1' -1));                          break;                      }                    #endregion                    #region Unused                    case "Unused":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unused(-1' 0' -1' -1' -1));                          break;                      }                    #endregion                    #region Floats                    case "Unknown":                      {                          this.Ent.ENTElements.Add(new IFPIO.Unknown(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    case "Float":                      {                          this.Ent.ENTElements.Add(new IFPIO.IFPFloat(-1' false' "unnamed"' ""' -1' -1' -1));                          break;                      }                    #endregion              }
Missing Default,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,EntItemsTreeView_AfterSelect,The following switch statement is missing a default case: switch (((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType)              {                  case IFPIO.ObjectEnum.Struct:                      {                          this.radbReflexiveHCTrue.Checked = ((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.radbReflexiveHCFalse.Checked = !((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.txtbReflexiveChunkSize.Text = ((IFPIO.Reflexive)this.buttGoTo.Tag).chunkSize.ToString();                          this.LoadReflexiveLabel(                              ((IFPIO.Reflexive)this.buttGoTo.Tag).child' ((IFPIO.Reflexive)this.buttGoTo.Tag).label);                          this.panReflexiveContainer.Show();                          break;                      }                    #region Strings                    case IFPIO.ObjectEnum.String32:                      {                          this.radbStringString.Checked = !((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.radbStringUnicode.Checked = ((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.combStringSize.Text = ((IFPIO.IFPString)this.buttGoTo.Tag).size.ToString();                          this.panStringContainer.Show();                          break;                      }                    case IFPIO.ObjectEnum.UnicodeString256:                      {                          goto case IFPIO.ObjectEnum.String32;                      }                    case IFPIO.ObjectEnum.UnicodeString64:                      {                          goto case IFPIO.ObjectEnum.String32;                      }                    case IFPIO.ObjectEnum.String256:                      {                          goto case IFPIO.ObjectEnum.String32;                      }                    #endregion                    #region Ints and Bytes                    case IFPIO.ObjectEnum.Int:                      {                          this.panIndices.Show();                          if (((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex.nulled)                          {                              this.indicesEnable(false);                          }                          else                          {                              this.indicesEnable(true);                              this.LoadIndices(((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex);                          }                            break;                      }                    case IFPIO.ObjectEnum.Short:                      {                          goto case IFPIO.ObjectEnum.Int;                      }                    case IFPIO.ObjectEnum.UShort:                      {                          goto case IFPIO.ObjectEnum.Int;                      }                    case IFPIO.ObjectEnum.UInt:                      {                          goto case IFPIO.ObjectEnum.Int;                      }                    case IFPIO.ObjectEnum.Byte:                      {                          this.panIndices.Show();                          if (((IFPIO.IFPByte)this.buttGoTo.Tag).entIndex.nulled)                          {                              this.indicesEnable(false);                          }                          else                          {                              this.indicesEnable(true);                              this.LoadIndices(((IFPIO.IFPByte)this.buttGoTo.Tag).entIndex);                          }                            break;                      }                    #endregion                    #region Bitmasks                    case IFPIO.ObjectEnum.Byte_Flags:                  case IFPIO.ObjectEnum.Word_Flags:                  case IFPIO.ObjectEnum.Long_Flags:                      {                          this.panBitmask.Show();                          this.BitmaskLoadBitNames();                          break;                      }                    #endregion                    #region Enums                    case IFPIO.ObjectEnum.Char_Enum:                  case IFPIO.ObjectEnum.Enum:                  case IFPIO.ObjectEnum.Long_Enum:                      {                          this.panEnums.Show();                          this.EnumLoadItemNames();                          break;                      }                    #endregion              }
Missing Default,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,buttSaveCurrentItem_Click,The following switch statement is missing a default case: switch (this.Ent.ENTElements[tempIndexer].ObjectType)                  {                          case IFPIO.ObjectEnum.Struct:                          {                              ((IFPIO.Reflexive)this.Ent.ENTElements[tempIndexer]).HasCount =                                  this.radbReflexiveHCTrue.Checked;                              ((IFPIO.Reflexive)this.Ent.ENTElements[tempIndexer]).label = this.combReflexiveLabel.Text;                              break;                          }                            #region Strings                        case IFPIO.ObjectEnum.String32:                          {                              ((IFPIO.IFPString)this.Ent.ENTElements[tempIndexer]).size =                                  Convert.ToInt32(this.combStringSize.Text);                              ((IFPIO.IFPString)this.Ent.ENTElements[tempIndexer]).type = this.radbStringUnicode.Checked;                              break;                          }                        case IFPIO.ObjectEnum.UnicodeString256:                          {                              goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.String256:                          {                              goto case IFPIO.ObjectEnum.String32;                          }                        case IFPIO.ObjectEnum.UnicodeString64:                          {                              goto case IFPIO.ObjectEnum.String32;                          }                        #endregion                        #region Ints and Bytes                        case IFPIO.ObjectEnum.Int:                          {                              if (this.buttIndexDelete.Visible && this.combIndicesItem.Text != string.Empty &&                                  this.combIndicesRToIndex.Text != string.Empty)                              {                                  int reflexiveIndexer =                                      ((int[])this.combIndicesRToIndex.Tag)[this.combIndicesRToIndex.SelectedIndex];                                  int itemIndexer = ((int[])this.combIndicesItem.Tag)[this.combIndicesItem.SelectedIndex];                                  ((IFPIO.IFPInt)this.Ent.ENTElements[tempIndexer]).entIndex.nulled = false;                                  ((IFPIO.IFPInt)this.Ent.ENTElements[tempIndexer]).entIndex.ItemOffset =                                      this.Ent.ENTElements[itemIndexer].offset;                                  ((IFPIO.IFPInt)this.Ent.ENTElements[tempIndexer]).entIndex.ReflexiveOffset =                                      this.Ent.ENTElements[reflexiveIndexer].offset;                                  ((IFPIO.IFPInt)this.Ent.ENTElements[tempIndexer]).entIndex.ReflexiveSize =                                      ((IFPIO.Reflexive)this.Ent.ENTElements[reflexiveIndexer]).chunkSize;                                  ((IFPIO.IFPInt)this.Ent.ENTElements[tempIndexer]).entIndex.reflexiveLayer =                                      this.combIndicesLayer.Text;                                  ((IFPIO.IFPInt)this.Ent.ENTElements[tempIndexer]).entIndex.ItemType =                                      this.Ent.ENTElements[itemIndexer].ObjectType.ToString().ToLower();                              }                              else                              {                                  ((IFPIO.IFPInt)this.Ent.ENTElements[tempIndexer]).entIndex.nulled = true;                              }                                break;                          }                        case IFPIO.ObjectEnum.Short:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UShort:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.UInt:                          {                              goto case IFPIO.ObjectEnum.Int;                          }                        case IFPIO.ObjectEnum.Byte:                          {                              if (this.buttIndexDelete.Visible && this.combIndicesItem.Text != string.Empty &&                                  this.combIndicesRToIndex.Text != string.Empty)                              {                                  int reflexiveIndexer =                                      ((int[])this.combIndicesRToIndex.Tag)[this.combIndicesRToIndex.SelectedIndex];                                  int itemIndexer = ((int[])this.combIndicesItem.Tag)[this.combIndicesItem.SelectedIndex];                                  ((IFPIO.IFPByte)this.Ent.ENTElements[tempIndexer]).entIndex.nulled = false;                                  ((IFPIO.IFPByte)this.Ent.ENTElements[tempIndexer]).entIndex.ItemOffset =                                      this.Ent.ENTElements[itemIndexer].offset;                                  ((IFPIO.IFPByte)this.Ent.ENTElements[tempIndexer]).entIndex.ReflexiveOffset =                                      this.Ent.ENTElements[reflexiveIndexer].offset;                                  ((IFPIO.IFPByte)this.Ent.ENTElements[tempIndexer]).entIndex.ReflexiveSize =                                      ((IFPIO.Reflexive)this.Ent.ENTElements[reflexiveIndexer]).chunkSize;                                  ((IFPIO.IFPByte)this.Ent.ENTElements[tempIndexer]).entIndex.reflexiveLayer =                                      this.combIndicesLayer.Text;                                  ((IFPIO.IFPByte)this.Ent.ENTElements[tempIndexer]).entIndex.ItemType =                                      this.Ent.ENTElements[itemIndexer].ObjectType.ToString().ToLower();                              }                              else                              {                                  ((IFPIO.IFPByte)this.Ent.ENTElements[tempIndexer]).entIndex.nulled = true;                              }                                break;                          }                        #endregion                  }
Missing Default,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The following switch statement is missing a default case: switch ((IFPIO.ObjectEnum)tempIndexer)              {                      case IFPIO.ObjectEnum.Struct:                      {                          this.buttGoTo.Tag = new IFPIO.Reflexive(                              lineNumber' offset' visible' name' string.Empty' string.Empty' null' 0' 0' false' parent' prevSibling);                          this.radbReflexiveHCTrue.Checked = ((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.radbReflexiveHCFalse.Checked = !((IFPIO.Reflexive)this.buttGoTo.Tag).HasCount;                          this.txtbReflexiveChunkSize.Text = ((IFPIO.Reflexive)this.buttGoTo.Tag).chunkSize.ToString();                          this.LoadReflexiveLabel(                              ((IFPIO.Reflexive)this.buttGoTo.Tag).child' ((IFPIO.Reflexive)this.buttGoTo.Tag).label);                          this.panReflexiveContainer.Show();                          break;                      }                        #region Strings                    case IFPIO.ObjectEnum.String32:                  case IFPIO.ObjectEnum.String256:                  case IFPIO.ObjectEnum.UnicodeString64:                  case IFPIO.ObjectEnum.UnicodeString256:                      {                          bool unicode = false;                          int ifpSize = 256;                          switch ((IFPIO.ObjectEnum)tempIndexer)                          {                              case IFPIO.ObjectEnum.String32:                                  {                                      ifpSize = 32;                                      break;                                  }                                case IFPIO.ObjectEnum.String256:                                  {                                      ifpSize = 256;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString64:                                  {                                      ifpSize = 64;                                      unicode = true;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString256:                                  {                                      ifpSize = 256;                                      unicode = true;                                      break;                                  }                          }                            this.buttGoTo.Tag = new IFPIO.IFPString(                              name' string.Empty' visible' offset' ifpSize' unicode' lineNumber' parent' prevSibling);                          this.radbStringString.Checked = !((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.radbStringUnicode.Checked = ((IFPIO.IFPString)this.buttGoTo.Tag).type;                          this.combStringSize.Text = ((IFPIO.IFPString)this.buttGoTo.Tag).size.ToString();                          this.panStringContainer.Show();                          break;                      }                    #endregion                    #region Ints and Bytes                    case IFPIO.ObjectEnum.Float:                      {                          this.buttGoTo.Tag = new IFPIO.IFPFloat(offset' visible' name' ""' lineNumber' parent' prevSibling);                          break;                      }                    case IFPIO.ObjectEnum.Byte:                  case IFPIO.ObjectEnum.Short:                  case IFPIO.ObjectEnum.UShort:                  case IFPIO.ObjectEnum.UInt:                  case IFPIO.ObjectEnum.Int:                      {                          IFPIO.Index Index = new IFPIO.Index(                              string.Empty' string.Empty' string.Empty' ((IFPIO.BaseObject)this.buttGoTo.Tag).ObjectType.ToString()' string.Empty' lineNumber);                          this.buttGoTo.Tag = new IFPIO.IFPInt(                              offset'                              (IFPIO.ObjectEnum)tempIndexer'                              visible'                              name'                              string.Empty'                              Index'                              lineNumber'                              parent'                              prevSibling);                          this.panIndices.Show();                          if (((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex.nulled)                          {                              this.indicesEnable(false);                          }                          else                          {                              this.indicesEnable(true);                              this.LoadIndices(((IFPIO.IFPInt)this.buttGoTo.Tag).entIndex);                          }                            break;                      }                    #endregion                    #region Bitmasks                    case IFPIO.ObjectEnum.Byte_Flags:                  case IFPIO.ObjectEnum.Word_Flags:                  case IFPIO.ObjectEnum.Long_Flags:                      {                          this.buttGoTo.Tag = new IFPIO.Bitmask(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panBitmask.Show();                          this.BitmaskLoadBitNames();                          break;                      }                    #endregion                    #region Enums                    case IFPIO.ObjectEnum.Char_Enum:                  case IFPIO.ObjectEnum.Enum:                  case IFPIO.ObjectEnum.Long_Enum:                      {                          this.buttGoTo.Tag = new IFPIO.IFPEnum(                              offset' visible' name' ""' null' 0' lineNumber' parent' prevSibling);                          this.panEnums.Show();                            // this.EnumLoadItemNames();                          break;                      }                    #endregion              }
Missing Default,MetaEditor.Forms,ListEntItems,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\ListEntItems.cs,combType_SelectionChangeCommitted,The following switch statement is missing a default case: switch ((IFPIO.ObjectEnum)tempIndexer)                          {                              case IFPIO.ObjectEnum.String32:                                  {                                      ifpSize = 32;                                      break;                                  }                                case IFPIO.ObjectEnum.String256:                                  {                                      ifpSize = 256;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString64:                                  {                                      ifpSize = 64;                                      unicode = true;                                      break;                                  }                                case IFPIO.ObjectEnum.UnicodeString256:                                  {                                      ifpSize = 256;                                      unicode = true;                                      break;                                  }                          }
Missing Default,MetaEditor.Forms,MEStringsSelector,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\Forms\MEStringsSelector.cs,textBox1_KeyDown,The following switch statement is missing a default case: switch (e.KeyCode)              {                  case Keys.Home:                      if (listBox1.Items.Count > 0)                      {                          listBox1.SelectedIndex = 0;                      }                        break;                  case Keys.PageUp:                      if (listBox1.Items.Count > 0)                      {                          if (listBox1.SelectedIndex > listHeight)                          {                              listBox1.SelectedIndex -= listHeight;                          }                          else                          {                              listBox1.SelectedIndex = 0;                          }                      }                        break;                  case Keys.Up:                      if (listBox1.SelectedIndex > 0)                      {                          listBox1.SelectedIndex -= 1;                      }                        break;                  case Keys.Down:                        // if (listBox1.Items.Count > 0)                      if (listBox1.SelectedIndex < listBox1.Items.Count - 1)                      {                          listBox1.SelectedIndex += 1;                      }                        break;                  case Keys.PageDown:                        // if (listBox1.Items.Count > 0)                      if (listBox1.SelectedIndex + listHeight < listBox1.Items.Count - 1)                      {                          listBox1.SelectedIndex += listHeight;                      }                      else                      {                          listBox1.SelectedIndex = listBox1.Items.Count - 1;                      }                        break;                  case Keys.End:                        // if (listBox1.Items.Count > 0)                      listBox1.SelectedIndex = listBox1.Items.Count - 1;                      break;                  case Keys.Enter:                      listBox1_DoubleClick(sender' new EventArgs());                      break;              }
Missing Default,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,ReloadMetaForSameTagType,The following switch statement is missing a default case: switch (this.Controls[0].Controls[counter].GetType().ToString())                  {                      case "MetaEditor.Components.SID":                          {                              ((SID)this.Controls[0].Controls[counter]).Populate(map.SelectedMeta.offset);                              break;                          }                        case "MetaEditor.Components.ReflexiveControl":                          {                              if (reloadreflexive == false)                              {                                  break;                              }                                ((ReflexiveControl)this.Controls[0].Controls[counter]).LoadMetaIntoControls(                                  map.SelectedMeta.offset' map.SelectedMeta.offset);                              break;                          }                        case "MetaEditor.Components.Ident":                          {                              ((Ident)this.Controls[0].Controls[counter]).Populate(map.SelectedMeta.offset);                              break;                          }                        case "MetaEditor.Components.Float":                          {                              ((Float)this.Controls[0].Controls[counter]).Populate(map.SelectedMeta.offset);                              break;                          }                        case "MetaEditor.Components.EntStrings":                          {                              ((EntStrings)this.Controls[0].Controls[counter]).Populate(map.SelectedMeta.offset);                              break;                          }                        case "MetaEditor.Components.Bitmask":                          {                              ((Bitmask)this.Controls[0].Controls[counter]).Populate(map.SelectedMeta.offset);                              break;                          }                        case "MetaEditor.Components.DataValues":                          {                              ((DataValues)this.Controls[0].Controls[counter]).Populate(map.SelectedMeta.offset);                              break;                          }                        case "MetaEditor.Components.Enums":                          {                              ((Enums)this.Controls[0].Controls[counter]).Populate(map.SelectedMeta.offset);                              break;                          }                  }
Missing Default,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,LoadENTControls,The following switch statement is missing a default case: switch (tempbase.ObjectType)                      {                          case IFPIO.ObjectEnum.Struct:                              {                                  if (ShowReflexives == false)                                  {                                      break;                                  }                                    // tempLabel is a blank space located above reflexives                                  Label tempLabel = new Label();                                  tempLabel.AutoSize = true;                                  tempLabel.Location = new Point(0' 0);                                  tempLabel.Name = "label1";                                  tempLabel.Dock = DockStyle.Top;                                  tempLabel.Size = new Size(35' 13);                                  tempLabel.TabIndex = tabIndex;                                    // tempReflexive is the reflexive and all data (incl other reflexives) within it                                  ReflexiveControl tempReflexive = new ReflexiveControl(                                      map'                                      map.SelectedMeta.offset'                                      ((IFPIO.Reflexive)tempbase).HasCount'                                      tempbase.lineNumber'                                      this);                                    // tempReflexive.Location = new System.Drawing.Point(10' 0);                                  tempReflexive.Name = "reflexive";                                  tempReflexive.TabIndex = tabIndex;                                  tempReflexive.LoadENTControls(                                      (IFPIO.Reflexive)tempbase'                                      ((IFPIO.Reflexive)tempbase).items'                                      true'                                      0'                                      ref tabIndex'                                      tempbase.offset.ToString());                                    // Label' Combobox & Button are always added ( = 3)                                  if (!(tempReflexive.Controls.Count <= 2 && skipEmptyReflex))                                  {                                      this.Controls[0].Controls.Add(tempLabel);                                      tempLabel.BringToFront();                                      this.Controls[0].Controls.Add(tempReflexive);                                      tempReflexive.BringToFront();                                  }                                    break;                              }                            case IFPIO.ObjectEnum.Ident:                              {                                  if (ShowIdents == false)                                  {                                      break;                                  }                                    Ident tempident = new Ident(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.Ident)tempbase).hasTagType'                                      tempbase.lineNumber);                                  tempident.Name = "ident";                                  tempident.TabIndex = tabIndex;                                  tempident.Populate(map.SelectedMeta.offset);                                  tempident.Tag = "[" + tempident.Controls[2].Text + "] " + tempident.Controls[1].Text;                                  tempident.Controls[1].ContextMenuStrip = identContext;                                  this.Controls[0].Controls.Add(tempident);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.StringID:                              {                                  if (ShowSIDs == false)                                  {                                      break;                                  }                                    SID tempSID = new SID(tempbase.name' map' tempbase.offset' tempbase.lineNumber);                                  tempSID.Name = "sid";                                  tempSID.TabIndex = tabIndex;                                  tempSID.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempSID);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Float:                              {                                  if (ShowFloats == false)                                  {                                      break;                                  }                                    DataValues tempFloat = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Float' tempbase.lineNumber);                                  tempFloat.TabIndex = tabIndex;                                  tempFloat.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempFloat);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.String32:                              {                                  if (ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                                  {                                      break;                                  }                                    EntStrings tempstring = new EntStrings(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.IFPString)tempbase).size'                                      ((IFPIO.IFPString)tempbase).type'                                      tempbase.lineNumber);                                  tempstring.Name = "string";                                  tempstring.TabIndex = tabIndex;                                  tempstring.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempstring);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.UnicodeString256:                              {                                  if (ShowUnicodeString256s == false)                                  {                                      break;                                  }                                    goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.String256:                              {                                  if (ShowString256s == false)                                  {                                      break;                                  }                                    goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.UnicodeString64:                              {                                  if (ShowUnicodeString64s == false)                                  {                                      break;                                  }                                    goto case IFPIO.ObjectEnum.String32;                              }                            case IFPIO.ObjectEnum.String:                              {                                  if (ShowString32s == false && tempbase.ObjectType == IFPIO.ObjectEnum.String32)                                  {                                      break;                                  }                                    EntStrings tempstring = new EntStrings(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.IFPString)tempbase).size'                                      ((IFPIO.IFPString)tempbase).type'                                      tempbase.lineNumber);                                  tempstring.Name = "string";                                  tempstring.TabIndex = tabIndex;                                  tempstring.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempstring);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Int:                              {                                  if (((IFPIO.IFPInt)tempbase).entIndex.nulled)                                  {                                      if ((ShowInts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Int) ||                                          (ShowShorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.Short) ||                                          (ShowUshorts == false && tempbase.ObjectType == IFPIO.ObjectEnum.UShort) ||                                          (ShowUints == false && tempbase.ObjectType == IFPIO.ObjectEnum.UInt))                                      {                                          break;                                      }                                        DataValues tempdatavalues = new DataValues(                                          tempbase.name' map' tempbase.offset' tempbase.ObjectType' tempbase.lineNumber);                                      tempdatavalues.TabIndex = tabIndex;                                      tempdatavalues.Populate(map.SelectedMeta.offset);                                      this.Controls[0].Controls.Add(tempdatavalues);                                      this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  }                                  else                                  {                                      if ((ShowBlockIndex32s == false &&                                           (tempbase.ObjectType == IFPIO.ObjectEnum.Int |                                            tempbase.ObjectType == IFPIO.ObjectEnum.UInt)) ||                                          (ShowBlockIndex16s == false &&                                           (tempbase.ObjectType == IFPIO.ObjectEnum.Short |                                            tempbase.ObjectType == IFPIO.ObjectEnum.UShort)) ||                                          (ShowBlockIndex8s == false && tempbase.ObjectType == IFPIO.ObjectEnum.Byte))                                      {                                          break;                                      }                                        Indices tempdatavalues = new Indices(                                          tempbase.name'                                          map'                                          tempbase.offset'                                          tempbase.ObjectType'                                          ((IFPIO.IFPInt)tempbase).entIndex);                                      tempdatavalues.TabIndex = tabIndex;                                      this.Controls[0].Controls.Add(tempdatavalues);                                      this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  }                                    break;                              }                            case IFPIO.ObjectEnum.Short:                              {                                  goto case IFPIO.ObjectEnum.Int;                              }                            case IFPIO.ObjectEnum.UShort:                              {                                  goto case IFPIO.ObjectEnum.Int;                              }                            case IFPIO.ObjectEnum.UInt:                              {                                  goto case IFPIO.ObjectEnum.Int;                              }                            case IFPIO.ObjectEnum.Unknown:                              {                                  if (ShowUndefineds == false)                                  {                                      break;                                  }                                    DataValues tempUnknown = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unknown' tempbase.lineNumber);                                  tempUnknown.TabIndex = tabIndex;                                  tempUnknown.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempUnknown);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Byte_Flags:                              {                                  if (ShowBitmask8s == false)                                  {                                      break;                                  }                                    Bitmask tempbitmask = new Bitmask(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.Bitmask)tempbase).bitmaskSize'                                      ((IFPIO.Bitmask)tempbase).options'                                      tempbase.lineNumber);                                  tempbitmask.TabIndex = tabIndex;                                  tempbitmask.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempbitmask);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Word_Flags:                              {                                  if (ShowBitmask16s == false)                                  {                                      break;                                  }                                    Bitmask tempbitmask = new Bitmask(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.Bitmask)tempbase).bitmaskSize'                                      ((IFPIO.Bitmask)tempbase).options'                                      tempbase.lineNumber);                                  tempbitmask.TabIndex = tabIndex;                                  tempbitmask.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempbitmask);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Long_Flags:                              {                                  if (ShowBitmask32s == false)                                  {                                      break;                                  }                                    Bitmask tempbitmask = new Bitmask(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.Bitmask)tempbase).bitmaskSize'                                      ((IFPIO.Bitmask)tempbase).options'                                      tempbase.lineNumber);                                  tempbitmask.TabIndex = tabIndex;                                  tempbitmask.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempbitmask);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Char_Enum:                              {                                  if (ShowEnum8s == false)                                  {                                      break;                                  }                                    Enums tempenum = new Enums(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.IFPEnum)tempbase).enumSize'                                      ((IFPIO.IFPEnum)tempbase).options'                                      tempbase.lineNumber);                                  tempenum.TabIndex = tabIndex;                                  tempenum.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempenum);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Enum:                              {                                  if (ShowEnum16s == false)                                  {                                      break;                                  }                                    Enums tempenum = new Enums(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.IFPEnum)tempbase).enumSize'                                      ((IFPIO.IFPEnum)tempbase).options'                                      tempbase.lineNumber);                                  tempenum.TabIndex = tabIndex;                                  tempenum.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempenum);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Long_Enum:                              {                                  if (ShowEnum32s == false)                                  {                                      break;                                  }                                    Enums tempenum = new Enums(                                      tempbase.name'                                      map'                                      tempbase.offset'                                      ((IFPIO.IFPEnum)tempbase).enumSize'                                      ((IFPIO.IFPEnum)tempbase).options'                                      tempbase.lineNumber);                                  tempenum.TabIndex = tabIndex;                                  tempenum.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempenum);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.Byte:                              {                                  if (((IFPIO.IFPByte)tempbase).entIndex.nulled)                                  {                                      if (ShowBytes == false)                                      {                                          break;                                      }                                        DataValues tempByte = new DataValues(                                          tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Byte' tempbase.lineNumber);                                      tempByte.TabIndex = tabIndex;                                      this.Controls[0].Controls.Add(tempByte);                                      this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  }                                  else                                  {                                      if (ShowBlockIndex8s == false)                                      {                                          break;                                      }                                        Indices tempdatavalues = new Indices(                                          tempbase.name'                                          map'                                          tempbase.offset'                                          tempbase.ObjectType'                                          ((IFPIO.IFPByte)tempbase).entIndex);                                      tempdatavalues.TabIndex = tabIndex;                                      this.Controls[0].Controls.Add(tempdatavalues);                                      this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  }                                    break;                              }                            case IFPIO.ObjectEnum.Unused:                              {                                  DataValues tempUnknown = new DataValues(                                      tempbase.name' map' tempbase.offset' IFPIO.ObjectEnum.Unused' tempbase.lineNumber);                                  tempUnknown.TabIndex = tabIndex;                                  tempUnknown.Populate(map.SelectedMeta.offset);                                  this.Controls[0].Controls.Add(tempUnknown);                                  this.Controls[0].Controls[this.Controls[0].Controls.Count - 1].BringToFront();                                  break;                              }                            case IFPIO.ObjectEnum.TagType:                              continue;                      }
Missing Default,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,PokeRecursively,The following switch statement is missing a default case: switch (this.Controls[0].Controls[counter].GetType().ToString())                  {                      case "MetaEditor.Components.SID":                          {                              ((SID)this.Controls[0].Controls[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.ReflexiveControl":                          {                              ((ReflexiveControl)this.Controls[0].Controls[counter]).PokeRecursively();                              break;                          }                        case "MetaEditor.Components.Ident":                          {                              ((Ident)this.Controls[0].Controls[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.Bitmask":                          {                              ((Bitmask)this.Controls[0].Controls[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.DataValues":                          {                              ((DataValues)this.Controls[0].Controls[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.Enums":                          {                              ((Enums)this.Controls[0].Controls[counter]).Poke();                              break;                          }                        case "MetaEditor.Components.Indices":                          {                              ((Indices)this.Controls[0].Controls[counter]).Poke();                              break;                          }                  }
Missing Default,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,SaveRecursively,The following switch statement is missing a default case: switch (this.Controls[0].Controls[counter].GetType().ToString())                  {                      case "MetaEditor.Components.SID":                          {                              ((SID)this.Controls[0].Controls[counter]).Save();                              break;                          }                        case "MetaEditor.Components.ReflexiveControl":                          {                              ((ReflexiveControl)this.Controls[0].Controls[counter]).SaveRecursively();                              break;                          }                        case "MetaEditor.Components.Ident":                          {                              ((Ident)this.Controls[0].Controls[counter]).Save();                              break;                          }                        case "MetaEditor.Components.Float":                          {                              ((Float)this.Controls[0].Controls[counter]).Save();                              break;                          }                        case "MetaEditor.Components.EntStrings":                          {                              ((EntStrings)this.Controls[0].Controls[counter]).Save();                              break;                          }                        case "MetaEditor.Components.Bitmask":                          {                              ((Bitmask)this.Controls[0].Controls[counter]).Save();                              break;                          }                        case "MetaEditor.Components.DataValues":                          {                              ((DataValues)this.Controls[0].Controls[counter]).Save();                              break;                          }                        case "MetaEditor.Components.Enums":                          {                              ((Enums)this.Controls[0].Controls[counter]).Save();                              break;                          }                        case "MetaEditor.Components.Indices":                          {                              ((Indices)this.Controls[0].Controls[counter]).Save();                              break;                          }                  }
Missing Default,MetaEditor,MetaEditor,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,SetFocusRecursively,The following switch statement is missing a default case: switch (this.Controls[0].Controls[counter].GetType().ToString())                  {                      case "MetaEditor.Components.SID":                          {                              ((SID)this.Controls[0].Controls[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.ReflexiveControl":                          {                              ((ReflexiveControl)this.Controls[0].Controls[counter]).SetFocusRecursively(LineToCheck);                              break;                          }                        case "MetaEditor.Components.Ident":                          {                              ((Ident)this.Controls[0].Controls[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.EntStrings":                          {                              ((EntStrings)this.Controls[0].Controls[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.Bitmask":                          {                              ((Bitmask)this.Controls[0].Controls[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.DataValues":                          {                              ((DataValues)this.Controls[0].Controls[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.Enums":                          {                              ((Enums)this.Controls[0].Controls[counter]).SetFocus(LineToCheck);                              break;                          }                        case "MetaEditor.Components.Indices":                          {                              ((Indices)this.Controls[0].Controls[counter]).SetFocus(LineToCheck);                              break;                          }                  }
Missing Default,MetaEditor,ShiftColors,D:\research\architectureSmells\repos1\troymac1ure_Entity\MetaEditor\MetaEditor.cs,ReadPlugin,The following switch statement is missing a default case: switch (xtr.Name.ToLower())                  {                      case "colors":                          {                              try                              {                                  SetVariables(                                      Convert.ToInt32(xtr.GetAttribute("StartingRed"))'                                       Convert.ToInt32(xtr.GetAttribute("StartingBlue"))'                                       Convert.ToInt32(xtr.GetAttribute("StartingGreen"))'                                       Convert.ToInt32(xtr.GetAttribute("RedToShift"))'                                       Convert.ToInt32(xtr.GetAttribute("BlueToShift"))'                                       Convert.ToInt32(xtr.GetAttribute("GreenToShift")));                              }                              catch                              {                              }                                break;                          }                  }
