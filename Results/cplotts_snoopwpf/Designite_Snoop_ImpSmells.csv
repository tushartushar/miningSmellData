Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Snoop,ProperTreeView,F:\newReposMay17\cplotts_snoopwpf\Snoop\ProperTreeView.cs,ApplyReduceDepthFilterIfNeeded,Cyclomatic complexity of the method is 9
Complex Method,Snoop,SnoopWindowUtils,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopWindowUtils.cs,FindOwnerWindow,Cyclomatic complexity of the method is 11
Complex Method,Snoop,VisualItem,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualItem.cs,Reload,Cyclomatic complexity of the method is 11
Complex Method,Snoop,PropertyGrid2,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyGrid2.xaml.cs,HandleSort,Cyclomatic complexity of the method is 9
Complex Method,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,FindRoot,Cyclomatic complexity of the method is 8
Complex Method,Snoop,VisualTreeHelper2,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTreeHelper2.cs,DoEnumerateTree,Cyclomatic complexity of the method is 16
Complex Method,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,FindRoot,Cyclomatic complexity of the method is 13
Complex Method,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,SetOwnerWindow,Cyclomatic complexity of the method is 12
Complex Method,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,ConvertVisualToModel3D,Cyclomatic complexity of the method is 11
Complex Method,Snoop.DebugListenerTab,SnoopSingleFilter,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\SnoopSingleFilter.cs,FilterMatches,Cyclomatic complexity of the method is 13
Complex Method,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,Cyclomatic complexity of the method is 9
Complex Method,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,OnCommandTextBoxPreviewKeyDown,Cyclomatic complexity of the method is 14
Complex Method,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,MouseWheelHandler,Cyclomatic complexity of the method is 33
Long Parameter List,Snoop.DebugListenerTab,SnoopDebugListener,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\SnoopDebugListener.cs,TraceEvent,The method has 5 parameters.
Long Parameter List,Snoop.DebugListenerTab,SnoopDebugListener,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\SnoopDebugListener.cs,TraceData,The method has 5 parameters.
Long Parameter List,Snoop.DebugListenerTab,SnoopDebugListener,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\SnoopDebugListener.cs,TraceData,The method has 5 parameters.
Long Parameter List,Snoop.DebugListenerTab,SnoopDebugListener,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\SnoopDebugListener.cs,TraceEvent,The method has 6 parameters.
Long Parameter List,Snoop.DebugListenerTab,SnoopDebugListener,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\SnoopDebugListener.cs,TraceTransfer,The method has 5 parameters.
Long Parameter List,Snoop.Infrastructure,ObservableCollectionExtensions,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ObservableCollectionExtensions.cs,BinarySearch,The method has 5 parameters.
Long Parameter List,Snoop.Infrastructure,ObservableCollectionExtensions,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ObservableCollectionExtensions.cs,Insert,The method has 5 parameters.
Long Parameter List,Snoop.Shell,SnoopPSHostUserInterface,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\SnoopPSHostUserInterface.cs,PromptForCredential,The method has 6 parameters.
Long Identifier,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,GetAllProperties,The length of the parameter nextBaseTypeWithDefaultConstructor is 34.
Long Identifier,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,CheckForOtherDispatchers,The length of the parameter presentationSourceRootVisualDispatcher is 38.
Long Statement,Snoop,ErrorDialog,F:\newReposMay17\cplotts_snoopwpf\Snoop\ErrorDialog.xaml.cs,_buttonCopyToClipboard_Click,The length of the statement  "		string message = string.Format ("There was an error copying to the clipboard:\nMessage = {0}\n\nPlease copy the exception from the above textbox manually!"' ex.Message); " is 169.
Long Statement,Snoop,ErrorDialog,F:\newReposMay17\cplotts_snoopwpf\Snoop\ErrorDialog.xaml.cs,Hyperlink_RequestNavigate,The length of the statement  "		string message = string.Format ("There was an error starting the browser. Please visit \"{0}\" to create the issue."' e.Uri.AbsoluteUri); " is 137.
Long Statement,Snoop,Injector,F:\newReposMay17\cplotts_snoopwpf\Snoop\Injector.cs,Suffix,The length of the statement  "		// a process is valid to snoop if it contains a dependency on PresentationFramework' PresentationCore' or milcore (wpfgfx). " is 123.
Long Statement,Snoop,Injector,F:\newReposMay17\cplotts_snoopwpf\Snoop\Injector.cs,Suffix,The length of the statement  "		if (module.szModule.StartsWith ("PresentationFramework"' StringComparison.OrdinalIgnoreCase) || module.szModule.StartsWith ("PresentationCore"' StringComparison.OrdinalIgnoreCase) || module.szModule.StartsWith ("wpfgfx"' StringComparison.OrdinalIgnoreCase)) { " is 259.
Long Statement,Snoop,PertinentPropertyFilter,F:\newReposMay17\cplotts_snoopwpf\Snoop\PertinentPropertyFilter.cs,Filter,The length of the statement  "	AttachedPropertyBrowsableForChildrenAttribute attachedPropertyForChildren = (AttachedPropertyBrowsableForChildrenAttribute)property.Attributes [typeof(AttachedPropertyBrowsableForChildrenAttribute)]; " is 199.
Long Statement,Snoop,PertinentPropertyFilter,F:\newReposMay17\cplotts_snoopwpf\Snoop\PertinentPropertyFilter.cs,Filter,The length of the statement  "	AttachedPropertyBrowsableForTypeAttribute attachedPropertyForType = (AttachedPropertyBrowsableForTypeAttribute)property.Attributes [typeof(AttachedPropertyBrowsableForTypeAttribute)]; " is 183.
Long Statement,Snoop,PertinentPropertyFilter,F:\newReposMay17\cplotts_snoopwpf\Snoop\PertinentPropertyFilter.cs,Filter,The length of the statement  "	AttachedPropertyBrowsableWhenAttributePresentAttribute attachedPropertyForAttribute = (AttachedPropertyBrowsableWhenAttributePresentAttribute)property.Attributes [typeof(AttachedPropertyBrowsableWhenAttributePresentAttribute)]; " is 227.
Long Statement,Snoop,PertinentPropertyFilter,F:\newReposMay17\cplotts_snoopwpf\Snoop\PertinentPropertyFilter.cs,Filter,The length of the statement  "		// when using [AttachedPropertyBrowsableForType(typeof(IMyInterface))] and IMyInterface is not a DependencyObject' Snoop crashes. " is 129.
Long Statement,Snoop,WindowInfo,F:\newReposMay17\cplotts_snoopwpf\Snoop\AppChooser.xaml.cs,GetModules,The length of the statement  "	var hModuleSnap = NativeMethods.CreateToolhelp32Snapshot (NativeMethods.SnapshotFlags.Module | NativeMethods.SnapshotFlags.Module32' processId); " is 144.
Long Statement,Snoop,AttachFailedHandler,F:\newReposMay17\cplotts_snoopwpf\Snoop\AppChooser.xaml.cs,OnSnoopAttachFailed,The length of the statement  "	System.Windows.MessageBox.Show (string.Format ("Failed to attach to {0}. Exception occured:{1}{2}"' e.WindowName' Environment.NewLine' e.AttachException.ToString ())' "Can't Snoop the process!"); " is 195.
Long Statement,Snoop,PropertyFilter,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyFilter.cs,Show,The length of the statement  "		return (this.filterRegex.IsMatch (property.DisplayName) || property.Property != null && this.filterRegex.IsMatch (property.Property.PropertyType.Name)); " is 152.
Long Statement,Snoop,ResourceDictionaryItem,F:\newReposMay17\cplotts_snoopwpf\Snoop\ResourceDictionaryItem.cs,Reload,The length of the statement  "			// e.g. I got this once when I was Snoop(ing) some xaml that was refering to an image resource that was no longer there. " is 120.
Long Statement,Snoop,ScreenshotDialog,F:\newReposMay17\cplotts_snoopwpf\Snoop\ScreenshotDialog.xaml.cs,HandleSave,The length of the statement  "		VisualCaptureUtil.SaveVisual (DataContext as Visual' int.Parse (((TextBlock)((ComboBoxItem)dpiBox.SelectedItem).Content).Text)' FilePath); " is 138.
Long Statement,Snoop,SnoopWindowUtils,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopWindowUtils.cs,FindOwnerWindow,The length of the statement  "			if (presentationSource.RootVisual is Window && ((Window)presentationSource.RootVisual).Dispatcher.CheckAccess () && ((Window)presentationSource.RootVisual).Visibility == Visibility.Visible) { " is 191.
Long Statement,Snoop,SnoopWindowUtils,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopWindowUtils.cs,FindOwnerWindow,The length of the statement  "			if (presentationSource.RootVisual is Window && ((Window)presentationSource.RootVisual).Visibility == Visibility.Visible) { " is 122.
Long Statement,Snoop,VisualCaptureUtil,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualCaptureUtil.cs,SaveVisual,The length of the statement  "	RenderTargetBitmap rtb = new RenderTargetBitmap ((int)(bounds.Width * sizeFactor)' (int)(bounds.Height * sizeFactor)' dpi' dpi' PixelFormats.Pbgra32); " is 150.
Long Statement,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,HandleSnipXaml,The length of the statement  "		MessageBox.Show ("This brush has been copied to the clipboard. You can paste it into your project."' "Brush copied"' MessageBoxButton.OK); " is 138.
Long Statement,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,HandleTargetChanged,The length of the statement  "	if (inspector.lastRootTarget == inspector.RootTarget && e.OldValue != null && e.NewValue != null && inspector.checkBoxClearAfterDelve.IsChecked.HasValue && inspector.checkBoxClearAfterDelve.IsChecked.Value) { " is 208.
Long Statement,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,GetCurrentTypeName,The length of the statement  "			//we want to make this "future friendly"' so we take into account that the string value of the property type may change. " is 120.
Long Statement,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,InitShell,The length of the statement  "		RoutedPropertyChangedEventHandler<object> onSelectedItemChanged = (sender' e) => shell.NotifySelected (this.CurrentSelection); " is 126.
Long Statement,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,GoBabyGo,The length of the statement  "		MessageBox.Show (string.Format ("There was an error snooping! Message = {0}\n\nStack Trace:\n{1}"' ex.Message' ex.StackTrace)' "Error Snooping"' MessageBoxButton.OK); " is 166.
Long Statement,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,CheckForOtherDispatchers,The length of the statement  "		var result = MessageBox.Show ("Snoop has noticed windows running in multiple dispatchers!\n\n" + "Would you like to enter multiple dispatcher mode' and have a separate Snoop window for each dispatcher?\n\n" + "Without having a separate Snoop window for each dispatcher' you will not be able to Snoop the windows in the dispatcher threads outside of the main dispatcher. " + "Also' note' that if you bring up additional windows in additional dispatchers (after Snooping)' you will need to Snoop again in order to launch Snoop windows for those additional dispatchers."' "Enter Multiple Dispatcher Mode"' MessageBoxButton.YesNo' MessageBoxImage.Question); " is 653.
Long Statement,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,Inspect,The length of the statement  "			//SnoopModes.MultipleDispatcherMode is always false for all scenarios except for cases where we are running multiple dispatchers. " is 129.
Long Statement,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,Inspect,The length of the statement  "			//If SnoopModes.MultipleDispatcherMode was set to true' then there definitely was a root visual found in another dispatcher' so " is 127.
Long Statement,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,Inspect,The length of the statement  "			MessageBox.Show ("Can't find a current application or a PresentationSource root visual!"' "Can't Snoop"' MessageBoxButton.OK' MessageBoxImage.Exclamation); " is 155.
Long Statement,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,FindRoot,The length of the statement  "			if (presentationSource.RootVisual != null && presentationSource.RootVisual is UIElement && ((UIElement)presentationSource.RootVisual).Dispatcher.CheckAccess ()) { " is 162.
Long Statement,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,FindRoot,The length of the statement  "			if (presentationSource.RootVisual != null && presentationSource.RootVisual is UIElement && ((UIElement)presentationSource.RootVisual).Visibility == Visibility.Visible) { " is 169.
Long Statement,Snoop,EditedPropertiesHelper,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,DumpObjectsWithEditedProperties,The length of the statement  "	sb.AppendFormat ("Snoop dump as of {0}{1}--- OBJECTS WITH EDITED PROPERTIES ---{1}"' DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss")' Environment.NewLine); " is 153.
Long Statement,Snoop,EditedPropertiesHelper,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,DumpObjectsWithEditedProperties,The length of the statement  "	foreach (KeyValuePair<Dispatcher' Dictionary<VisualTreeItem' List<PropertyValueInfo>>> dispatcherKVP in _itemsWithEditedProperties) { " is 133.
Long Statement,Snoop,EditedPropertiesHelper,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,DumpObjectsWithEditedProperties,The length of the statement  "				sb.AppendFormat ("\tProperty: {0}' New Value: {1}{2}"' propInfo.PropertyName' propInfo.PropertyValue' Environment.NewLine); " is 123.
Long Statement,Snoop,VisualTreeHelper2,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTreeHelper2.cs,DoEnumerateTree,The length of the statement  "		if ((enumerateSelf && enumeratorCallback != null && enumeratorCallback (child' misc) == HitTestResultBehavior.Stop) || (enumerateChildren && !DoEnumerateTree (child' filterCallback' enumeratorCallback' misc))) { " is 211.
Long Statement,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,Magnify,The length of the statement  "		MessageBox.Show ("Can't find a current application or a PresentationSource root visual!"' "Can't Magnify"' MessageBoxButton.OK' MessageBoxImage.Exclamation); " is 157.
Long Statement,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,FindRoot,The length of the statement  "			if (presentationSource.RootVisual != null && presentationSource.RootVisual is UIElement && ((UIElement)presentationSource.RootVisual).Dispatcher.CheckAccess ()) { " is 162.
Long Statement,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,FindRoot,The length of the statement  "			if (presentationSource.RootVisual != null && presentationSource.RootVisual is UIElement && ((UIElement)presentationSource.RootVisual).Visibility == Visibility.Visible) { " is 169.
Long Statement,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,SetOwnerWindow,The length of the statement  "			if (presentationSource.RootVisual is Window && ((Window)presentationSource.RootVisual).Visibility == Visibility.Visible) { " is 122.
Long Statement,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,ConvertVisualToModel3D,The length of the statement  "			Matrix3D matrix3D = new Matrix3D (matrix.M11' matrix.M12' 0' 0' matrix.M21' matrix.M22' 0' 0' 0' 0' 1' 0' matrix.OffsetX' matrix.OffsetY' 0' 1); " is 144.
Long Statement,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,MakeBrushFromVisual,The length of the statement  "	RenderTargetBitmap renderTargetBitmap = new RenderTargetBitmap ((int)Math.Ceiling (bounds.Width)' (int)Math.Ceiling (bounds.Height)' 96' 96' PixelFormats.Default); " is 163.
Long Statement,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,MakeBrushFromVisual,The length of the statement  "		typeof(RenderTargetBitmap).GetMethod ("RenderForBitmapEffect"' System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic).Invoke (renderTargetBitmap' new object[] { " is 189.
Long Statement,Snoop.DebugListenerTab,DebugListenerControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\DebugListenerControl.xaml.cs,buttonClearFilters_Click,The length of the statement  "	var result = MessageBox.Show ("Are you sure you want to clear your filters?"' "Clear Filters Confirmation"' MessageBoxButton.YesNo); " is 132.
Long Statement,Snoop.DebugListenerTab,DebugListenerControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\DebugListenerControl.xaml.cs,comboBoxPresentationTraceLevel_SelectionChanged,The length of the statement  "	if (this.comboBoxPresentationTraceLevel == null || this.comboBoxPresentationTraceLevel.Items == null || this.comboBoxPresentationTraceLevel.Items.Count <= this.comboBoxPresentationTraceLevel.SelectedIndex || this.comboBoxPresentationTraceLevel.SelectedIndex < 0) " is 262.
Long Statement,Snoop.DebugListenerTab,DebugListenerControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\DebugListenerControl.xaml.cs,comboBoxPresentationTraceLevel_SelectionChanged,The length of the statement  "	var selectedComboBoxItem = this.comboBoxPresentationTraceLevel.Items [this.comboBoxPresentationTraceLevel.SelectedIndex] as ComboBoxItem; " is 137.
Long Statement,Snoop.DebugListenerTab,FiltersViewModel,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\FiltersViewModel.cs,SetIsSet,The length of the statement  "	if (filters.Count == 1 && filters [0] is SnoopSingleFilter && string.IsNullOrEmpty (((SnoopSingleFilter)filters [0]).Text)) " is 123.
Long Statement,Snoop.DebugListenerTab,SetFiltersWindow,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\SetFiltersWindow.xaml.cs,buttonAddFilter_Click,The length of the statement  "	//this.listBoxFilters.ScrollIntoView(this.listBoxFilters.ItemContainerGenerator.ContainerFromIndex(this.listBoxFilters.Items.Count - 1)); " is 137.
Long Statement,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateRectangleForFrameworkElement,The length of the statement  "	if (uiElement.ActualHeight == 0 && uiElement.ActualWidth == 0)//sometimes the actual size might be 0 despite there being a rendered visual with a size greater than 0. This happens often on a custom panel (http://snoopwpf.codeplex.com/workitem/7217). Having a fixed size visual brush remedies the problem. " is 304.
Long Statement,Snoop.MethodsTab,MethodsControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\MethodsTab\MethodsControl.xaml.cs,SetTargetToRootTarget,The length of the statement  "	if (this._checkBoxUseDataContext.IsChecked.Value && this.RootTarget is FrameworkElement && ((FrameworkElement)this.RootTarget).DataContext != null) { " is 149.
Long Statement,Snoop.MethodsTab,MethodsControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\MethodsTab\MethodsControl.xaml.cs,RootTargetChanged,The length of the statement  "		this._checkBoxUseDataContext.IsEnabled = (this.RootTarget is FrameworkElement) && ((FrameworkElement)this.RootTarget).DataContext != null; " is 138.
Long Statement,Snoop.MethodsTab,MethodsControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\MethodsTab\MethodsControl.xaml.cs,TryToCreateParameters,The length of the statement  "			else if (paramInfo.ParameterValue == null || paramInfo.ParameterType.IsAssignableFrom (paramInfo.ParameterValue.GetType ())) { " is 126.
Long Statement,Snoop.MethodsTab,MethodsControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\MethodsTab\MethodsControl.xaml.cs,TryToInvokeMethod,The length of the statement  "			this.resultStringContainer.Visibility = this.textBlockResult.Visibility = this.textBlockResultLabel.Visibility = System.Windows.Visibility.Visible; " is 147.
Long Statement,Snoop.MethodsTab,MethodsControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\MethodsTab\MethodsControl.xaml.cs,TryToInvokeMethod,The length of the statement  "		//var properties = PropertyInformation.GetAllProperties(returnValue' new Attribute[] { new PropertyFilterAttribute(PropertyFilterOptions.All) }); " is 145.
Long Statement,Snoop.MethodsTab,MethodsControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\MethodsTab\MethodsControl.xaml.cs,ChangeTarget_Click,The length of the statement  "	paramCreator.TextBlockDescription.Text = "Delve into the new desired target by double-clicking on the property. Clicking OK will select the currently delved property to be the new target."; " is 189.
Long Statement,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Start,The length of the statement  "	var action = new Action<VisualTreeItem> (item => this.Dispatcher.BeginInvoke (new Action (() => this.ProviderLocationChanged (item)))); " is 135.
Long Statement,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Start,The length of the statement  "	Invoke (string.Format ("write-host 'To get started' try using the ${0} and ${1} variables.'"' ShellConstants.Root' ShellConstants.Selected)); " is 141.
Long Statement,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,FindAndLoadProfile,The length of the statement  "	if (LoadProfile (Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.Personal) + "\\WindowsPowerShell"' ShellConstants.SnoopProfile))) { " is 151.
Long Statement,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Invoke,The length of the statement  "		this.outputTextBox.AppendText (string.Format ("Oops!  Uncaught exception invoking on the PowerShell runspace: {0}"' ex.Message)); " is 129.
Long Statement,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,OutputErrorRecord,The length of the statement  "	this.outputTextBox.AppendText (string.Format ("{0}{1}"' error' error.InvocationInfo != null ? error.InvocationInfo.PositionMessage : string.Empty)); " is 148.
Long Statement,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,OutputErrorRecord,The length of the statement  "	this.outputTextBox.AppendText (string.Format ("{1}  + CategoryInfo          : {0}"' error.CategoryInfo' Environment.NewLine)); " is 126.
Long Statement,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,OutputErrorRecord,The length of the statement  "	this.outputTextBox.AppendText (string.Format ("{1}  + FullyQualifiedErrorId : {0}"' error.FullyQualifiedErrorId' Environment.NewLine)); " is 135.
Long Statement,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,MouseWheelHandler,The length of the statement  "	if (((Keyboard.GetKeyStates (Key.LeftShift) & KeyStates.Down) > 0) || (Keyboard.GetKeyStates (Key.RightShift) & KeyStates.Down) > 0) { " is 134.
Long Statement,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,MouseWheelHandler,The length of the statement  "	if (((Keyboard.GetKeyStates (Key.LeftCtrl) & KeyStates.Down) > 0) || (Keyboard.GetKeyStates (Key.RightCtrl) & KeyStates.Down) > 0) { " is 132.
Complex Conditional,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,HandleTargetChanged,The conditional expression  "inspector.lastRootTarget == inspector.RootTarget && e.OldValue != null && e.NewValue != null && inspector.checkBoxClearAfterDelve.IsChecked.HasValue && inspector.checkBoxClearAfterDelve.IsChecked.Value"  is complex.
Complex Conditional,Snoop,VisualTreeHelper2,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTreeHelper2.cs,DoEnumerateTree,The conditional expression  "(enumerateSelf && enumeratorCallback != null && enumeratorCallback (child' misc) == HitTestResultBehavior.Stop) || (enumerateChildren && !DoEnumerateTree (child' filterCallback' enumeratorCallback' misc))"  is complex.
Complex Conditional,Snoop.DebugListenerTab,DebugListenerControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\DebugListenerControl.xaml.cs,comboBoxPresentationTraceLevel_SelectionChanged,The conditional expression  "this.comboBoxPresentationTraceLevel == null || this.comboBoxPresentationTraceLevel.Items == null || this.comboBoxPresentationTraceLevel.Items.Count <= this.comboBoxPresentationTraceLevel.SelectedIndex || this.comboBoxPresentationTraceLevel.SelectedIndex < 0"  is complex.
Empty Catch Block,Snoop,AppChooser,F:\newReposMay17\cplotts_snoopwpf\Snoop\AppChooser.xaml.cs,OnSourceInitialized,The method has an empty catch block.
Empty Catch Block,Snoop,ProperTreeViewItem,F:\newReposMay17\cplotts_snoopwpf\Snoop\ProperTreeView.cs,MeasureOverride,The method has an empty catch block.
Empty Catch Block,Snoop,ProperTreeViewItem,F:\newReposMay17\cplotts_snoopwpf\Snoop\ProperTreeView.cs,ArrangeOverride,The method has an empty catch block.
Empty Catch Block,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,PropertyInformation,The method has an empty catch block.
Empty Catch Block,Snoop,StandardValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\StandardValueEditor.cs,OnStringPropertyChanged,The method has an empty catch block.
Empty Catch Block,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,SnoopUI,The method has an empty catch block.
Empty Catch Block,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,OnSourceInitialized,The method has an empty catch block.
Empty Catch Block,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,OnSourceInitialized,The method has an empty catch block.
Magic Number,Snoop,EventsListener,F:\newReposMay17\cplotts_snoopwpf\Snoop\EventsListener.cs,HandleEvent,The following statement contains a magic number: if (EventsListener.current != null && sender == EventsListener.current.visual) {  	if (string.IsNullOrEmpty (EventsListener.Filter) || e.RoutedEvent.Name.ToLower ().Contains (EventsListener.Filter)) {  		EventsListener.current.events.Add (new EventInformation (e));  		while (EventsListener.current.events.Count > 100)  			EventsListener.current.events.RemoveAt (0);  	}  }  
Magic Number,Snoop,EventsListener,F:\newReposMay17\cplotts_snoopwpf\Snoop\EventsListener.cs,HandleEvent,The following statement contains a magic number: if (string.IsNullOrEmpty (EventsListener.Filter) || e.RoutedEvent.Name.ToLower ().Contains (EventsListener.Filter)) {  	EventsListener.current.events.Add (new EventInformation (e));  	while (EventsListener.current.events.Count > 100)  		EventsListener.current.events.RemoveAt (0);  }  
Magic Number,Snoop,EventsListener,F:\newReposMay17\cplotts_snoopwpf\Snoop\EventsListener.cs,HandleEvent,The following statement contains a magic number: while (EventsListener.current.events.Count > 100)  	EventsListener.current.events.RemoveAt (0);  
Magic Number,Snoop,Injector,F:\newReposMay17\cplotts_snoopwpf\Snoop\Injector.cs,Suffix,The following statement contains a magic number: foreach (var module in window.Modules) {  	// a process is valid to snoop if it contains a dependency on PresentationFramework' PresentationCore' or milcore (wpfgfx).  	// this includes the files:  	// PresentationFramework.dll' PresentationFramework.ni.dll  	// PresentationCore.dll' PresentationCore.ni.dll  	// wpfgfx_v0300.dll (WPF 3.0/3.5)  	// wpfgrx_v0400.dll (WPF 4.0)  	// note: sometimes PresentationFramework.dll doesn't show up in the list of modules.  	// so' it makes sense to also check for the unmanaged milcore component (wpfgfx_vxxxx.dll).  	// see for more info: http://snoopwpf.codeplex.com/Thread/View.aspx?ThreadId=236335  	// sometimes the module names aren't always the same case. compare case insensitive.  	// see for more info: http://snoopwpf.codeplex.com/workitem/6090  	if (module.szModule.StartsWith ("PresentationFramework"' StringComparison.OrdinalIgnoreCase) || module.szModule.StartsWith ("PresentationCore"' StringComparison.OrdinalIgnoreCase) || module.szModule.StartsWith ("wpfgfx"' StringComparison.OrdinalIgnoreCase)) {  		if (FileVersionInfo.GetVersionInfo (module.szExePath).FileMajorPart > 3) {  			clr = "4.0";  		}  	}  	if (module.szModule.Contains ("wow64.dll")) {  		if (FileVersionInfo.GetVersionInfo (module.szExePath).FileMajorPart > 3) {  			bitness = "32";  		}  	}  }  
Magic Number,Snoop,Injector,F:\newReposMay17\cplotts_snoopwpf\Snoop\Injector.cs,Suffix,The following statement contains a magic number: foreach (var module in window.Modules) {  	// a process is valid to snoop if it contains a dependency on PresentationFramework' PresentationCore' or milcore (wpfgfx).  	// this includes the files:  	// PresentationFramework.dll' PresentationFramework.ni.dll  	// PresentationCore.dll' PresentationCore.ni.dll  	// wpfgfx_v0300.dll (WPF 3.0/3.5)  	// wpfgrx_v0400.dll (WPF 4.0)  	// note: sometimes PresentationFramework.dll doesn't show up in the list of modules.  	// so' it makes sense to also check for the unmanaged milcore component (wpfgfx_vxxxx.dll).  	// see for more info: http://snoopwpf.codeplex.com/Thread/View.aspx?ThreadId=236335  	// sometimes the module names aren't always the same case. compare case insensitive.  	// see for more info: http://snoopwpf.codeplex.com/workitem/6090  	if (module.szModule.StartsWith ("PresentationFramework"' StringComparison.OrdinalIgnoreCase) || module.szModule.StartsWith ("PresentationCore"' StringComparison.OrdinalIgnoreCase) || module.szModule.StartsWith ("wpfgfx"' StringComparison.OrdinalIgnoreCase)) {  		if (FileVersionInfo.GetVersionInfo (module.szExePath).FileMajorPart > 3) {  			clr = "4.0";  		}  	}  	if (module.szModule.Contains ("wow64.dll")) {  		if (FileVersionInfo.GetVersionInfo (module.szExePath).FileMajorPart > 3) {  			bitness = "32";  		}  	}  }  
Magic Number,Snoop,Injector,F:\newReposMay17\cplotts_snoopwpf\Snoop\Injector.cs,Suffix,The following statement contains a magic number: if (module.szModule.StartsWith ("PresentationFramework"' StringComparison.OrdinalIgnoreCase) || module.szModule.StartsWith ("PresentationCore"' StringComparison.OrdinalIgnoreCase) || module.szModule.StartsWith ("wpfgfx"' StringComparison.OrdinalIgnoreCase)) {  	if (FileVersionInfo.GetVersionInfo (module.szExePath).FileMajorPart > 3) {  		clr = "4.0";  	}  }  
Magic Number,Snoop,Injector,F:\newReposMay17\cplotts_snoopwpf\Snoop\Injector.cs,Suffix,The following statement contains a magic number: if (FileVersionInfo.GetVersionInfo (module.szExePath).FileMajorPart > 3) {  	clr = "4.0";  }  
Magic Number,Snoop,Injector,F:\newReposMay17\cplotts_snoopwpf\Snoop\Injector.cs,Suffix,The following statement contains a magic number: if (module.szModule.Contains ("wow64.dll")) {  	if (FileVersionInfo.GetVersionInfo (module.szExePath).FileMajorPart > 3) {  		bitness = "32";  	}  }  
Magic Number,Snoop,Injector,F:\newReposMay17\cplotts_snoopwpf\Snoop\Injector.cs,Suffix,The following statement contains a magic number: if (FileVersionInfo.GetVersionInfo (module.szExePath).FileMajorPart > 3) {  	bitness = "32";  }  
Magic Number,Snoop,ZoomerControl,F:\newReposMay17\cplotts_snoopwpf\Snoop\ZoomerControl.xaml.cs,DoMouseWheel,The following statement contains a magic number: if (IsValidTarget) {  	double zoom = Math.Pow (ZoomFactor' e.Delta / 120.0);  	Point offset = e.GetPosition (this.Viewbox);  	this.Zoom (zoom' offset);  }  
Magic Number,Snoop,ProperTreeView,F:\newReposMay17\cplotts_snoopwpf\Snoop\ProperTreeView.cs,OnRootLoaded,The following statement contains a magic number: if (itemsPresenter != null) {  	int levelLayoutDepth = 2;  	DependencyObject tmp = itemsPresenter;  	while (tmp != root) {  		++levelLayoutDepth;  		tmp = VisualTreeHelper.GetParent (tmp);  	}  	int rootLayoutDepth = 0;  	while (tmp != null) {  		++rootLayoutDepth;  		tmp = VisualTreeHelper.GetParent (tmp);  	}  	_maxDepth = (240 - rootLayoutDepth) / levelLayoutDepth;  	_rootItem = new WeakReference ((VisualTreeItem)root.DataContext);  }  
Magic Number,Snoop,ProperTreeView,F:\newReposMay17\cplotts_snoopwpf\Snoop\ProperTreeView.cs,OnRootLoaded,The following statement contains a magic number: if (itemsPresenter != null) {  	int levelLayoutDepth = 2;  	DependencyObject tmp = itemsPresenter;  	while (tmp != root) {  		++levelLayoutDepth;  		tmp = VisualTreeHelper.GetParent (tmp);  	}  	int rootLayoutDepth = 0;  	while (tmp != null) {  		++rootLayoutDepth;  		tmp = VisualTreeHelper.GetParent (tmp);  	}  	_maxDepth = (240 - rootLayoutDepth) / levelLayoutDepth;  	_rootItem = new WeakReference ((VisualTreeItem)root.DataContext);  }  
Magic Number,Snoop,ProperTreeView,F:\newReposMay17\cplotts_snoopwpf\Snoop\ProperTreeView.cs,OnRootLoaded,The following statement contains a magic number: _maxDepth = (240 - rootLayoutDepth) / levelLayoutDepth;  
Magic Number,Snoop,ProperTreeViewItem,F:\newReposMay17\cplotts_snoopwpf\Snoop\ProperTreeView.cs,GetContainerForItemOverride,The following statement contains a magic number: treeViewItem.Indent = this.Indent + 12;  
Magic Number,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,OnValueChanged,The following statement contains a magic number: if (this.isRunning) {  	if (this.breakOnChange) {  		if (!Debugger.IsAttached)  			Debugger.Launch ();  		Debugger.Break ();  	}  	this.HasChangedRecently = true;  	if (this.changeTimer == null) {  		this.changeTimer = new DispatcherTimer ();  		this.changeTimer.Interval = TimeSpan.FromSeconds (1.5);  		this.changeTimer.Tick += this.HandleChangeExpiry;  		this.changeTimer.Start ();  	} else {  		this.changeTimer.Stop ();  		this.changeTimer.Start ();  	}  }  
Magic Number,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,OnValueChanged,The following statement contains a magic number: if (this.changeTimer == null) {  	this.changeTimer = new DispatcherTimer ();  	this.changeTimer.Interval = TimeSpan.FromSeconds (1.5);  	this.changeTimer.Tick += this.HandleChangeExpiry;  	this.changeTimer.Start ();  } else {  	this.changeTimer.Stop ();  	this.changeTimer.Start ();  }  
Magic Number,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,OnValueChanged,The following statement contains a magic number: this.changeTimer.Interval = TimeSpan.FromSeconds (1.5);  
Magic Number,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,CollectionIndex,The following statement contains a magic number: if (this.IsCollection ()) {  	return int.Parse (this.DisplayName.Substring (5' this.DisplayName.Length - 6));  }  
Magic Number,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,CollectionIndex,The following statement contains a magic number: if (this.IsCollection ()) {  	return int.Parse (this.DisplayName.Substring (5' this.DisplayName.Length - 6));  }  
Magic Number,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,CollectionIndex,The following statement contains a magic number: return int.Parse (this.DisplayName.Substring (5' this.DisplayName.Length - 6));  
Magic Number,Snoop,PropertyInformation,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInformation.cs,CollectionIndex,The following statement contains a magic number: return int.Parse (this.DisplayName.Substring (5' this.DisplayName.Length - 6));  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,Viewport_MouseMove,The following statement contains a magic number: if (this.isRotating) {  	Point point = e.MouseDevice.GetPosition (this.viewport);  	Vector3D newMouseDirection = GetDirectionFromPoint (point' this.viewport.RenderSize);  	Quaternion q = GetRotationFromStartAndEnd (newMouseDirection' this.mouseDirection' 2);  	this.orientation *= q;  	this.mouseDirection = newMouseDirection;  	this.UpdateCamera ();  	e.Handled = true;  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,Viewport_MouseWheel,The following statement contains a magic number: this.zoom *= Math.Pow (TrackballBehavior.ZoomFactor' e.Delta / 120.0);  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetDirectionFromPoint,The following statement contains a magic number: if (rSquared <= 1) {  	return new Vector3D (dx' dy' -Math.Sqrt (2 - rSquared));  } else {  	return new Vector3D (dx' dy' -1 / Math.Sqrt (rSquared));  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetDirectionFromPoint,The following statement contains a magic number: return new Vector3D (dx' dy' -Math.Sqrt (2 - rSquared));  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: if (factor < 1e-6) {  	// One or both of the input directions is close to zero in length.  	return Quaternion.Identity;  } else {  	// Both input directions have nonzero length.  	Vector3D axis = Vector3D.CrossProduct (start' end);  	double dotProduct = Vector3D.DotProduct (start' end) / factor;  	double angle = Math.Acos (dotProduct < -1 ? -1 : dotProduct > 1 ? 1 : dotProduct);  	if (axis.LengthSquared < 1e-12) {  		if (dotProduct > 0) {  			// The input directions are parallel' so no rotation is needed.  			return Quaternion.Identity;  		} else {  			// The directions are antiparallel' and therefore a rotation  			// of 180 degrees about any direction perpendicular to 'start'  			// (or 'end') will rotate 'start' into 'end'.  			//  			// The following construction will guarantee that  			// dot(axis' start) == 0.  			//  			axis = Vector3D.CrossProduct (start' new Vector3D (1' 0' 0));  			if (axis.LengthSquared < 1e-12) {  				axis = Vector3D.CrossProduct (start' new Vector3D (0' 1' 0));  			}  		}  	}  	return new Quaternion (axis' angleMultiplier * angle * 180 / Math.PI);  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: if (factor < 1e-6) {  	// One or both of the input directions is close to zero in length.  	return Quaternion.Identity;  } else {  	// Both input directions have nonzero length.  	Vector3D axis = Vector3D.CrossProduct (start' end);  	double dotProduct = Vector3D.DotProduct (start' end) / factor;  	double angle = Math.Acos (dotProduct < -1 ? -1 : dotProduct > 1 ? 1 : dotProduct);  	if (axis.LengthSquared < 1e-12) {  		if (dotProduct > 0) {  			// The input directions are parallel' so no rotation is needed.  			return Quaternion.Identity;  		} else {  			// The directions are antiparallel' and therefore a rotation  			// of 180 degrees about any direction perpendicular to 'start'  			// (or 'end') will rotate 'start' into 'end'.  			//  			// The following construction will guarantee that  			// dot(axis' start) == 0.  			//  			axis = Vector3D.CrossProduct (start' new Vector3D (1' 0' 0));  			if (axis.LengthSquared < 1e-12) {  				axis = Vector3D.CrossProduct (start' new Vector3D (0' 1' 0));  			}  		}  	}  	return new Quaternion (axis' angleMultiplier * angle * 180 / Math.PI);  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: if (factor < 1e-6) {  	// One or both of the input directions is close to zero in length.  	return Quaternion.Identity;  } else {  	// Both input directions have nonzero length.  	Vector3D axis = Vector3D.CrossProduct (start' end);  	double dotProduct = Vector3D.DotProduct (start' end) / factor;  	double angle = Math.Acos (dotProduct < -1 ? -1 : dotProduct > 1 ? 1 : dotProduct);  	if (axis.LengthSquared < 1e-12) {  		if (dotProduct > 0) {  			// The input directions are parallel' so no rotation is needed.  			return Quaternion.Identity;  		} else {  			// The directions are antiparallel' and therefore a rotation  			// of 180 degrees about any direction perpendicular to 'start'  			// (or 'end') will rotate 'start' into 'end'.  			//  			// The following construction will guarantee that  			// dot(axis' start) == 0.  			//  			axis = Vector3D.CrossProduct (start' new Vector3D (1' 0' 0));  			if (axis.LengthSquared < 1e-12) {  				axis = Vector3D.CrossProduct (start' new Vector3D (0' 1' 0));  			}  		}  	}  	return new Quaternion (axis' angleMultiplier * angle * 180 / Math.PI);  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: if (factor < 1e-6) {  	// One or both of the input directions is close to zero in length.  	return Quaternion.Identity;  } else {  	// Both input directions have nonzero length.  	Vector3D axis = Vector3D.CrossProduct (start' end);  	double dotProduct = Vector3D.DotProduct (start' end) / factor;  	double angle = Math.Acos (dotProduct < -1 ? -1 : dotProduct > 1 ? 1 : dotProduct);  	if (axis.LengthSquared < 1e-12) {  		if (dotProduct > 0) {  			// The input directions are parallel' so no rotation is needed.  			return Quaternion.Identity;  		} else {  			// The directions are antiparallel' and therefore a rotation  			// of 180 degrees about any direction perpendicular to 'start'  			// (or 'end') will rotate 'start' into 'end'.  			//  			// The following construction will guarantee that  			// dot(axis' start) == 0.  			//  			axis = Vector3D.CrossProduct (start' new Vector3D (1' 0' 0));  			if (axis.LengthSquared < 1e-12) {  				axis = Vector3D.CrossProduct (start' new Vector3D (0' 1' 0));  			}  		}  	}  	return new Quaternion (axis' angleMultiplier * angle * 180 / Math.PI);  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: if (axis.LengthSquared < 1e-12) {  	if (dotProduct > 0) {  		// The input directions are parallel' so no rotation is needed.  		return Quaternion.Identity;  	} else {  		// The directions are antiparallel' and therefore a rotation  		// of 180 degrees about any direction perpendicular to 'start'  		// (or 'end') will rotate 'start' into 'end'.  		//  		// The following construction will guarantee that  		// dot(axis' start) == 0.  		//  		axis = Vector3D.CrossProduct (start' new Vector3D (1' 0' 0));  		if (axis.LengthSquared < 1e-12) {  			axis = Vector3D.CrossProduct (start' new Vector3D (0' 1' 0));  		}  	}  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: if (axis.LengthSquared < 1e-12) {  	if (dotProduct > 0) {  		// The input directions are parallel' so no rotation is needed.  		return Quaternion.Identity;  	} else {  		// The directions are antiparallel' and therefore a rotation  		// of 180 degrees about any direction perpendicular to 'start'  		// (or 'end') will rotate 'start' into 'end'.  		//  		// The following construction will guarantee that  		// dot(axis' start) == 0.  		//  		axis = Vector3D.CrossProduct (start' new Vector3D (1' 0' 0));  		if (axis.LengthSquared < 1e-12) {  			axis = Vector3D.CrossProduct (start' new Vector3D (0' 1' 0));  		}  	}  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: if (dotProduct > 0) {  	// The input directions are parallel' so no rotation is needed.  	return Quaternion.Identity;  } else {  	// The directions are antiparallel' and therefore a rotation  	// of 180 degrees about any direction perpendicular to 'start'  	// (or 'end') will rotate 'start' into 'end'.  	//  	// The following construction will guarantee that  	// dot(axis' start) == 0.  	//  	axis = Vector3D.CrossProduct (start' new Vector3D (1' 0' 0));  	if (axis.LengthSquared < 1e-12) {  		axis = Vector3D.CrossProduct (start' new Vector3D (0' 1' 0));  	}  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: if (axis.LengthSquared < 1e-12) {  	axis = Vector3D.CrossProduct (start' new Vector3D (0' 1' 0));  }  
Magic Number,Snoop,TrackballBehavior,F:\newReposMay17\cplotts_snoopwpf\Snoop\TrackballBehavior.cs,GetRotationFromStartAndEnd,The following statement contains a magic number: return new Quaternion (axis' angleMultiplier * angle * 180 / Math.PI);  
Magic Number,Snoop,VisualItem,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualItem.cs,OnSelectionChanged,The following statement contains a magic number: if (adorners != null && visualElement != null) {  	if (this.IsSelected && this.adorner == null) {  		Border border = new Border ();  		border.BorderThickness = new Thickness (4);  		Color borderColor = new Color ();  		borderColor.ScA = .3f;  		borderColor.ScR = 1;  		border.BorderBrush = new SolidColorBrush (borderColor);  		border.IsHitTestVisible = false;  		this.adorner = new AdornerContainer (visualElement);  		adorner.Child = border;  		adorners.Add (adorner);  	} else if (this.adorner != null) {  		adorners.Remove (this.adorner);  		this.adorner.Child = null;  		this.adorner = null;  	}  }  
Magic Number,Snoop,VisualItem,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualItem.cs,OnSelectionChanged,The following statement contains a magic number: if (this.IsSelected && this.adorner == null) {  	Border border = new Border ();  	border.BorderThickness = new Thickness (4);  	Color borderColor = new Color ();  	borderColor.ScA = .3f;  	borderColor.ScR = 1;  	border.BorderBrush = new SolidColorBrush (borderColor);  	border.IsHitTestVisible = false;  	this.adorner = new AdornerContainer (visualElement);  	adorner.Child = border;  	adorners.Add (adorner);  } else if (this.adorner != null) {  	adorners.Remove (this.adorner);  	this.adorner.Child = null;  	this.adorner = null;  }  
Magic Number,Snoop,VisualItem,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualItem.cs,OnSelectionChanged,The following statement contains a magic number: border.BorderThickness = new Thickness (4);  
Magic Number,Snoop,EventsView,F:\newReposMay17\cplotts_snoopwpf\Snoop\EventsView.xaml.cs,HandleEventHandled,The following statement contains a magic number: if (visual != null && !visual.IsPartOfSnoopVisualTree ()) {  	Action action = () => {  		this.interestingEvents.Add (trackedEvent);  		while (this.interestingEvents.Count > 100)  			this.interestingEvents.RemoveAt (0);  		TreeViewItem tvi = (TreeViewItem)this.EventTree.ItemContainerGenerator.ContainerFromItem (trackedEvent);  		if (tvi != null)  			tvi.BringIntoView ();  	};  	if (!this.Dispatcher.CheckAccess ()) {  		this.Dispatcher.BeginInvoke (action);  	} else {  		action.Invoke ();  	}  }  
Magic Number,Snoop,EventsView,F:\newReposMay17\cplotts_snoopwpf\Snoop\EventsView.xaml.cs,HandleEventHandled,The following statement contains a magic number: while (this.interestingEvents.Count > 100)  	this.interestingEvents.RemoveAt (0);  
Magic Number,Snoop,PropertyGrid2,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyGrid2.xaml.cs,PropertyGrid2,The following statement contains a magic number: filterTimer.Interval = TimeSpan.FromSeconds (0.3);  
Magic Number,Snoop,PropertyGrid2,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyGrid2.xaml.cs,HandleShowBindingErrors,The following statement contains a magic number: window.Width = 400;  
Magic Number,Snoop,PropertyGrid2,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyGrid2.xaml.cs,HandleShowBindingErrors,The following statement contains a magic number: window.Height = 300;  
Magic Number,Snoop,PropertyGrid2,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyGrid2.xaml.cs,GetNewSortDirection,The following statement contains a magic number: return (ListSortDirection)(columnHeader.Tag = (ListSortDirection)(((int)direction + 1) % 2));  
Magic Number,Snoop,PropertyGrid2,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyGrid2.xaml.cs,HandleNameClick,The following statement contains a magic number: if (e.ClickCount == 2) {  	PropertyInformation property = (PropertyInformation)((FrameworkElement)sender).DataContext;  	object newTarget = null;  	if (Keyboard.Modifiers == ModifierKeys.Shift)  		newTarget = property.Binding;  	else if (Keyboard.Modifiers == ModifierKeys.Control)  		newTarget = property.BindingExpression;  	else if (Keyboard.Modifiers == ModifierKeys.None)  		newTarget = property.Value;  	if (newTarget != null) {  		PropertyInspector.DelveCommand.Execute (property' this);  	}  }  
Magic Number,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,PopTarget,The following statement contains a magic number: if (this.inspectStack.Count > 1) {  	this.Target = this.inspectStack [this.inspectStack.Count - 2];  	this.inspectStack.RemoveAt (this.inspectStack.Count - 2);  	this.inspectStack.RemoveAt (this.inspectStack.Count - 2);  	if (this._delvePathList.Count > 0) {  		this._delvePathList.RemoveAt (this._delvePathList.Count - 1);  		this.OnPropertyChanged ("DelvePath");  	}  }  
Magic Number,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,PopTarget,The following statement contains a magic number: if (this.inspectStack.Count > 1) {  	this.Target = this.inspectStack [this.inspectStack.Count - 2];  	this.inspectStack.RemoveAt (this.inspectStack.Count - 2);  	this.inspectStack.RemoveAt (this.inspectStack.Count - 2);  	if (this._delvePathList.Count > 0) {  		this._delvePathList.RemoveAt (this._delvePathList.Count - 1);  		this.OnPropertyChanged ("DelvePath");  	}  }  
Magic Number,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,PopTarget,The following statement contains a magic number: if (this.inspectStack.Count > 1) {  	this.Target = this.inspectStack [this.inspectStack.Count - 2];  	this.inspectStack.RemoveAt (this.inspectStack.Count - 2);  	this.inspectStack.RemoveAt (this.inspectStack.Count - 2);  	if (this._delvePathList.Count > 0) {  		this._delvePathList.RemoveAt (this._delvePathList.Count - 1);  		this.OnPropertyChanged ("DelvePath");  	}  }  
Magic Number,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,PopTarget,The following statement contains a magic number: this.Target = this.inspectStack [this.inspectStack.Count - 2];  
Magic Number,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,PopTarget,The following statement contains a magic number: this.inspectStack.RemoveAt (this.inspectStack.Count - 2);  
Magic Number,Snoop,PropertyInspector,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyInspector.xaml.cs,PopTarget,The following statement contains a magic number: this.inspectStack.RemoveAt (this.inspectStack.Count - 2);  
Magic Number,Snoop,SnoopUI,F:\newReposMay17\cplotts_snoopwpf\Snoop\SnoopUI.xaml.cs,SnoopUI,The following statement contains a magic number: filterTimer.Interval = TimeSpan.FromSeconds (0.3);  
Magic Number,Snoop,WindowFinder,F:\newReposMay17\cplotts_snoopwpf\Snoop\WindowFinder.xaml.cs,UpdateFeedbackWindowPosition,The following statement contains a magic number: if (_feedbackWindow != null) {  	var mouse = NativeMethods.GetCursorPosition ();  	_feedbackWindow.Left = mouse.X - 34;  	//.Left;  	_feedbackWindow.Top = mouse.Y + 10;  	// windowRect.Top;  }  
Magic Number,Snoop,WindowFinder,F:\newReposMay17\cplotts_snoopwpf\Snoop\WindowFinder.xaml.cs,UpdateFeedbackWindowPosition,The following statement contains a magic number: if (_feedbackWindow != null) {  	var mouse = NativeMethods.GetCursorPosition ();  	_feedbackWindow.Left = mouse.X - 34;  	//.Left;  	_feedbackWindow.Top = mouse.Y + 10;  	// windowRect.Top;  }  
Magic Number,Snoop,WindowFinder,F:\newReposMay17\cplotts_snoopwpf\Snoop\WindowFinder.xaml.cs,UpdateFeedbackWindowPosition,The following statement contains a magic number: _feedbackWindow.Left = mouse.X - 34;  
Magic Number,Snoop,WindowFinder,F:\newReposMay17\cplotts_snoopwpf\Snoop\WindowFinder.xaml.cs,UpdateFeedbackWindowPosition,The following statement contains a magic number: _feedbackWindow.Top = mouse.Y + 10;  
Magic Number,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,HandlePanLeft,The following statement contains a magic number: this.translation.X -= 5;  
Magic Number,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,HandlePanRight,The following statement contains a magic number: this.translation.X += 5;  
Magic Number,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,HandlePanUp,The following statement contains a magic number: this.translation.Y -= 5;  
Magic Number,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,HandlePanDown,The following statement contains a magic number: this.translation.Y += 5;  
Magic Number,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,ZScaleSlider_ValueChanged,The following statement contains a magic number: if (this.visualTree3DView != null) {  	this.visualTree3DView.ZScale = Math.Pow (10' e.NewValue);  }  
Magic Number,Snoop,Zoomer,F:\newReposMay17\cplotts_snoopwpf\Snoop\Zoomer.xaml.cs,ZScaleSlider_ValueChanged,The following statement contains a magic number: this.visualTree3DView.ZScale = Math.Pow (10' e.NewValue);  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,VisualTree3DView,The following statement contains a magic number: this.Width = 500;  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,VisualTree3DView,The following statement contains a magic number: this.Height = 500;  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,ConvertVisualToModel3D,The following statement contains a magic number: if (!bounds.IsEmpty && bounds.Width > 0 && bounds.Height > 0) {  	MeshGeometry3D mesh = new MeshGeometry3D ();  	mesh.Positions.Add (new Point3D (bounds.Left' bounds.Top' z));  	mesh.Positions.Add (new Point3D (bounds.Right' bounds.Top' z));  	mesh.Positions.Add (new Point3D (bounds.Right' bounds.Bottom' z));  	mesh.Positions.Add (new Point3D (bounds.Left' bounds.Bottom' z));  	mesh.TextureCoordinates.Add (new Point (0' 0));  	mesh.TextureCoordinates.Add (new Point (1' 0));  	mesh.TextureCoordinates.Add (new Point (1' 1));  	mesh.TextureCoordinates.Add (new Point (0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.TriangleIndices = new Int32Collection (new int[] {  		0'  		1'  		2'  		2'  		3'  		0  	});  	mesh.Freeze ();  	Brush brush = this.MakeBrushFromVisual (visual' bounds);  	DiffuseMaterial material = new DiffuseMaterial (brush);  	material.Freeze ();  	model = new GeometryModel3D (mesh' material);  	((GeometryModel3D)model).BackMaterial = material;  	z -= 1;  }  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,ConvertVisualToModel3D,The following statement contains a magic number: if (!bounds.IsEmpty && bounds.Width > 0 && bounds.Height > 0) {  	MeshGeometry3D mesh = new MeshGeometry3D ();  	mesh.Positions.Add (new Point3D (bounds.Left' bounds.Top' z));  	mesh.Positions.Add (new Point3D (bounds.Right' bounds.Top' z));  	mesh.Positions.Add (new Point3D (bounds.Right' bounds.Bottom' z));  	mesh.Positions.Add (new Point3D (bounds.Left' bounds.Bottom' z));  	mesh.TextureCoordinates.Add (new Point (0' 0));  	mesh.TextureCoordinates.Add (new Point (1' 0));  	mesh.TextureCoordinates.Add (new Point (1' 1));  	mesh.TextureCoordinates.Add (new Point (0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.TriangleIndices = new Int32Collection (new int[] {  		0'  		1'  		2'  		2'  		3'  		0  	});  	mesh.Freeze ();  	Brush brush = this.MakeBrushFromVisual (visual' bounds);  	DiffuseMaterial material = new DiffuseMaterial (brush);  	material.Freeze ();  	model = new GeometryModel3D (mesh' material);  	((GeometryModel3D)model).BackMaterial = material;  	z -= 1;  }  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,ConvertVisualToModel3D,The following statement contains a magic number: if (!bounds.IsEmpty && bounds.Width > 0 && bounds.Height > 0) {  	MeshGeometry3D mesh = new MeshGeometry3D ();  	mesh.Positions.Add (new Point3D (bounds.Left' bounds.Top' z));  	mesh.Positions.Add (new Point3D (bounds.Right' bounds.Top' z));  	mesh.Positions.Add (new Point3D (bounds.Right' bounds.Bottom' z));  	mesh.Positions.Add (new Point3D (bounds.Left' bounds.Bottom' z));  	mesh.TextureCoordinates.Add (new Point (0' 0));  	mesh.TextureCoordinates.Add (new Point (1' 0));  	mesh.TextureCoordinates.Add (new Point (1' 1));  	mesh.TextureCoordinates.Add (new Point (0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.Normals.Add (new Vector3D (0' 0' 1));  	mesh.TriangleIndices = new Int32Collection (new int[] {  		0'  		1'  		2'  		2'  		3'  		0  	});  	mesh.Freeze ();  	Brush brush = this.MakeBrushFromVisual (visual' bounds);  	DiffuseMaterial material = new DiffuseMaterial (brush);  	material.Freeze ();  	model = new GeometryModel3D (mesh' material);  	((GeometryModel3D)model).BackMaterial = material;  	z -= 1;  }  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,ConvertVisualToModel3D,The following statement contains a magic number: mesh.TriangleIndices = new Int32Collection (new int[] {  	0'  	1'  	2'  	2'  	3'  	0  });  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,ConvertVisualToModel3D,The following statement contains a magic number: mesh.TriangleIndices = new Int32Collection (new int[] {  	0'  	1'  	2'  	2'  	3'  	0  });  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,ConvertVisualToModel3D,The following statement contains a magic number: mesh.TriangleIndices = new Int32Collection (new int[] {  	0'  	1'  	2'  	2'  	3'  	0  });  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,MakeBrushFromVisual,The following statement contains a magic number: if (viewport == null) {  	Drawing drawing = VisualTreeHelper.GetDrawing (visual);  	if (this.drawOutlines) {  		bounds.Inflate (VisualTree3DView.OutlinePen.Thickness / 2' VisualTree3DView.OutlinePen.Thickness / 2);  	}  	Matrix offsetMatrix = new Matrix (1' 0' 0' 1' -bounds.Left' -bounds.Top);  	MatrixTransform offsetMatrixTransform = new MatrixTransform (offsetMatrix);  	offsetMatrixTransform.Freeze ();  	DrawingVisual drawingVisual = new DrawingVisual ();  	DrawingContext drawingContext = drawingVisual.RenderOpen ();  	drawingContext.PushTransform (offsetMatrixTransform);  	if (this.drawOutlines) {  		drawingContext.DrawRectangle (null' VisualTree3DView.OutlinePen' bounds);  	}  	drawingContext.DrawDrawing (drawing);  	drawingContext.Pop ();  	drawingContext.Close ();  	visual = drawingVisual;  }  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,MakeBrushFromVisual,The following statement contains a magic number: if (viewport == null) {  	Drawing drawing = VisualTreeHelper.GetDrawing (visual);  	if (this.drawOutlines) {  		bounds.Inflate (VisualTree3DView.OutlinePen.Thickness / 2' VisualTree3DView.OutlinePen.Thickness / 2);  	}  	Matrix offsetMatrix = new Matrix (1' 0' 0' 1' -bounds.Left' -bounds.Top);  	MatrixTransform offsetMatrixTransform = new MatrixTransform (offsetMatrix);  	offsetMatrixTransform.Freeze ();  	DrawingVisual drawingVisual = new DrawingVisual ();  	DrawingContext drawingContext = drawingVisual.RenderOpen ();  	drawingContext.PushTransform (offsetMatrixTransform);  	if (this.drawOutlines) {  		drawingContext.DrawRectangle (null' VisualTree3DView.OutlinePen' bounds);  	}  	drawingContext.DrawDrawing (drawing);  	drawingContext.Pop ();  	drawingContext.Close ();  	visual = drawingVisual;  }  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,MakeBrushFromVisual,The following statement contains a magic number: if (this.drawOutlines) {  	bounds.Inflate (VisualTree3DView.OutlinePen.Thickness / 2' VisualTree3DView.OutlinePen.Thickness / 2);  }  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,MakeBrushFromVisual,The following statement contains a magic number: if (this.drawOutlines) {  	bounds.Inflate (VisualTree3DView.OutlinePen.Thickness / 2' VisualTree3DView.OutlinePen.Thickness / 2);  }  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,MakeBrushFromVisual,The following statement contains a magic number: bounds.Inflate (VisualTree3DView.OutlinePen.Thickness / 2' VisualTree3DView.OutlinePen.Thickness / 2);  
Magic Number,Snoop,VisualTree3DView,F:\newReposMay17\cplotts_snoopwpf\Snoop\VisualTree3DView.cs,MakeBrushFromVisual,The following statement contains a magic number: bounds.Inflate (VisualTree3DView.OutlinePen.Thickness / 2' VisualTree3DView.OutlinePen.Thickness / 2);  
Magic Number,Snoop.Converters,ArgbToPartsConverter,F:\newReposMay17\cplotts_snoopwpf\Snoop\Converters\ArgbToPartsConverter.cs,Convert,The following statement contains a magic number: if (val.Length < 9) {  	return new ArgumentException ("Expected converter parameter to be a string in the form of #FF102030");  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: if (item is FrameworkElement) {  	FrameworkElement uiElement = (FrameworkElement)item;  	return CreateRectangleForFrameworkElement (uiElement);  } else if (item is Visual) {  	Visual visual = (Visual)item;  	return CreateRectangleForVisual (visual);  } else if (item is ResourceDictionary) {  	StackPanel stackPanel = new StackPanel ();  	foreach (object value in ((ResourceDictionary)item).Values) {  		UIElement element = CreateIfPossible (value);  		if (element != null)  			stackPanel.Children.Add (element);  	}  	return stackPanel;  } else if (item is Brush) {  	Rectangle rect = new Rectangle ();  	rect.Width = 10;  	rect.Height = 10;  	rect.Fill = (Brush)item;  	return rect;  } else if (item is ImageSource) {  	Image image = new Image ();  	image.Source = (ImageSource)item;  	return image;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: if (item is FrameworkElement) {  	FrameworkElement uiElement = (FrameworkElement)item;  	return CreateRectangleForFrameworkElement (uiElement);  } else if (item is Visual) {  	Visual visual = (Visual)item;  	return CreateRectangleForVisual (visual);  } else if (item is ResourceDictionary) {  	StackPanel stackPanel = new StackPanel ();  	foreach (object value in ((ResourceDictionary)item).Values) {  		UIElement element = CreateIfPossible (value);  		if (element != null)  			stackPanel.Children.Add (element);  	}  	return stackPanel;  } else if (item is Brush) {  	Rectangle rect = new Rectangle ();  	rect.Width = 10;  	rect.Height = 10;  	rect.Fill = (Brush)item;  	return rect;  } else if (item is ImageSource) {  	Image image = new Image ();  	image.Source = (ImageSource)item;  	return image;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: if (item is Visual) {  	Visual visual = (Visual)item;  	return CreateRectangleForVisual (visual);  } else if (item is ResourceDictionary) {  	StackPanel stackPanel = new StackPanel ();  	foreach (object value in ((ResourceDictionary)item).Values) {  		UIElement element = CreateIfPossible (value);  		if (element != null)  			stackPanel.Children.Add (element);  	}  	return stackPanel;  } else if (item is Brush) {  	Rectangle rect = new Rectangle ();  	rect.Width = 10;  	rect.Height = 10;  	rect.Fill = (Brush)item;  	return rect;  } else if (item is ImageSource) {  	Image image = new Image ();  	image.Source = (ImageSource)item;  	return image;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: if (item is Visual) {  	Visual visual = (Visual)item;  	return CreateRectangleForVisual (visual);  } else if (item is ResourceDictionary) {  	StackPanel stackPanel = new StackPanel ();  	foreach (object value in ((ResourceDictionary)item).Values) {  		UIElement element = CreateIfPossible (value);  		if (element != null)  			stackPanel.Children.Add (element);  	}  	return stackPanel;  } else if (item is Brush) {  	Rectangle rect = new Rectangle ();  	rect.Width = 10;  	rect.Height = 10;  	rect.Fill = (Brush)item;  	return rect;  } else if (item is ImageSource) {  	Image image = new Image ();  	image.Source = (ImageSource)item;  	return image;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: if (item is ResourceDictionary) {  	StackPanel stackPanel = new StackPanel ();  	foreach (object value in ((ResourceDictionary)item).Values) {  		UIElement element = CreateIfPossible (value);  		if (element != null)  			stackPanel.Children.Add (element);  	}  	return stackPanel;  } else if (item is Brush) {  	Rectangle rect = new Rectangle ();  	rect.Width = 10;  	rect.Height = 10;  	rect.Fill = (Brush)item;  	return rect;  } else if (item is ImageSource) {  	Image image = new Image ();  	image.Source = (ImageSource)item;  	return image;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: if (item is ResourceDictionary) {  	StackPanel stackPanel = new StackPanel ();  	foreach (object value in ((ResourceDictionary)item).Values) {  		UIElement element = CreateIfPossible (value);  		if (element != null)  			stackPanel.Children.Add (element);  	}  	return stackPanel;  } else if (item is Brush) {  	Rectangle rect = new Rectangle ();  	rect.Width = 10;  	rect.Height = 10;  	rect.Fill = (Brush)item;  	return rect;  } else if (item is ImageSource) {  	Image image = new Image ();  	image.Source = (ImageSource)item;  	return image;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: if (item is Brush) {  	Rectangle rect = new Rectangle ();  	rect.Width = 10;  	rect.Height = 10;  	rect.Fill = (Brush)item;  	return rect;  } else if (item is ImageSource) {  	Image image = new Image ();  	image.Source = (ImageSource)item;  	return image;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: if (item is Brush) {  	Rectangle rect = new Rectangle ();  	rect.Width = 10;  	rect.Height = 10;  	rect.Fill = (Brush)item;  	return rect;  } else if (item is ImageSource) {  	Image image = new Image ();  	image.Source = (ImageSource)item;  	return image;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: rect.Width = 10;  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateIfPossible,The following statement contains a magic number: rect.Height = 10;  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateRectangleForVisual,The following statement contains a magic number: rect.Width = 50;  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateRectangleForVisual,The following statement contains a magic number: rect.Height = 50;  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateRectangleForFrameworkElement,The following statement contains a magic number: if (uiElement.ActualHeight == 0 && uiElement.ActualWidth == 0)//sometimes the actual size might be 0 despite there being a rendered visual with a size greater than 0. This happens often on a custom panel (http://snoopwpf.codeplex.com/workitem/7217). Having a fixed size visual brush remedies the problem.   {  	rect.Width = 50;  	rect.Height = 50;  } else {  	rect.Width = uiElement.ActualWidth;  	rect.Height = uiElement.ActualHeight;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateRectangleForFrameworkElement,The following statement contains a magic number: if (uiElement.ActualHeight == 0 && uiElement.ActualWidth == 0)//sometimes the actual size might be 0 despite there being a rendered visual with a size greater than 0. This happens often on a custom panel (http://snoopwpf.codeplex.com/workitem/7217). Having a fixed size visual brush remedies the problem.   {  	rect.Width = 50;  	rect.Height = 50;  } else {  	rect.Width = uiElement.ActualWidth;  	rect.Height = uiElement.ActualHeight;  }  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateRectangleForFrameworkElement,The following statement contains a magic number: rect.Width = 50;  
Magic Number,Snoop.Infrastructure,ZoomerUtilities,F:\newReposMay17\cplotts_snoopwpf\Snoop\Infrastructure\ZoomerUtilities.cs,CreateRectangleForFrameworkElement,The following statement contains a magic number: rect.Height = 50;  
Magic Number,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Invoke,The following statement contains a magic number: try {  	using (var pipe = this.runspace.CreatePipeline (script' addToHistory)) {  		var cmd = new Command ("Out-String");  		cmd.Parameters.Add ("Width"' Math.Max (2' (int)(this.ActualWidth * 0.7)));  		pipe.Commands.Add (cmd);  		foreach (var item in pipe.Invoke ()) {  			this.outputTextBox.AppendText (item.ToString ());  		}  		foreach (PSObject item in pipe.Error.ReadToEnd ()) {  			var error = (ErrorRecord)item.BaseObject;  			this.OutputErrorRecord (error);  		}  	}  } catch (RuntimeException ex) {  	this.OutputErrorRecord (ex.ErrorRecord);  } catch (Exception ex) {  	this.outputTextBox.AppendText (string.Format ("Oops!  Uncaught exception invoking on the PowerShell runspace: {0}"' ex.Message));  }  
Magic Number,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Invoke,The following statement contains a magic number: try {  	using (var pipe = this.runspace.CreatePipeline (script' addToHistory)) {  		var cmd = new Command ("Out-String");  		cmd.Parameters.Add ("Width"' Math.Max (2' (int)(this.ActualWidth * 0.7)));  		pipe.Commands.Add (cmd);  		foreach (var item in pipe.Invoke ()) {  			this.outputTextBox.AppendText (item.ToString ());  		}  		foreach (PSObject item in pipe.Error.ReadToEnd ()) {  			var error = (ErrorRecord)item.BaseObject;  			this.OutputErrorRecord (error);  		}  	}  } catch (RuntimeException ex) {  	this.OutputErrorRecord (ex.ErrorRecord);  } catch (Exception ex) {  	this.outputTextBox.AppendText (string.Format ("Oops!  Uncaught exception invoking on the PowerShell runspace: {0}"' ex.Message));  }  
Magic Number,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Invoke,The following statement contains a magic number: using (var pipe = this.runspace.CreatePipeline (script' addToHistory)) {  	var cmd = new Command ("Out-String");  	cmd.Parameters.Add ("Width"' Math.Max (2' (int)(this.ActualWidth * 0.7)));  	pipe.Commands.Add (cmd);  	foreach (var item in pipe.Invoke ()) {  		this.outputTextBox.AppendText (item.ToString ());  	}  	foreach (PSObject item in pipe.Error.ReadToEnd ()) {  		var error = (ErrorRecord)item.BaseObject;  		this.OutputErrorRecord (error);  	}  }  
Magic Number,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Invoke,The following statement contains a magic number: using (var pipe = this.runspace.CreatePipeline (script' addToHistory)) {  	var cmd = new Command ("Out-String");  	cmd.Parameters.Add ("Width"' Math.Max (2' (int)(this.ActualWidth * 0.7)));  	pipe.Commands.Add (cmd);  	foreach (var item in pipe.Invoke ()) {  		this.outputTextBox.AppendText (item.ToString ());  	}  	foreach (PSObject item in pipe.Error.ReadToEnd ()) {  		var error = (ErrorRecord)item.BaseObject;  		this.OutputErrorRecord (error);  	}  }  
Magic Number,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Invoke,The following statement contains a magic number: cmd.Parameters.Add ("Width"' Math.Max (2' (int)(this.ActualWidth * 0.7)));  
Magic Number,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Invoke,The following statement contains a magic number: cmd.Parameters.Add ("Width"' Math.Max (2' (int)(this.ActualWidth * 0.7)));  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeIntValue,The following statement contains a magic number: if (largeIncrement) {  	change *= 10;  }  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeIntValue,The following statement contains a magic number: change *= 10;  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeDoubleValue,The following statement contains a magic number: if (largeIncrement) {  	change *= 10;  }  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeDoubleValue,The following statement contains a magic number: change *= 10;  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeDoubleValue,The following statement contains a magic number: if (tinyIncrement) {  	change /= 10;  }  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeDoubleValue,The following statement contains a magic number: change /= 10;  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeThicknessValuePart,The following statement contains a magic number: if (largeIncrement) {  	change *= 20;  }  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeThicknessValuePart,The following statement contains a magic number: change *= 20;  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: if (largeIncrement) {  	change *= 16;  }  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: change *= 16;  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: ret = Math.Min (255' Math.Max (0' ret + change));  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [0] = currentValue.Substring (1' 2);  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [1] = currentValue.Substring (3' 2);  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [1] = currentValue.Substring (3' 2);  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [2] = currentValue.Substring (5' 2);  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [2] = currentValue.Substring (5' 2);  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [2] = currentValue.Substring (5' 2);  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [3] = currentValue.Substring (7' 2);  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [3] = currentValue.Substring (7' 2);  
Magic Number,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,ChangeBrushValuePart,The following statement contains a magic number: fields [3] = currentValue.Substring (7' 2);  
Missing Default,Snoop,PropertyGrid2,F:\newReposMay17\cplotts_snoopwpf\Snoop\PropertyGrid2.xaml.cs,HandleSort,The following switch statement is missing a default case: switch (columnHeader.Text) {  case "Name":  	this.Sort (PropertyGrid2.CompareNames' direction);  	break;  case "Value":  	this.Sort (PropertyGrid2.CompareValues' direction);  	break;  case "Value Source":  	this.Sort (PropertyGrid2.CompareValueSources' direction);  	break;  }  
Missing Default,Snoop.DebugListenerTab,SnoopSingleFilter,F:\newReposMay17\cplotts_snoopwpf\Snoop\DebugListenerTab\SnoopSingleFilter.cs,FilterMatches,The following switch statement is missing a default case: switch (FilterType) {  case FilterType.Contains:  	filterMatches = debugLine.Contains (text);  	break;  case FilterType.StartsWith:  	filterMatches = debugLine.StartsWith (text);  	break;  case FilterType.EndsWith:  	filterMatches = debugLine.EndsWith (text);  	break;  case FilterType.RegularExpression:  	filterMatches = TryMatch (debugLine' text);  	break;  }  
Missing Default,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,Start,The following switch statement is missing a default case: switch (e.PropertyName) {  case "CurrentSelection":  	SetVariable (ShellConstants.Selected' ui.CurrentSelection);  	break;  case "Root":  	SetVariable (ShellConstants.Root' ui.Root);  	break;  }  
Missing Default,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,OnCommandTextBoxPreviewKeyDown,The following switch statement is missing a default case: switch (e.Key) {  case Key.Up:  	SetCommandTextToHistory (++this.historyIndex);  	break;  case Key.Down:  	if (this.historyIndex - 1 <= 0) {  		this.commandTextBox.Clear ();  	} else {  		SetCommandTextToHistory (--this.historyIndex);  	}  	break;  case Key.Return:  	this.outputTextBox.AppendText (Environment.NewLine);  	this.outputTextBox.AppendText (this.commandTextBox.Text);  	this.outputTextBox.AppendText (Environment.NewLine);  	Invoke (this.commandTextBox.Text' true);  	this.commandTextBox.Clear ();  	break;  }  
Missing Default,Snoop.Shell,EmbeddedShellView,F:\newReposMay17\cplotts_snoopwpf\Snoop\Shell\EmbeddedShellView.xaml.cs,OnPreviewKeyDown,The following switch statement is missing a default case: switch (e.Key) {  case Key.F5:  	Invoke (string.Format ("if (${0}) {{ . ${0} }}"' ShellConstants.Profile));  	break;  case Key.F12:  	this.outputTextBox.Clear ();  	break;  }  
Missing Default,Snoop.ValueEditors,MouseWheelValueEditor,F:\newReposMay17\cplotts_snoopwpf\Snoop\ValueEditors\MouseWheelValueEditor.xaml.cs,MouseWheelHandler,The following switch statement is missing a default case: switch (PropertyInfo.Property.PropertyType.Name) {  case "Double":  	PropertyInfo.StringValue = ChangeDoubleValue (tb.Text' increment' largeIncrement' tinyIncrement);  	break;  case "Int32":  case "Int16":  	PropertyInfo.StringValue = ChangeIntValue (tb.Text' increment' largeIncrement);  	break;  case "Boolean":  	PropertyInfo.StringValue = ChangeBooleanValue (tb.Text);  	break;  case "Visibility":  	PropertyInfo.StringValue = ChangeEnumValue<Visibility> (tb.Text' increment);  	break;  case "HorizontalAlignment":  	PropertyInfo.StringValue = ChangeEnumValue<HorizontalAlignment> (tb.Text' increment);  	break;  case "VerticalAlignment":  	PropertyInfo.StringValue = ChangeEnumValue<VerticalAlignment> (tb.Text' increment);  	break;  case "Thickness":  	ChangeThicknessValuePart (fieldNum' tb.Text' increment' largeIncrement);  	break;  case "Brush":  	ChangeBrushValuePart (fieldNum' tb.Text' increment' largeIncrement);  	break;  case "Color":  	ChangeBrushValuePart (fieldNum' tb.Text' increment' largeIncrement);  	break;  }  
