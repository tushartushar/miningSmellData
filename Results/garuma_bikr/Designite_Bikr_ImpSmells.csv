Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Bikr,BikrActivityService,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\BikrActivityService.cs,HandleActivityRecognition,Cyclomatic complexity of the method is 9
Long Parameter List,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,OnLayout,The method has 5 parameters. Parameters: changed' l' t' r' b
Long Parameter List,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,OnLayout,The method has 5 parameters. Parameters: changed' left' top' right' bottom
Long Parameter List,Bikr,SnapScrollView,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\SnapScrollView.cs,OnLayout,The method has 5 parameters. Parameters: changed' left' top' right' bottom
Long Statement,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,ShowNotification,The length of the statement  "			notificationPanel.Animate ().TranslationY (0).ScaleX (1).SetDuration (time).SetStartDelay (delay).SetInterpolator (decel).WithEndAction (new Run (() => { " is 153.
Long Statement,Bikr,BikrActivityService,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\BikrActivityService.cs,OnConnected,The length of the statement  "				callbackIntent = PendingIntent.GetService (this' Resource.Id.bikr_intent_location' intent' PendingIntentFlags.UpdateCurrent); " is 125.
Long Statement,Bikr,ActivityRecognitionHandler,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\ActivityRecognitionHandler.cs,OnConnected,The length of the statement  "				callbackIntent = PendingIntent.GetService (context' Resource.Id.bikr_intent_activity' intent' PendingIntentFlags.UpdateCurrent); " is 128.
Long Statement,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,Draw,The length of the statement  "			var top = selectedIndex * spacing + words.Take (selectedIndex).Select (w => textLayouts[w].Height).Sum () - knobPadding + PaddingTop; " is 133.
Complex Conditional,Bikr,BikrActivityService,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\BikrActivityService.cs,CheckDelayedFinishTripConditions,The conditional expression  "(activity.Type == DetectedActivity.OnFoot && activity.Confidence > StrongConfidence)  			    || (activity.Type == DetectedActivity.InVehicle && activity.Confidence > ExtremeConfidence)"  is complex.
Complex Conditional,Bikr,BikrActivityService,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\BikrActivityService.cs,CheckDelayedFinishTripConditions,The conditional expression  "(activity.Type == DetectedActivity.OnBicycle && activity.Confidence < WeakConfidence)  			           || (activity.Type != DetectedActivity.OnBicycle && activity.Confidence >= StrongConfidence)"  is complex.
Magic Number,Bikr,MainActivity,D:\research\architectureSmells\repos\garuma_bikr\Bikr\MainActivity.cs,HandlePageScrolled,The following statement contains a magic number: ActionBar.GetTabAt (0).Icon.SetAlpha (255 - (int)(offset * 200));
Magic Number,Bikr,MainActivity,D:\research\architectureSmells\repos\garuma_bikr\Bikr\MainActivity.cs,HandlePageScrolled,The following statement contains a magic number: ActionBar.GetTabAt (0).Icon.SetAlpha (255 - (int)(offset * 200));
Magic Number,Bikr,MainActivity,D:\research\architectureSmells\repos\garuma_bikr\Bikr\MainActivity.cs,HandlePageScrolled,The following statement contains a magic number: ActionBar.GetTabAt (1).Icon.SetAlpha (55 + (int)(offset * 200));
Magic Number,Bikr,MainActivity,D:\research\architectureSmells\repos\garuma_bikr\Bikr\MainActivity.cs,HandlePageScrolled,The following statement contains a magic number: ActionBar.GetTabAt (1).Icon.SetAlpha (55 + (int)(offset * 200));
Magic Number,Bikr,MainActivity,D:\research\architectureSmells\repos\garuma_bikr\Bikr\MainActivity.cs,ShowOnboarding,The following statement contains a magic number: onboardingBg.SetColorFilter (Color.Argb (180' 0' 0' 0));
Magic Number,Bikr,MainActivity,D:\research\architectureSmells\repos\garuma_bikr\Bikr\MainActivity.cs,ShowOnboarding,The following statement contains a magic number: rootLayout.ScaleX = rootLayout.ScaleY = 0.85f;
Magic Number,Bikr,MainActivity,D:\research\architectureSmells\repos\garuma_bikr\Bikr\MainActivity.cs,ShowOnboarding,The following statement contains a magic number: rootLayout.Animate ().Alpha (1).ScaleX (1).ScaleY (1).SetDuration (time).SetStartDelay (time / 3).Start ();
Magic Number,Bikr,MainActivity,D:\research\architectureSmells\repos\garuma_bikr\Bikr\MainActivity.cs,HandleTrackSwitchCheckedChange,The following statement contains a magic number: handler.PostDelayed (() => {  				if (delayId != delayCurrentId)  					return;  				SetTrackingEnabled (s.Checked);  			}' 1000);
Magic Number,Bikr,DateTimeExtensions,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Models\DateTimeExtensions.cs,PreviousWeek,The following statement contains a magic number: return dt.WeekStart ().AddDays (-7);
Magic Number,Bikr,PreferenceManager,D:\research\architectureSmells\repos\garuma_bikr\Bikr\PreferenceManager.cs,GetUnitForDistance,The following statement contains a magic number: return UseMiles ? "mi" : (distance >= 1000 ? "km" : "m");
Magic Number,Bikr,PreferenceManager,D:\research\architectureSmells\repos\garuma_bikr\Bikr\PreferenceManager.cs,GetDisplayDistance,The following statement contains a magic number: var display = (UseMiles ? distance * 0.00062137 : (distance >= 1000 ? (distance / 1000) : distance)).ToString ("N0");
Magic Number,Bikr,PreferenceManager,D:\research\architectureSmells\repos\garuma_bikr\Bikr\PreferenceManager.cs,GetDisplayDistance,The following statement contains a magic number: var display = (UseMiles ? distance * 0.00062137 : (distance >= 1000 ? (distance / 1000) : distance)).ToString ("N0");
Magic Number,Bikr,PreferenceManager,D:\research\architectureSmells\repos\garuma_bikr\Bikr\PreferenceManager.cs,GetDisplayDistance,The following statement contains a magic number: var display = (UseMiles ? distance * 0.00062137 : (distance >= 1000 ? (distance / 1000) : distance)).ToString ("N0");
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeIdealSpeed,The following statement contains a magic number: var radDip = (int)Math.Round (((float)(width / 2)) / context.Resources.DisplayMetrics.Density);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeIdealSpeed,The following statement contains a magic number: return radDip * 1.36f;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: var amount = Math.Min (Math.Max (0' intensity)' 1) * Math.Min (u1[0]' 20);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: u1 [index - 2] -= amount;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: u1 [index - 1] += amount / 3;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: u1 [index] += (2 * amount) / 3;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: u1 [index] += (2 * amount) / 3;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: index > 2
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: u1 [index + 2] -= amount;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: u1 [index + 1] += amount / 3;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: u1 [index] += (2 * amount) / 3;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: u1 [index] += (2 * amount) / 3;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,ComputeTouch,The following statement contains a magic number: index < u1.Length - 3
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,Draw,The following statement contains a magic number: var w = width / (Count - 2);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,Draw,The following statement contains a magic number: path.CubicTo (i * w' height - u1 [Math.Min (Count - 1' i)]'  				              (i + 1) * w' height - u1 [Math.Min (Count - 1' i + 1)]'  				              (i + 2) * w' height - u1 [Math.Min (Count - 1' i + 2)]);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,Draw,The following statement contains a magic number: path.CubicTo (i * w' height - u1 [Math.Min (Count - 1' i)]'  				              (i + 1) * w' height - u1 [Math.Min (Count - 1' i + 1)]'  				              (i + 2) * w' height - u1 [Math.Min (Count - 1' i + 2)]);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: const int Range = 200;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: const int MinRadius = 2;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: const int FadeStartLevel = 50;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: var maxRadius = ((columnWidth >> 1) * 8) / 10;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: var maxRadius = ((columnWidth >> 1) * 8) / 10;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: var maxHeight = height >> 2;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: int alphaDecrement = (int)((1 - Math.Min (FadeStartLevel' MaxWavyLevel - level) / ((float)FadeStartLevel)) * 255);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: var dispersion = ((float)Math.Sin (i * ((4 * Math.PI) / Count)) + 1) * Range;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: var alpha = (int)Math.Round (255 - ratio * 200);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: var alpha = (int)Math.Round (255 - ratio * 200);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,DrawBubbles,The following statement contains a magic number: var cx = i * columnWidth + columnWidth / 2;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,BlendColor,The following statement contains a magic number: var falpha = alpha / 255f;
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,Step,The following statement contains a magic number: var f = c * c * (u1 [Math.Max (0' i - 1)] + u1 [Math.Min (Count - 1' i + 1)] - 2 * u1 [i]) / (h * h);
Magic Number,Bikr,WaveDrawable,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Drawables\WaveDrawable.cs,Step,The following statement contains a magic number: variance > 0.2
Magic Number,Bikr,ImageUtils,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Utils\ImageUtils.cs,Blur,The following statement contains a magic number: blur.SetRadius (25);
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,OnViewCreated,The following statement contains a magic number: circles[2].Distance = prefs.LastMonthMeasure;
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,SetupInitialAnimations,The following statement contains a magic number: int delay = 10;
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,SetupInitialAnimations,The following statement contains a magic number: var delayIncr = (3 * time) / 4;
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,SetupInitialAnimations,The following statement contains a magic number: var delayIncr = (3 * time) / 4;
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,SetupInitialAnimations,The following statement contains a magic number: circle.ScaleX = .3f;
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,SetupInitialAnimations,The following statement contains a magic number: circle.ScaleY = .3f;
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,ShowLastTripNotification,The following statement contains a magic number: ShowNotification (msg' duration: tt' distance: dispDistance' delay: 2500);
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,ShowNotification,The following statement contains a magic number: notificationPanel.ScaleX = .9f;
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,ShowNotification,The following statement contains a magic number: lastTrip.TranslationY = TypedValue.ApplyDimension (ComplexUnitType.Dip' 8' Resources.DisplayMetrics);
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,ShowNotification,The following statement contains a magic number: notificationPanel.Animate ().TranslationY (0).ScaleX (1).SetDuration (time).SetStartDelay (delay).SetInterpolator (decel).WithEndAction (new Run (() => {  				var accel = new Android.Views.Animations.AccelerateInterpolator ();  				notificationPanel.Animate ()  					.TranslationX (-Resources.DisplayMetrics.WidthPixels)  					.SetDuration (time)  					.SetStartDelay (6000)  					.SetInterpolator (accel)  					.WithEndAction (new Run (() => notificationPanel.Visibility = ViewStates.Invisible))  					.Start ();  			})).Start ();
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,LoadData,The following statement contains a magic number: var mapping = new Dictionary<CircleBadge' double> {  					{ circles[0]' stats.Daily }'  					{ circles[1]' stats.Weekly }'  					{ circles[2]' stats.Monthly }'  				};
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,LoadData,The following statement contains a magic number: map.Key.SetDistanceAnimated (map.Value' startDelay: 100);
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,LoadData,The following statement contains a magic number: SetCompletionLevel (circles[2]' stats.Monthly' stats.PrevMonth);
Magic Number,Bikr,CirclesFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\CirclesFragment.cs,SetCompletionLevel,The following statement contains a magic number: handler.PostDelayed (() => badge.SetCompletionRatioAnimated (ratio)' 600);
Magic Number,Bikr,BikrActivityService,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\BikrActivityService.cs,OnConnected,The following statement contains a magic number: var req = new LocationRequest ()  					.SetInterval (5000)  					.SetFastestInterval (2000)  					.SetSmallestDisplacement (5)  					.SetPriority (LocationRequest.PriorityHighAccuracy);
Magic Number,Bikr,BikrActivityService,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\BikrActivityService.cs,OnConnected,The following statement contains a magic number: var req = new LocationRequest ()  					.SetInterval (5000)  					.SetFastestInterval (2000)  					.SetSmallestDisplacement (5)  					.SetPriority (LocationRequest.PriorityHighAccuracy);
Magic Number,Bikr,BikrActivityService,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\BikrActivityService.cs,OnConnected,The following statement contains a magic number: var req = new LocationRequest ()  					.SetInterval (5000)  					.SetFastestInterval (2000)  					.SetSmallestDisplacement (5)  					.SetPriority (LocationRequest.PriorityHighAccuracy);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Initialize,The following statement contains a magic number: digitPaint = new Paint {  				AntiAlias = true'  				Color = Color.White'  				TextAlign = Paint.Align.Center'  				TextScaleX = .85f  			};
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,SetDistanceAnimated,The following statement contains a magic number: animator.SetDuration (280);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Layout,The following statement contains a magic number: const float Coeff = 3f;
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Layout,The following statement contains a magic number: digitPaint.TextSize = 0.5f * height;
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Layout,The following statement contains a magic number: unitPaint.TextSize = 0.10f * height;
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Layout,The following statement contains a magic number: descPaint.TextSize = 0.12f * height;
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Layout,The following statement contains a magic number: padding = 0.13f * height;
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Draw,The following statement contains a magic number: var center = Width / 2;
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Draw,The following statement contains a magic number: canvas.Scale (1 - currentEffect' (1 - currentEffect) * .4f + .6f' center' Height / 2);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Draw,The following statement contains a magic number: canvas.Scale (1 - currentEffect' (1 - currentEffect) * .4f + .6f' center' Height / 2);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Draw,The following statement contains a magic number: canvas.Scale (1 - currentEffect' (1 - currentEffect) * .4f + .6f' center' Height / 2);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Draw,The following statement contains a magic number: digitPaint.Alpha = (int)((1 - currentEffect) * 255);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Draw,The following statement contains a magic number: canvas.DrawText (dt' center' Height / 2 + bounds.Height () / 2' digitPaint);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Draw,The following statement contains a magic number: canvas.DrawText (dt' center' Height / 2 + bounds.Height () / 2' digitPaint);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,Draw,The following statement contains a magic number: canvas.DrawText (unit' center' Height - 1.2f * padding' unitPaint);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,DrawWater,The following statement contains a magic number: circle.AddCircle (Width / 2' Height / 2' Height / 2' Path.Direction.Ccw);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,DrawWater,The following statement contains a magic number: circle.AddCircle (Width / 2' Height / 2' Height / 2' Path.Direction.Ccw);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,DrawWater,The following statement contains a magic number: circle.AddCircle (Width / 2' Height / 2' Height / 2' Path.Direction.Ccw);
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,OnTouchEvent,The following statement contains a magic number: this.Animate ().ScaleX (.9f).ScaleY (.9f).SetDuration (duration).SetStartDelay (0).Start ();
Magic Number,Bikr,CircleBadge,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleBadge.cs,OnTouchEvent,The following statement contains a magic number: this.Animate ().ScaleX (.9f).ScaleY (.9f).SetDuration (duration).SetStartDelay (0).Start ();
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,Initialize,The following statement contains a magic number: spacing = (int)TypedValue.ApplyDimension (ComplexUnitType.Dip' 24' Context.Resources.DisplayMetrics);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,OnLayout,The following statement contains a magic number: var mainSize = (int)Math.Round (totalHeight * 0.45);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,OnLayout,The following statement contains a magic number: var horizontalOffset = ((r - l) - mainSize) / 2;
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,OnLayout,The following statement contains a magic number: var middleX = (r - l) / 2;
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,OnLayout,The following statement contains a magic number: var topMargin = CalculateVerticalSpacing (mainSize / 2' childSize / 2);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,OnLayout,The following statement contains a magic number: var topMargin = CalculateVerticalSpacing (mainSize / 2' childSize / 2);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,OnLayout,The following statement contains a magic number: var childMargin = CalculateChildVerticalSpacing (childSize / 2);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,OnLayout,The following statement contains a magic number: off = (off + 1) % 2;
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildSize,The following statement contains a magic number: return 2 * (int)Math.Round (  				(4 * (h + sp) - Math.Sqrt (Math.Pow (4 * (-h - sp)' 2) - 16 * (h * h - sp * sp))) / 8  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildSize,The following statement contains a magic number: return 2 * (int)Math.Round (  				(4 * (h + sp) - Math.Sqrt (Math.Pow (4 * (-h - sp)' 2) - 16 * (h * h - sp * sp))) / 8  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildSize,The following statement contains a magic number: return 2 * (int)Math.Round (  				(4 * (h + sp) - Math.Sqrt (Math.Pow (4 * (-h - sp)' 2) - 16 * (h * h - sp * sp))) / 8  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildSize,The following statement contains a magic number: return 2 * (int)Math.Round (  				(4 * (h + sp) - Math.Sqrt (Math.Pow (4 * (-h - sp)' 2) - 16 * (h * h - sp * sp))) / 8  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildSize,The following statement contains a magic number: return 2 * (int)Math.Round (  				(4 * (h + sp) - Math.Sqrt (Math.Pow (4 * (-h - sp)' 2) - 16 * (h * h - sp * sp))) / 8  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildSize,The following statement contains a magic number: return 2 * (int)Math.Round (  				(4 * (h + sp) - Math.Sqrt (Math.Pow (4 * (-h - sp)' 2) - 16 * (h * h - sp * sp))) / 8  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateVerticalSpacing,The following statement contains a magic number: return (int)Math.Round (  				Math.Sqrt (Math.Pow (radius1 + spacing + radius2' 2) - Math.Pow (radius2' 2)) - radius2 - radius1  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateVerticalSpacing,The following statement contains a magic number: return (int)Math.Round (  				Math.Sqrt (Math.Pow (radius1 + spacing + radius2' 2) - Math.Pow (radius2' 2)) - radius2 - radius1  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildVerticalSpacing,The following statement contains a magic number: var doubleRad = 2 * radius;
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildVerticalSpacing,The following statement contains a magic number: return (int)Math.Round (  				Math.Sqrt (Math.Pow (doubleRad + spacing' 2) - Math.Pow (doubleRad' 2)) - doubleRad  			);
Magic Number,Bikr,CircleLinearLayout,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\CircleLinearLayout.cs,CalculateChildVerticalSpacing,The following statement contains a magic number: return (int)Math.Round (  				Math.Sqrt (Math.Pow (doubleRad + spacing' 2) - Math.Pow (doubleRad' 2)) - doubleRad  			);
Magic Number,Bikr,StatsFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\StatsFragment.cs,OnViewCreated,The following statement contains a magic number: sections [2].FindViewById<TextView> (Resource.Id.statTitle).Text =  				Resources.GetString (Resource.String.stat_section_mean);
Magic Number,Bikr,StatsFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\StatsFragment.cs,OnViewCreated,The following statement contains a magic number: sections [2].FindViewById (Resource.Id.statEntry1).FindViewById<TextView> (Resource.Id.statDesc).Text =  				Resources.GetString (Resource.String.stat_desc_today);
Magic Number,Bikr,StatsFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\StatsFragment.cs,OnViewCreated,The following statement contains a magic number: sections [2].FindViewById (Resource.Id.statEntry2).FindViewById<TextView> (Resource.Id.statDesc).Text =  				Resources.GetString (Resource.String.stat_desc_this_week);
Magic Number,Bikr,StatsFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\StatsFragment.cs,OnViewCreated,The following statement contains a magic number: sections [2].FindViewById (Resource.Id.statEntry3).FindViewById<TextView> (Resource.Id.statDesc).Text =  				Resources.GetString (Resource.String.stat_desc_this_month);
Magic Number,Bikr,StatsFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\StatsFragment.cs,LoadStats,The following statement contains a magic number: var fillScheme = new Tuple<int' AggregatedStatsKey' int>[] {  				Tuple.Create (0' AggregatedStatsKey.DailyThisWeek' Resource.Id.statEntry1)'  				Tuple.Create (0' AggregatedStatsKey.DailyThisMonth' Resource.Id.statEntry2)'  				Tuple.Create (1' AggregatedStatsKey.BestTripToday' Resource.Id.statEntry1)'  				Tuple.Create (1' AggregatedStatsKey.BestTripInWeek' Resource.Id.statEntry2)'  				Tuple.Create (1' AggregatedStatsKey.BestTripInMonth' Resource.Id.statEntry3)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripToday' Resource.Id.statEntry1)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripInWeek' Resource.Id.statEntry2)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripInMonth' Resource.Id.statEntry3)'  			};
Magic Number,Bikr,StatsFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\StatsFragment.cs,LoadStats,The following statement contains a magic number: var fillScheme = new Tuple<int' AggregatedStatsKey' int>[] {  				Tuple.Create (0' AggregatedStatsKey.DailyThisWeek' Resource.Id.statEntry1)'  				Tuple.Create (0' AggregatedStatsKey.DailyThisMonth' Resource.Id.statEntry2)'  				Tuple.Create (1' AggregatedStatsKey.BestTripToday' Resource.Id.statEntry1)'  				Tuple.Create (1' AggregatedStatsKey.BestTripInWeek' Resource.Id.statEntry2)'  				Tuple.Create (1' AggregatedStatsKey.BestTripInMonth' Resource.Id.statEntry3)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripToday' Resource.Id.statEntry1)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripInWeek' Resource.Id.statEntry2)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripInMonth' Resource.Id.statEntry3)'  			};
Magic Number,Bikr,StatsFragment,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Fragments\StatsFragment.cs,LoadStats,The following statement contains a magic number: var fillScheme = new Tuple<int' AggregatedStatsKey' int>[] {  				Tuple.Create (0' AggregatedStatsKey.DailyThisWeek' Resource.Id.statEntry1)'  				Tuple.Create (0' AggregatedStatsKey.DailyThisMonth' Resource.Id.statEntry2)'  				Tuple.Create (1' AggregatedStatsKey.BestTripToday' Resource.Id.statEntry1)'  				Tuple.Create (1' AggregatedStatsKey.BestTripInWeek' Resource.Id.statEntry2)'  				Tuple.Create (1' AggregatedStatsKey.BestTripInMonth' Resource.Id.statEntry3)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripToday' Resource.Id.statEntry1)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripInWeek' Resource.Id.statEntry2)'  				Tuple.Create (2' AggregatedStatsKey.MeanTripInMonth' Resource.Id.statEntry3)'  			};
Magic Number,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,Initialize,The following statement contains a magic number: textSize = TypedValue.ApplyDimension (ComplexUnitType.Sp' 14' Resources.DisplayMetrics);
Magic Number,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,Initialize,The following statement contains a magic number: spacing = TypedValue.ApplyDimension (ComplexUnitType.Dip' 24' Resources.DisplayMetrics);
Magic Number,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,Initialize,The following statement contains a magic number: knobWidth = TypedValue.ApplyDimension (ComplexUnitType.Dip' 6' Resources.DisplayMetrics);
Magic Number,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,Initialize,The following statement contains a magic number: knobPadding = TypedValue.ApplyDimension (ComplexUnitType.Dip' 2' Resources.DisplayMetrics);
Magic Number,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,Initialize,The following statement contains a magic number: cornerRadius = TypedValue.ApplyDimension (ComplexUnitType.Dip' 2' Resources.DisplayMetrics);
Magic Number,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,CreateTextLayouts,The following statement contains a magic number: textLayouts = words.ToDictionary (  				w => w'  				w => new StaticLayout (w' textPaint' 0'  				                       Android.Text.Layout.Alignment.AlignNormal'  				                       .80f' 0' false)  			);
Magic Number,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,Draw,The following statement contains a magic number: var middleX = Width / 2;
Magic Number,Bikr,ScrollBarExtraordinaire,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\ScrollBarExtraordinaire.cs,Draw,The following statement contains a magic number: var bottom = top + selectedWordHeight + 2 * knobPadding;
Magic Number,Bikr,SnapScrollView,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Views\SnapScrollView.cs,OnDraw,The following statement contains a magic number: handler.PostDelayed (ApplySnappingRule' 100);
Missing Default,Bikr,BikrActivityService,D:\research\architectureSmells\repos\garuma_bikr\Bikr\Cycling\BikrActivityService.cs,HandleActivityRecognition,The following switch statement is missing a default case: switch (currentBikingState) {  			case BikingState.NotBiking:  				if (activity.Type == DetectedActivity.OnBicycle && activity.Confidence >= StrongConfidence) {  					SetLocationUpdateEnabled (true);  					currentBikingState = BikingState.Biking;  				}  				break;  			case BikingState.Biking:  				CheckDelayedFinishTripConditions (activity);  				break;  			case BikingState.MovingNotOnBike:  				if (activity.Type == DetectedActivity.OnBicycle && activity.Confidence >= StrongConfidence) {  					currentBikingState = BikingState.Biking;  					Interlocked.Increment (ref graceID);  				}  				break;  			case BikingState.InGrace:  				if (activity.Type == DetectedActivity.OnBicycle && activity.Confidence >= WeakConfidence) {  					currentBikingState = BikingState.Biking;  					Interlocked.Increment (ref graceID);  				} else  					CheckDelayedFinishTripConditions (activity);  				break;  			}
