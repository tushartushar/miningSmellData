Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToObject,Cyclomatic complexity of the method is 21
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerReadValue,Cyclomatic complexity of the method is 13
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerProperties,Cyclomatic complexity of the method is 9
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,GenerateDeserializerCallClassMethod,Cyclomatic complexity of the method is 10
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerList,Cyclomatic complexity of the method is 8
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerDictionary,Cyclomatic complexity of the method is 12
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerClass,Cyclomatic complexity of the method is 13
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerProperties,Cyclomatic complexity of the method is 12
Complex Method,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteObjectToBuffer,Cyclomatic complexity of the method is 23
Complex Method,MessageShark,CustomBuffer,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBuffer.cs,Write,Cyclomatic complexity of the method is 8
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerClass,The method has 7 parameters. Parameters: typeBuilder' il' type' tag' setMethod' callerType' itemLocalIndex
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerDictionary,The method has 6 parameters. Parameters: typeBuilder' il' type' tag' setMethod' itemLocalIndex
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerList,The method has 6 parameters. Parameters: typeBuilder' il' type' tag' setMethod' itemLocalIndex
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerArray,The method has 6 parameters. Parameters: typeBuilder' il' type' tag' setMethod' itemLocalIndex
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerReadValue,The method has 5 parameters. Parameters: typeBuilder' il' type' tag' itemLocalIndex
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerCallClassMethod,The method has 6 parameters. Parameters: typeBuilder' il' type' tag' setMethod' ownerType
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,GenerateDeserializerCallClassMethod,The method has 6 parameters. Parameters: typeBuilder' il' type' valueLocalIndex' startIndexLocalIndex' useStream
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerArray,The method has 6 parameters. Parameters: typeBuilder' il' type' valueMethod' valueLocalIndex' valueLocalOpCode
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerList,The method has 6 parameters. Parameters: typeBuilder' il' type' valueMethod' valueLocalIndex' valueLocalOpCode
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerDictionary,The method has 6 parameters. Parameters: typeBuilder' il' type' getValueMethod' valueLocalIndex' valueLocalOpCode
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerBytesToStream,The method has 7 parameters. Parameters: il' type' valueOpCode' valueLocalIndex' tag' valueMethod' isTargetCollection
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,GenerateSerializerClass,The method has 5 parameters. Parameters: typeBuilder' objType' isEntryPoint' baseType' ownerType
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerClass,The method has 10 parameters. Parameters: typeBuilder' il' type' tag' valueMethod' callerType' isEntryPoint' baseType' valueLocalIndex' valueLocalOpCode
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerCallClassMethod,The method has 8 parameters. Parameters: typeBuilder' il' type' valueOpCode' valueLocalIndex' tag' valueMethod' needClassHeader
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerProperties,The method has 7 parameters. Parameters: typeBuilder' il' type' callerType' isEntryPoint' needClassHeader' baseType
Long Parameter List,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerCallClassMethod,The method has 8 parameters. Parameters: typeBuilder' il' type' valueMethod' tag' needClassHeader' callerType' ownerType
Long Identifier,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,,The length of the parameter CreateInstanceForConcreteTypeMethod is 35.
Long Identifier,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,,The length of the parameter ConvertBaseToConcreteTypeMethod is 31.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,GenerateDeserializerClass,The length of the statement  "                typeof(void)' new[] { objType.IsValueType ? objType.MakeByRefType() : objType' ByteArrayType' typeof(int).MakeByRefType() });" is 125.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerList,The length of the statement  "                    WriteSerializerCallClassMethod(typeBuilder' il' listType' OpCodes.Ldloc' entryLocal.LocalIndex' 1' null' needClassHeader: false); " is 129.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerDictionary,The length of the statement  "                    WriteSerializerClass(typeBuilder' il' keyType' 1' keyMethod' callerType: keyType' valueLocalIndex: entryLocal.LocalIndex' " is 121.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerDictionary,The length of the statement  "                WriteSerializerBytesToStream(il' keyType' OpCodes.Ldloca_S' entryLocal.LocalIndex' 1' keyMethod' isTargetCollection: true); " is 123.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerDictionary,The length of the statement  "                    WriteSerializerClass(typeBuilder' il' valueType' 2' valueMethod' callerType: valueType' valueLocalIndex: entryLocal.LocalIndex' " is 127.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerDictionary,The length of the statement  "                WriteSerializerBytesToStream(il' valueType' OpCodes.Ldloca_S' entryLocal.LocalIndex' 2' valueMethod' isTargetCollection: true); " is 127.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,GenerateSerializerClass,The length of the statement  "            WriteSerializerClass(typeBuilder' methodIL' objType' tag: 0' valueMethod: null' callerType: objType' isEntryPoint: isEntryPoint' " is 128.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerClass,The length of the statement  "                    WriteSerializerDictionary(typeBuilder' il' type' valueMethod' valueLocalIndex: valueLocalIndex' valueLocalOpCode: valueLocalOpCode); " is 132.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerClass,The length of the statement  "                    if (type.IsArray) WriteSerializerArray(typeBuilder' il' type' valueMethod' valueLocalIndex: valueLocalIndex' valueLocalOpCode: valueLocalOpCode); " is 145.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerClass,The length of the statement  "                    else WriteSerializerList(typeBuilder' il' type' valueMethod' valueLocalIndex: valueLocalIndex' valueLocalOpCode: valueLocalOpCode); " is 131.
Long Statement,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerProperties,The length of the statement  "                        WriteSerializerCallClassMethod(typeBuilder' il' propType' getMethod' tag' needClassHeader' callerType' ownerType: type); " is 120.
Long Statement,MessageShark,MessageSharkSerializer,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\MessageSharkSerializer.cs,Serialize,The length of the statement  "                var method = new DynamicMethod(name' CustomBinary.VoidType' new[] { CustomBinary.ObjectType' CustomBinary.StreamType }' restrictedSkipVisibility: true); " is 152.
Long Statement,MessageShark,MessageSharkSerializer,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\MessageSharkSerializer.cs,Serialize,The length of the statement  "                var method = new DynamicMethod(name' CustomBinary.ByteArrayType' new[] { CustomBinary.ObjectType }' restrictedSkipVisibility: true); " is 132.
Long Statement,MessageShark,MessageSharkSerializer,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\MessageSharkSerializer.cs,Deserialize,The length of the statement  "                var method = new DynamicMethod(name' CustomBinary.ObjectType' new[] { CustomBinary.ByteArrayType' CustomBinary.IntType }' restrictedSkipVisibility: true); " is 154.
Long Statement,MessageShark,MessageSharkSerializer,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\MessageSharkSerializer.cs,Deserialize,The length of the statement  "                var method = new DynamicMethod(name' CustomBinary.ObjectType' new[] { CustomBinary.StreamType' CustomBinary.IntType }' restrictedSkipVisibility: true); " is 151.
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,EncodeLength,The following statement contains a magic number: return tag <= 15 ? new byte[] { (byte)((tag << 4) | length) } : new byte[] { (byte)length' (byte)tag };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,EncodeLength,The following statement contains a magic number: return tag <= 15 ? new byte[] { (byte)((tag << 4) | length) } : new byte[] { (byte)length' (byte)tag };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,ReadFully,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,ReadFully,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,IsNextTagForPropertyTag,The following statement contains a magic number: var isNextTag = (tag <= 15 && tag == ((readByte & MSB) >> 4)) || (tag > 15 && tag == buffer[startIndex + 1]);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,IsNextTagForPropertyTag,The following statement contains a magic number: var isNextTag = (tag <= 15 && tag == ((readByte & MSB) >> 4)) || (tag > 15 && tag == buffer[startIndex + 1]);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,IsNextTagForPropertyTag,The following statement contains a magic number: var isNextTag = (tag <= 15 && tag == ((readByte & MSB) >> 4)) || (tag > 15 && tag == buffer[startIndex + 1]);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,MoveToNextBytes,The following statement contains a magic number: tag <= 15
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,GetNextLength,The following statement contains a magic number: tag <= 15
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,ReverseEx,The following statement contains a magic number: var midpoint = size / 2;
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDecimal,The following statement contains a magic number: buffer.Length == 2
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer.Length == 2
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[0] = buffer[7];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[7] = temp;
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[1] = buffer[6];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[6] = temp;
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: temp = buffer[2];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[2] = buffer[5];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[2] = buffer[5];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[5] = temp;
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: temp = buffer[3];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[3] = buffer[4];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[3] = buffer[4];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToDouble,The following statement contains a magic number: buffer[4] = temp;
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToFloat,The following statement contains a magic number: return BitConverter.ToSingle(BytesToIntegerBytes(buffer' 4)' 0);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToInt16,The following statement contains a magic number: return BitConverter.ToInt16(BytesToIntegerBytes(buffer' 2)' 0);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToInt32,The following statement contains a magic number: return BitConverter.ToInt32(BytesToIntegerBytes(buffer' 4)' 0);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToInt64,The following statement contains a magic number: return BitConverter.ToInt64(BytesToIntegerBytes(buffer' 8)' 0);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToUInt16,The following statement contains a magic number: return BitConverter.ToUInt16(BytesToIntegerBytes(buffer' 2)' 0);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToUInt32,The following statement contains a magic number: return BitConverter.ToUInt32(BytesToIntegerBytes(buffer' 4)' 0);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,BytesToUInt64,The following statement contains a magic number: return BitConverter.ToUInt64(BytesToIntegerBytes(buffer' 8)' 0);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteDeserializerDictionary,The following statement contains a magic number: WriteDeserializerReadValue(typeBuilder' il' valueType' 2' valueItemLocal.LocalIndex);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerDictionary,The following statement contains a magic number: WriteSerializerClass(typeBuilder' il' valueType' 2' valueMethod' callerType: valueType' valueLocalIndex: entryLocal.LocalIndex'                      valueLocalOpCode: OpCodes.Ldloca_S);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,WriteSerializerProperties,The following statement contains a magic number: il.Emit(OpCodes.Ldarg' 4);
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int16ToBytes,The following statement contains a magic number: value >= 0 && value <= 255
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int16ToBytes,The following statement contains a magic number: byte[] buffer = new byte[2];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int16ToBytes,The following statement contains a magic number: (sValue = (value >> 8)) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int32ToBytes,The following statement contains a magic number: value >= 0 && value <= 255
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int32ToBytes,The following statement contains a magic number: byte[] buffer = new byte[4];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int32ToBytes,The following statement contains a magic number: (sValue = (value >> 24)) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int32ToBytes,The following statement contains a magic number: (sValue = (value >> 16)) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int32ToBytes,The following statement contains a magic number: (sValue = (value >> 8)) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: value >= 0 && value <= 255
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: byte[] buffer = new byte[8];
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: (sValue = (value >> 56) & msb) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: (sValue = (value >> 48) & msb) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: (sValue = (value >> 40) & msb) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: (sValue = (value >> 32) & msb) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: (sValue = (value >> 24) & msb) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: (sValue = (value >> 16) & msb) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,Int64ToBytes,The following statement contains a magic number: (sValue = (value >> 8) & msb) > 0
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeIDMapping[ObjectType] =                 new Dictionary<byte' Type>()                 {                     {1' StringType}' {2' typeof(int)}'                     {3' typeof(DateTime)}' {4' typeof(bool)}' {5' typeof(char)}'                     {6' typeof(double)}' {7' typeof(short)}' {8' typeof(long)}'                     {9' typeof(decimal)}' {10' typeof(float)}' {11' typeof(ushort)}'                     {12' typeof(uint)}' {13' typeof(ulong)}' {14' GuidType}' {15' typeof(Enum)}'                     {16' typeof(TimeSpan)}' {17' typeof(TimeSpan?)}' {18' typeof(int?)}' {19' VoidType}'                     {20' typeof(byte)}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBinary,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBinary.cs,RegisterObjectTypeMapping,The following statement contains a magic number: TypeMapping[ObjectType] =                 new Dictionary<Type' byte>()                 {                     {StringType' 1}' {typeof(int)' 2}' {typeof(DateTime)' 3}'                     {typeof(bool)' 4}' {typeof(char)' 5}' {typeof(double)' 6}'                     {typeof(short)' 7}' {typeof(long)' 8}' {typeof(decimal)' 9}'                     {typeof(float)' 10}' {typeof(ushort)' 11}' {typeof(uint)' 12}'                     {typeof(ulong)' 13}' {GuidType' 14}' {typeof(Enum)' 15}' {typeof(TimeSpan)' 16}'                     {typeof(TimeSpan?)' 17}' {typeof(int?)' 18}' {VoidType' 19}' {typeof(byte)' 20}                 };
Magic Number,MessageShark,CustomBuffer,C:\research\architectureSmells\repos\rpgmaker_MessageShark\src\MessageShark\MessageShark\CustomBuffer.cs,Write,The following statement contains a magic number: count <= 8 && buffer != _buffer
