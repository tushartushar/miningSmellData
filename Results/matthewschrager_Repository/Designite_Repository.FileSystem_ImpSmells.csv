Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Repository.FileSystem,SingleFileSystemInterface<T>,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\FileSystemInterface.cs,GetRepositoryPath,The length of the statement  "            return Path.Combine(GetBaseFolderPath()' isBackup ? "backup/" + DateTime.Today.ToString("yyyyMMdd") : ""' SanitizeName(RepositoryName' Path.GetInvalidFileNameChars())) + Options.FileExtension; " is 192.
Long Statement,Repository.FileSystem,SingleFileSystemInterface<T>,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\FileSystemInterface.cs,Exists,The length of the statement  "            return RetrieveObjects(GetRepositoryPath()).ToDictionary(x => GetObjectKey(KeySelector(x))).ContainsKey(GetObjectKey(keys)); " is 124.
Long Statement,Repository.FileSystem,MultipleFileSystemInterface<T>,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\FileSystemInterface.cs,GetRepositoryFolder,The length of the statement  "            return Path.Combine(Options.FolderPath' SanitizeName(RepositoryName' Path.GetInvalidPathChars())' isBackup ? "backup/" + DateTime.Today.ToString("yyyyMMdd") : ""); " is 163.
Long Statement,Repository.FileSystem,GZipStreamGenerator,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\FileSystemOptions.cs,GetReadStream,The length of the statement  "            return new GZipStream(new FileStream(filePath' FileMode.Open' FileAccess.Read' FileShare.ReadWrite)' CompressionMode.Decompress); " is 129.
Long Statement,Repository.FileSystem,Tests,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\Tests.cs,Standard,The length of the statement  "            var implicitKeyRepo = new FileSystemRepository<TestClass>("Test"' x => x.ID' new FileSystemOptions<TestClass> { FolderPath = "Tests/ImplicitKeyRepositories" }); " is 160.
Long Statement,Repository.FileSystem,Tests,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\Tests.cs,Standard,The length of the statement  "            var gzipRepo = new FileSystemRepository<TestClass>("Test"' x => x.ID' new FileSystemOptions<TestClass> { FolderPath = "Tests/ImplicitKeyRepositories"' StreamGenerator = new GZipStreamGenerator()' FileExtension = ".txt.gz" }); " is 225.
Long Statement,Repository.FileSystem,Tests,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\Tests.cs,Standard,The length of the statement  "            var explicitKeyRepo = new ExplicitKeyFileSystemRepository<TestClass>("Test"' new FileSystemOptions<TestClass> { FolderPath = "Tests/ExplicitKeyRepositories" }); " is 160.
Long Statement,Repository.FileSystem,Tests,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\Tests.cs,Standard,The length of the statement  "            var multipleFileRepo = new FileSystemRepository<TestClass>("Test"' x => x.ID' new FileSystemOptions<TestClass> { FolderPath = "Tests/ImplicitKeyRepositories"' FileStorageType = FileStorageType.FilePerObject }); " is 210.
Long Statement,Repository.FileSystem,Tests,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\Tests.cs,Backup,The length of the statement  "            var implicitKeyRepo = new FileSystemRepository<TestClass>("Test"' x => x.ID' new FileSystemOptions<TestClass> { FolderPath = "BackupTests/SingleFile" }); " is 153.
Long Statement,Repository.FileSystem,Tests,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\Tests.cs,Backup,The length of the statement  "            var multipleFileRepo = new FileSystemRepository<TestClass>("Test"' x => x.ID' new FileSystemOptions<TestClass> { FolderPath = "BackupTests/FilePerObject"' FileStorageType = FileStorageType.FilePerObject }); " is 206.
Long Statement,Repository.FileSystem,Tests,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\Tests.cs,Backup,The length of the statement  "                Assert.IsTrue(Directory.Exists(expectedFilePerObjectPath) && Directory.EnumerateFiles(expectedFilePerObjectPath).Any()); " is 120.
Long Statement,Repository.FileSystem,Tests,D:\research\architectureSmells\repos\matthewschrager_Repository\Repository.FileSystem\Tests.cs,Backup,The length of the statement  "                Assert.IsTrue(Directory.Exists(expectedFilePerObjectPath) && Directory.EnumerateFiles(expectedFilePerObjectPath).Any()); " is 120.
