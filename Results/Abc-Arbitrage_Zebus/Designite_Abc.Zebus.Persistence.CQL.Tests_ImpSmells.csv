Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The length of the parameter oldestNonAckedMessageTimestamp is 30.
Long Identifier,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_non_ack_message_count,The length of the parameter nonAckedMessageCountsForUpdatedPeers is 36.
Long Identifier,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_persist_messages_in_order,The length of the parameter nonAckedMessageCountsForUpdatedPeers is 36.
Long Identifier,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The length of the parameter persistentMessagesFromDatabase is 30.
Long Identifier,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,,The length of the parameter _expectedOldestNonAckedMessageTimestampSafetyOffset is 51.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The length of the statement  "            InsertPersistentMessage(peerId' oldestNonAckedMessageTimestamp' UpdatePersistentMessageWithNonAckedTransportMessage(transportMessages[0])); " is 139.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The length of the statement  "            InsertPersistentMessage(peerId' now.AddHours(-1).AddMilliseconds(1)' UpdatePersistentMessageWithNonAckedTransportMessage(transportMessages[1])); " is 144.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The length of the statement  "            InsertPersistentMessage(peerId' now.AddMilliseconds(-2)' UpdatePersistentMessageWithNonAckedTransportMessage(transportMessages[2])); " is 132.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_message_entry_fields_to_cassandra,The length of the statement  "                await _storage.Write(new List<MatcherEntry> { MatcherEntry.Message(new PeerId(peerId)' messageId' MessageTypeId.PersistenceStopping' messageBytes) }); " is 150.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_message_entry_fields_to_cassandra,The length of the statement  "                var writeTimeRow = DataContext.Session.Execute("SELECT WRITETIME(\"IsAcked\") FROM \"PersistentMessage\";").ExpectedSingle(); " is 125.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_message_entry_fields_to_cassandra,The length of the statement  "                peerState.OldestNonAckedMessageTimestamp.ShouldEqual(messageId.GetDateTime().Ticks - PeerState.MessagesTimeToLive.Ticks); " is 121.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_ZebusV2_message_entry_fields_to_cassandra,The length of the statement  "            await _storage.Write(new List<MatcherEntry> { MatcherEntry.Message(new PeerId(peerId)' messageId' MessageTypeId.PersistenceStopping' messageBytes) }); " is 150.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_ZebusV2_message_entry_fields_to_cassandra,The length of the statement  "            var writeTimeRow = DataContext.Session.Execute("SELECT WRITETIME(\"IsAcked\") FROM \"PersistentMessage\";").ExpectedSingle(); " is 125.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_overwrite_messages_with_same_time_component_and_different_message_id,The length of the statement  "            var messageId = new MessageId(Guid.Parse("0000c399-1ab0-e511-9706-ae1ea5dcf365"));      // Time component @2016-01-01 00:00:00Z " is 127.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_overwrite_messages_with_same_time_component_and_different_message_id,The length of the statement  "            var otherMessageId = new MessageId(Guid.Parse("0000c399-1ab0-e511-9806-f1ef55aac8e9")); // Time component @2016-01-01 00:00:00Z " is 127.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_ack_entry_fields_to_cassandra,The length of the statement  "            var writeTimeRow = DataContext.Session.Execute("SELECT WRITETIME(\"IsAcked\") FROM \"PersistentMessage\";").ExpectedSingle(); " is 125.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_ZebusV2_ack_entry_fields_to_cassandra,The length of the statement  "            var writeTimeRow = DataContext.Session.Execute("SELECT WRITETIME(\"IsAcked\") FROM \"PersistentMessage\";").ExpectedSingle(); " is 125.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_support_out_of_order_acks_and_messages,The length of the statement  "            await _storage.Write(new List<MatcherEntry> { MatcherEntry.Message(new PeerId(peerId)' messageId' MessageTypeId.PersistenceStopping' messageBytes) }); " is 150.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_support_out_of_order_ZebusV2_acks_and_messages,The length of the statement  "            await _storage.Write(new List<MatcherEntry> { MatcherEntry.Message(new PeerId(peerId)' messageId' MessageTypeId.PersistenceStopping' messageBytes) }); " is 150.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_remove_from_cassandra_when_asked_to_remove_peer,The length of the statement  "            await _storage.Write(new List<MatcherEntry> { MatcherEntry.Message(peerId' MessageId.NextId()' MessageTypeId.PersistenceStopping' new byte[0]) }); " is 146.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_all_buckets_for_peer_when_removed,The length of the statement  "            await _storage.Write(new List<MatcherEntry> { MatcherEntry.Message(peerId' MessageId.NextId()' MessageTypeId.PersistenceStopping' new byte[0]) }); " is 146.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_return_cql_message_reader,The length of the statement  "            await _storage.Write(new List<MatcherEntry> { MatcherEntry.Message(peerId' MessageId.NextId()' MessageTypeId.PersistenceStopping' new byte[0]) }); " is 146.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_store_messages_in_different_buckets,The length of the statement  "                await _storage.Write(new[] { MatcherEntry.Message(peerId' firstMessageId' new MessageTypeId("Abc.Message")' new byte[] { 0x01' 0x02' 0x03 }) }); " is 144.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_store_messages_in_different_buckets,The length of the statement  "                await _storage.Write(new[] { MatcherEntry.Message(peerId' secondMessageId' new MessageTypeId("Abc.OtherMessage")' new byte[] { 0x04' 0x05' 0x06 }) }); " is 150.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_store_messages_in_different_buckets,The length of the statement  "                var persistedMessages = DataContext.PersistentMessages.Execute().OrderBy(x => x.UniqueTimestampInTicks).ToList(); // Results are only ordered withing a partition " is 161.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_non_ack_message_count,The length of the statement  "            await _storage.Write(new[] { MatcherEntry.Message(firstPeer' MessageId.NextId()' new MessageTypeId("Abc.Message")' new byte[] { 0x01' 0x02' 0x03 }) }); " is 151.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_non_ack_message_count,The length of the statement  "            await _storage.Write(new[] { MatcherEntry.Message(secondPeer' MessageId.NextId()' new MessageTypeId("Abc.Message")' new byte[] { 0x04' 0x05' 0x06 }) }); " is 152.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_non_ack_message_count,The length of the statement  "            await _storage.Write(new[] { MatcherEntry.Message(firstPeer' MessageId.NextId()' new MessageTypeId("Abc.Message")' new byte[] { 0x07' 0x08' 0x09 }) }); " is 151.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_persist_messages_in_order,The length of the statement  "                var expectedTransportMessages = transportMessages.Select(Serialization.Serializer.Serialize).Select(x => x.ToArray()).ToList(); " is 127.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_report_storage_informations,The length of the statement  "                MatcherEntry.Message(peer' MessageId.NextId()' new MessageTypeId("Abc.Message.Fat")' new byte[] { 0x01' 0x02' 0x03' 0x04 })' " is 124.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_oldest_non_acked_message_timestamp,The length of the statement  "                GetPeerState(peerId).OldestNonAckedMessageTimestampInTicks.ShouldEqual(now.AddMilliseconds(2).Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset); " is 155.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_update_oldest_non_acked_message_timestamp_if_it_did_not_change,The length of the statement  "            var peerState = new PeerState(peerId' 0' now.AddMilliseconds(2).Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset); " is 125.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_update_oldest_non_acked_message_timestamp_if_it_did_not_change,The length of the statement  "            GetPeerState(peerId).OldestNonAckedMessageTimestampInTicks.ShouldEqual(now.AddMilliseconds(2).Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset); " is 155.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_take_utc_now_timestamp_minus_safety_offset_as_oldest_non_acked_message_when_all_messages_are_acked,The length of the statement  "                GetPeerState(peerId).OldestNonAckedMessageTimestampInTicks.ShouldEqual(now.Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset); " is 136.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_take_utc_now_timestamp_as_oldest_non_acked_message_when_no_messages_are_acked,The length of the statement  "                GetPeerState(peerId).OldestNonAckedMessageTimestampInTicks.ShouldEqual(now.Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset); " is 136.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The length of the statement  "            GetPeerState(peerId).OldestNonAckedMessageTimestampInTicks.ShouldEqual(now.AddHours(-1).AddMinutes(1).Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset); " is 163.
Long Statement,Abc.Zebus.Persistence.CQL.Tests,OldestNonAckedMessageUpdaterPeriodicActionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\OldestNonAckedMessageUpdaterPeriodicActionTests.cs,SetUp,The length of the statement  "            _oldestMessageUpdater = new OldestNonAckedMessageUpdaterPeriodicAction(_testBus' configurationMock.Object' _cqlStorage.Object); " is 127.
Long Statement,Abc.Zebus.Persistence.CQL.Tests.Cql,CqlTestFixture<TDataContext;TConfig>,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\Cql\CqlTestFixture.cs,CreateSchema,The length of the statement  "            var strategyReplicationProperty = ReplicationStrategies.CreateNetworkTopologyStrategyReplicationProperty(new Dictionary<string' int> { { LocalDataCenter' 1 } }); " is 161.
Magic Number,Abc.Zebus.Persistence.CQL.Tests,BucketIdHelperTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\BucketIdHelperTests.cs,should_iterate_over_buckets_since_a_given_timestamp_and_stop_when_hitting_current_bucket,The following statement contains a magic number: var beginning = now.AddHours(-3);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,BucketIdHelperTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\BucketIdHelperTests.cs,should_iterate_over_buckets_since_a_given_timestamp_and_stop_when_hitting_current_bucket,The following statement contains a magic number: var expectedBucketIds = new[]              {                  BucketIdHelper.GetBucketId(beginning)'                  BucketIdHelper.GetBucketId(beginning.AddHours(1))'                  BucketIdHelper.GetBucketId(beginning.AddHours(2))'                  BucketIdHelper.GetBucketId(now)'                  BucketIdHelper.GetBucketId(now.AddHours(1))'              };
Magic Number,Abc.Zebus.Persistence.CQL.Tests,BucketIdHelperTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\BucketIdHelperTests.cs,should_iterate_over_buckets_since_a_given_timestamp_and_stop_when_hitting_latest_bucket_possible,The following statement contains a magic number: var beginning = now.AddHours(-3);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,BucketIdHelperTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\BucketIdHelperTests.cs,should_iterate_over_buckets_since_a_given_timestamp_and_stop_when_hitting_latest_bucket_possible,The following statement contains a magic number: var expectedBucketIds = new[]              {                  BucketIdHelper.GetBucketId(beginning)'                  BucketIdHelper.GetBucketId(beginning.AddHours(1))'                  BucketIdHelper.GetBucketId(beginning.AddHours(2))'                  BucketIdHelper.GetBucketId(now)'                  BucketIdHelper.GetBucketId(end)'              };
Magic Number,Abc.Zebus.Persistence.CQL.Tests,BucketIdHelperTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\BucketIdHelperTests.cs,should_not_iterate_over_future_buckets,The following statement contains a magic number: var beginning = now.AddHours(3);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: var oldestNonAckedMessageTimestamp = now.AddHours(-2).AddMilliseconds(1);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-2)' x => x.IsAcked = true);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-2).AddMilliseconds(2)' x => x.IsAcked = true);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-2).AddMilliseconds(2)' x => x.IsAcked = true);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-1).AddMilliseconds(2)' x => x.IsAcked = true);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(-3)' x => x.IsAcked = true);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(-2)' UpdatePersistentMessageWithNonAckedTransportMessage(transportMessages[2]));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(-2)' UpdatePersistentMessageWithNonAckedTransportMessage(transportMessages[2]));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,should_read_non_acked_messages_since_oldest,The following statement contains a magic number: nonAckedMessages.Count.ShouldEqual(3);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlMessageReaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlMessageReaderTests.cs,CreateTransportMessage,The following statement contains a magic number: var bytes = new byte[128];
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_message_entry_fields_to_cassandra,The following statement contains a magic number: var messageBytes = new byte[512];
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_write_ZebusV2_message_entry_fields_to_cassandra,The following statement contains a magic number: var messageBytes = new byte[512];
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_overwrite_messages_with_same_time_component_and_different_message_id,The following statement contains a magic number: var messageBytes = new byte[512];
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_overwrite_messages_with_same_time_component_and_different_message_id,The following statement contains a magic number: retrievedMessages.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_support_out_of_order_acks_and_messages,The following statement contains a magic number: var messageBytes = new byte[512];
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_support_out_of_order_acks_and_messages,The following statement contains a magic number: await Task.Delay(50);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_support_out_of_order_ZebusV2_acks_and_messages,The following statement contains a magic number: var messageBytes = new byte[512];
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_support_out_of_order_ZebusV2_acks_and_messages,The following statement contains a magic number: await Task.Delay(50);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_store_messages_in_different_buckets,The following statement contains a magic number: persistedMessages.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_non_ack_message_count,The following statement contains a magic number: nonAckedMessageCountsForUpdatedPeers[firstPeer].ShouldEqual(2);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_persist_messages_in_order,The following statement contains a magic number: var transportMessages = Enumerable.Range(1' 100).Select(CreateTestTransportMessage).ToList();
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_persist_messages_in_order,The following statement contains a magic number: nonAckedMessageCountsForUpdatedPeers[firstPeer].ShouldEqual(100);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_persist_messages_in_order,The following statement contains a magic number: nonAckedMessageCountsForUpdatedPeers[secondPeer].ShouldEqual(100);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_report_storage_informations,The following statement contains a magic number: _reporterMock.Verify(r => r.AddStorageReport(2' 7' 4' "Abc.Message.Fat"));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_report_storage_informations,The following statement contains a magic number: _reporterMock.Verify(r => r.AddStorageReport(2' 7' 4' "Abc.Message.Fat"));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_report_storage_informations,The following statement contains a magic number: _reporterMock.Verify(r => r.AddStorageReport(2' 7' 4' "Abc.Message.Fat"));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_oldest_non_acked_message_timestamp,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(2)' AckState.Unacked);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_oldest_non_acked_message_timestamp,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(3)' AckState.Unacked);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_oldest_non_acked_message_timestamp,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(4));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_oldest_non_acked_message_timestamp,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(5)' AckState.Unacked);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_oldest_non_acked_message_timestamp,The following statement contains a magic number: var peerState = new PeerState(peerId' 0' now.AddMinutes(-30).Ticks);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_update_oldest_non_acked_message_timestamp,The following statement contains a magic number: GetPeerState(peerId).OldestNonAckedMessageTimestampInTicks.ShouldEqual(now.AddMilliseconds(2).Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_update_oldest_non_acked_message_timestamp_if_it_did_not_change,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(2)' AckState.Unacked);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_update_oldest_non_acked_message_timestamp_if_it_did_not_change,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(3)' AckState.Unacked);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_update_oldest_non_acked_message_timestamp_if_it_did_not_change,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(4));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_update_oldest_non_acked_message_timestamp_if_it_did_not_change,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(5)' AckState.Unacked);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_update_oldest_non_acked_message_timestamp_if_it_did_not_change,The following statement contains a magic number: var peerState = new PeerState(peerId' 0' now.AddMilliseconds(2).Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_not_update_oldest_non_acked_message_timestamp_if_it_did_not_change,The following statement contains a magic number: GetPeerState(peerId).OldestNonAckedMessageTimestampInTicks.ShouldEqual(now.AddMilliseconds(2).Ticks - _expectedOldestNonAckedMessageTimestampSafetyOffset);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_take_utc_now_timestamp_minus_safety_offset_as_oldest_non_acked_message_when_all_messages_are_acked,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(-5));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_take_utc_now_timestamp_minus_safety_offset_as_oldest_non_acked_message_when_all_messages_are_acked,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(-4));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_take_utc_now_timestamp_minus_safety_offset_as_oldest_non_acked_message_when_all_messages_are_acked,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(-3));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_take_utc_now_timestamp_minus_safety_offset_as_oldest_non_acked_message_when_all_messages_are_acked,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddMilliseconds(-2));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_take_utc_now_timestamp_as_oldest_non_acked_message_when_no_messages_are_acked,The following statement contains a magic number: var peerState = new PeerState(peerId' 0' now.AddDays(-2).Ticks);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: var now = DateTime.UtcNow.Date.AddDays(-1).AddHours(15).AddMinutes(30);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: var now = DateTime.UtcNow.Date.AddDays(-1).AddHours(15).AddMinutes(30);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: var peerState = new PeerState(peerId' 0' now.AddHours(-5).Ticks);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-3));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-3).AddMinutes(1));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-3).AddMinutes(2));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-3).AddMinutes(2));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-2));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-2).AddMinutes(1));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-2).AddMinutes(2));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-2).AddMinutes(2));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-1).AddMinutes(2));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: DataContext.PersistentMessages.Execute().Count().ShouldEqual(10);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: DataContext.PersistentMessages.Execute().Count().ShouldEqual(4);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_buckets_when_all_messages_are_acked_in_it,The following statement contains a magic number: storedMessages.ShouldBeEquivalentTo(new[]              {                  new { UniqueTimestampInTicks = now.AddHours(-1).Ticks' IsAcked = true }'                  new { UniqueTimestampInTicks = now.AddHours(-1).AddMinutes(1).Ticks' IsAcked = false }'                  new { UniqueTimestampInTicks = now.AddHours(-1).AddMinutes(2).Ticks' IsAcked = true }'                  new { UniqueTimestampInTicks = now.Ticks' IsAcked = true }'              });
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_one_bucket_when_all_messages_are_acked_in_it,The following statement contains a magic number: var now = DateTime.UtcNow.Date.AddDays(-1).AddHours(15).AddMinutes(30);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_one_bucket_when_all_messages_are_acked_in_it,The following statement contains a magic number: var now = DateTime.UtcNow.Date.AddDays(-1).AddHours(15).AddMinutes(30);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_one_bucket_when_all_messages_are_acked_in_it,The following statement contains a magic number: InsertPersistentMessage(peerId' now.AddHours(-1).AddMinutes(2));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,should_delete_one_bucket_when_all_messages_are_acked_in_it,The following statement contains a magic number: DataContext.PersistentMessages.Execute().Count().ShouldEqual(4);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,CreateTestTransportMessage,The following statement contains a magic number: MessageId.PauseIdGenerationAtDate(SystemDateTime.UtcNow.Date.AddSeconds(i * 10));
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,ToUnixMicroSeconds,The following statement contains a magic number: var origin = new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,CqlStorageTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\CqlStorageTests.cs,ToUnixMicroSeconds,The following statement contains a magic number: var diffInMicroSeconds = diff.Ticks / 10;
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: var newId = new byte[16];
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(_randomBytes' 0' newId' 10' _randomBytes.Length);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(offsetBytes' 0' newId' 8' offsetBytes.Length);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(timestampBytes' 4' newId' 0' 4);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(timestampBytes' 4' newId' 0' 4);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(timestampBytes' 2' newId' 4' 2);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(timestampBytes' 2' newId' 4' 2);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(timestampBytes' 2' newId' 4' 2);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(timestampBytes' 0' newId' 6' 2);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: Array.Copy(timestampBytes' 0' newId' 6' 2);
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: newId[8] &= 0x3f;
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: newId[8] |= 0x80;
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: newId[6] &= 0x0f;
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: newId[6] |= 0x01 << 4;
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: newId[6] |= 0x01 << 4;
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,CreateNewSequentialId,The following statement contains a magic number: newId[10] |= 0x80;
Magic Number,Abc.Zebus.Persistence.CQL.Tests,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\MessageIdV2.cs,ConvertEndian,The following statement contains a magic number: index < value.Length / 2
Magic Number,Abc.Zebus.Persistence.CQL.Tests,OldestNonAckedMessageUpdaterPeriodicActionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\OldestNonAckedMessageUpdaterPeriodicActionTests.cs,SetUp,The following statement contains a magic number: configurationMock.SetupGet(x => x.OldestMessagePerPeerCheckPeriod).Returns(30.Seconds());
Magic Number,Abc.Zebus.Persistence.CQL.Tests,OldestNonAckedMessageUpdaterPeriodicActionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL.Tests\OldestNonAckedMessageUpdaterPeriodicActionTests.cs,SetUp,The following statement contains a magic number: configurationMock.SetupGet(x => x.OldestMessagePerPeerGlobalCheckPeriod).Returns(30.Seconds());
