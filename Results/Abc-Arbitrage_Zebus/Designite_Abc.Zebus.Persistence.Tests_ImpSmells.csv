Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_clear_pending_entries_on_purge,The length of the parameter batcherShouldResumePersistence is 30.
Long Identifier,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_clear_pending_entries_on_purge,The length of the parameter batcherIsWaitingForSignalInThePersistenceLoop is 45.
Long Identifier,Abc.Zebus.Persistence.Tests.Handlers,StartMessageReplayCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\StartMessageReplayCommandHandlerTests.cs,,The length of the parameter _messageReplayerRepositoryMock is 30.
Long Identifier,Abc.Zebus.Persistence.Tests.Initialization,MessageReplayerInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Initialization\MessageReplayerInitializerTests.cs,,The length of the parameter _messageReplayerRepositoryMock is 30.
Long Statement,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_clear_pending_entries_on_purge,The length of the statement  "            var batcherIsWaitingForSignalInThePersistenceLoop = WaitForSignalThenCapturePersistedBatches(batcherShouldResumePersistence' persistedBatches); " is 143.
Long Statement,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_wait_for_storage_before_signaling,The length of the statement  "            _storageMock.Setup(x => x.Write(It.IsAny<IList<MatcherEntry>>())).Returns<IList<MatcherEntry>>(items => storageCompleted.Task); " is 127.
Long Statement,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,EnqueueMessageToPersist,The length of the statement  "            _matcher.EnqueueMessage(_peerId' messageId ?? MessageId.NextId()' new MessageTypeId("Abc.NotARealMessage")' messageBytes); " is 122.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerRepositoryTests.cs,Setup,The length of the statement  "            _repository = new MessageReplayerRepository(persistenceConfigurationMock.Object' storage.Object' new TestBus()' transportMock.Object' batchPersisterMock.Object' speedReporter.Object' Mock.Of<IMessageSerializer>()); " is 214.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,Setup,The length of the statement  "            _replayer = new MessageReplayer(_configurationMock.Object' _storageMock.Object' _bus' _transport' _messageMatcherMock.Object' _targetPeer' _replayId' speedReporter.Object' new MessageSerializer()); " is 197.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,Setup,The length of the statement  "            _messageMatcherMock.Setup(x => x.EnqueueWaitHandle(It.IsAny<EventWaitHandle>())).Callback<EventWaitHandle>(x => x.Set()); " is 121.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_replay_messages,The length of the statement  "                var replayMessages = _transport.Messages.Where(x => x.TransportMessage.MessageTypeId == MessageUtil.TypeId<MessageReplayed>()).ToList(); " is 136.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,AssertMessageWasReceived,The length of the statement  "            var expected = new TransportMessageSent(new MessageReplayed(_replayId' unackedTransportMessage).ToTransportMessage(_selfPeer' wasPersisted: false)' _targetPeer); " is 161.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_send_replay_phase_ended,The length of the statement  "                _transport.Expect(new TransportMessageSent(new ReplayPhaseEnded(_replayId).ToTransportMessage(_selfPeer' wasPersisted: false)' _targetPeer)); " is 141.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_forward_live_messages_during_safety_phase,The length of the statement  "                    new TransportMessageSent(new ReplayPhaseEnded(_replayId).ToTransportMessage(_selfPeer' wasPersisted: false)' _targetPeer)' " is 122.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_forward_live_messages_during_safety_phase,The length of the statement  "                    new TransportMessageSent(new MessageReplayed(_replayId' fakeMessage).ToTransportMessage(_selfPeer' wasPersisted: false)' _targetPeer) " is 133.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_send_safety_phase_ended,The length of the statement  "                _transport.Expect(new TransportMessageSent(new SafetyPhaseEnded(_replayId).ToTransportMessage(_selfPeer' wasPersisted: false)' _targetPeer)); " is 141.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_start_and_wait_for_completion,The length of the statement  "                _transport.Expect(new TransportMessageSent(new SafetyPhaseEnded(_replayId).ToTransportMessage(_selfPeer' wasPersisted: false)' _targetPeer)); " is 141.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_wait_for_batch_persistence_signal_before_start,The length of the statement  "                _messageMatcherMock.Setup(x => x.EnqueueWaitHandle(It.IsAny<EventWaitHandle>())).Callback<EventWaitHandle>(s => capturedSignal = s); " is 132.
Long Statement,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_cancel_replayer,The length of the statement  "                _transport.Messages.ShouldNotContain(x => x.TransportMessage.MessageTypeId == new MessageTypeId(typeof(SafetyPhaseEnded))); " is 123.
Long Statement,Abc.Zebus.Persistence.Tests.Handlers,MessageHandledHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\MessageHandledHandlerTests.cs,should_forward_MessageHandled_to_active_replayers,The length of the statement  "            MockContainer.GetMock<IMessageReplayerRepository>().Setup(x => x.GetActiveMessageReplayer(_targetPeerId)).Returns(messageReplayerMock.Object); " is 142.
Long Statement,Abc.Zebus.Persistence.Tests.Handlers,PersistMessageCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PersistMessageCommandHandlerTests.cs,should_send_message_to_replayer,The length of the statement  "            MockContainer.GetMock<IMessageReplayerRepository>().Setup(x => x.GetActiveMessageReplayer(targetPeer)).Returns(replayerMock.Object); " is 132.
Long Statement,Abc.Zebus.Persistence.Tests.Handlers,StartMessageReplayCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\StartMessageReplayCommandHandlerTests.cs,Setup,The length of the statement  "            _messageReplayerRepositoryMock.Setup(x => x.CreateMessageReplayer(It.IsAny<Peer>()' It.IsAny<Guid>())).Returns(new Mock<IMessageReplayer>().Object); " is 148.
Long Statement,Abc.Zebus.Persistence.Tests.Handlers,StartMessageReplayCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\StartMessageReplayCommandHandlerTests.cs,should_add_and_start_replayer,The length of the statement  "            _messageReplayerRepositoryMock.Setup(x => x.CreateMessageReplayer(It.Is<Peer>(p => p.Id == _sender.Id && p.EndPoint == _sender.EndPoint)' replayId)).Returns(messageReplayerMock.Object); " is 185.
Long Statement,Abc.Zebus.Persistence.Tests.Handlers,StartMessageReplayCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\StartMessageReplayCommandHandlerTests.cs,should_stop_previous_replayer,The length of the statement  "            _messageReplayerRepositoryMock.Setup(x => x.GetActiveMessageReplayer(_sender.Id)).Returns(previousMessageReplayerMock.Object); " is 126.
Long Statement,Abc.Zebus.Persistence.Tests.TestUtil,MockContainer,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\TestUtil\MockContainer.cs,FillMissingParameterTypesWithMocks,The length of the statement  "                var constructorInfo = new GreediestConstructorSelector().Find(typeof(T)' new DependencyCollection()' PluginGraph.CreateRoot()); " is 127.
Long Statement,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_send_PersistenceStopping_Message_and_wait_for_acks_before_stopping,The length of the statement  "                var targets = _allPeers.Where(peer => peer.PeerId != self.Id).Select(desc => desc.Peer).ToArray(); // do not send to self " is 121.
Long Statement,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_send_PersistenceStopping_Message_and_wait_for_acks_before_stopping,The length of the statement  "                _innerTransport.ExpectExactly(new TransportMessageSent(new TransportMessage(MessageTypeId.PersistenceStopping' new MemoryStream()' self)' targets)); " is 148.
Long Statement,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_send_PersistenceStopping_Message_and_wait_for_acks_before_stopping,The length of the statement  "                _innerTransport.RaiseMessageReceived(new TransportMessage(MessageTypeId.PersistenceStoppingAck' new MemoryStream()' _allPeers[0].Peer)); " is 136.
Long Statement,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_send_PersistenceStopping_Message_and_wait_for_acks_before_stopping,The length of the statement  "                _innerTransport.RaiseMessageReceived(new TransportMessage(MessageTypeId.PersistenceStoppingAck' new MemoryStream()' _allPeers[1].Peer)); " is 136.
Long Statement,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_timeout_on_shutdown_if_peers_dont_answer,The length of the statement  "                _innerTransport.RaiseMessageReceived(new TransportMessage(MessageTypeId.PersistenceStoppingAck' new MemoryStream()' _allPeers[1].Peer)); " is 136.
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_batch,The following statement contains a magic number: _batchSize = 5;
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_batch,The following statement contains a magic number: i < 25
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_batch,The following statement contains a magic number: persistedBatches.Count.ShouldEqual(6);
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_batch,The following statement contains a magic number: persistedBatches.Count(batch => batch.Count == 5).ShouldEqual(5);
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_batch,The following statement contains a magic number: persistedBatches.Count(batch => batch.Count == 5).ShouldEqual(5);
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_wait_for_delay_before_persisting_messages,The following statement contains a magic number: _delay = 5.Seconds();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_wait_for_delay_before_persisting_messages,The following statement contains a magic number: persistedSignal.WaitOne(500.Milliseconds()).ShouldBeFalse();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_wait_for_delay_before_persisting_messages,The following statement contains a magic number: persistedSignal.WaitOne(600.Milliseconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_persist_message_and_ack,The following statement contains a magic number: signal.WaitOne(50000).ShouldBeTrue();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_persist_message_and_ack,The following statement contains a magic number: signal.WaitOne(50000).ShouldBeTrue();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_persist_message_and_ack,The following statement contains a magic number: persistedEntries.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: _delay = 5.Seconds();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: _batchSize = 10;
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: SystemDateTime.Set(utcNow: SystemDateTime.UtcNow.Add(4.Seconds()));
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: SystemDateTime.Set(utcNow: SystemDateTime.UtcNow.Add(3.Seconds()));
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: Wait.Until(() => persistedEntries.Count == 2' 500.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: Wait.Until(() => persistedEntries.Count == 2' 500.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: SystemDateTime.Set(utcNow: SystemDateTime.UtcNow.Add(2.Seconds()));
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: Wait.Until(() => persistedEntries.Count == 3' 500.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_save_entries_with_different_timestamps_in_different_batches,The following statement contains a magic number: Wait.Until(() => persistedEntries.Count == 3' 500.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_not_persist_message_and_ack_received_during_delay,The following statement contains a magic number: _batchSize = 100;
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_not_persist_message_and_ack_received_during_delay,The following statement contains a magic number: _delay = 2.Seconds();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_not_ack_message_with_other_peer_id,The following statement contains a magic number: _batchSize = 100;
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_not_ack_message_with_other_peer_id,The following statement contains a magic number: _delay = 2.Seconds();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_clear_pending_entries_on_purge,The following statement contains a magic number: Wait.Until(() => persistedBatches.Count == 1' 2);
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_clear_pending_entries_on_purge,The following statement contains a magic number: persistedBatches.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_clear_pending_entries_on_purge,The following statement contains a magic number: purgedCount.ShouldEqual(3);
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_set_signals_instantaneously_when_queue_is_empty,The following statement contains a magic number: signal1.WaitOne(500.Milliseconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_set_signals_instantaneously_when_queue_is_empty,The following statement contains a magic number: signal2.WaitOne(500.Milliseconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_wait_for_storage_before_signaling,The following statement contains a magic number: waitHandle.WaitOne(100.Milliseconds()).ShouldBeFalse();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_wait_for_storage_before_signaling,The following statement contains a magic number: waitHandle.WaitOne(100.Milliseconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_set_signal_after_message_persistence,The following statement contains a magic number: var isSetBeforeStart = waitHandle.WaitOne(100.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests.Batching,InMemoryMessageMatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Batching\InMemoryMessageMatcherTests.cs,should_set_signal_after_message_persistence,The following statement contains a magic number: var isSetAfterStart = waitHandle.WaitOne(500.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,Setup,The following statement contains a magic number: _configurationMock.Setup(conf => conf.SafetyPhaseDuration).Returns(500.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,Setup,The following statement contains a magic number: _configurationMock.SetupGet(x => x.ReplayUnackedMessageCountThatReleasesNextBatch).Returns(200);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_replay_messages,The following statement contains a magic number: var unackedTransportMessages = InsertMessagesInThePast(DateTime.Now' messageCount: 11);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_replay_messages,The following statement contains a magic number: Thread.Sleep(2);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_replay_messages,The following statement contains a magic number: unackedTransportMessages.AddRange(InsertMessagesInThePast(DateTime.Now' messageCount: 2));
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_replay_messages,The following statement contains a magic number: Thread.Sleep(2);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_start_and_wait_for_completion,The following statement contains a magic number: _replayer.WaitForCompletion(10.Second());
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_wait_for_batch_persistence_signal_before_start,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_wait_for_batch_persistence_signal_before_start,The following statement contains a magic number: Wait.Until(() => _bus.Events.OfType<ReplaySessionStarted>().Any()' 500.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_wait_for_batch_persistence_signal_before_start,The following statement contains a magic number: _replayer.WaitForCompletion(10.Second());
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_wait_for_ack_from_before_sending_next_batch,The following statement contains a magic number: var unackedTransportMessages = InsertMessagesInThePast(DateTime.Now' messageCount: 10);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_wait_for_ack_from_before_sending_next_batch,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_cancel_replayer_waiting_for_acks,The following statement contains a magic number: InsertMessages(messageCount: 10);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_cancel_replayer_waiting_for_acks,The following statement contains a magic number: _replayer.UnackedMessageCountThatReleasesNextBatch = 4;
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_cancel_replayer_waiting_for_acks,The following statement contains a magic number: _configurationMock.SetupGet(x => x.ReplayBatchSize).Returns(5);
Magic Number,Abc.Zebus.Persistence.Tests,MessageReplayerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\MessageReplayerTests.cs,should_cancel_replayer_waiting_for_acks,The following statement contains a magic number: Wait.Until(() => _transport.Messages.Count > 1' 500.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PersistMessageCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PersistMessageCommandHandlerTests.cs,BeforeBuildingHandler,The following statement contains a magic number: persistenceConfigurationMock.SetupGet(conf => conf.PersisterBatchSize).Returns(() => 100);
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PersistMessageCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PersistMessageCommandHandlerTests.cs,should_persist_message,The following statement contains a magic number: var transportMessage = new FakeCommand(42).ToTransportMessage();
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PersistMessageCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PersistMessageCommandHandlerTests.cs,should_persist_message,The following statement contains a magic number: Wait.Until(() => _inMemoryMessageMatcher.CassandraInsertCount == 1' 2.Seconds());
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PublishNonAckMessagesCountCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PublishNonAckMessagesCountCommandHandlerTests.cs,should_publish_messages_count,The following statement contains a magic number: _storage.Setup(x => x.GetNonAckedMessageCounts())                      .Returns(new Dictionary<PeerId' int> { { new PeerId("Abc.Peer.0")' 42 } });
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PublishNonAckMessagesCountCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PublishNonAckMessagesCountCommandHandlerTests.cs,should_publish_messages_count,The following statement contains a magic number: _bus.ExpectExactly(new NonAckMessagesCountChanged(new[] { new NonAckMessage("Abc.Peer.0"' 42) }));
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PublishNonAckMessagesCountCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PublishNonAckMessagesCountCommandHandlerTests.cs,should_publish_messages_for_updated_peers,The following statement contains a magic number: _storage.Setup(x => x.GetNonAckedMessageCounts())                      .Returns(new Dictionary<PeerId' int> { { new PeerId("Abc.Peer.0")' 42 } });
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PublishNonAckMessagesCountCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PublishNonAckMessagesCountCommandHandlerTests.cs,should_publish_messages_for_updated_peers,The following statement contains a magic number: _storage.Setup(x => x.GetNonAckedMessageCounts())                      .Returns(new Dictionary<PeerId' int> { { new PeerId("Abc.Peer.0")' 43 } });
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PublishNonAckMessagesCountCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PublishNonAckMessagesCountCommandHandlerTests.cs,should_publish_messages_for_updated_peers,The following statement contains a magic number: _bus.ExpectExactly(new NonAckMessagesCountChanged(new NonAckMessage[0])'                                 new NonAckMessagesCountChanged(new[] { new NonAckMessage("Abc.Peer.0"' 42) })'                                 new NonAckMessagesCountChanged(new[] { new NonAckMessage("Abc.Peer.0"' 43) }));
Magic Number,Abc.Zebus.Persistence.Tests.Handlers,PublishNonAckMessagesCountCommandHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Handlers\PublishNonAckMessagesCountCommandHandlerTests.cs,should_publish_messages_for_updated_peers,The following statement contains a magic number: _bus.ExpectExactly(new NonAckMessagesCountChanged(new NonAckMessage[0])'                                 new NonAckMessagesCountChanged(new[] { new NonAckMessage("Abc.Peer.0"' 42) })'                                 new NonAckMessagesCountChanged(new[] { new NonAckMessage("Abc.Peer.0"' 43) }));
Magic Number,Abc.Zebus.Persistence.Tests.Initialization,MessageReplayerInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Initialization\MessageReplayerInitializerTests.cs,Setup,The following statement contains a magic number: configurationMock.SetupGet(conf => conf.SafetyPhaseDuration).Returns(30.Seconds());
Magic Number,Abc.Zebus.Persistence.Tests.Initialization,MessageReplayerInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Initialization\MessageReplayerInitializerTests.cs,should_wait_for_replayers,The following statement contains a magic number: task.Wait(300.Milliseconds()).ShouldBeFalse();
Magic Number,Abc.Zebus.Persistence.Tests.Initialization,MessageReplayerInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Initialization\MessageReplayerInitializerTests.cs,should_wait_for_replayers,The following statement contains a magic number: task.Wait(300.Milliseconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,Setup,The following statement contains a magic number: _configurationMock.SetupGet(conf => conf.QueuingTransportStopTimeout).Returns(100.Milliseconds());
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_queue_receives,The following statement contains a magic number: i < 10
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_queue_receives,The following statement contains a magic number: Wait.Until(() => _transport.PendingReceiveCount >= 9' 500.Milliseconds()' "Receives are not queued");
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_queue_receives,The following statement contains a magic number: Wait.Until(() => _transport.PendingReceiveCount >= 9' 500.Milliseconds()' "Receives are not queued");
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_queue_receives,The following statement contains a magic number: Wait.Until(() => receivedMessagesCount == 10' 500.Milliseconds()' "Receives are not processed");
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_queue_receives,The following statement contains a magic number: Wait.Until(() => receivedMessagesCount == 10' 500.Milliseconds()' "Receives are not processed");
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_send_PersistenceStopping_Message_and_wait_for_acks_before_stopping,The following statement contains a magic number: _configurationMock.Setup(conf => conf.QueuingTransportStopTimeout).Returns(15.Seconds());
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_send_PersistenceStopping_Message_and_wait_for_acks_before_stopping,The following statement contains a magic number: Wait.Until(() => _innerTransport.Messages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_send_PersistenceStopping_Message_and_wait_for_acks_before_stopping,The following statement contains a magic number: Wait.Until(() => stopped' 2.Seconds());
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_timeout_on_shutdown_if_peers_dont_answer,The following statement contains a magic number: _configurationMock.Setup(conf => conf.QueuingTransportStopTimeout).Returns(100.Millisecond());
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_timeout_on_shutdown_if_peers_dont_answer,The following statement contains a magic number: Wait.Until(() => _innerTransport.Messages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Persistence.Tests.Transport,QueueingTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Transport\QueueingTransportTests.cs,should_timeout_on_shutdown_if_peers_dont_answer,The following statement contains a magic number: Wait.Until(() => stopped' 2.Seconds());
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: var setToRemoveFrom = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.Add(6);
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: var setToRemoveFrom = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: setToRemoveFrom.Remove(3);
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 4' 5 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 4' 5 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 4' 5 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_test_that_an_item_is_contained,The following statement contains a magic number: var setToRemoveFrom = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_test_that_an_item_is_contained,The following statement contains a magic number: setToRemoveFrom.Contains(3).ShouldBeTrue();
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_test_that_an_item_is_contained,The following statement contains a magic number: setToRemoveFrom.Contains(7).ShouldBeFalse();
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: var setToCopy = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: var destinationArray = new int[5];
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: destinationArray.ShouldEqual(new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: destinationArray.ShouldEqual(new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: destinationArray.ShouldEqual(new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: destinationArray.ShouldEqual(new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Persistence.Tests.Util,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.Tests\Util\ConcurrentSetTests.cs,should_clear_itself,The following statement contains a magic number: var setToClear = new ConcurrentSet<int>(Enumerable.Range(1' 5));
