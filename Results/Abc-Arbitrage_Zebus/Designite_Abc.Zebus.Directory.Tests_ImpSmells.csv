Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,,The length of the parameter _peersNotToDecommissionExamples is 31.
Long Identifier,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,,The length of the parameter _disableDynamicSubscriptionsForDirectoryOutgoingMessages is 56.
Long Identifier,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_remove_dynamic_subscriptions_for_peer,The length of the parameter peerWithTruncatedSubscriptions is 30.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorEntryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorEntryTests.cs,should_not_detect_responding_peer_twice,The length of the statement  "            var ackTask1 = Task.Run(() => _entry.OnPingCommandAck(Task.FromResult(new CommandResult(0' string.Empty' null))' pingTimestampUtc)); " is 132.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorEntryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorEntryTests.cs,should_not_detect_responding_peer_twice,The length of the statement  "            var ackTask2 = Task.Run(() => _entry.OnPingCommandAck(Task.FromResult(new CommandResult(0' string.Empty' null))' pingTimestampUtc)); " is 132.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _transientAlivePeer0 = CreatePeerDescriptor("Abc.TransientAlive.0"' isUp: true' isPersistent: false' hasDebuggerAttached:false); " is 128.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _transientAlivePeer1 = CreatePeerDescriptor("Abc.TransientAlive.1"' isUp: true' isPersistent: false' hasDebuggerAttached: false); " is 129.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _transientDeadPeer = CreatePeerDescriptor("Abc.TransientDead.0"' isUp: false' isPersistent: false' hasDebuggerAttached: false); " is 127.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _persistentAlivePeer = CreatePeerDescriptor("Abc.PersistentAlive.0"' isUp: true' isPersistent: true' hasDebuggerAttached: false); " is 129.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _persistentDeadPeer = CreatePeerDescriptor("Abc.PersistentDead.0"' isUp: false' isPersistent: true' hasDebuggerAttached: false); " is 128.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _debugPersistentAlivePeer = CreatePeerDescriptor("Abc.DebugPersistentAlive.0"' isUp: true' isPersistent: true' hasDebuggerAttached: true); " is 138.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _debugTransientAlivePeer = CreatePeerDescriptor("Abc.DebugTransientAlive.0"' isUp: true' isPersistent: false' hasDebuggerAttached: true); " is 137.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _persistencePeer = CreatePeerDescriptor("Abc.Zebus.PersistenceService.0"' isUp: true' isPersistent: false' hasDebuggerAttached: false); " is 135.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _directoryPeer = CreatePeerDescriptor("NonStandardDirectoryName"' isUp: true' isPersistent: false' hasDebuggerAttached: false); " is 127.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _peerRepositoryMock.Setup(repo => repo.Get(It.IsAny<PeerId>())).Returns<PeerId>(peerId => peerDescriptors.FirstOrDefault(x => x.Peer.Id == peerId)); " is 148.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _configurationMock.As<IDirectoryConfiguration>().SetupGet(conf => conf.TransientPeerPingTimeout).Returns(_transientPeerTimeout.Seconds()); " is 138.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _configurationMock.As<IDirectoryConfiguration>().SetupGet(conf => conf.PersistentPeerPingTimeout).Returns(_persistentPeerTimeout.Seconds()); " is 140.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _configurationMock.As<IDirectoryConfiguration>().SetupGet(conf => conf.DebugPeerPingTimeout).Returns(_debugPeerTimeout.Seconds()); " is 130.
Long Statement,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,Setup,The length of the statement  "            _configurationMock.As<IDirectoryConfiguration>().SetupGet(conf => conf.WildcardsForPeersNotToDecommissionOnTimeout).Returns(() => _peersNotToDecommission); " is 155.
Long Statement,Abc.Zebus.Directory.Tests,DirectorySpeedReporterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DirectorySpeedReporterTests.cs,should_report_speed_for_given_method,The length of the statement  "            reportingMethod.RetrievalMethod(_speedReporter).SequenceEqual(new[] { 1.Second()' 2.Second()' 3.Second() }).ShouldBeTrue(); " is 123.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,Setup,The length of the statement  "            configurationMock.SetupGet(conf => conf.DisableDynamicSubscriptionsForDirectoryOutgoingMessages).Returns(() => _disableDynamicSubscriptionsForDirectoryOutgoingMessages); " is 169.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,register_persist_state_and_advertise,The length of the statement  "                _repositoryMock.Verify(x => x.AddOrUpdatePeer(It.Is<PeerDescriptor>(descriptor => peerDescriptor.DeepCompare(descriptor)))); " is 124.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,unregister_should_persist_state_and_advertise,The length of the statement  "                _repositoryMock.Setup(repo => repo.Get(It.Is<PeerId>(id => peerDescriptor.Peer.Id.Equals(id)))).Returns(peerDescriptor); " is 120.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,unregister_should_persist_state_and_advertise,The length of the statement  "                _repositoryMock.Verify(repo => repo.AddOrUpdatePeer(It.Is<PeerDescriptor>(descriptor => peerDescriptor.DeepCompare(descriptor)))); " is 130.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_retrieve_the_peers_from_the_repository,The length of the statement  "            _repositoryMock.Setup(repo => repo.GetPeers(It.Is<bool>(loadDynamicSubs => loadDynamicSubs != disableDynamicSubscriptions))) " is 124.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_get_peer_with_matching_subscrition_binding_key,The length of the statement  "            var peerDescriptor = TestDataBuilder.CreatePersistentPeerDescriptor("tcp://goodapple:123"' new Subscription(command.TypeId()' new BindingKey("10"' "#"))); " is 154.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_not_get_peer_with_non_matching_subscrition_binding_key,The length of the statement  "            var peerDescriptor = TestDataBuilder.CreatePersistentPeerDescriptor("tcp://goodapple:123"' new Subscription(command.TypeId()' new BindingKey("12"' "#"))); " is 154.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_specify_datetime_kind_when_adding_subscriptions_for_a_type,The length of the statement  "            _repositoryMock.Verify(repo => repo.AddDynamicSubscriptionsForTypes(_self.Id' It.Is<DateTime>(date => date.Kind == DateTimeKind.Utc)' subscriptionsForTypes)); " is 158.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_specify_datetime_kind_when_removing_subscriptions_for_a_type,The length of the statement  "            _repositoryMock.Verify(repo => repo.RemoveDynamicSubscriptionsForTypes(_self.Id' It.Is<DateTime>(date => date.Kind == DateTimeKind.Utc)' new[] { MessageUtil.GetTypeId(typeof(int)) })); " is 184.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_handle_null_bindingkeys_array_when_removing_subscriptions,The length of the statement  "                _repositoryMock.Verify(repo => repo.RemoveDynamicSubscriptionsForTypes(_self.Id' SystemDateTime.UtcNow' new[] { MessageUtil.GetTypeId(typeof(int)) })); " is 151.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_remove_peer_subscriptions_for_a_type_if_there_are_no_binding_keys,The length of the statement  "                _repositoryMock.Setup(repo => repo.AddDynamicSubscriptionsForTypes(_self.Id' SystemDateTime.UtcNow' It.IsAny<SubscriptionsForType[]>())) " is 136.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_remove_peer_subscriptions_for_a_type_if_there_are_no_binding_keys,The length of the statement  "                _repositoryMock.Setup(repo => repo.RemoveDynamicSubscriptionsForTypes(_self.Id' SystemDateTime.UtcNow' It.IsAny<MessageTypeId[]>())) " is 132.
Long Statement,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_remove_peer_subscriptions_for_a_type_if_there_are_no_binding_keys,The length of the statement  "                addedSubscription.ShouldHaveSamePropertiesAs(new SubscriptionsForType(MessageUtil.GetTypeId(typeof(double))' BindingKey.Empty)); " is 128.
Long Statement,Abc.Zebus.Directory.Tests,TestDataBuilder,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\TestDataBuilder.cs,CreatePersistentPeerDescriptor,The length of the statement  "            return new PeerDescriptor(new PeerId("Abc.Testing.0")' endPoint' true' true' true' SystemDateTime.UtcNow' subscriptions); " is 121.
Long Statement,Abc.Zebus.Directory.Tests,TestDataBuilder,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\TestDataBuilder.cs,CreatePersistentPeerDescriptor,The length of the statement  "            return new PeerDescriptor(new PeerId("Abc.Testing.0")' endPoint' true' true' true' SystemDateTime.UtcNow' subscriptions); " is 121.
Long Statement,Abc.Zebus.Directory.Tests,TestDataBuilder,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\TestDataBuilder.cs,CreateTransientPeerDescriptor,The length of the statement  "            return new PeerDescriptor(new PeerId("Abc.Testing.0")' endPoint' false' true' true' SystemDateTime.UtcNow' subscriptions); " is 122.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,Setup,The length of the statement  "            _configurationMock.SetupGet(conf => conf.BlacklistedMachines).Returns(new[] { "ANOTHER_BLACKLISTEDMACHINE"' "BLACKlistedMACHINE" }); " is 132.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,Setup,The length of the statement  "            _handler = new DirectoryCommandsHandler(_bus' _repositoryMock.Object' _configurationMock.Object' _speedReporter.Object) { Context = MessageContext.CreateOverride(_sender.Id' _sender.EndPoint) }; " is 194.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_remove_existing_dynamic_subscriptions_on_register,The length of the statement  "            _repositoryMock.Verify(x => x.RemoveAllDynamicSubscriptionsForPeer(registerCommand.Peer.PeerId' It.Is<DateTime>(d => d == registerCommand.Peer.TimestampUtc.Value))); " is 165.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_specify_datetime_kind_when_removing_all_subscriptions_for_a_peer_during_register,The length of the statement  "            _repositoryMock.Verify(x => x.RemoveAllDynamicSubscriptionsForPeer(registerCommand.Peer.PeerId' It.Is<DateTime>(d => d.Kind == DateTimeKind.Utc))); " is 147.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_reply_with_registred_peers,The length of the statement  "            _repositoryMock.Setup(x => x.GetPeers(It.Is<bool>(loadDynamicSubs => loadDynamicSubs))).Returns(new[] { registredPeerDescriptor }); " is 131.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_reply_with_registred_peers,The length of the statement  "            var command = new RegisterPeerCommand(TestDataBuilder.CreatePersistentPeerDescriptor("tcp://abctest:123"' typeof(FakeCommand))); " is 128.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_throw_if_a_blacklisted_peer_tries_to_register,The length of the statement  "            _handler.Context = MessageContext.CreateTest(new OriginatorInfo(blacklistedPeer.Peer.Id' blacklistedPeer.Peer.EndPoint' "BLACKLISTEDMACHINE"' "initiator")); " is 156.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_throw_if_a_blacklisted_peer_tries_to_register,The length of the statement  "            exception.Message.ShouldEqual("Peer Abc.Testing.0 on host BLACKLISTEDMACHINE is not allowed to register on this directory"); " is 124.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_unregister_persistent_peer_when_unregistering,The length of the statement  "            _repositoryMock.Verify(x => x.AddOrUpdatePeer(It.Is<PeerDescriptor>(peer => peer.Peer.Id == peerDescriptor.Peer.Id && peer.Peer.IsUp == false && peer.TimestampUtc == command.TimestampUtc))); " is 190.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_update_peer_handled_message_and_publish_event,The length of the statement  "            _repositoryMock.Setup(x => x.AddOrUpdatePeer(It.IsAny<PeerDescriptor>())).Callback<PeerDescriptor>(peer => updatedPeerDescriptor = peer); " is 137.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_update_peer_subscriptions_by_types_and_publish_event,The length of the statement  "            _repositoryMock.Verify(repo => repo.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' now' subscriptionsForTypes)); " is 120.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_handle_null_timestamp_when_removing_all_subscriptions_for_a_peer,The length of the statement  "            Assert.That(() => _handler.Handle(registerCommand)' Throws.InstanceOf<InvalidOperationException>().With.Message.EqualTo("The TimestampUtc must be provided when registering")); " is 175.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_specify_datetime_kind_when_adding_subscriptions_for_a_type,The length of the statement  "            _handler.Handle(new UpdatePeerSubscriptionsForTypesCommand(peerDescriptor.PeerId' unspecifiedNow' subscriptionsForTypes)); " is 122.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_specify_datetime_kind_when_adding_subscriptions_for_a_type,The length of the statement  "            _repositoryMock.Verify(repo => repo.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' It.Is<DateTime>(date => date.Kind == DateTimeKind.Utc)' subscriptionsForTypes)); " is 171.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_specify_datetime_kind_when_removing_subscriptions_for_a_type,The length of the statement  "            _handler.Handle(new UpdatePeerSubscriptionsForTypesCommand(peerDescriptor.PeerId' unspecifiedNow' subscriptionsForTypes)); " is 122.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_specify_datetime_kind_when_removing_subscriptions_for_a_type,The length of the statement  "            _repositoryMock.Verify(repo => repo.RemoveDynamicSubscriptionsForTypes(peerDescriptor.PeerId' It.Is<DateTime>(date => date.Kind == DateTimeKind.Utc)' new[] { MessageUtil.GetTypeId(typeof(int)) })); " is 197.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_handle_null_bindingkeys_array_when_removing_subscriptions,The length of the statement  "            _repositoryMock.Verify(repo => repo.RemoveDynamicSubscriptionsForTypes(peerDescriptor.PeerId' now' new[] { MessageUtil.GetTypeId(typeof(int)) })); " is 146.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_remove_peer_subscriptions_for_a_type_if_there_are_no_binding_keys,The length of the statement  "            _repositoryMock.Setup(repo => repo.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' now' It.IsAny<SubscriptionsForType[]>())) " is 131.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_remove_peer_subscriptions_for_a_type_if_there_are_no_binding_keys,The length of the statement  "            _repositoryMock.Setup(repo => repo.RemoveDynamicSubscriptionsForTypes(peerDescriptor.PeerId' now' It.IsAny<MessageTypeId[]>())) " is 127.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_remove_peer_subscriptions_for_a_type_if_there_are_no_binding_keys,The length of the statement  "            addedSubscription.ShouldHaveSamePropertiesAs(new SubscriptionsForType(MessageUtil.GetTypeId(typeof(double))' BindingKey.Empty)); " is 128.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_throw_an_explicit_exception_when_updating_the_subscriptions_of_a_decommissioned_peer,The length of the statement  "            Assert.That(() => _handler.Handle(new UpdatePeerSubscriptionsCommand(new PeerId("Abc.NonExistingPeer.0")' new Subscription[0]' DateTime.UtcNow))' " is 145.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_throw_an_explicit_exception_when_updating_the_subscriptions_of_a_decommissioned_peer,The length of the statement  "                        Throws.InstanceOf<InvalidOperationException>().With.Property("Message").EqualTo("The specified Peer (Abc.NonExistingPeer.0) does not exist.")); " is 143.
Long Statement,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_report_subscription_update_speed,The length of the statement  "            _repositoryMock.Setup(x => x.AddOrUpdatePeer(It.IsAny<PeerDescriptor>())).Callback<PeerDescriptor>(peer => updatedPeerDescriptor = peer); " is 137.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_add_dynamic_subscriptions,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<int>() }); " is 147.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_get_dynamic_subscriptions_in_GetPeers,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<int>() }); " is 147.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_not_get_dynamic_subscriptions_in_GetPeers_if_called_with_proper_flag,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<int>() }); " is 147.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,CreateSubscriptionsForType,The length of the statement  "            return new SubscriptionsForType(MessageUtil.GetTypeId(typeof(TMessage))' bindings.Any() ? bindings : new[] { BindingKey.Empty }); " is 129.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_remove_dynamic_subscriptions,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<int>() }); " is 147.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_remove_dynamic_subscriptions,The length of the statement  "            _repository.RemoveDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { MessageUtil.GetTypeId(typeof(int)) }); " is 151.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,removing_a_dynamic_subscription_doesnt_remove_static_subscription,The length of the statement  "            _repository.RemoveDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { MessageUtil.GetTypeId(typeof(FakeCommand)) }); " is 159.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_handle_dynamic_subscriptions_with_empty_binding_key_aside_static_one,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<FakeCommand>() }); " is 155.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_handle_dynamic_subscriptions_with_empty_binding_key_aside_specific_one,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<FakeCommand>(BindingKey.Empty' new BindingKey("toto")) }); " is 195.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_deduplicate_dynamic_subscriptions_and_static_subscriptions,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<FakeCommand>()' CreateSubscriptionsForType<FakeCommand>() }); " is 198.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_not_mixup_subscriptions_to_same_type_with_different_tokens,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(peerDescriptor.PeerId' peerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<FakeCommand>(new BindingKey("bli"))' CreateSubscriptionsForType<FakeCommand>(new BindingKey("bla")) }); " is 240.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_not_add_dynamic_subscriptions_using_outdated_add_command,The length of the statement  "            _repository.RemoveDynamicSubscriptionsForTypes(presentPeerDescriptor.PeerId' presentPeerDescriptor.TimestampUtc.Value' new[] { MessageUtil.GetTypeId(typeof(int)) }); " is 165.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_not_add_dynamic_subscriptions_using_outdated_add_command,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(pastPeerDescriptor.PeerId' pastPeerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<int>() }); " is 155.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_not_remove_dynamic_subscriptions_using_outdated_delete_command,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(presentPeerDescriptor.PeerId' presentPeerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<int>() }); " is 161.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_not_remove_dynamic_subscriptions_using_outdated_delete_command,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(presentPeerDescriptor.PeerId' presentPeerDescriptor.TimestampUtc.Value' new[] { CreateSubscriptionsForType<int>() }); " is 161.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_not_remove_dynamic_subscriptions_using_outdated_delete_command,The length of the statement  "            _repository.RemoveDynamicSubscriptionsForTypes(pastPeerDescriptor.PeerId' pastPeerDescriptor.TimestampUtc.Value' new[] { MessageUtil.GetTypeId(typeof(int)) }); " is 159.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_remove_dynamic_subscriptions_for_peer,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(firstPeer.PeerId' DateTime.UtcNow' new[] { CreateSubscriptionsForType<FakeCommand>(new BindingKey("toto")) }); " is 154.
Long Statement,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_remove_dynamic_subscriptions_for_peer,The length of the statement  "            _repository.AddDynamicSubscriptionsForTypes(secondPeer.PeerId' DateTime.UtcNow' new[] { CreateSubscriptionsForType<FakeCommand>(new BindingKey("toto")) }); " is 155.
Magic Number,Abc.Zebus.Directory.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Configuration\ConfigurationTests.cs,should_read_registration_timeout,The following statement contains a magic number: busConfiguration.RegistrationTimeout.ShouldEqual(42.Seconds());
Magic Number,Abc.Zebus.Directory.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Configuration\ConfigurationTests.cs,should_read_default_registration_timeout,The following statement contains a magic number: busConfiguration.RegistrationTimeout.ShouldEqual(30.Seconds());
Magic Number,Abc.Zebus.Directory.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Configuration\ConfigurationTests.cs,should_read_peer_ping_interval,The following statement contains a magic number: directoryConfiguration.PeerPingInterval.ShouldEqual(2.Minutes());
Magic Number,Abc.Zebus.Directory.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Configuration\ConfigurationTests.cs,should_read_max_allowed_clock_diff,The following statement contains a magic number: directoryConfiguration.MaxAllowedClockDifferenceWhenRegistering.ShouldEqual(2.Minutes());
Magic Number,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorEntryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorEntryTests.cs,should_use_debug_timeout,The following statement contains a magic number: _configurationMock.SetupGet(x => x.PersistentPeerPingTimeout).Returns(5.Seconds());
Magic Number,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorEntryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorEntryTests.cs,should_use_debug_timeout,The following statement contains a magic number: _configurationMock.SetupGet(x => x.DebugPeerPingTimeout).Returns(500.Seconds());
Magic Number,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorEntryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorEntryTests.cs,should_use_persistent_timeout,The following statement contains a magic number: _configurationMock.SetupGet(x => x.TransientPeerPingTimeout).Returns(5.Seconds());
Magic Number,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorEntryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorEntryTests.cs,should_use_persistent_timeout,The following statement contains a magic number: _configurationMock.SetupGet(x => x.PersistentPeerPingTimeout).Returns(500.Seconds());
Magic Number,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorEntryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorEntryTests.cs,should_use_transcient_timeout,The following statement contains a magic number: _configurationMock.SetupGet(x => x.TransientPeerPingTimeout).Returns(5.Seconds());
Magic Number,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorEntryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorEntryTests.cs,should_not_detect_responding_peer_twice,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Abc.Zebus.Directory.Tests.DeadPeerDetection,DeadPeerDetectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DeadPeerDetection\DeadPeerDetectorTests.cs,should_raise_PingMissed_before_a_peer_is_marked_as_timed_out,The following statement contains a magic number: missedPings.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Directory.Tests,DirectorySpeedReporterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DirectorySpeedReporterTests.cs,should_report_speed_for_given_method,The following statement contains a magic number: reportingMethod.EnqueueMethod(_speedReporter' 2.Second());
Magic Number,Abc.Zebus.Directory.Tests,DirectorySpeedReporterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DirectorySpeedReporterTests.cs,should_report_speed_for_given_method,The following statement contains a magic number: reportingMethod.EnqueueMethod(_speedReporter' 3.Second());
Magic Number,Abc.Zebus.Directory.Tests,DirectorySpeedReporterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DirectorySpeedReporterTests.cs,should_report_speed_for_given_method,The following statement contains a magic number: reportingMethod.RetrievalMethod(_speedReporter).SequenceEqual(new[] { 1.Second()' 2.Second()' 3.Second() }).ShouldBeTrue();
Magic Number,Abc.Zebus.Directory.Tests,DirectorySpeedReporterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\DirectorySpeedReporterTests.cs,should_report_speed_for_given_method,The following statement contains a magic number: reportingMethod.RetrievalMethod(_speedReporter).SequenceEqual(new[] { 1.Second()' 2.Second()' 3.Second() }).ShouldBeTrue();
Magic Number,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_get_peer_with_matching_subscrition_binding_key,The following statement contains a magic number: var command = new FakeRoutableCommand(10' "u.name");
Magic Number,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_not_get_peer_with_non_matching_subscrition_binding_key,The following statement contains a magic number: var command = new FakeRoutableCommand(10' "u.name");
Magic Number,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_measure_time_elapsed_since_last_directory_ping,The following statement contains a magic number: await Task.Delay(200.Milliseconds());
Magic Number,Abc.Zebus.Directory.Tests,PeerDirectoryServerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\PeerDirectoryServerTests.cs,should_measure_time_elapsed_since_last_directory_ping,The following statement contains a magic number: _peerDirectory.TimeSinceLastPing.ShouldBeGreaterOrEqualThan(time + 180.Milliseconds());
Magic Number,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_not_throw_if_a_client_with_a_synchronised_clock_tries_to_register,The following statement contains a magic number: registerCommand.Peer.TimestampUtc = SystemDateTime.UtcNow + 14.Minutes();
Magic Number,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_not_throw_if_a_client_with_a_synchronised_clock_tries_to_register,The following statement contains a magic number: _configurationMock.SetupGet(x => x.MaxAllowedClockDifferenceWhenRegistering).Returns(15.Minutes());
Magic Number,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_throw_if_a_client_with_a_more_recent_clock_tries_to_register,The following statement contains a magic number: _configurationMock.SetupGet(x => x.MaxAllowedClockDifferenceWhenRegistering).Returns(15.Minutes());
Magic Number,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_unregister_persistent_peer_when_unregistering,The following statement contains a magic number: peerDescriptor.TimestampUtc = SystemDateTime.UtcNow.AddSeconds(-30);
Magic Number,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_publish_stopped_event_when_unregistering_a_persistent_client,The following statement contains a magic number: peerDescriptor.TimestampUtc = SystemDateTime.UtcNow.AddSeconds(-30);
Magic Number,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_publish_stopped_event_when_unregistering_a_persistent_client,The following statement contains a magic number: var command = new UnregisterPeerCommand(peerDescriptor.Peer' SystemDateTime.UtcNow.AddSeconds(-2));
Magic Number,Abc.Zebus.Directory.Tests.Handlers,DirectoryCommandsHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Handlers\DirectoryCommandsHandlerTests.cs,should_not_unregister_a_peer_that_started_after_timestamp,The following statement contains a magic number: var command = new UnregisterPeerCommand(peerDescriptor.Peer' peerDescriptor.TimestampUtc.Value.AddSeconds(-2));
Magic Number,Abc.Zebus.Directory.Tests.Storage,MemoryPeerRepositoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Directory.Tests\Storage\MemoryPeerRepositoryTests.cs,should_remove_dynamic_subscriptions_for_peer,The following statement contains a magic number: fetched.Count.ShouldEqual(2);
