Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Abc.Zebus.Testing.Extensions,NUnitExtensions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Extensions\NUnitExtensions.cs,LooseEquals,Cyclomatic complexity of the method is 8
Long Statement,Abc.Zebus.Testing.Comparison,MessageComparer,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Comparison\MessageComparer.cs,CreateErrorMessage,The length of the statement  "                    errorMsg += $"Not Expected: {notExpected.GetType().Name} {SerializeJsonSerializer(notExpected)} " + Environment.NewLine; " is 120.
Long Statement,Abc.Zebus.Testing,MessageSerializationTester,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\MessageSerializationTester.cs,CheckSerializationForTypesInSameAssemblyAs,The length of the statement  "                                        .Where(type => (type.Is<IMessage>() || type.GetInterfaces().Any(x => x.Name == "ISnapshot") || type.GetInterfaces().Any(x => x.Name == "IZmqMessage"))) " is 151.
Long Statement,Abc.Zebus.Testing,TestBus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\TestBus.cs,SubscribeAsync,The length of the statement  "            var handlerKeys = request.Subscriptions.Select(x => new HandlerKey(x.MessageTypeId.GetMessageType()' default)).ToList(); " is 120.
Long Statement,Abc.Zebus.Testing,TestExtensions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\TestExtensions.cs,ToPeerDescriptor,The length of the statement  "            return new PeerDescriptor(peer.Id' peer.EndPoint' isPersistent' peer.IsUp' peer.IsResponding' SystemDateTime.UtcNow' subscriptions.ToArray()); " is 142.
Long Statement,Abc.Zebus.Testing,TestExtensions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\TestExtensions.cs,ToPeerDescriptorWithRoundedTime,The length of the statement  "            var descriptor = peer.ToPeerDescriptor(isPersistent' messageTypes.Select(x => new Subscription(MessageUtil.GetTypeId(x)))); " is 123.
Long Statement,Abc.Zebus.Testing.Directory,TestPeerDirectory,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Directory\TestPeerDirectory.cs,UpdateSubscriptionsAsync,The length of the statement  "            Peers[Self.Id] = Self.ToPeerDescriptor(true' newSubscriptions.Values.SelectMany(subForType => subForType.ToSubscriptions())); " is 125.
Long Statement,Abc.Zebus.Testing.Directory,TestPeerDirectory,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Directory\TestPeerDirectory.cs,RegisterRemoteListener,The length of the statement  "            var peerDescriptor = Peers.GetValueOrAdd(_remote.Id' () => new PeerDescriptor(_remote.Id' _remote.EndPoint' true' _remote.IsUp' _remote.IsResponding' SystemDateTime.UtcNow)); " is 174.
Long Statement,Abc.Zebus.Testing.Extensions,NUnitExtensions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Extensions\NUnitExtensions.cs,ShouldHaveApproximatePropertiesAs,The length of the statement  "            var expectedProperties = expected.GetType().GetProperties(BindingFlags.Instance | BindingFlags.Public).ToDictionary(x => x.Name); " is 129.
Long Statement,Abc.Zebus.Testing.Integration,IntegrationTestFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Integration\IntegrationTestFixture.cs,KillInstance,The length of the statement  "                var query = $@"SELECT Handle FROM Win32_Process WHERE Name = 'Abc.Zebus.Host.exe' AND ExecutablePath LIKE '%{serviceFolder}%'"; " is 127.
Long Statement,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,PrintResults,The length of the statement  "                Console.WriteLine("Avg :          {0'10:### ### ##0}µs"' (double)results.Elapsed.Ticks / configuration.Iteration / (TimeSpan.TicksPerMillisecond / 1000)); " is 154.
Long Statement,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,PrintResults,The length of the statement  "                Console.WriteLine("Max :          {0'10:### ### ##0}µs (Iteration #{1})"' max * _µsFrequency' results.MaxIterationIndex); " is 121.
Long Statement,Abc.Zebus.Testing.Transport,TestTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Transport\TestTransport.cs,ExpectNothing,The length of the statement  "            NUnitExtensions.ShouldBeEmpty(Messages' "Messages not empty. Content:" + Environment.NewLine + string.Join(Environment.NewLine' Messages.Select(msg => msg.TransportMessage.MessageTypeId.GetMessageType().Name))); " is 211.
Long Statement,Abc.Zebus.Testing.UnitTesting,MoqExtensions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\UnitTesting\MoqExtensions.cs,CaptureEnumerable,The length of the statement  "            mock.Setup(expression).Callback<TArg0' IEnumerable<TArg>>((x' items) => items.ForEach(target.Add)).Returns(Task.CompletedTask); " is 127.
Long Statement,Abc.Zebus.Testing.UnitTesting,SetupSequence,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\UnitTesting\SetupSequence.cs,Verify,The length of the statement  "            var messageText = _errorMessages.Count == 0 ? "Sequence is not in order" : string.Join(Environment.NewLine' _errorMessages); " is 124.
Magic Number,Abc.Zebus.Testing,Wait,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Wait.cs,Until,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Abc.Zebus.Testing.Integration,IntegrationTestFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Integration\IntegrationTestFixture.cs,CreateAndStartSenderBus,The following statement contains a magic number: return new BusFactory().WithConfiguration("tcp://localhost:129"' "Local")                                     .WithWaitForEndOfStreamAckTimeout(500.Milliseconds())                                     .CreateAndStartBus();
Magic Number,Abc.Zebus.Testing.Integration,IntegrationTestFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Integration\IntegrationTestFixture.cs,CreateAndStartControlBus,The following statement contains a magic number: return new BusFactory().WithConfiguration(directoryEndPoint' "Local")                                     .WithPeerId("Abc.ControlBus." + Guid.NewGuid().ToString().Substring(0' 6))                                     .WithWaitForEndOfStreamAckTimeout(500.Milliseconds())                                     .CreateAndStartBus();
Magic Number,Abc.Zebus.Testing.Integration,IntegrationTestFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Integration\IntegrationTestFixture.cs,CreateAndStartControlBus,The following statement contains a magic number: return new BusFactory().WithConfiguration(directoryEndPoint' "Local")                                     .WithPeerId("Abc.ControlBus." + Guid.NewGuid().ToString().Substring(0' 6))                                     .WithWaitForEndOfStreamAckTimeout(500.Milliseconds())                                     .CreateAndStartBus();
Magic Number,Abc.Zebus.Testing.Integration,IntegrationTestFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Integration\IntegrationTestFixture.cs,GetPathFromRepositoryBase,The following statement contains a magic number: i < 10
Magic Number,Abc.Zebus.Testing.Integration,TestService,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Integration\TestService.cs,Start,The following statement contains a magic number: var mutexName = _serviceName + "." + Guid.NewGuid().ToString().Substring(0' 6);
Magic Number,Abc.Zebus.Testing.Integration,TestService,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Integration\TestService.cs,Stop,The following statement contains a magic number: Stop(50.Seconds());
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,Bench,The following statement contains a magic number: var g2Count = GC.CollectionCount(2);
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,Bench,The following statement contains a magic number: g2Count = GC.CollectionCount(2) - g2Count;
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,PrintResults,The following statement contains a magic number: var onePercentIndex = (int)Math.Floor((decimal)results.Ticks.Count * 1 / 100) + 1;
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,PrintResults,The following statement contains a magic number: var fivePercentIndex = (int)Math.Floor((decimal)results.Ticks.Count * 5 / 100) + 1;
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,PrintResults,The following statement contains a magic number: var fivePercentIndex = (int)Math.Floor((decimal)results.Ticks.Count * 5 / 100) + 1;
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,PrintResults,The following statement contains a magic number: var medianIndex = (int)Math.Floor((decimal)results.Ticks.Count * 50 / 100) + 1;
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,PrintResults,The following statement contains a magic number: var medianIndex = (int)Math.Floor((decimal)results.Ticks.Count * 50 / 100) + 1;
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,PrintResults,The following statement contains a magic number: Console.WriteLine("Avg :          {0'10:### ### ##0}µs"' (double)results.Elapsed.Ticks / configuration.Iteration / (TimeSpan.TicksPerMillisecond / 1000));
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,Throughput,The following statement contains a magic number: var g2Count = GC.CollectionCount(2);
Magic Number,Abc.Zebus.Testing.Measurements,Measure,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Measurements\Measure.cs,Throughput,The following statement contains a magic number: return new DisposableAction(() =>              {                  stopwatch.Stop();                  g0Count = GC.CollectionCount(0) - g0Count;                  g1Count = GC.CollectionCount(1) - g1Count;                  g2Count = GC.CollectionCount(2) - g2Count;                    Console.WriteLine("Elapsed(ms):  {0'10:0.00}"' stopwatch.Elapsed.TotalMilliseconds);                  Console.WriteLine("FPS:          {0'10:0.00}"' count / stopwatch.Elapsed.TotalSeconds);                  Console.WriteLine("G0 : {0'6:0}"' g0Count);                  Console.WriteLine("G1 : {0'6:0}"' g1Count);                  Console.WriteLine("G2 : {0'6:0}"' g2Count);              });
Magic Number,Abc.Zebus.Testing.Transport,UpdatedPeer,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Testing\Transport\UpdatedPeer.cs,GetHashCode,The following statement contains a magic number: return (PeerId.GetHashCode() * 397) ^ (int)UpdateAction;
