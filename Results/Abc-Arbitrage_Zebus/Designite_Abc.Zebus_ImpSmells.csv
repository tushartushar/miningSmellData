Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,ProcessMessagesReceivedDuringRegister,Cyclomatic complexity of the method is 8
Complex Method,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,SlowReadRawVarint32,Cyclomatic complexity of the method is 8
Complex Method,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint32,Cyclomatic complexity of the method is 9
Complex Method,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,Cyclomatic complexity of the method is 10
Complex Method,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadTransportMessage,Cyclomatic complexity of the method is 9
Complex Method,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,SkipUnknown,Cyclomatic complexity of the method is 8
Complex Method,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,Cyclomatic complexity of the method is 9
Long Parameter List,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,Bus,The method has 8 parameters. Parameters: transport' directory' serializer' messageDispatcher' messageSendingStrategy' stoppingStrategy' predicateBuilder' configuration
Long Parameter List,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleDeserializationError,The method has 5 parameters. Parameters: messageTypeId' messageStream' originator' exception' transportMessage
Long Parameter List,Abc.Zebus.Directory,PeerDescriptor,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDescriptor.cs,PeerDescriptor,The method has 7 parameters. Parameters: id' endPoint' isPersistent' isUp' isResponding' timestampUtc' subscriptions
Long Parameter List,Abc.Zebus.Directory,SubscriptionNode,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerSubscriptionTree.cs,UpdateChildNode,The method has 6 parameters. Parameters: childNode' peer' subscription' action' childNodePart' remover
Long Parameter List,Abc.Zebus.Dispatch,MessageDispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageDispatch.cs,MessageDispatch,The method has 5 parameters. Parameters: context' message' messageSerializer' continuation' shouldRunSynchronously
Long Parameter List,Abc.Zebus.Dispatch,SyncMessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\SyncMessageHandlerInvoker.cs,SyncMessageHandlerInvoker,The method has 5 parameters. Parameters: container' handlerType' messageType' shouldBeSubscribedOnStartup' handleAction
Long Parameter List,Abc.Zebus.Lotus,MessageProcessingFailed,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Lotus\MessageProcessingFailed.cs,MessageProcessingFailed,The method has 5 parameters. Parameters: failingMessage' failingMessageJson' exceptionMessage' exceptionUtcTime' failingHandlerNames
Long Parameter List,Abc.Zebus.Serialization.Protobuf,ByteArray,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\ByteArray.cs,Copy,The method has 5 parameters. Parameters: src' srcOffset' dst' dstOffset' count
Long Parameter List,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawTag,The method has 5 parameters. Parameters: b1' b2' b3' b4' b5
Long Parameter List,Abc.Zebus.Transport,ZmqInboundSocket,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqInboundSocket.cs,ZmqInboundSocket,The method has 5 parameters. Parameters: context' peerId' originalEndpoint' options' environment
Long Parameter List,Abc.Zebus.Transport,ZmqOutboundSocket,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqOutboundSocket.cs,ZmqOutboundSocket,The method has 5 parameters. Parameters: context' peerId' endPoint' options' errorHandler
Long Identifier,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,GetOnRemoteMessageDispatchedContinuation,The length of the parameter shouldLogMessageExecutionCompleted is 34.
Long Identifier,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,,The length of the parameter _messageIdToTaskCompletionSources is 33.
Long Identifier,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,,The length of the parameter _deserializationFailureTimestampProvider is 40.
Long Identifier,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,,The length of the parameter _processPendingUnsubscriptionsTask is 34.
Long Identifier,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,,The length of the parameter _messagesReceivedDuringRegister is 31.
Long Identifier,Abc.Zebus.Directory,PeerEntry,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.PeerEntry.cs,,The length of the parameter _peerSubscriptionsByMessageType is 31.
Long Identifier,Abc.Zebus.Dispatch,DispatchQueue,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\DispatchQueue.cs,,The length of the parameter _hasCompletedAsyncInvocationsSinceLastWait is 42.
Long Identifier,Abc.Zebus.Persistence,PersistentTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Persistence\PersistentTransport.cs,,The length of the parameter _messagesWaitingForPersistence is 30.
Long Identifier,Abc.Zebus.Serialization,Serializer,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Serializer.cs,,The length of the parameter _hasParameterLessConstructorByType is 34.
Long Identifier,Abc.Zebus.Util,TypeUtil,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\TypeUtil.cs,FindGenericTypeByName,The length of the parameter typeNameWithoutGenericArguments is 31.
Long Identifier,Abc.Zebus.Util.Collections,FlushableBlockingCollection<T>,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\Collections\FlushableBlockingCollection.cs,,The length of the parameter _hasChangedSinceLastWaitForEmpty is 32.
Long Statement,Abc.Zebus,BusExtensions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\BusExtensions.cs,Send,The length of the statement  "            var sendTasks = commands.Select(command => bus.Send(command).ContinueWith(task => onCommandExecuted(command' task.Result.ErrorCode)' TaskContinuationOptions.ExecuteSynchronously)); " is 180.
Long Statement,Abc.Zebus,CommandResult,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\CommandResult.cs,GetErrorStatus,The length of the statement  "            return new ErrorStatus(domainException.ErrorCode != 0 ? domainException.ErrorCode : ErrorStatus.UnknownError.Code' domainException.Message); " is 140.
Long Statement,Abc.Zebus,MessageContext,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageContext.cs,CreateTest,The length of the statement  "            return CreateTest(new OriginatorInfo(new PeerId("Abc.Testing.999")' "tcp://abctest:1234"' "abctest"' initiatorUserName)); " is 121.
Long Statement,Abc.Zebus,Subscription,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Subscription.cs,GetExpressionValue,The length of the statement  "            if (methodCallExpression.Method.IsGenericMethod && methodCallExpression.Method.GetGenericMethodDefinition() == _wildCardTokenMethod) " is 132.
Long Statement,Abc.Zebus,Subscription,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Subscription.cs,AddFieldValueFromBinaryExpression,The length of the statement  "            var valueAsText = memberExpression.Type.IsEnum ? Enum.GetName(memberExpression.Type' memberValue) : memberValue.ToString(); " is 123.
Long Statement,Abc.Zebus,SubscriptionRequestBatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\SubscriptionRequestBatch.cs,SubmitAsync,The length of the statement  "                    throw new InvalidOperationException($"Not all requests in the batch have been submitted with {nameof(IBus)}.{nameof(IBus.SubscribeAsync)}"); " is 140.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,Start,The length of the statement  "            if (Interlocked.CompareExchange(ref _status' (int)BusStatus.Starting' (int)BusStatus.Stopped) != (int)BusStatus.Stopped) " is 120.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,PerformAutoSubscribe,The length of the statement  "            var autoSubscribeInvokers = _messageDispatcher.GetMessageHanlerInvokers().Where(x => x.ShouldBeSubscribedOnStartup).ToList(); " is 125.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,Stop,The length of the statement  "            if (Interlocked.CompareExchange(ref _status' (int)BusStatus.Stopping' (int)BusStatus.Started) != (int)BusStatus.Started) " is 120.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,Publish,The length of the statement  "            var targetPeers = shouldBeHandledLocally ? peersHandlingMessage.Where(x => x.Id != PeerId).ToList() : peersHandlingMessage; " is 123.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,Send,The length of the statement  "                throw new InvalidOperationException("Unable to find peer for specified command' " + BusMessageLogger.ToString(message) + ". Did you change the namespace?"); " is 156.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,Send,The length of the statement  "                var exceptionMessage = $"{peers.Count} peers are handling {BusMessageLogger.ToString(message)}. Peers: {string.Join("' "' peers.Select(p => p.ToString()))}."; " is 158.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,Send,The length of the statement  "                if (!peer.IsResponding && !_messageSendingStrategy.IsMessagePersistent(transportMessage) && !message.TypeId().IsInfrastructure()) " is 129.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,Send,The length of the statement  "                    throw new InvalidOperationException($"Unable to send this transient message {BusMessageLogger.ToString(message)} while peer {peer.Id} is not responding."); " is 155.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,SubscribeAsync,The length of the statement  "                                              .Select(x => new DynamicMessageHandlerInvoker(handler' x.Key.GetMessageType()' x.Select(s => s.BindingKey).ToList()' _predicateBuilder)) " is 136.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,ProcessPendingUnsubscriptions,The length of the statement  "                        if (updatedTypes.Count == 0 || !IsRunning || Status == BusStatus.Stopping || subscriptionsVersion != _subscriptionsVersion) " is 123.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,UpdateDirectorySubscriptionsAsync,The length of the statement  "                subscriptionUpdates.Add(subscriptionsByTypes.GetValueOrDefault(updatedMessageId' new SubscriptionsForType(updatedMessageId))); " is 126.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleRemoteMessage,The length of the statement  "                _logger.WarnFormat("Received a remote message that could not be deserialized: {0} from {1}"' transportMessage.MessageTypeId.FullName' transportMessage.Originator.SenderId); " is 172.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,GetOnRemoteMessageDispatchedContinuation,The length of the statement  "                    LogAndSendMessage(messageExecutionCompleted' new[] { dispatch.Context.GetSender() }' shouldLogMessageExecutionCompleted); " is 121.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleDispatchErrors,The length of the statement  "            if (!_configuration.IsErrorPublicationEnabled || !IsRunning || dispatchResult.Errors.Count == 0 || dispatchResult.Errors.All(error => error is DomainException)) " is 160.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleDispatchErrors,The length of the statement  "            var messageProcessingFailed = new MessageProcessingFailed(failingTransportMessage' jsonMessage' errorMessage' SystemDateTime.UtcNow' dispatchResult.ErrorHandlerTypes.Select(x => x.FullName).ToArray()); " is 201.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleDispatchErrorsForUnserializableMessage,The length of the statement  "            var errorMessage = $"Unable to handle local message\r\nMessage is not serializable\r\nMessageType: {messageTypeName}\r\nDispatch error: {dispatchErrorMessage}\r\nSerialization error: {serializationException}"; " is 209.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleMessageExecutionCompleted,The length of the statement  "            var response = message.PayloadTypeId != null ? ToMessage(message.PayloadTypeId.Value' new MemoryStream(message.Payload)' transportMessage) : null; " is 146.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleLocalMessage,The length of the statement  "            var dispatch = new MessageDispatch(context' message' _serializer' GetOnLocalMessageDispatchedContinuation(taskCompletionSource)) " is 128.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,GetOnLocalMessageDispatchedContinuation,The length of the statement  "                var errorStatus = dispatchResult.Errors.Any() ? CommandResult.GetErrorStatus(dispatchResult.Errors) : dispatch.Context.GetErrorStatus(); " is 136.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleDeserializationError,The length of the statement  "            var errorMessage = $"Unable to deserialize message {messageTypeId.FullName}. Originator: {originator.SenderId}. Message dumped at: {dumpLocation}\r\n{exception}"; " is 162.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleDeserializationError,The length of the statement  "            var processingFailed = new MessageProcessingFailed(transportMessage' string.Empty' errorMessage' SystemDateTime.UtcNow' null); " is 126.
Long Statement,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,DumpMessageOnDisk,The length of the statement  "                var dumpFileName = $"{_deserializationFailureTimestampProvider.NextUtcTimestamp():yyyyMMdd-HH-mm-ss.fffffff}_{messageTypeId.FullName}"; " is 135.
Long Statement,Abc.Zebus.Core,BusFactory,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\BusFactory.cs,CreateBus,The length of the statement  "                throw new InvalidOperationException("The CreateBus() method was called with no configuration (Call .WithConfiguration(...) first)"); " is 132.
Long Statement,Abc.Zebus.Core,BusFactory,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\BusFactory.cs,CreateBus,The length of the statement  "                        var dispatcher = new MessageDispatcher(ctx.GetAllInstances<IMessageHandlerInvokerLoader>().ToArray()' ctx.GetInstance<IDispatchQueueFactory>()); " is 144.
Long Statement,Abc.Zebus.Core,BusMessageLogger,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\BusMessageLogger.cs,LogHandleMessage,The length of the statement  "            bool HasCustomDispatchQueue() => !string.IsNullOrEmpty(dispatchQueueName) && dispatchQueueName != DispatchQueueNameScanner.DefaultQueueName; " is 140.
Long Statement,Abc.Zebus.Core,BusMessageLogger,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\BusMessageLogger.cs,LogReceiveMessageRemote,The length of the statement  "            _logger.Debug($"RECV remote: {messageText} from {transportMessage.SenderId} ({transportMessage.Content.Length} bytes). [{transportMessage.Id}]"); " is 145.
Long Statement,Abc.Zebus.Core,BusMessageLogger,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\BusMessageLogger.cs,LogSendMessage,The length of the statement  "            _logger.Info($"SEND: {messageText} to {targetPeersText} ({transportMessage.Content.Length} bytes) [{transportMessage.Id}]"); " is 124.
Long Statement,Abc.Zebus.Core,BusMessageLogger,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\BusMessageLogger.cs,HasToStringOverride,The length of the statement  "            var methodInfo = messageType.GetMethod("ToString"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly); " is 124.
Long Statement,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,CreateSelfDescriptor,The length of the statement  "            return new PeerDescriptor(_self.Id' _self.EndPoint' _configuration.IsPersistent' true' true' _timestampProvider.NextUtcTimestamp()' subscriptions.ToArray()) " is 156.
Long Statement,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,TryRegisterOnDirectoryAsync,The length of the statement  "            var message = $"Unable to register peer on directory (tried: {directoryPeersText}) after {_configuration.RegistrationTimeout}"; " is 127.
Long Statement,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,TryRegisterOnDirectoryAsync,The length of the statement  "                var registration = await bus.Send(new RegisterPeerCommand(self)' directoryPeer).WithTimeoutAsync(_configuration.RegistrationTimeout).ConfigureAwait(false); " is 155.
Long Statement,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,TryRegisterOnDirectoryAsync,The length of the statement  "                    _logger.InfoFormat("Register rejected for {0}' the peer already exists in the directory"' new RegisterPeerCommand(self).Peer.PeerId); " is 133.
Long Statement,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,UpdateSubscriptionsAsync,The length of the statement  "            var command = new UpdatePeerSubscriptionsForTypesCommand(_self.Id' _timestampProvider.NextUtcTimestamp()' subscriptions); " is 121.
Long Statement,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,Handle,The length of the statement  "            peer.Value.SetSubscriptions(message.PeerDescriptor.Subscriptions ?? Enumerable.Empty<Subscription>()' message.PeerDescriptor.TimestampUtc); " is 139.
Long Statement,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,Handle,The length of the statement  "            peer.Value.SetSubscriptionsForType(message.SubscriptionsForType ?? Enumerable.Empty<SubscriptionsForType>()' message.TimestampUtc); " is 131.
Long Statement,Abc.Zebus.Directory,PeerEntry,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.PeerEntry.cs,ToPeerDescriptor,The length of the statement  "                    var subscriptions = _peerSubscriptionsByMessageType.SelectMany(x => x.Value.BindingKeys.Select(bk => new Subscription(x.Key' bk))) " is 130.
Long Statement,Abc.Zebus.Directory,PeerEntry,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.PeerEntry.cs,ToPeerDescriptor,The length of the statement  "                    return new PeerDescriptor(Peer.Id' Peer.EndPoint' IsPersistent' Peer.IsUp' Peer.IsResponding' TimestampUtc' subscriptions); " is 123.
Long Statement,Abc.Zebus.Directory,PeerEntry,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.PeerEntry.cs,SetSubscriptions,The length of the statement  "                    var newBindingKeysByMessageType = subscriptions.GroupBy(x => x.MessageTypeId).ToDictionary(g => g.Key' g => g.Select(x => x.BindingKey)); " is 137.
Long Statement,Abc.Zebus.Dispatch,AsyncMessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\AsyncMessageHandlerInvoker.cs,GetHandleMethodOrThrow,The length of the statement  "                throw new ArgumentException($"The given handler type ({handlerType.Name}) is not an {nameof(IAsyncMessageHandler<IMessage>)}<{messageType.Name}>"' ex); " is 151.
Long Statement,Abc.Zebus.Dispatch,BatchedMessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\BatchedMessageHandlerInvoker.cs,CanMergeWith,The length of the statement  "            return otherBatchedInvoker != null && otherBatchedInvoker.MessageHandlerType == MessageHandlerType && otherBatchedInvoker.MessageType == MessageType; " is 149.
Long Statement,Abc.Zebus.Dispatch,BatchedMessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\BatchedMessageHandlerInvoker.cs,GetHandleMethodOrThrow,The length of the statement  "                var interfaceMethod = interfaceType.GetMethod(nameof(IBatchedMessageHandler<IEvent>.Handle)' new[] { typeof(IList<>).MakeGenericType(messageType) }); " is 149.
Long Statement,Abc.Zebus.Dispatch,BatchedMessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\BatchedMessageHandlerInvoker.cs,GetHandleMethodOrThrow,The length of the statement  "                throw new ArgumentException($"The given handler type ({handlerType.Name}) is not an {nameof(IBatchedMessageHandler<IEvent>)}<{messageType.Name}>"' ex); " is 151.
Long Statement,Abc.Zebus.Dispatch,DispatchQueue,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\DispatchQueue.cs,RunBatch,The length of the statement  "                        var invocation = _pipeManager.BuildPipeInvocation(batch.FirstEntry.Invoker' batch.Messages' batch.FirstEntry.Dispatch.Context); " is 127.
Long Statement,Abc.Zebus.Dispatch,DispatchQueue,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\DispatchQueue.cs,RunBatch,The length of the statement  "                        var invocation = _pipeManager.BuildPipeInvocation(asyncBatch.FirstEntry.Invoker' asyncBatch.Messages' asyncBatch.FirstEntry.Dispatch.Context); " is 142.
Long Statement,Abc.Zebus.Dispatch,DispatchQueue,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\DispatchQueue.cs,RunBatch,The length of the statement  "                        invocation.RunAsync().ContinueWith(task => OnAsyncBatchCompleted(task' asyncBatch)' TaskContinuationOptions.ExecuteSynchronously); " is 130.
Long Statement,Abc.Zebus.Dispatch,Batch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\DispatchQueue.cs,SetHandled,The length of the statement  "                        _logger.Error($"Unable to run dispatch continuation' MessageType: {entry.Invoker.MessageType.Name}' HandlerType: {entry.Invoker.MessageHandlerType.Name}' HandlerError: {error}' ContinuationError: {ex}"); " is 203.
Long Statement,Abc.Zebus.Dispatch,DummyHandler,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\DynamicMessageHandlerInvoker.cs,Handle,The length of the statement  "                throw new NotSupportedException("This handler is only used to provide the base class with a valid implementation of IMessageHandler and is never actually used"); " is 161.
Long Statement,Abc.Zebus.Dispatch,MessageDispatcher,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageDispatcher.cs,LoadMessageHandlerInvokers,The length of the statement  "                    var messageTypeInvokers = invokers.GetOrAdd(new MessageTypeId(invoker.MessageType)' x => new List<IMessageHandlerInvoker>()); " is 125.
Long Statement,Abc.Zebus.Dispatch,MessageDispatcher,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageDispatcher.cs,Dispatch,The length of the statement  "            var invokers = _invokers.GetValueOrDefault(dispatch.Message.TypeId()' _emptyInvokers).Where(x => handlerFilter(x.MessageHandlerType)).ToList(); " is 143.
Long Statement,Abc.Zebus.Dispatch,MessageDispatcher,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageDispatcher.cs,AddInvoker,The length of the statement  "                var existingMessageTypeInvokers = _invokers.GetValueOrDefault(newEventHandlerInvoker.MessageTypeId) ?? new List<IMessageHandlerInvoker>(); " is 138.
Long Statement,Abc.Zebus.Dispatch,MessageDispatcher,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageDispatcher.cs,RemoveInvoker,The length of the statement  "                var newMessageTypeInvokers = new List<IMessageHandlerInvoker>(messageTypeInvokers.Where(x => x != eventHandlerInvoker)); " is 120.
Long Statement,Abc.Zebus.Dispatch,MessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageHandlerInvoker.cs,GetExplicitSubscriptionMode,The length of the statement  "            var subscriptionModeAttribute = (SubscriptionModeAttribute)Attribute.GetCustomAttribute(handlerType' typeof(SubscriptionModeAttribute)); " is 136.
Long Statement,Abc.Zebus.Dispatch,MessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageHandlerInvoker.cs,CreateConstructorInstance,The length of the statement  "            inst.Dependencies.Add<MessageContext>(new LambdaInstance<MessageContext>("Dispatch MessageContext"' () => _dispatchBus.MessageContext)); " is 136.
Long Statement,Abc.Zebus.Dispatch,MessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageHandlerInvoker.cs,ThrowIfAsyncVoid,The length of the statement  "                throw new InvalidProgramException($"The message handler {handlerType} has an async void Handle method. If you think there are valid use cases for this' please discuss it with the dev team"); " is 190.
Long Statement,Abc.Zebus.Dispatch,SyncMessageHandlerInvoker,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\SyncMessageHandlerInvoker.cs,GetHandleMethodOrThrow,The length of the statement  "                throw new ArgumentException($"The given handler type ({handlerType.Name}) is not an {nameof(IMessageHandler<IMessage>)}<{messageType.Name}>"' ex); " is 146.
Long Statement,Abc.Zebus.Dispatch.Pipes,PipeInvocation,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\Pipes\PipeInvocation.cs,RunAsync,The length of the statement  "                var exception = new InvalidProgramException($"{Invoker.MessageHandlerType.Name}.Handle({Invoker.MessageType.Name}) did not start the returned task"); " is 149.
Long Statement,Abc.Zebus.Dispatch.Pipes,PipeInvocation,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\Pipes\PipeInvocation.cs,RunAsync,The length of the statement  "            runTask.ContinueWith(task => AfterInvoke(pipeStates' task.IsFaulted' task.Exception)' TaskContinuationOptions.ExecuteSynchronously); " is 132.
Long Statement,Abc.Zebus.Persistence,PersistentTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Persistence\PersistentTransport.cs,OnTransportMessageReceived,The length of the statement  "                var ackMessage = new TransportMessage(MessageTypeId.PersistenceStoppingAck' new MemoryStream()' _innerTransport.PeerId' _innerTransport.InboundEndPoint); " is 153.
Long Statement,Abc.Zebus.Persistence,PersistentTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Persistence\PersistentTransport.cs,OnTransportMessageReceived,The length of the statement  "                _innerTransport.Send(ackMessage' new[] { new Peer(transportMessage.Originator.SenderId' transportMessage.Originator.SenderEndPoint) }' new SendContext()); " is 154.
Long Statement,Abc.Zebus.Persistence,PersistentTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Persistence\PersistentTransport.cs,PendingReceivesDispatcher,The length of the statement  "                    var errorMessage = $"Unable to process message {transportMessage.MessageTypeId.FullName}. Originator: {transportMessage.Originator.SenderId}"; " is 142.
Long Statement,Abc.Zebus.Persistence,PersistentTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Persistence\PersistentTransport.cs,AckMessage,The length of the statement  "            if (transportMessage.WasPersisted == true || transportMessage.WasPersisted == null && _isPersistent && _messageSendingStrategy.IsMessagePersistent(transportMessage)) " is 165.
Long Statement,Abc.Zebus.Routing,BindingKeyPredicateBuilder,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Routing\BindingKeyPredicateBuilder.cs,GetPredicate,The length of the statement  "            var finalExpression = subPredicates.Aggregate((Expression)null' (final' exp) => final == null ? exp : Expression.AndAlso(final' exp)); " is 134.
Long Statement,Abc.Zebus.Routing,BindingKeyPredicateBuilder,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Routing\BindingKeyPredicateBuilder.cs,GenerateMemberToStringExpression,The length of the statement  "                ? Expression.Call(memberAccessor(parameterExpression)' _toStringWithFormatMethod' Expression.Constant(CultureInfo.InvariantCulture)) " is 132.
Long Statement,Abc.Zebus.Routing,BindingKeyToken,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Routing\BindingKeyToken.cs,GetValue,The length of the statement  "                throw new InvalidOperationException($"Message of type {message.GetType().Name} is not valid. Member {Name} part of the routing key at position {Position} can not be null"); " is 172.
Long Statement,Abc.Zebus.Routing,BindingKeyToken,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Routing\BindingKeyToken.cs,GenerateValueAccessor,The length of the statement  "                ? Expression.Call(valueAccessor(castedMessage)' _toStringWithFormatMethod' Expression.Constant(CultureInfo.InvariantCulture)) " is 125.
Long Statement,Abc.Zebus.Scan,DispatchQueueNameScanner,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Scan\DispatchQueueNameScanner.cs,LoadQueueName,The length of the statement  "            var queueNameAttribute = (DispatchQueueNameAttribute)Attribute.GetCustomAttribute(type' typeof(DispatchQueueNameAttribute)' true); " is 130.
Long Statement,Abc.Zebus.Scan,MessageHandlerInvokerLoader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Scan\MessageHandlerInvokerLoader.cs,LoadMessageHandlerInvokers,The length of the statement  "                if (!handlerType.IsClass || handlerType.IsAbstract || !handlerType.IsVisible || !_handlerType.IsAssignableFrom(handlerType)) " is 124.
Long Statement,Abc.Zebus.Scan,MessageHandlerInvokerLoader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Scan\MessageHandlerInvokerLoader.cs,LoadMessageHandlerInvokers,The length of the statement  "                    var shouldBeSubscribedOnStartup = MessageHandlerInvoker.MessageShouldBeSubscribedOnStartup(messageType' subscriptionMode); " is 122.
Long Statement,Abc.Zebus.Scan,MessageHandlerInvokerLoader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Scan\MessageHandlerInvokerLoader.cs,IsCustomInvokerMessageHandlerInterface,The length of the statement  "            return interfaceType.IsGenericType && interfaceType.GetGenericTypeDefinition() == typeof(ICustomInvokerMessageHandler<>) && !interfaceType.GetGenericArguments()[0].IsGenericParameter; " is 183.
Long Statement,Abc.Zebus.Scan,MessageHandlerInvokerLoader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Scan\MessageHandlerInvokerLoader.cs,IsMessageHandlerInterface,The length of the statement  "            return interfaceType.IsGenericType && interfaceType.GetGenericTypeDefinition() == _genericHandlerType && !interfaceType.GetGenericArguments()[0].IsGenericParameter; " is 164.
Long Statement,Abc.Zebus.Transport,TransportMessage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessage.cs,CreateOriginator,The length of the statement  "            return new OriginatorInfo(peerId' peerEndPoint' MessageContext.CurrentMachineName' MessageContext.GetInitiatorUserName()); " is 122.
Long Statement,Abc.Zebus.Transport,ZmqEndPoint,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqEndPoint.cs,ReadPort,The length of the statement  "            if (int.TryParse(File.ReadAllText(filePath.FullName)' NumberStyles.Integer' CultureInfo.InvariantCulture' out var port)) " is 120.
Long Statement,Abc.Zebus.Transport,ZmqOutboundSocket,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqOutboundSocket.cs,Send,The length of the statement  "            _logger.ErrorFormat("Unable to send message' destination peer: {0}' MessageTypeId: {1}' MessageId: {2}' Error: {3}"' PeerId' message.MessageTypeId' message.Id' errorMesage); " is 173.
Long Statement,Abc.Zebus.Transport,ZmqOutboundSocket,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqOutboundSocket.cs,CanSendOrConnect,The length of the statement  "                    _logger.WarnFormat("Send or connect ignored in closed state' Peer: {0}' MessageTypeId: {1}' MessageId: {2}"' PeerId' message.MessageTypeId' message.Id); " is 152.
Long Statement,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,OnPeerUpdated,The length of the statement  "            // Forgetting a peer when it starts up make sure we don't have a stale socket for it' at the cost of losing the send buffer safety " is 130.
Long Statement,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,Disconnect,The length of the statement  "                SafeAdd(_pendingDisconnects' new PendingDisconnect(peerId' SystemDateTime.UtcNow.Add(_configuration.WaitForEndOfStreamAckTimeout))); " is 132.
Long Statement,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,OnEndOfStreamAck,The length of the statement  "                _logger.ErrorFormat("Received EndOfStreamAck for an unknown socket ({0}) PeerId: {1} (Known peers: {2})"' senderEndPoint' senderId' string.Join("' "' _outboundSockets.Keys)); " is 174.
Long Statement,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,SendEndOfStreamAck,The length of the statement  "            SafeAdd(_pendingDisconnects' new PendingDisconnect(closingPeer.Id' SystemDateTime.UtcNow.Add(_configuration.WaitForEndOfStreamAckTimeout))); " is 140.
Long Statement,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,IsFromCurrentEnvironment,The length of the statement  "                _logger.ErrorFormat("Receiving messages from wrong environment: {0} from {1}' discarding message type {2}"' transportMessage.Environment' transportMessage.Originator.SenderEndPoint' transportMessage.MessageTypeId); " is 214.
Long Statement,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,SendEndOfStreamMessages,The length of the statement  "                var endOfStreamMessage = new TransportMessage(MessageTypeId.EndOfStream' new MemoryStream()' PeerId' InboundEndPoint) { WasPersisted = false }; " is 143.
Long Statement,Abc.Zebus.Util,PathUtil,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\PathUtil.cs,InCurrentNamespaceDirectory,The length of the statement  "            var extraNamespaces = classNamespace.Replace(rootNamespace' "").Split(new[] { "." }' StringSplitOptions.RemoveEmptyEntries); " is 124.
Long Statement,Abc.Zebus.Util,TypeUtil,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\TypeUtil.cs,FindGenericTypeByName,The length of the statement  "            var genericArguments = typeName.Substring(typeName.IndexOf("<"' StringComparison.Ordinal)).Trim('<'' '>').Split(new[] { ''' }' StringSplitOptions.RemoveEmptyEntries); " is 166.
Long Statement,Abc.Zebus.Util,TypeUtil,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\TypeUtil.cs,FindGenericTypeByName,The length of the statement  "            var typeNameWithoutGenericArguments = typeName.Substring(0' typeName.IndexOf("<"' StringComparison.Ordinal)) + '`' + genericArguments.Length; " is 141.
Long Statement,Abc.Zebus.Util.Extensions,ExtendDictionary,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\Extensions\ExtendDictionary.cs,TryRemove,The length of the statement  "            return ((ICollection<KeyValuePair<TKey' TValue>>)dictionary).Remove(new KeyValuePair<TKey' TValue>(key' comparisonValue)); " is 122.
Complex Conditional,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,ProcessPendingUnsubscriptions,The conditional expression  "updatedTypes.Count == 0 || !IsRunning || Status == BusStatus.Stopping || subscriptionsVersion != _subscriptionsVersion"  is complex.
Complex Conditional,Abc.Zebus.Core,Bus,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\Bus.cs,HandleDispatchErrors,The conditional expression  "!_configuration.IsErrorPublicationEnabled || !IsRunning || dispatchResult.Errors.Count == 0 || dispatchResult.Errors.All(error => error is DomainException)"  is complex.
Complex Conditional,Abc.Zebus.Persistence,PersistentTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Persistence\PersistentTransport.cs,AckMessage,The conditional expression  "transportMessage.WasPersisted == true || transportMessage.WasPersisted == null && _isPersistent && _messageSendingStrategy.IsMessagePersistent(transportMessage)"  is complex.
Complex Conditional,Abc.Zebus.Scan,MessageHandlerInvokerLoader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Scan\MessageHandlerInvokerLoader.cs,LoadMessageHandlerInvokers,The conditional expression  "!handlerType.IsClass || handlerType.IsAbstract || !handlerType.IsVisible || !_handlerType.IsAssignableFrom(handlerType)"  is complex.
Empty Catch Block,Abc.Zebus.Util,TypeUtil,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\TypeUtil.cs,FindTypeByName,The method has an empty catch block.
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var bytes = stackalloc byte[16];
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: bytes[7] &= 0x0f;
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: bytes[7] |= 0x10;
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: *(ushort*)(bytes + 8) = _clockId;
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: *(uint*)(bytes + 10) = _nodeIdPart1;
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: *(ushort*)(bytes + 14) = _nodeIdPart2;
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var a = (bytes[3] << 24) | (bytes[2] << 16) | (bytes[1] << 8) | bytes[0];
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var a = (bytes[3] << 24) | (bytes[2] << 16) | (bytes[1] << 8) | bytes[0];
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var a = (bytes[3] << 24) | (bytes[2] << 16) | (bytes[1] << 8) | bytes[0];
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var a = (bytes[3] << 24) | (bytes[2] << 16) | (bytes[1] << 8) | bytes[0];
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var a = (bytes[3] << 24) | (bytes[2] << 16) | (bytes[1] << 8) | bytes[0];
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var b = (short)((bytes[5] << 8) | bytes[4]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var b = (short)((bytes[5] << 8) | bytes[4]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var b = (short)((bytes[5] << 8) | bytes[4]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var c = (short)((bytes[7] << 8) | bytes[6]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var c = (short)((bytes[7] << 8) | bytes[6]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: var c = (short)((bytes[7] << 8) | bytes[6]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: return new Guid(a' b' c' bytes[8]' bytes[9]' bytes[10]' bytes[11]' bytes[12]' bytes[13]' bytes[14]' bytes[15]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: return new Guid(a' b' c' bytes[8]' bytes[9]' bytes[10]' bytes[11]' bytes[12]' bytes[13]' bytes[14]' bytes[15]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: return new Guid(a' b' c' bytes[8]' bytes[9]' bytes[10]' bytes[11]' bytes[12]' bytes[13]' bytes[14]' bytes[15]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: return new Guid(a' b' c' bytes[8]' bytes[9]' bytes[10]' bytes[11]' bytes[12]' bytes[13]' bytes[14]' bytes[15]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: return new Guid(a' b' c' bytes[8]' bytes[9]' bytes[10]' bytes[11]' bytes[12]' bytes[13]' bytes[14]' bytes[15]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: return new Guid(a' b' c' bytes[8]' bytes[9]' bytes[10]' bytes[11]' bytes[12]' bytes[13]' bytes[14]' bytes[15]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: return new Guid(a' b' c' bytes[8]' bytes[9]' bytes[10]' bytes[11]' bytes[12]' bytes[13]' bytes[14]' bytes[15]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,NewGuid,The following statement contains a magic number: return new Guid(a' b' c' bytes[8]' bytes[9]' bytes[10]' bytes[11]' bytes[12]' bytes[13]' bytes[14]' bytes[15]);
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,GetRandomNodeId,The following statement contains a magic number: var nodeId = new byte[6];
Magic Number,Abc.Zebus,TimeGuidGenerator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\MessageId.cs,GetRandomClockId,The following statement contains a magic number: var clockId = new byte[2];
Magic Number,Abc.Zebus,Subscription,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Subscription.cs,GetHashCode,The following statement contains a magic number: _computedHashCode = (MessageTypeId.GetHashCode() * 397) ^ BindingKey.GetHashCode();
Magic Number,Abc.Zebus.Core,BusConfiguration,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\BusFactory.cs,BusConfiguration,The following statement contains a magic number: RegistrationTimeout = 10.Second();
Magic Number,Abc.Zebus.Core,ZmqTransportConfiguration,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Core\BusFactory.cs,ZmqTransportConfiguration,The following statement contains a magic number: WaitForEndOfStreamAckTimeout = 5.Seconds();
Magic Number,Abc.Zebus.Directory,MessageBinding,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\MessageBinding.cs,GetHashCode,The following statement contains a magic number: return (MessageTypeId.GetHashCode() * 397) ^ RoutingKey.GetHashCode();
Magic Number,Abc.Zebus.Directory,SubscriptionsForType,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\SubscriptionsForType.cs,GetHashCode,The following statement contains a magic number: return (MessageTypeId.GetHashCode() * 397) ^ (BindingKeys?.GetHashCode() ?? 0);
Magic Number,Abc.Zebus.Hosting,PeriodicActionHostInitializer,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Hosting\PeriodicActionHostInitializer.cs,BeforeStop,The following statement contains a magic number: !timer.Dispose(timerStopWaitHandle) || !timerStopWaitHandle.WaitOne(2.Seconds())
Magic Number,Abc.Zebus.Persistence,PersistentTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Persistence\PersistentTransport.cs,Stop,The following statement contains a magic number: _receptionThread != null && !_receptionThread.Join(30.Second())
Magic Number,Abc.Zebus.Persistence,ReplayPhase,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Persistence\PersistentTransport.Phases.cs,OnMessageReplayed,The following statement contains a magic number: _replayCount % 100 == 0
Magic Number,Abc.Zebus.Routing,BindingKey,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Routing\BindingKey.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _parts[partIndex].GetHashCode();
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,TryReadTag,The following statement contains a magic number: number = tag >> 3;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,TryReadTag,The following statement contains a magic number: wireType = (WireType)(tag & 7);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadTag,The following statement contains a magic number: tag < 128
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadFloat,The following statement contains a magic number: bufferPos += 4;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadFloat,The following statement contains a magic number: BitConverter.IsLittleEndian && 4 <= bufferSize - bufferPos
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadGuid,The following statement contains a magic number: ByteArray.Copy(buffer' bufferPos' guidBuffer' 0' 8);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadGuid,The following statement contains a magic number: bufferPos += 8;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadGuid,The following statement contains a magic number: ByteArray.Copy(buffer' bufferPos' guidBuffer' 8' 8);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadGuid,The following statement contains a magic number: ByteArray.Copy(buffer' bufferPos' guidBuffer' 8' 8);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadGuid,The following statement contains a magic number: bufferPos += 8;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,SlowReadRawVarint32,The following statement contains a magic number: tmp < 128
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,SlowReadRawVarint32,The following statement contains a magic number: result |= tmp << 7;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,SlowReadRawVarint32,The following statement contains a magic number: (tmp = ReadRawByte()) < 128
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint32,The following statement contains a magic number: bufferPos + 5 > bufferSize
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint32,The following statement contains a magic number: tmp < 128
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint32,The following statement contains a magic number: result |= tmp << 7;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint32,The following statement contains a magic number: (tmp = buffer[bufferPos++]) < 128
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint32,The following statement contains a magic number: offset < 32
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint32,The following statement contains a magic number: offset < 64
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint64,The following statement contains a magic number: shift += 7;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawVarint64,The following statement contains a magic number: shift < 64
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian32,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian32,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian32,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                     | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                     | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                     | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                     | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                     | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                     | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedInputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedInputStream.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                     | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint32Size,The following statement contains a magic number: (value & (0xffffffff << 7)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint32Size,The following statement contains a magic number: return 2;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint32Size,The following statement contains a magic number: (value & (0xffffffff << 14)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint32Size,The following statement contains a magic number: return 3;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint32Size,The following statement contains a magic number: (value & (0xffffffff << 21)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint32Size,The following statement contains a magic number: return 4;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint32Size,The following statement contains a magic number: (value & (0xffffffff << 28)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint32Size,The following statement contains a magic number: return 5;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 7)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 2;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 14)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 3;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 21)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 4;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 28)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 5;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 35)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 6;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 42)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 7;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 49)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 8;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 56)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 9;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: (value & (0xffffffffffffffffL << 63)) == 0
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,ComputeRawVarint64Size,The following statement contains a magic number: return 10;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteFloat,The following statement contains a magic number: buffer[position++] = rawBytes[2];
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteFloat,The following statement contains a magic number: buffer[position++] = rawBytes[3];
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteFloat,The following statement contains a magic number: buffer.Length - position >= 4
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint32,The following statement contains a magic number: value < 128 && position < buffer.Length
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint32,The following statement contains a magic number: value >>= 7;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint32,The following statement contains a magic number: value > 127 && position < buffer.Length
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint32,The following statement contains a magic number: value >>= 7;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint32,The following statement contains a magic number: value > 127
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint64,The following statement contains a magic number: value >>= 7;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint64,The following statement contains a magic number: value > 127 && position < buffer.Length
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint64,The following statement contains a magic number: value >>= 7;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawVarint64,The following statement contains a magic number: value > 127
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian32,The following statement contains a magic number: WriteRawByte((byte) (value >> 8));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian32,The following statement contains a magic number: WriteRawByte((byte) (value >> 16));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian32,The following statement contains a magic number: WriteRawByte((byte) (value >> 24));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian32,The following statement contains a magic number: position + 4 > buffer.Length
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian64,The following statement contains a magic number: WriteRawByte((byte) (value >> 8));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian64,The following statement contains a magic number: WriteRawByte((byte) (value >> 16));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian64,The following statement contains a magic number: WriteRawByte((byte) (value >> 24));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian64,The following statement contains a magic number: WriteRawByte((byte) (value >> 32));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian64,The following statement contains a magic number: WriteRawByte((byte) (value >> 40));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian64,The following statement contains a magic number: WriteRawByte((byte) (value >> 48));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian64,The following statement contains a magic number: WriteRawByte((byte) (value >> 56));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawLittleEndian64,The following statement contains a magic number: position + 8 > buffer.Length
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteGuid,The following statement contains a magic number: buffer[position++] = 1 << 3 | 1;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteGuid,The following statement contains a magic number: i < 8
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteGuid,The following statement contains a magic number: buffer[position++] = 2 << 3 | 1;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteGuid,The following statement contains a magic number: buffer[position++] = 2 << 3 | 1;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteGuid,The following statement contains a magic number: i < 16
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,WriteRawStreamSlow,The following statement contains a magic number: const int blockSize = 4096;
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,EnsureCapacity,The following statement contains a magic number: var newBufferLength = Math.Max(position + length' buffer.Length * 2);
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,EncodeZigZag32,The following statement contains a magic number: return (uint) ((n << 1) ^ (n >> 31));
Magic Number,Abc.Zebus.Serialization.Protobuf,CodedOutputStream,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Serialization\Protobuf\CodedOutputStream.ComputeSize.cs,EncodeZigZag64,The following statement contains a magic number: return (ulong) ((n << 1) ^ (n >> 63));
Magic Number,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadTransportMessage,The following statement contains a magic number: switch (number)                  {                      case 1:                          transportMessage.Id = ReadMessageId(input);                          break;                      case 2:                          transportMessage.MessageTypeId = ReadMessageTypeId(input);                          break;                      case 3:                          transportMessage.Content = ReadStream(input);                          break;                      case 4:                          transportMessage.Originator = ReadOriginatorInfo(input);                          break;                      case 5:                          transportMessage.Environment = input.ReadString();                          break;                      case 6:                          transportMessage.WasPersisted = input.ReadBool();                          break;                      case 7:                          transportMessage.PersistentPeerIds = ReadPeerIds(input' transportMessage.PersistentPeerIds);                          break;                      default:                          SkipUnknown(input' wireType);                          break;                  }
Magic Number,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadTransportMessage,The following statement contains a magic number: switch (number)                  {                      case 1:                          transportMessage.Id = ReadMessageId(input);                          break;                      case 2:                          transportMessage.MessageTypeId = ReadMessageTypeId(input);                          break;                      case 3:                          transportMessage.Content = ReadStream(input);                          break;                      case 4:                          transportMessage.Originator = ReadOriginatorInfo(input);                          break;                      case 5:                          transportMessage.Environment = input.ReadString();                          break;                      case 6:                          transportMessage.WasPersisted = input.ReadBool();                          break;                      case 7:                          transportMessage.PersistentPeerIds = ReadPeerIds(input' transportMessage.PersistentPeerIds);                          break;                      default:                          SkipUnknown(input' wireType);                          break;                  }
Magic Number,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadTransportMessage,The following statement contains a magic number: switch (number)                  {                      case 1:                          transportMessage.Id = ReadMessageId(input);                          break;                      case 2:                          transportMessage.MessageTypeId = ReadMessageTypeId(input);                          break;                      case 3:                          transportMessage.Content = ReadStream(input);                          break;                      case 4:                          transportMessage.Originator = ReadOriginatorInfo(input);                          break;                      case 5:                          transportMessage.Environment = input.ReadString();                          break;                      case 6:                          transportMessage.WasPersisted = input.ReadBool();                          break;                      case 7:                          transportMessage.PersistentPeerIds = ReadPeerIds(input' transportMessage.PersistentPeerIds);                          break;                      default:                          SkipUnknown(input' wireType);                          break;                  }
Magic Number,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadTransportMessage,The following statement contains a magic number: switch (number)                  {                      case 1:                          transportMessage.Id = ReadMessageId(input);                          break;                      case 2:                          transportMessage.MessageTypeId = ReadMessageTypeId(input);                          break;                      case 3:                          transportMessage.Content = ReadStream(input);                          break;                      case 4:                          transportMessage.Originator = ReadOriginatorInfo(input);                          break;                      case 5:                          transportMessage.Environment = input.ReadString();                          break;                      case 6:                          transportMessage.WasPersisted = input.ReadBool();                          break;                      case 7:                          transportMessage.PersistentPeerIds = ReadPeerIds(input' transportMessage.PersistentPeerIds);                          break;                      default:                          SkipUnknown(input' wireType);                          break;                  }
Magic Number,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadTransportMessage,The following statement contains a magic number: switch (number)                  {                      case 1:                          transportMessage.Id = ReadMessageId(input);                          break;                      case 2:                          transportMessage.MessageTypeId = ReadMessageTypeId(input);                          break;                      case 3:                          transportMessage.Content = ReadStream(input);                          break;                      case 4:                          transportMessage.Originator = ReadOriginatorInfo(input);                          break;                      case 5:                          transportMessage.Environment = input.ReadString();                          break;                      case 6:                          transportMessage.WasPersisted = input.ReadBool();                          break;                      case 7:                          transportMessage.PersistentPeerIds = ReadPeerIds(input' transportMessage.PersistentPeerIds);                          break;                      default:                          SkipUnknown(input' wireType);                          break;                  }
Magic Number,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadTransportMessage,The following statement contains a magic number: switch (number)                  {                      case 1:                          transportMessage.Id = ReadMessageId(input);                          break;                      case 2:                          transportMessage.MessageTypeId = ReadMessageTypeId(input);                          break;                      case 3:                          transportMessage.Content = ReadStream(input);                          break;                      case 4:                          transportMessage.Originator = ReadOriginatorInfo(input);                          break;                      case 5:                          transportMessage.Environment = input.ReadString();                          break;                      case 6:                          transportMessage.WasPersisted = input.ReadBool();                          break;                      case 7:                          transportMessage.PersistentPeerIds = ReadPeerIds(input' transportMessage.PersistentPeerIds);                          break;                      default:                          SkipUnknown(input' wireType);                          break;                  }
Magic Number,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadOriginatorInfo,The following statement contains a magic number: switch (number)                  {                      case 1:                          senderId = ReadPeerId(input);                          break;                      case 2:                          senderEndPoint = input.ReadString();                          break;                      case 5:                          initiatorUserName = input.ReadString();                          break;                      default:                          SkipUnknown(input' wireType);                          break;                  }
Magic Number,Abc.Zebus.Transport,TransportMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageReader.cs,ReadOriginatorInfo,The following statement contains a magic number: switch (number)                  {                      case 1:                          senderId = ReadPeerId(input);                          break;                      case 2:                          senderEndPoint = input.ReadString();                          break;                      case 5:                          initiatorUserName = input.ReadString();                          break;                      default:                          SkipUnknown(input' wireType);                          break;                  }
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(2 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(2 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(2 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(3 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(3 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(3 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(4 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(4 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(4 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(5 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(5 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteTransportMessage,The following statement contains a magic number: output.WriteRawTag(5 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WritePersistentPeerIds,The following statement contains a magic number: output.WriteRawTag(7 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WritePersistentPeerIds,The following statement contains a magic number: output.WriteRawTag(7 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WritePersistentPeerIds,The following statement contains a magic number: output.WriteRawTag(7 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WritePersistentPeerIds,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WritePersistentPeerIds,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(1 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(2 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(2 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(2 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(3 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(3 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(3 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(5 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(5 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,Write,The following statement contains a magic number: output.WriteRawTag(5 << 3 | 2);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,GetUtf8ByteCount,The following statement contains a magic number: c[index] >= 128
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteWasPersisted,The following statement contains a magic number: output.WriteRawTag(6 << 3 | 0);
Magic Number,Abc.Zebus.Transport,TransportMessageWriter,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\TransportMessageWriter.cs,WriteWasPersisted,The following statement contains a magic number: output.WriteRawTag(6 << 3 | 0);
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: SendHighWaterMark = 20000;
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: SendTimeout = 100.Milliseconds();
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: SendRetriesBeforeSwitchingToClosedState = 2;
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: ClosedStateDurationAfterSendFailure = 15.Seconds();
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: ClosedStateDurationAfterConnectFailure = 2.Minutes();
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: ReceiveHighWaterMark = 40000;
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: ReceiveTimeout = 300.Milliseconds();
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: KeepAlive = KeepAliveOptions.On(30.Seconds()' 3.Seconds());
Magic Number,Abc.Zebus.Transport,ZmqSocketOptions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqSocketOptions.cs,ZmqSocketOptions,The following statement contains a magic number: KeepAlive = KeepAliveOptions.On(30.Seconds()' 3.Seconds());
Magic Number,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,Start,The following statement contains a magic number: _logger.InfoFormat("Loaded ZMQ v{0}"' zmqVersion.ToString(3));
Magic Number,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,Start,The following statement contains a magic number: throw new InvalidOperationException($"Expected ZMQ v4.*' loaded ZMQ v{zmqVersion.ToString(3)}");
Magic Number,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,Start,The following statement contains a magic number: zmqVersion.Major != 4
Magic Number,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,Stop,The following statement contains a magic number: !_disconnectThread.Join(30.Seconds())
Magic Number,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,Stop,The following statement contains a magic number: !_outboundThread.Join(30.Seconds())
Magic Number,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,Stop,The following statement contains a magic number: !_inboundThread.Join(30.Seconds())
Magic Number,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,GracefullyDisconnectInboundSocket,The following statement contains a magic number: (inputStream = inboundSocket.Receive(100.Milliseconds())) != null
Magic Number,Abc.Zebus.Transport,ZmqTransport,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\ZmqTransport.cs,DisconnectProc,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Abc.Zebus.Transport.Zmq,ZmqSocket,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Transport\Zmq\ZmqSocket.cs,GetOptionString,The following statement contains a magic number: const int bufSize = 256;
Magic Number,Abc.Zebus.Util,TimeSpanCreation,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\TimeSpanCreation.cs,Weeks,The following statement contains a magic number: return TimeSpan.FromDays(i * 7);
Magic Number,Abc.Zebus.Util,TypeUtil,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Util\TypeUtil.cs,GetFullnameWithNoAssemblyOrVersion,The following statement contains a magic number: builder.Length -= 2;
Missing Default,Abc.Zebus.Directory,PeerDirectoryClient,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Directory\PeerDirectoryClient.cs,ProcessMessagesReceivedDuringRegister,The following switch statement is missing a default case: switch (message)                      {                          case PeerStarted msg:                              Handle(msg);                              break;                            case PeerStopped msg:                              Handle(msg);                              break;                            case PeerDecommissioned msg:                              Handle(msg);                              break;                            case PeerSubscriptionsUpdated msg:                              Handle(msg);                              break;                            case PeerSubscriptionsForTypesUpdated msg:                              Handle(msg);                              break;                            case PeerNotResponding msg:                              Handle(msg);                              break;                            case PeerResponding msg:                              Handle(msg);                              break;                      }
Missing Default,Abc.Zebus.Dispatch,MessageDispatcher,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageDispatcher.cs,Dispatch,The following switch statement is missing a default case: switch (_status)              {                  case MessageDispatcherStatus.Stopped:                      throw new InvalidOperationException("MessageDispatcher is stopped");                    case MessageDispatcherStatus.Stopping:                      if (dispatch.IsLocal)                          break;                        throw new InvalidOperationException("MessageDispatcher is stopping");              }
Missing Default,Abc.Zebus.Dispatch,MessageDispatcher,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus\Dispatch\MessageDispatcher.cs,Start,The following switch statement is missing a default case: switch (_status)              {                  case MessageDispatcherStatus.Started:                      return;                    case MessageDispatcherStatus.Stopping:                      throw new InvalidOperationException("MessageDispatcher is stopping");              }
