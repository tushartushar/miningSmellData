Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,Write,Cyclomatic complexity of the method is 8
Long Identifier,Abc.Zebus.Persistence.CQL.Storage,CqlMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlMessageReader.cs,GetUnackedMessages,The length of the parameter oldestNonAckedMessageTimestampInTicks is 37.
Long Identifier,Abc.Zebus.Persistence.CQL.Storage,CqlMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlMessageReader.cs,GetNonAckedMessagesInBucket,The length of the parameter oldestNonAckedMessageTimestampInTicks is 37.
Long Identifier,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,UpdateNewOldestMessageTimestamp,The length of the parameter newOldestUnackedTimestampMinusSafetyOffset is 42.
Long Identifier,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,CleanBuckets,The length of the parameter oldestUnackedMessageTimestampInTicks is 36.
Long Identifier,Abc.Zebus.Persistence.CQL.Storage,PeerState,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\PeerState.cs,PeerState,The length of the parameter oldestNonAckedMessageTimestamp is 30.
Long Identifier,Abc.Zebus.Persistence.CQL.Storage,PeerState,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\PeerState.cs,,The length of the parameter OldestNonAckedMessageTimestampSafetyOffset is 42.
Long Statement,Abc.Zebus.Persistence.CQL.PeriodicAction,OldestNonAckedMessageUpdaterPeriodicAction,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\PeriodicAction\OldestNonAckedMessageUpdaterPeriodicAction.cs,DoPeriodicAction,The length of the statement  "            var isGlobalCheck = SystemDateTime.UtcNow >= _lastGlobalCheck.Add(_configuration.OldestMessagePerPeerGlobalCheckPeriod); " is 120.
Long Statement,Abc.Zebus.Persistence.CQL.PeriodicAction,OldestNonAckedMessageUpdaterPeriodicAction,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\PeriodicAction\OldestNonAckedMessageUpdaterPeriodicAction.cs,DoPeriodicAction,The length of the statement  "            var updatedPeers = _nonAckedCountCache.GetUpdatedValues(peersToCheck.Select(x => new NonAckedCount(x.PeerId' x.NonAckedMessageCount))); " is 135.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlMessageReader.cs,GetUnackedMessages,The length of the statement  "            _log.Info($"Reading messages for peer {_peerState.PeerId} from {oldestNonAckedMessageTimestampInTicks} ({new DateTime(oldestNonAckedMessageTimestampInTicks).ToLongTimeString()})"); " is 180.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlMessageReader.cs,GetNonAckedMessagesInBucket,The length of the statement  "                               .Execute(_preparedStatement.Bind(_peerState.PeerId.ToString()' bucketId' oldestNonAckedMessageTimestampInTicks).SetPageSize(10 * 1000)) " is 135.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,Write,The length of the statement  "            _reporter.AddStorageReport(entriesToPersist.Count' entriesToPersist.Sum(msg => msg.MessageBytes?.Length ?? 0)' fattestMessage.MessageBytes?.Length ?? 0' fattestMessage.MessageTypeName); " is 185.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,Write,The length of the statement  "                var shouldInvestigatePeer = _configuration.PeerIdsToInvestigate != null && _configuration.PeerIdsToInvestigate.Contains(matcherEntry.PeerId.ToString()); " is 152.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,Write,The length of the statement  "                    _log.Info($"Storage requested for peer {matcherEntry.PeerId}' Type: {matcherEntry.Type}' Message Id: {matcherEntry.MessageId}"); " is 128.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,Write,The length of the statement  "                    var shouldInvestigatePeer = _configuration.PeerIdsToInvestigate != null && _configuration.PeerIdsToInvestigate.Contains(matcherEntry.PeerId.ToString()); " is 152.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,Write,The length of the statement  "                        _log.Info($"Storage done for peer {matcherEntry.PeerId}' Type: {matcherEntry.Type}' Message Id: {matcherEntry.MessageId}' TaskResult: {t.Status}"); " is 147.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,UpdateNewOldestMessageTimestamp,The length of the statement  "            var newOldestUnackedTimestampMinusSafetyOffset = GetOldestUnackedMessageTimestampInTicks(peer) - PeerState.OldestNonAckedMessageTimestampSafetyOffset.Ticks; " is 156.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,UpdateNewOldestMessageTimestamp,The length of the statement  "                _log.Warn($"OldestNonAckedMessageTimestampInTicks moved backward for {peer.PeerId}' Value: {new DateTime(newOldestUnackedTimestampMinusSafetyOffset)}"); " is 152.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,GetOldestUnackedMessageTimestampInTicks,The length of the statement  "                                   .Where(x => x.PeerId == peerId && x.BucketId == bucketId && x.UniqueTimestampInTicks >= peer.OldestNonAckedMessageTimestampInTicks) " is 131.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,PeerStateRepository,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\PeerStateRepository.cs,Initialize,The length of the statement  "                var peerState = new PeerState(new PeerId(cassandraPeerState.PeerId)' cassandraPeerState.NonAckedMessageCount' cassandraPeerState.OldestNonAckedMessageTimestamp); " is 161.
Long Statement,Abc.Zebus.Persistence.CQL.Storage,PeerStateRepository,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\PeerStateRepository.cs,RemovePersistentMessages,The length of the statement  "            var allPossibleBuckets = BucketIdHelper.GetBucketsCollection(SystemDateTime.UtcNow.Ticks - PeerState.MessagesTimeToLive.Ticks).ToArray(); " is 137.
Long Statement,Abc.Zebus.Persistence.CQL.Util,CassandraCqlSessionManager,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\CassandraCqlSessionManager.cs,GetSession,The length of the statement  "            var cluster = GetOrCreateCluster(configuration.Hosts' configuration.KeySpace' configuration.QueryTimeout' configuration.LocalDataCenter); " is 137.
Long Statement,Abc.Zebus.Persistence.CQL.Util,CassandraCqlSessionManager,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\CassandraCqlSessionManager.cs,GetCluster,The length of the statement  "            return GetOrCreateCluster(configuration.Hosts' configuration.KeySpace' configuration.QueryTimeout' configuration.LocalDataCenter); " is 130.
Magic Number,Abc.Zebus.Persistence.CQL.PeriodicAction,OldestNonAckedMessageUpdaterPeriodicAction,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\PeriodicAction\OldestNonAckedMessageUpdaterPeriodicAction.cs,DoPeriodicAction,The following statement contains a magic number: Parallel.ForEach(peersToCheck' new ParallelOptions { MaxDegreeOfParallelism = 10 }' UpdateOldestNonAckedMessage);
Magic Number,Abc.Zebus.Persistence.CQL.Storage,CqlMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlMessageReader.cs,GetNonAckedMessagesInBucket,The following statement contains a magic number: return _dataContext.Session                                 .Execute(_preparedStatement.Bind(_peerState.PeerId.ToString()' bucketId' oldestNonAckedMessageTimestampInTicks).SetPageSize(10 * 1000))                                 .Where(x => !x.GetValue<bool>("IsAcked"))                                 .Select(row => row.GetValue<byte[]>("TransportMessage"));
Magic Number,Abc.Zebus.Persistence.CQL.Storage,CqlMessageReader,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlMessageReader.cs,GetNonAckedMessagesInBucket,The following statement contains a magic number: return _dataContext.Session                                 .Execute(_preparedStatement.Bind(_peerState.PeerId.ToString()' bucketId' oldestNonAckedMessageTimestampInTicks).SetPageSize(10 * 1000))                                 .Where(x => !x.GetValue<bool>("IsAcked"))                                 .Select(row => row.GetValue<byte[]>("TransportMessage"));
Magic Number,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,Write,The following statement contains a magic number: var gotSlot = remaining.Wait(TimeSpan.FromSeconds(10));
Magic Number,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,Write,The following statement contains a magic number: var rowTimestamp = matcherEntry.IsAck ? messageDateTime.AddTicks(10) : messageDateTime;
Magic Number,Abc.Zebus.Persistence.CQL.Storage,CqlStorage,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Storage\CqlStorage.cs,ToUnixMicroSeconds,The following statement contains a magic number: var diffInMicroSeconds = diff.Ticks / 10;
Magic Number,Abc.Zebus.Persistence.CQL.Util,MessageIdExtensions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\MessageIdExtensions.cs,GetDateTimeForV2OrV3,The following statement contains a magic number: var isInvalidDateTime = dateTime.Year > DateTime.UtcNow.Year + 2;
Magic Number,Abc.Zebus.Persistence.CQL.Util,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\MessageIdExtensions.cs,GetJavaTicks,The following statement contains a magic number: mostSigBits = (mostSigBits << 8) | (bytes[i] & 0xff);
Magic Number,Abc.Zebus.Persistence.CQL.Util,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\MessageIdExtensions.cs,GetJavaTicks,The following statement contains a magic number: i < 8
Magic Number,Abc.Zebus.Persistence.CQL.Util,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\MessageIdExtensions.cs,GetJavaTicks,The following statement contains a magic number: return (mostSigBits & 0x0FFFL) << 48 | ((mostSigBits >> 16) & 0x0FFFFL) << 32 | (long)((ulong)mostSigBits >> 32);
Magic Number,Abc.Zebus.Persistence.CQL.Util,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\MessageIdExtensions.cs,GetJavaTicks,The following statement contains a magic number: return (mostSigBits & 0x0FFFL) << 48 | ((mostSigBits >> 16) & 0x0FFFFL) << 32 | (long)((ulong)mostSigBits >> 32);
Magic Number,Abc.Zebus.Persistence.CQL.Util,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\MessageIdExtensions.cs,GetJavaTicks,The following statement contains a magic number: return (mostSigBits & 0x0FFFL) << 48 | ((mostSigBits >> 16) & 0x0FFFFL) << 32 | (long)((ulong)mostSigBits >> 32);
Magic Number,Abc.Zebus.Persistence.CQL.Util,MessageIdV2,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Persistence.CQL\Util\MessageIdExtensions.cs,GetJavaTicks,The following statement contains a magic number: return (mostSigBits & 0x0FFFL) << 48 | ((mostSigBits >> 16) & 0x0FFFFL) << 32 | (long)((ulong)mostSigBits >> 32);
