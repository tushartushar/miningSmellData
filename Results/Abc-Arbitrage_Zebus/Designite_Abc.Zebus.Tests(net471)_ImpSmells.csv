Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_send_MessageProcessingFailed_if_unable_to_deserialize_message,The length of the parameter processingFailedTransportMessage is 32.
Long Identifier,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,subscriptions_sent_to_the_directory_should_always_be_more_recent_than_the_previous,The length of the parameter highestSubscriptionVersionOnEachUpdate is 38.
Long Identifier,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,CaptureHighestVersionOnUpdate,The length of the parameter highestSubscriptionVersionOnEachUpdate is 38.
Long Identifier,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,CaptureHighestVersionOnUpdate,The length of the parameter highestSubscriptionVersionNumber is 32.
Long Identifier,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_ignore_old_subscription_update_on_PeerSubscriptionsUpdated,The length of the parameter peerDescriptorWithNewSubscription is 33.
Long Identifier,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_enqueue_async_continuations_on_dispatch_queue_when_requested,The length of the parameter firstMessageDispatchQueueBeforeAwait is 36.
Long Identifier,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_enqueue_async_continuations_on_dispatch_queue_when_requested,The length of the parameter firstMessageDispatchQueueAfterAwait is 35.
Long Identifier,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_enqueue_async_continuations_on_dispatch_queue_when_requested,The length of the parameter secondMessageDispatchQueueBeforeAwait is 37.
Long Identifier,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_enqueue_async_continuations_on_dispatch_queue_when_requested,The length of the parameter secondMessageDispatchQueueAfterAwait is 36.
Long Identifier,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_switching_to_safety_phase,The length of the parameter replayedMessageToPlayAfterStack is 31.
Long Identifier,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_handle_execution_completion_received,The length of the parameter messageExecutionCompletedTransportMessage is 41.
Long Statement,Abc.Zebus.Tests,Log4netConfigurator,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Log4netConfigurator.cs,Setup,The length of the statement  "            XmlConfigurator.Configure(LoggerManager.GetRepository(typeof(Log4netConfigurator).Assembly)' new FileInfo(configurationFile)); " is 126.
Long Statement,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,should_not_generate_identical_MessageIds_when_multiple_buses_are_started_in_different_app_domains_simultaneously,The length of the statement  "            var appDomainProxies = Enumerable.Range(0' appDomainsToGenerate).Select(i => CreateMessageIdCallerFromNewAppDomain()).ToList(); " is 127.
Long Statement,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,CreateMessageIdCallerFromNewAppDomain,The length of the statement  "            return (MessageIdProxy)newAppDomain.CreateInstanceAndUnwrap(typeof(MessageIdProxy).Assembly.FullName' "Abc.Zebus.Tests.MessageIdTests+MessageIdProxy"); " is 151.
Long Statement,Abc.Zebus.Tests,MessageUtilTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageUtilTests.cs,should_resolve_generic_type,The length of the statement  "            resolvingMessageTypeId.GetMessageType().ShouldEqual(typeof(GenericEvent<senderVersion::VersionedLibrary.SimpleContainer>)); " is 123.
Long Statement,Abc.Zebus.Tests,SerializationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SerializationTests.cs,should_serialize_messages,The length of the statement  "                new TransportMessage(new MessageTypeId("lol")' new MemoryStream(new byte[] { 1' 2' 3 })' new PeerId("peer")' "endpoint")' " is 121.
Long Statement,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,should_create_subscription_from_complex_predicate,The length of the statement  "            var subscription = Subscription.Matching<FakeRoutableCommand>(x => x.Id == 12 && x.OtherId == otherId && x.Name == "name"); " is 123.
Long Statement,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,should_create_subscription_from_complex_predicate_with_enum,The length of the statement  "            var subscription = Subscription.Matching<FakeRoutableCommandWithEnum>(x => x.Test1 == TestEnum1.Bar && x.Test2 == TestEnum2.Buz); " is 129.
Long Statement,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,UpdatePeerSubscriptionsCommand_should_have_meaningfull_to_string,The length of the statement  "                    $"PeerId: {peerId}' TimestampUtc: {DateTime.Today:yyyy-MM-dd HH:mm:ss.fff}' Subscriptions: [{string.Join("' "' subscriptions.AsEnumerable())}]"); " is 145.
Long Statement,Abc.Zebus.Tests,TestDataBuilder,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\TestDataBuilder.cs,CreateTransportMessage,The length of the statement  "            return new TransportMessage(new MessageTypeId(typeof(TMessage))' content' new PeerId("Abc.Testing.0")' "tcp://testing:1234") " is 124.
Long Statement,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,CreateAndStartSender,The length of the statement  "                .ConfigureContainer(x => x.For<ZmqSocketOptions>().Use(new ZmqSocketOptions { SendHighWaterMark = 100000' SendTimeout = 10.Second() })) " is 135.
Long Statement,Abc.Zebus.Tests.Core,BusTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,Setup,The length of the statement  "            _bus = new Bus(_transport' _directoryMock.Object' _messageSerializer' _messageDispatcherMock.Object' new DefaultMessageSendingStrategy()' new DefaultStoppingStrategy()' Mock.Of<IBindingKeyPredicateBuilder>()' _configuration.Object); " is 232.
Long Statement,Abc.Zebus.Tests.Core,BusTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,SetupDispatch,The length of the statement  "            _messageDispatcherMock.Setup(x => x.Dispatch(It.Is<MessageDispatch>(dispatch => dispatch.Message.DeepCompare(message)))) " is 120.
Long Statement,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,shoud_send_a_completion_message_without_error_code,The length of the statement  "                    var messageExecutionCompleted = new MessageExecutionCompleted(transportMessageReceived.Id' 0' null).ToTransportMessage(_self); " is 126.
Long Statement,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,should_not_send_completion_when_message_is_PersistMessageCommand,The length of the statement  "                    var cmd = new PersistMessageCommand(new FakeCommand(123).ToTransportMessage()' new List<PeerId> {new PeerId("Peer.Id")}); " is 121.
Long Statement,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,shoud_send_a_completion_message_with_error_code_on_exception,The length of the statement  "                    var expectedTransportMessage = new MessageExecutionCompleted(transportMessageReceived.Id' 1' null).ToTransportMessage(_self); " is 125.
Long Statement,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,shoud_send_a_completion_message_with_domain_exception_error_code_and_message,The length of the statement  "                    var expectedTransportMessage = new MessageExecutionCompleted(transportMessageReceived.Id' domainExceptionValue' domainExceptionMessage).ToTransportMessage(_self); " is 162.
Long Statement,Abc.Zebus.Tests.Core,Core,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Core.cs,should_configure_transport_when_configured,The length of the statement  "                var bus = new Bus(transportMock.Object' new Mock<IPeerDirectory>().Object' null' null' new DefaultMessageSendingStrategy()' new DefaultStoppingStrategy()' Mock.Of<IBindingKeyPredicateBuilder>()' _configuration.Object); " is 218.
Long Statement,Abc.Zebus.Tests.Core,Core,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Core.cs,should_initialize_transport_and_register_on_directory,The length of the statement  "                _directoryMock.Setup(x => x.RegisterAsync(_bus' It.Is<Peer>(p => p.DeepCompare(_self))' It.IsAny<IEnumerable<Subscription>>())) " is 127.
Long Statement,Abc.Zebus.Tests.Core,Core,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Core.cs,should_forward_initiator_id,The length of the statement  "                    using (MessageContext.SetCurrent(MessageContext.CreateTest(new OriginatorInfo(_peerUp.Id' _peerUp.EndPoint' null' "x.initiator")))) " is 131.
Long Statement,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_send_MessageProcessingFailed_if_unable_to_deserialize_message,The length of the statement  "                    var messageProcessingFailedBytes = new MessageProcessingFailed(null' null' null' DateTime.UtcNow' null).ToTransportMessage().Content; " is 133.
Long Statement,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_send_MessageProcessingFailed_if_unable_to_deserialize_message,The length of the statement  "                    var processingFailedTransportMessage = new TransportMessage(MessageUtil.TypeId<MessageProcessingFailed>()' messageProcessingFailedBytes' _self); " is 144.
Long Statement,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_create_custom_message_dispatch_for_PersistMessageCommand,The length of the statement  "                persistCommand.TransportMessage.ShouldHaveSamePropertiesAs(transportMessage' "IsPersistTransportMessage"' "PersistentPeerIds"); " is 127.
Long Statement,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_stop_dispatcher_before_transport,The length of the statement  "                var bus = new Bus(transportMock.Object' _directoryMock.Object' _messageSerializer' _messageDispatcherMock.Object' new DefaultMessageSendingStrategy()' new DefaultStoppingStrategy()' Mock.Of<IBindingKeyPredicateBuilder>()' _configuration.Object); " is 245.
Long Statement,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_MessageProcessingFailed_on_command_error,The length of the statement  "                    var expectedTransportMessage = new MessageProcessingFailed(transportMessageReceived' commandJson' exception.ToString()' SystemDateTime.UtcNow' new[] { typeof(FakeMessageHandler).FullName }).ToTransportMessage(_self); " is 216.
Long Statement,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_MessageProcessingFailed_on_dispatch_error,The length of the statement  "                    var expectedTransportMessage = new MessageProcessingFailed(transportMessageReceived' commandJson' exception.ToString()' SystemDateTime.UtcNow' new[] { typeof(FakeMessageHandler).FullName }).ToTransportMessage(_self); " is 216.
Long Statement,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_MessageProcessingFailed_on_event_error,The length of the statement  "                    var expectedTransportMessage = new MessageProcessingFailed(transportMessageReceived' messageJson' exception.ToString()' SystemDateTime.UtcNow' new[] { typeof(FakeMessageHandler).FullName }).ToTransportMessage(_self); " is 216.
Long Statement,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_MessageProcessingFailed_on_error_with_local_processing,The length of the statement  "                    var expectedTransportMessage = new MessageProcessingFailed(command.ToTransportMessage(_self)' commandJson' exception.ToString()' SystemDateTime.UtcNow' new[] { typeof(FakeMessageHandler).FullName }).ToTransportMessage(_self); " is 225.
Long Statement,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_int,The length of the statement  "                    var expectedTransportMessage = new MessageExecutionCompleted(transportMessageReceived.Id' commandReply' null).ToTransportMessage(_self); " is 136.
Long Statement,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_int_and_a_message,The length of the statement  "                    var expectedTransportMessage = new MessageExecutionCompleted(transportMessageReceived.Id' commandReply' replyMessage).ToTransportMessage(_self); " is 144.
Long Statement,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_object,The length of the statement  "                    var expectedExecutionCompleted = MessageExecutionCompleted.Success(transportMessageReceived.Id' commandResult' _messageSerializer); " is 131.
Long Statement,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_not_consider_if_peer_is_up_to_send_commands,The length of the statement  "                    _transport.ExpectExactly(new TransportMessageSent(command.ToTransportMessage(_self)' isTargetPeerUp ? _peerUp : _peerDown)); " is 124.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_subscribe_to_message_but_not_resend_existing_subscriptions,The length of the statement  "                subscriptions.ShouldContain(new SubscriptionsForType(MessageUtil.TypeId<FakeRoutableCommand>()' new BindingKey("1"' "name"' "*"))); " is 131.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_resend_existing_bindings_when_making_a_new_subscription_to_a_type,The length of the statement  "                subscriptions.ShouldContain(new SubscriptionsForType(MessageUtil.TypeId<FakeRoutableCommand>()' new BindingKey("1"' "firstRoutingValue"' "*")' new BindingKey("1"' "secondRoutingValue"' "*"))); " is 192.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,can_batch_subscribe,The length of the statement  "                _directoryMock.CaptureEnumerable((IBus)_bus' (x' bus' items) => x.UpdateSubscriptionsAsync(bus' items)' directorySubscriptions); " is 128.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,can_batch_and_dispose_empty_subscribe_list,The length of the statement  "                _directoryMock.CaptureEnumerable((IBus)_bus' (x' bus' items) => x.UpdateSubscriptionsAsync(bus' items)' new List<SubscriptionsForType>()); " is 138.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_unsubscribe_to_batch,The length of the statement  "                _directoryMock.CaptureEnumerable((IBus)_bus' (x' bus' items) => x.UpdateSubscriptionsAsync(bus' items)' directorySubscriptions); " is 128.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_unsubscribe_to_batch,The length of the statement  "                directorySubscriptions.ExpectedSingle().ShouldEqual(new SubscriptionsForType(MessageUtil.TypeId<FakeRoutableCommand>())); " is 121.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_unsubscribe_static_subscription,The length of the statement  "                _directoryMock.CaptureEnumerable((IBus)_bus' (x' bus' items) => x.UpdateSubscriptionsAsync(bus' items)' directorySubscriptions); " is 128.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_unsubscribe_static_subscription,The length of the statement  "                directorySubscriptions.ExpectedSingle().ShouldEqual(new SubscriptionsForType(MessageUtil.TypeId<FakeRoutableCommand>()' BindingKey.Empty)); " is 139.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_unsubscribe_when_last_subscription_is_disposed,The length of the statement  "                lastDirectorySubscriptions.ExpectedSingle().BindingKeys.ShouldBeEquivalentTo(new[] { new BindingKey("1"' "toto"' "*") }); " is 121.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_auto_subscribe,The length of the statement  "                _directoryMock.Setup(x => x.RegisterAsync(_bus' It.Is<Peer>(p => p.DeepCompare(_self))' It.IsAny<IEnumerable<Subscription>>())) " is 127.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_auto_subscribe_twice_to_messages_with_multiple_handlers,The length of the statement  "                _directoryMock.Setup(x => x.RegisterAsync(_bus' It.Is<Peer>(p => p.DeepCompare(_self))' It.IsAny<IEnumerable<Subscription>>())) " is 127.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_subscribe_with_dynamic_handler,The length of the statement  "                _messageDispatcherMock.Setup(x => x.AddInvoker(It.IsAny<DynamicMessageHandlerInvoker>())).Callback((IMessageHandlerInvoker i) => invokers.Add(i)); " is 146.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_subscribe_to_single_subscription_with_dynamic_handler,The length of the statement  "                _messageDispatcherMock.Setup(x => x.AddInvoker(It.IsAny<DynamicMessageHandlerInvoker>())).Callback((IMessageHandlerInvoker i) => invokers.Add(i)); " is 146.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_keep_subscriptions_after_restart,The length of the statement  "                _directoryMock.Setup(dir => dir.RegisterAsync(It.IsAny<IBus>()' It.IsAny<Peer>()' It.IsAny<IEnumerable<Subscription>>())) " is 121.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_only_call_specific_handler_once_per_type,The length of the statement  "                _messageDispatcherMock.Verify(x => x.AddInvoker(It.Is<IMessageHandlerInvoker>(invoker => invoker.MessageType == typeof(FakeRoutableCommand)))' Times.Once); " is 155.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_only_call_specific_handler_once_per_type,The length of the statement  "                _messageDispatcherMock.Verify(x => x.AddInvoker(It.Is<IMessageHandlerInvoker>(invoker => invoker.MessageType == typeof(FakeCommand)))' Times.Once); " is 147.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_unsubscribe_when_bus_is_stopped,The length of the statement  "                _directoryMock.Verify(i => i.UpdateSubscriptionsAsync(_bus' It.IsAny<IEnumerable<SubscriptionsForType>>())' Times.Never); " is 121.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_throw_when_batch_is_sent_after_bus_is_stopped,The length of the statement  "                Assert.Throws<AggregateException>(() => submitTask.Wait()).InnerExceptions.ExpectedSingle().ShouldBe<InvalidOperationException>(); " is 130.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_subscribe_after_bus_is_stopped,The length of the statement  "                _directoryMock.Verify(i => i.UpdateSubscriptionsAsync(_bus' It.IsAny<IEnumerable<SubscriptionsForType>>())' Times.Never); " is 121.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,SendParallelSubscriptionUpdates,The length of the statement  "                        await _bus.SubscribeAsync(new SubscriptionRequest(new[] { new Subscription(MessageUtil.TypeId<FakeRoutableCommand>()' new BindingKey(currentVersion.ToString()' string.Empty)) }) " is 177.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,CaptureHighestVersionOnUpdate,The length of the statement  "                _directoryMock.Setup(dir => dir.UpdateSubscriptionsAsync(It.IsAny<IBus>()' It.IsAny<IEnumerable<SubscriptionsForType>>())).Callback( " is 132.
Long Statement,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,CaptureHighestVersionOnUpdate,The length of the statement  "                        var highestSubscriptionVersionNumber = subs.SelectMany(x => x.BindingKeys).Select(x => int.Parse(x.GetPart(0))).OrderBy(x => x).Last(); " is 135.
Long Statement,Abc.Zebus.Tests.Directory,PeerDescriptorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDescriptorTests.cs,should_return_the_corresponding_peer,The length of the statement  "            var descriptor = new PeerDescriptor(new PeerId("theID")' "tcp://endpoint:123"' true' true' true' SystemDateTime.UtcNow' new[] { new Subscription(new MessageTypeId(typeof(string))) }); " is 183.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,Setup,The length of the statement  "            _configurationMock.SetupGet(x => x.DirectoryServiceEndPoints).Returns(new[] { "tcp://main-directory:777"' "tcp://backup-directory:777" }); " is 138.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_register_existing_peer,The length of the statement  "            _bus.AddHandler<RegisterPeerCommand>(x => throw new DomainException(DirectoryErrorCodes.PeerAlreadyExists' "Peer already exists")); " is 131.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_update_peer,The length of the statement  "            var expectedSubscriptions = new[] { SubscriptionsForType.Create<FakeCommand>(new BindingKey("plip")' new BindingKey("plop")) }; " is 127.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_discard_outdated_updates_on_PeerSubscriptionsForTypesUpdated,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(peerDescriptor.PeerId' DateTime.UtcNow' MessageUtil.TypeId<FakeCommand>()' BindingKey.Empty)); " is 149.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_discard_outdated_updates_on_PeerSubscriptionsForTypesUpdated,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(peerDescriptor.PeerId' default(DateTime)' MessageUtil.TypeId<FakeCommand>()' BindingKey.Empty)); " is 151.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_update_started_peer_with_no_timestamp_on_PeerSubscriptionsForTypesUpdated,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(peerDescriptor.PeerId' default(DateTime)' MessageUtil.TypeId<FakeCommand>()' BindingKey.Empty)); " is 151.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_remove_subscriptions_to_type_when_no_binding_keys_are_provided,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(peerDescriptor.PeerId' default(DateTime)' MessageUtil.TypeId<FakeCommand>())); " is 133.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,unregister_should_be_blocking,The length of the statement  "            var unregistration = Task.Factory.StartNew(() => _directory.UnregisterAsync(_bus)' TaskCreationOptions.LongRunning).WaitForActivation().Unwrap(); " is 145.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_connect_to_next_directory_if_first_is_failing,The length of the statement  "            _bus.AddHandlerForPeer<RegisterPeerCommand>(new PeerId("Abc.Zebus.DirectoryService.1")' x => new RegisterPeerResponse(new PeerDescriptor[0])); " is 142.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_update_peer_handled_message_on_PeerSubscriptionsUpdated,The length of the statement  "            _directory.Handle(new PeerSubscriptionsUpdated(_otherPeer.ToPeerDescriptor(true' typeof(FakeEvent)' typeof(FakeCommand)))); " is 123.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_update_peer_handled_message_on_PeerSubscriptionsForTypesUpdated,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow' MessageUtil.TypeId<FakeCommand>()' BindingKey.Empty)); " is 141.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_ignore_old_subscription_update_on_PeerSubscriptionsForTypesUpdated,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' SystemDateTime.UtcNow.AddMinutes(1)' MessageUtil.TypeId<FakeCommand>()' BindingKey.Empty)); " is 161.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_ignore_old_subscription_update_on_PeerSubscriptionsForTypesUpdated,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' SystemDateTime.UtcNow' MessageUtil.TypeId<FakeCommand>()' BindingKey.Empty)); " is 147.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_consider_timestamp_at_message_type_level,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' SystemDateTime.UtcNow.AddSeconds(20)' MessageUtil.TypeId<FakeCommand>()' BindingKey.Empty)); " is 162.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_consider_timestamp_at_message_type_level,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' SystemDateTime.UtcNow.AddSeconds(10)' MessageUtil.TypeId<FakeEvent>()' BindingKey.Empty)); " is 160.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_return_duplicates_in_peers_handling_messages_after_PeerSubscriptionsForTypesUpdated,The length of the statement  "                new SubscriptionsForType(MessageUtil.TypeId<FakeRoutableCommand>()' Subscription.Matching<FakeRoutableCommand>(x => x.Id == 42).BindingKey)' " is 140.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_have_unique_peer_instance_for_all_messages,The length of the statement  "            _directory.Handle(new PeerStarted(otherPeerWithNewEndPoint1.ToPeerDescriptor(true' typeof(FakeEvent)' typeof(OtherFakeEvent1)))); " is 129.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_have_unique_peer_instance_for_all_messages,The length of the statement  "            _directory.Handle(new PeerStarted(otherPeerWithNewEndPoint2.ToPeerDescriptor(true' typeof(FakeEvent)' typeof(OtherFakeEvent1)' typeof(OtherFakeEvent2)))); " is 154.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddTicks(1)' new MessageTypeId(typeof(OtherFakeEvent3))' new BindingKey("3"))); " is 165.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddTicks(2)' new MessageTypeId(typeof(OtherFakeEvent3))' new BindingKey("3")' new BindingKey("4"))); " is 186.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id'DateTime.UtcNow.AddTicks(2)' new MessageTypeId(typeof(OtherFakeEvent3))' new BindingKey("4"))); " is 164.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_support_null_binding_keys_in_subscriptions_for_types,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddTicks(1)' new MessageTypeId(typeof(FakeEvent))' BindingKey.Empty)); " is 156.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_support_null_binding_keys_in_subscriptions_for_types,The length of the statement  "            Assert.DoesNotThrow(() => _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddTicks(1)' new MessageTypeId(typeof(FakeEvent))' null))); " is 171.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_ignore_outdated_subscriptions_by_type,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddMinutes(1)' new MessageTypeId(typeof(OtherFakeEvent3))' new BindingKey("3"))); " is 167.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_ignore_outdated_subscriptions_by_type,The length of the statement  "            _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddTicks(1)' new MessageTypeId(typeof(OtherFakeEvent3)))); " is 144.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_ignore_subscriptions_received_while_registering,The length of the statement  "                _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddTicks(1)' new MessageTypeId(typeof(FakeEvent))' BindingKey.Empty)); " is 156.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_directory_events_during_the_register,The length of the statement  "                _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddTicks(1)' new MessageTypeId(typeof(FakeEvent))' BindingKey.Empty)); " is 156.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureUpdatePerformance,The length of the statement  "            var subscriptionsByTypeId = subscriptions.GroupBy(x => x.MessageTypeId).ToDictionary(x => x.Key' x => x.Select(s=>s.BindingKey).ToArray()); " is 139.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureUpdatePerformance,The length of the statement  "                    _directory.Handle(new PeerSubscriptionsUpdated(_otherPeer.ToPeerDescriptor(false' subscriptions.Take(subscriptionCount)))); " is 123.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureUpdatePerformance,The length of the statement  "                    _directory.Handle(new PeerSubscriptionsUpdated(_otherPeer.ToPeerDescriptor(false' subscriptions.Take(subscriptionCount)))); " is 123.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureUpdatePerformance,The length of the statement  "                    _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow' subscriptionGroup.Key' subscriptionGroup.Value)); " is 136.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The length of the statement  "                    subscriptions.Add(new Subscription(new MessageTypeId("Abc.Specific" + litePeerIndex + ".PrivateEvent" + subscriptionIndex))); " is 125.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The length of the statement  "                _directory.Handle(new PeerStarted(new PeerDescriptor(new PeerId("Abc.Testing.Peer" + litePeerIndex)' "tcp://testing:11" + litePeerIndex' true' true' true' DateTime.UtcNow' subscriptions.ToArray()))); " is 199.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The length of the statement  "                _directory.Handle(new PeerStarted(new PeerDescriptor(new PeerId("Abc.Testing.FatPeer" + fatPeerIndex)' "tcp://testing:22" + fatPeerIndex' true' true' true' DateTime.UtcNow' subscriptions.ToArray()))); " is 200.
Long Statement,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumptionForSingleFatPeer,The length of the statement  "            _directory.Handle(new PeerStarted(new PeerDescriptor(new PeerId("Abc.Testing.FatPeer0")' "tcp://testing:22"' true' true' true' DateTime.UtcNow' subscriptions.ToArray()))); " is 171.
Long Statement,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureStaticSubscriptionsPerformance,The length of the statement  "            var peers = Enumerable.Range(0' 100).Select(x => new Peer(new PeerId("Abc.Testing" + x)' "tcp://testing:" + x)).ToList(); " is 121.
Long Statement,Abc.Zebus.Tests.Dispatch,AsyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\AsyncMessageHandlerInvokerTests.cs,should_instanciate_new_message_context_aware_bus_for_every_handler_without_race_conditions,The length of the statement  "            ((MessageContextAwareBus)handler1.Result.Bus).InnerBus.ShouldEqual(((MessageContextAwareBus)handler2.Result.Bus).InnerBus); " is 123.
Long Statement,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_continue_processing_messages_after_continuation_error,The length of the statement  "            var dispatch = new MessageDispatch(MessageContext.CreateTest()' message1' new TestMessageSerializer()' (d' r) => throw new Exception("Continuation error")); " is 156.
Long Statement,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,EnqueueInvocation,The length of the statement  "            var dispatch = new MessageDispatch(MessageContext.CreateTest()' message' new TestMessageSerializer()' (d' r) => tcs.SetResult(r)); " is 130.
Long Statement,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,EnqueueAsyncInvocation,The length of the statement  "            var dispatch = new MessageDispatch(MessageContext.CreateTest()' message' new TestMessageSerializer()' (d' r) => tcs.SetResult(r)); " is 130.
Long Statement,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,EnqueueBatchedInvocation,The length of the statement  "            var dispatch = new MessageDispatch(MessageContext.CreateTest()' message' new TestMessageSerializer()' (d' r) => tcs.SetResult(r)); " is 130.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,CreateAndStartDispatcher,The length of the statement  "            messageDispatcher.ConfigureHandlerFilter(type => type != typeof(SyncMessageHandlerInvokerLoaderTests.WrongAsyncHandler)); " is 121.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_find_invokers_from_message_handler,The length of the statement  "            invokers.ShouldContain(x => x.MessageHandlerType == typeof(ScanCommandHandler1) && x.MessageType == typeof(ScanCommand1)); " is 122.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_find_invokers_from_message_handler,The length of the statement  "            invokers.ShouldContain(x => x.MessageHandlerType == typeof(ScanCommandHandler1) && x.MessageType == typeof(ScanCommand2)); " is 122.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_auto_subscribe_to_no_scan_handlers,The length of the statement  "            Attribute.IsDefined(typeof(ScanCommandHandler2)' typeof(NoScanAttribute)).ShouldBeTrue("ScanCommandHandler2 should be [NoScan]"); " is 129.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_auto_subscribe_to_no_scan_handlers,The length of the statement  "            var invoker = _messageDispatcher.GetMessageHanlerInvokers().Single(x => x.MessageHandlerType == typeof(ScanCommandHandler2)); " is 125.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_have_only_one_failing_handler,The length of the statement  "            var invokersCount = _messageDispatcher.GetMessageHanlerInvokers().Count(x => x.MessageType == typeof(AsyncFailingCommand)); " is 123.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_to_event_handler,The length of the statement  "            _messageDispatcher.AddInvoker(new DynamicMessageHandlerInvoker(x => receivedMessage = x' typeof(FakeEvent)' new [] {BindingKey.Empty}' predicateBuilder.Object)); " is 161.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_get_reply_code,The length of the statement  "            var dispatch = new MessageDispatch(context' new ReplyCommand()' new TestMessageSerializer()' (x' r) => replyCode = context.ReplyCode); " is 134.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,Dispatch,The length of the statement  "            var dispatch = new MessageDispatch(MessageContext.CreateTest("u.name")' message' new TestMessageSerializer()' (x' r) => taskCompletionSource.SetResult(r)) " is 154.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The length of the statement  "            Wait.Until(() => handler1List.Count == 1 && handler1List[0].HandleStarted' 5.Seconds()' "First handler should be started"); " is 123.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The length of the statement  "            Wait.Until(() => handler2List.Count == 1 && handler2List[0].HandleStarted' 5.Seconds()' "second handler should be started"); " is 124.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The length of the statement  "            Wait.Until(() => handler2List[0].HandleStopped && handler2List[1].HandleStopped' 5.Seconds()' "Both handlers should be run"); " is 125.
Long Statement,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_hang_when_running_invoker_synchronously_in_same_dispatch_queue,The length of the statement  "            _messageDispatcher.ConfigureHandlerFilter(x => x == typeof(ForwardCommandHandler) || x == typeof(SyncCommandHandlerWithQueueName1)); " is 132.
Long Statement,Abc.Zebus.Tests.Dispatch,SyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\SyncMessageHandlerInvokerTests.cs,should_apply_context,The length of the statement  "            var invoker = new SyncMessageHandlerInvoker(container' typeof(MessageContextAwareCommandHandler)' typeof(ScanCommand1)); " is 120.
Long Statement,Abc.Zebus.Tests.Dispatch,SyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\SyncMessageHandlerInvokerTests.cs,should_inject_context_in_handler_constructor,The length of the statement  "            var invoker = new SyncMessageHandlerInvoker(container' typeof(CommandHandlerWithMessageContextInConstructor)' typeof(CommandHandlerWithMessageContextInConstructorCommand)); " is 172.
Long Statement,Abc.Zebus.Tests.Dispatch,SyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\SyncMessageHandlerInvokerTests.cs,should_proxy_bus_with_message_context_aware_bus,The length of the statement  "            var invoker = new SyncMessageHandlerInvoker(container' typeof(CommandHandlerWithThreeConstructorArguments)' typeof(ScanCommand1)); " is 130.
Long Statement,Abc.Zebus.Tests.Dispatch,SyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\SyncMessageHandlerInvokerTests.cs,should_instanciate_new_message_context_aware_bus_for_every_handler,The length of the statement  "            var invoker = new SyncMessageHandlerInvoker(container' typeof(CommandHandlerWithOneConstructorArgument)' typeof(ScanCommand1)); " is 127.
Long Statement,Abc.Zebus.Tests.Dispatch,SyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\SyncMessageHandlerInvokerTests.cs,should_preserve_life_cycle,The length of the statement  "            var invoker = new SyncMessageHandlerInvoker(container' typeof(CommandHandlerWithOneConstructorArgument)' typeof(ScanCommand1)); " is 127.
Long Statement,Abc.Zebus.Tests.Hosting,HostInitializerHelperTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\HostInitializerHelperTests.cs,should_invoke_initializers_in_order,The length of the statement  "            (invertOrder ? initializers.Reverse() : initializers).ForEach(x => x.Setup(init => init.BeforeStart()).InSequence(setupSequence)); " is 130.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportFixture.cs,Setup,The length of the statement  "            PeerDirectory.Setup(dir => dir.GetPeersHandlingMessage(MessageBinding.Default<PersistMessageCommand>())).Returns(new[] { PersistencePeer }); " is 140.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportFixture.cs,Setup,The length of the statement  "            PeerDirectory.Setup(dir => dir.GetPeersHandlingMessage(It.IsAny<StartMessageReplayCommand>())).Returns(new[] { PersistencePeer }); " is 130.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportFixture.cs,Setup,The length of the statement  "            PeerDirectory.Setup(dir => dir.GetPeersHandlingMessage(It.IsAny<PersistMessageCommand>())).Returns(new[] { PersistencePeer }); " is 126.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportFixture.cs,Setup,The length of the statement  "            Transport = new PersistentTransport(configuration.Object' InnerTransport' PeerDirectory.Object' new DefaultMessageSendingStrategy()); " is 133.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportFixture.cs,Setup,The length of the statement  "            var startMessageReplayMessage = InnerTransport.Messages.FirstOrDefault(x => x.TransportMessage.MessageTypeId == MessageUtil.TypeId<StartMessageReplayCommand>()); " is 161.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_switching_to_safety_phase,The length of the statement  "            InnerTransport.RaiseMessageReceived(replayedMessageToPlayAfterStack.ToReplayedTransportMessage(StartMessageReplayCommand.ReplayId)); " is 132.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_handle_execution_completion_received,The length of the statement  "            var messageExecutionCompletedTransportMessage = new MessageExecutionCompleted(MessageId.NextId()' 0' null).ToTransportMessage(); " is 128.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_send_persistent_message_only_to_the_persistence_when_peer_is_down,The length of the statement  "                InnerTransport.ExpectExactly(new TransportMessageSent(message).ToPersistence(PersistencePeer).AddPersistentPeer(downPeer)); " is 123.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,persistent_messages_sent_to_multiple_peers_should_only_be_persisted_for_persistent_ones,The length of the statement  "                    new TransportMessageSent(message).To(AnotherPersistentPeer' true).To(AnotherNonPersistentPeer' false).ToPersistence(PersistencePeer)' " is 133.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_consider_WasPersisted_before_publishing_a_MessageHandled_event,The length of the statement  "                    InnerTransport.ExpectExactly(new TransportMessageSent(new MessageHandled(command.Id).ToTransportMessage(Self)' PersistencePeer)); " is 129.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_persistent_transport_goes_down_and_comes_back_up,The length of the statement  "                InnerTransport.RaiseMessageReceived(new TransportMessage(MessageTypeId.PersistenceStopping' new MemoryStream()' PersistencePeer)); " is 130.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_persistent_transport_goes_down_and_comes_back_up,The length of the statement  "                InnerTransport.ExpectExactly(new TransportMessageSent(new TransportMessage(MessageTypeId.PersistenceStoppingAck' new MemoryStream()' Self)' PersistencePeer)); " is 158.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_send_messages_to_persistence_twice_if_persistence_goes_up_and_down,The length of the statement  "                InnerTransport.RaiseMessageReceived(new TransportMessage(MessageTypeId.PersistenceStopping' new MemoryStream()' PersistencePeer)); " is 130.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_send_messages_to_persistence_twice_if_persistence_goes_up_and_down,The length of the statement  "                InnerTransport.RaiseMessageReceived(new TransportMessage(MessageTypeId.PersistenceStopping' new MemoryStream()' PersistencePeer)); " is 130.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_discard_messages_waiting_for_persistence_on_stop,The length of the statement  "                PeerDirectory.Setup(directory => directory.GetPeersHandlingMessage(new MessageBinding(MessageTypeId.PersistenceStoppingAck' BindingKey.Empty))) " is 143.
Long Statement,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_discard_messages_waiting_for_persistence_on_stop,The length of the statement  "                InnerTransport.RaiseMessageReceived(new TransportMessage(MessageTypeId.PersistenceStopping' new MemoryStream()' PersistencePeer)); " is 130.
Long Statement,Abc.Zebus.Tests.Scan,SyncMessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\SyncMessageHandlerInvokerLoaderTests.cs,should_load_queue_name,The length of the statement  "            var invoker = invokerLoader.LoadMessageHandlerInvokers(TypeSource.FromType<FakeHandlerWithQueueName1>()).ExpectedSingle(); " is 122.
Long Statement,Abc.Zebus.Tests.Scan,SyncMessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\SyncMessageHandlerInvokerLoaderTests.cs,should_switch_to_manual_subscription_mode_when_specified,The length of the statement  "            var invoker = invokerLoader.LoadMessageHandlerInvokers(TypeSource.FromType<FakeHandlerWithManualSubscriptionMode>()).ExpectedSingle(); " is 134.
Long Statement,Abc.Zebus.Tests.Scan,SyncMessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\SyncMessageHandlerInvokerLoaderTests.cs,should_switch_to_auto_subscription_mode_when_specified,The length of the statement  "            var invoker = invokerLoader.LoadMessageHandlerInvokers(TypeSource.FromType<FakeRoutableHandlerWithAutoSubscriptionMode>()).ExpectedSingle(); " is 140.
Long Statement,Abc.Zebus.Tests.Scan,SyncMessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\SyncMessageHandlerInvokerLoaderTests.cs,should_throw_exception_if_method_is_async_void,The length of the statement  "            Assert.Throws<InvalidProgramException>(() => invokerLoader.LoadMessageHandlerInvokers(TypeSource.FromType<WrongAsyncHandler>()).ToList()); " is 138.
Long Statement,Abc.Zebus.Tests.Serialization,MessageSerializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Serialization\MessageSerializerTests.cs,should_serialize_persist_message_command,The length of the statement  "            var persistMessageCommand = new PersistMessageCommand(transportMessage' new PeerId("Abc.Testing.A")' new PeerId("Abc.Testing.B")); " is 130.
Long Statement,Abc.Zebus.Tests.Serialization,MessageSerializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Serialization\MessageSerializerTests.cs,should_serialize_persist_message_command,The length of the statement  "            var serializedTransportMessage = _messageSerializer.ToTransportMessage(persistMessageCommand' _self.Id' _self.EndPoint); " is 120.
Long Statement,Abc.Zebus.Tests.Transport,BackwardCompatibilityTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\BackwardCompatibilityTests.cs,should_read_WasPersisted_as_null_for_older_versions,The length of the statement  "            var expectedMessage = new TransportMessage(new MessageTypeId("lol")' content' originatorInfo) { Id = messageId' WasPersisted = false }; " is 135.
Long Statement,Abc.Zebus.Tests.Transport,BackwardCompatibilityTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\BackwardCompatibilityTests.cs,GetTransportMessageStream_1_4_1,The length of the statement  "            using (var stream = Assembly.GetExecutingAssembly().GetManifestResourceStream("Abc.Zebus.Tests.Transport.transport_message_1_4_1.bin")) " is 135.
Long Statement,Abc.Zebus.Tests.Transport,TransportMessageWriterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\TransportMessageWriterTests.cs,should_serialize_transport_message_with_empty_strings,The length of the statement  "            var deserializedTransportMessage1 = Serializer.Deserialize<TransportMessage>(new MemoryStream(stream.Buffer' 0' stream.Position)); " is 130.
Long Statement,Abc.Zebus.Tests.Transport,TransportMessageWriterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\TransportMessageWriterTests.cs,should_serialize_transport_message_and_set_WasPersisted,The length of the statement  "            var deserializedTransportMessage1 = Serializer.Deserialize<TransportMessage>(new MemoryStream(stream.Buffer' 0' stream.Position)); " is 130.
Long Statement,Abc.Zebus.Tests.Transport,TransportMessageWriterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\TransportMessageWriterTests.cs,should_serialize_transport_message_twice,The length of the statement  "            var deserialized1 = Serializer.Deserialize<TransportMessage_1_5_0>(new MemoryStream(stream.Buffer' 0' stream.Position)); " is 120.
Long Statement,Abc.Zebus.Tests.Transport,TransportMessageWriterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\TransportMessageWriterTests.cs,should_serialize_transport_message_twice,The length of the statement  "            var deserialized2 = Serializer.Deserialize<TransportMessage_1_5_0>(new MemoryStream(stream.Buffer' 0' stream.Position)); " is 120.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportPerformanceTests.cs,CreateAndStartZmqTransport,The length of the statement  "            var transport = new ZmqTransport(configurationMock.Object' new ZmqSocketOptions()' new DefaultZmqOutboundSocketErrorHandler()); " is 127.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_crash_when_stopping_if_it_was_not_started,The length of the statement  "            var transport = new ZmqTransport(configurationMock.Object' new ZmqSocketOptions()' new DefaultZmqOutboundSocketErrorHandler()); " is 127.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_let_the_outbound_thread_die_if_a_peer_cannot_be_resolved,The length of the statement  "            Wait.Until(() => receivedMessages.Count >= 1' 2.Seconds()' "The outbound thread was killed and couldn't connect to the next peer"); " is 131.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_peer_and_persistence,The length of the statement  "            senderTransport.Send(message' new[] { receiverPeer }' new SendContext { PersistentPeerIds = { receiverPeer.Id }' PersistencePeer = persistencePeer }); " is 150.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_peer_and_persistence,The length of the statement  "            messageFromPersistence.ShouldHaveSamePropertiesAs(message' "Environment"' "WasPersisted"' "PersistentPeerIds"' "IsPersistTransportMessage"); " is 140.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_persistence,The length of the statement  "            senderTransport.Send(message' Enumerable.Empty<Peer>()' new SendContext { PersistentPeerIds = { receiverPeerId }' PersistencePeer = persistencePeer }); " is 151.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_persistence,The length of the statement  "            messageFromPersistence.ShouldHaveSamePropertiesAs(message' "Environment"' "WasPersisted"' "PersistentPeerIds"' "IsPersistTransportMessage"); " is 140.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_both_persisted_and_non_persisted_peers,The length of the statement  "            sender.Send(message' new[] { receivingPeer1' receivingPeer2 }' new SendContext { PersistentPeerIds = { receivingPeer1.Id } }); " is 126.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_reuse_a_port_used_in_another_envionment,The length of the statement  "            var expectedPort = TcpUtil.GetRandomUnusedPort() + 5; // scientifical method to determine what port will be used by the transport :P " is 132.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_block_when_hitting_high_water_mark,The length of the statement  "                Wait.Until(() => receviedMessages.Count == expectedMessageCount' 2.Seconds()' "Failed to send message after " + i + " successful sent"); " is 136.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_various_sized_messages,The length of the statement  "            var bigMessage = new TransportMessage(new MessageTypeId(typeof(FakeCommand))' TestDataBuilder.CreateStream(messageBytes)' new PeerId("X")' senderTransport.InboundEndPoint); " is 172.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_various_sized_messages,The length of the statement  "            var smallMessage = new TransportMessage(new MessageTypeId(typeof(FakeCommand))' TestDataBuilder.CreateStream(new byte[1])' new PeerId("X")' senderTransport.InboundEndPoint); " is 173.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_process_all_messages_in_buffer_on_stop,The length of the statement  "            void Log(string text) => Console.WriteLine(DateTime.Now.TimeOfDay + " " + text + Environment.NewLine + Environment.NewLine); " is 124.
Long Statement,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,CreateAndStartZmqTransport,The length of the statement  "            var transport = new ZmqTransport(configurationMock.Object' new ZmqSocketOptions()' new DefaultZmqOutboundSocketErrorHandler()); " is 127.
Long Statement,Abc.Zebus.Tests.Util.Extensions,ExtendTypeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendTypeTests.cs,should_return_attribute,The length of the statement  "            typeof(TestClass).GetAttribute<MyTestingInheritedAttributeAttribute>(false).ShouldEqualDeeply(new MyTestingInheritedAttributeAttribute("Value")); " is 145.
Long Statement,Abc.Zebus.Tests.Util.Extensions,ExtendTypeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendTypeTests.cs,should_return_inherited_attribute,The length of the statement  "            typeof(TestSubClass).GetAttribute<MyTestingAttributeAttribute>(true).ShouldEqualDeeply(new MyTestingInheritedAttributeAttribute("Value")); " is 138.
Long Statement,Abc.Zebus.Tests.Util.Extensions,ExtendTypeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendTypeTests.cs,should_throw_if_more_than_one_attribute_is_defined,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => typeof(TestGenericClass<int>).GetAttribute<MyTestingAttributeAttribute>(false)); " is 127.
Long Statement,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The length of the statement  "            Assert.That(oneAndAHalf.Seconds()' Is.EqualTo(new TimeSpan(days: 0' hours: 0' minutes: 0' seconds: 1' milliseconds: 500))); " is 123.
Empty Catch Block,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,Teardown,The method has an empty catch block.
Magic Number,Abc.Zebus.Tests,DomainExceptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\DomainExceptionTests.cs,should_not_fail_if_expression_returns_direct_value,The following statement contains a magic number: var ex = new DomainException(() => 3712 );
Magic Number,Abc.Zebus.Tests,DomainExceptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\DomainExceptionTests.cs,should_not_fail_if_expression_returns_direct_value,The following statement contains a magic number: ex.ErrorCode.ShouldEqual(3712);
Magic Number,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,should_not_generate_identical_MessageIds_when_multiple_buses_are_started_in_different_app_domains_simultaneously,The following statement contains a magic number: const int appDomainsToGenerate = 100;
Magic Number,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,should_generate_unique_ids,The following statement contains a magic number: var messageIds = new List<MessageId>(200000);
Magic Number,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,should_generate_unique_ids_from_multiple_threads,The following statement contains a magic number: Action taskAction = () =>              {                  for (var i = 0; i < 100000; ++i)                  {                      messageIds.Enqueue(MessageId.NextId());                  }              };
Magic Number,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,should_pause_id_generation_at_given_date,The following statement contains a magic number: var dateInThePast = DateTime.UtcNow.Date.AddDays(-10);
Magic Number,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,MesurePerformances,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 200000;                  x.WarmUpIteration = 10;                  x.Action = _ =>                  {                      for (var i = 0; i < 10; ++i)                      {                          MessageId.NextId();                      }                  };              });
Magic Number,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,MesurePerformances,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 200000;                  x.WarmUpIteration = 10;                  x.Action = _ =>                  {                      for (var i = 0; i < 10; ++i)                      {                          MessageId.NextId();                      }                  };              });
Magic Number,Abc.Zebus.Tests,MessageIdTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\MessageIdTests.cs,MesurePerformances,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 200000;                  x.WarmUpIteration = 10;                  x.Action = _ =>                  {                      for (var i = 0; i < 10; ++i)                      {                          MessageId.NextId();                      }                  };              });
Magic Number,Abc.Zebus.Tests,Program,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Program.cs,RunLocalDispatch,The following statement contains a magic number: var runTask = Task.Run(() =>              {                  using (DispatchQueue.SetCurrentDispatchQueueName(DispatchQueueNameScanner.DefaultQueueName))                  using (MessageContext.SetCurrent(MessageContext.CreateTest()))                  {                      while (running)                      {                          bus.Send(new BusPerformanceTests.PerfCommand(42));                      }                  }              });
Magic Number,Abc.Zebus.Tests,Program,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Program.cs,SendRoutedMessage,The following statement contains a magic number: var value = 42;
Magic Number,Abc.Zebus.Tests,Program,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Program.cs,SendRoutedMessage,The following statement contains a magic number: task.Wait(5.Seconds())
Magic Number,Abc.Zebus.Tests,SerializationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SerializationTests.cs,should_serialize_messages,The following statement contains a magic number: var prebuildObjectTypes = new object[]              {                  MessageId.NextId()'                  new MessageTypeId("X")'                  new TransportMessage(new MessageTypeId("lol")' new MemoryStream(new byte[] { 1' 2' 3 })' new PeerId("peer")' "endpoint")'                  new BindingKey("Abc"' "123")'                  new Peer(new PeerId("Abc.Testing.0")' "tcp://abctest:123"' true' true)'              };
Magic Number,Abc.Zebus.Tests,SerializationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SerializationTests.cs,should_serialize_messages,The following statement contains a magic number: var prebuildObjectTypes = new object[]              {                  MessageId.NextId()'                  new MessageTypeId("X")'                  new TransportMessage(new MessageTypeId("lol")' new MemoryStream(new byte[] { 1' 2' 3 })' new PeerId("peer")' "endpoint")'                  new BindingKey("Abc"' "123")'                  new Peer(new PeerId("Abc.Testing.0")' "tcp://abctest:123"' true' true)'              };
Magic Number,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,should_create_subscription_by_example,The following statement contains a magic number: var subscription = Subscription.ByExample(x => new FakeRoutableCommand(12' "name"));
Magic Number,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,should_create_subscription_from_complex_predicate,The following statement contains a magic number: var subscription = Subscription.Matching<FakeRoutableCommand>(x => x.Id == 12 && x.OtherId == otherId && x.Name == "name");
Magic Number,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,should_be_equatable,The following statement contains a magic number: var subscription1 = Subscription.Matching<FakeRoutableCommand>(x => x.Id == 12 && x.OtherId == otherId);
Magic Number,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,should_be_equatable,The following statement contains a magic number: var subscription2 = Subscription.Matching<FakeRoutableCommand>(x => x.Id == 12 && x.OtherId == otherId);
Magic Number,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,UpdatePeerSubscriptionsCommand_should_have_meaningfull_to_string,The following statement contains a magic number: var subscriptions = new[]              {                  Subscription.Matching<FakeRoutableCommandWithEnum>(x => x.Test1 == TestEnum1.Bar && x.Test2 == TestEnum2.Buz)'                  Subscription.Matching<FakeRoutableCommand>(x => x.Id == 12 && x.OtherId == id)              };
Magic Number,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,MeasurePerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 1000000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscription.Matches(key);              });
Magic Number,Abc.Zebus.Tests,SubscriptionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\SubscriptionTests.cs,MeasurePerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 1000000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscription.Matches(key);              });
Magic Number,Abc.Zebus.Tests,TaskExtensions,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\TaskExtensions.cs,WaitForActivation,The following statement contains a magic number: Wait.Until(                  () =>                  {                      switch (task.Status)                      {                          case TaskStatus.Created:                          case TaskStatus.WaitingToRun:                          case TaskStatus.WaitingForActivation:                              return false;                            default:                              return true;                      }                  }'                  30.Seconds()              );
Magic Number,Abc.Zebus.Tests,TestDataBuilder,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\TestDataBuilder.cs,CreateTransportMessage,The following statement contains a magic number: var content = new byte[1234];
Magic Number,Abc.Zebus.Tests.Core,BusFactoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusFactoryTests.cs,should_dispatch_message_locally,The following statement contains a magic number: var task = bus.Send(new FakeCommand(123));
Magic Number,Abc.Zebus.Tests.Core,BusFactoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusFactoryTests.cs,should_dispatch_message_locally,The following statement contains a magic number: handler.FakeId.ShouldEqual(123);
Magic Number,Abc.Zebus.Tests.Core,BusInMemoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusInMemoryTests.cs,should_be_able_to_use_bus_in_handlers_during_shutdown,The following statement contains a magic number: handler.StartedSignal.WaitOne(5.Seconds()).ShouldBeTrue("Handler was not started");
Magic Number,Abc.Zebus.Tests.Core,BusInMemoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusInMemoryTests.cs,should_be_able_to_use_bus_in_handlers_during_shutdown,The following statement contains a magic number: Wait.Until(() => handler.Processed' 5.Seconds()' "Handler was not processed");
Magic Number,Abc.Zebus.Tests.Core,BusInMemoryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusInMemoryTests.cs,should_be_able_to_use_bus_in_handlers_during_shutdown,The following statement contains a magic number: stopTask.Wait(10.Seconds()).ShouldBeTrue("Bus was not stopped");
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,StartBusAndStopItLikeABoyScout,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,PublishEventWithoutLocalDispatch,The following statement contains a magic number: bus.Publish(new ManualEvent(42));
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,PublishEventWithoutLocalDispatch,The following statement contains a magic number: Wait.Until(() => ManualEventHandler.ReceivedEventCount == 1' 300.Seconds());
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,SendCommandWithoutLocalDispatch,The following statement contains a magic number: bus.Send(new ManualCommand(42)).Wait();
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,SendSleepCommands,The following statement contains a magic number: i < 20
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,should_generate_unacked_messages,The following statement contains a magic number: targetConfig.SetupGet(x => x.RegistrationTimeout).Returns(30.Seconds());
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,should_generate_unacked_messages,The following statement contains a magic number: targetConfig.SetupGet(x => x.StartReplayTimeout).Returns(30.Seconds());
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,should_generate_unacked_messages,The following statement contains a magic number: source.Publish(new ManualEvent(42));
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,should_generate_unacked_messages,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Abc.Zebus.Tests.Core,BusManualTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,should_generate_unacked_messages,The following statement contains a magic number: source.Publish(new ManualEvent(42));
Magic Number,Abc.Zebus.Tests.Core,SleepCommandHandler,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusManualTests.cs,Handle,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureCommandThroughputWithoutPersistence,The following statement contains a magic number: const int messageCount = 300000;
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureEventThroughputWithoutPersistence,The following statement contains a magic number: const int messageCount = 1000 * 1000;
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureEventThroughputWithoutPersistence,The following statement contains a magic number: const int messageCount = 1000 * 1000;
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureEventThroughputWithoutPersistence,The following statement contains a magic number: Thread.SpinWait(1 << 4);
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureEventThroughputWithPersistence,The following statement contains a magic number: const int messageCount = 1000 * 1000;
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureEventThroughputWithPersistence,The following statement contains a magic number: const int messageCount = 1000 * 1000;
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureEventThroughputWithPersistence,The following statement contains a magic number: Thread.SpinWait(1 << 4);
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureLocalDispatch,The following statement contains a magic number: Measure.Execution(500000' () => bus.Send(new PerfCommand(42)));
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,MeasureLocalDispatch,The following statement contains a magic number: Measure.Execution(500000' () => bus.Send(new PerfCommand(42)));
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,CreateAndStartSender,The following statement contains a magic number: return new BusFactory()                  .WithPeerId("Abc.Zebus.Perf.Sender.*")                  .WithConfiguration(new BusConfiguration(false' _directoryEndPoint)' "Dev")                  .ConfigureContainer(x => x.For<ZmqSocketOptions>().Use(new ZmqSocketOptions { SendHighWaterMark = 100000' SendTimeout = 10.Second() }))                  .CreateAndStartBus();
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,CreateAndStartSender,The following statement contains a magic number: return new BusFactory()                  .WithPeerId("Abc.Zebus.Perf.Sender.*")                  .WithConfiguration(new BusConfiguration(false' _directoryEndPoint)' "Dev")                  .ConfigureContainer(x => x.For<ZmqSocketOptions>().Use(new ZmqSocketOptions { SendHighWaterMark = 100000' SendTimeout = 10.Second() }))                  .CreateAndStartBus();
Magic Number,Abc.Zebus.Tests.Core,BusPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,CreateAndStartReceiver,The following statement contains a magic number: return new BusFactory()                  .WithPeerId("Abc.Zebus.Perf.Receiver.*")                  .WithConfiguration(new BusConfiguration(isPersistent' _directoryEndPoint)' "Dev")                  .WithHandlers(typeof(PerfHandler))                  .ConfigureContainer(x => x.For<ZmqSocketOptions>().Use(new ZmqSocketOptions { ReceiveHighWaterMark = 100000 }))                  .CreateAndStartBus();
Magic Number,Abc.Zebus.Tests.Core,BusConfiguration,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusPerformanceTests.cs,BusConfiguration,The following statement contains a magic number: RegistrationTimeout = 10.Second();
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,shoud_not_send_a_completion_message_for_events,The following statement contains a magic number: var @event = new FakeEvent(123);
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,shoud_send_a_completion_message_without_error_code,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,should_not_send_completion_when_message_is_PersistMessageCommand,The following statement contains a magic number: var cmd = new PersistMessageCommand(new FakeCommand(123).ToTransportMessage()' new List<PeerId> {new PeerId("Peer.Id")});
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,shoud_send_a_completion_message_with_error_code_on_exception,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,shoud_send_a_completion_message_with_domain_exception_error_code_and_message,The following statement contains a magic number: const int domainExceptionValue = 5000;
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,shoud_send_a_completion_message_with_domain_exception_error_code_and_message,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,should_release_task_when_completion_message_is_sent,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,should_release_task_when_completion_message_is_sent,The following statement contains a magic number: var receivedAck = task.Wait(500);
Magic Number,Abc.Zebus.Tests.Core,CompletionMessages,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.CompletionMessages.cs,should_not_continue_execution_after_awaiting_a_send_in_the_MessageReceived_thread,The following statement contains a magic number: var command = new FakeCommand(456);
Magic Number,Abc.Zebus.Tests.Core,Core,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Core.cs,should_fire_events_starting_and_started_when_calling_start,The following statement contains a magic number: startedEventCalled.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Core,Core,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Core.cs,should_fire_event_stopping_and_stopped_when_calling_Stop,The following statement contains a magic number: stoppedEventCalled.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Core,Core,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Core.cs,should_forward_initiator_id,The following statement contains a magic number: var receivedCommand = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,Core,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Core.cs,should_forward_initiator_id,The following statement contains a magic number: var eventToPublish = new FakeEvent(456);
Magic Number,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,Setup,The following statement contains a magic number: _bus.DeserializationFailureDumpDirectoryPath = PathUtil.InBaseDirectory(Guid.NewGuid().ToString().Substring(0' 4));
Magic Number,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_send_MessageProcessingFailed_if_unable_to_deserialize_message,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_send_MessageProcessingFailed_when_error_publication_os_not_enabled,The following statement contains a magic number: _transport.RaiseMessageReceived(new FakeCommand(123).ToTransportMessage());
Magic Number,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_include_exception_in_MessageProcessingFailed,The following statement contains a magic number: _transport.RaiseMessageReceived(new FakeCommand(123).ToTransportMessage());
Magic Number,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_include_dump_path_in_MessageProcessingFailed,The following statement contains a magic number: _transport.RaiseMessageReceived(new FakeCommand(123).ToTransportMessage());
Magic Number,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_ack_transport_when_handling_undeserializable_message,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_dump_incoming_message_if_unable_to_deserialize_it,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DeserializationErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DeserializationErrors.cs,should_dump_incoming_message_if_unable_to_deserialize_it,The following statement contains a magic number: File.ReadAllBytes(dumpFileName).Length.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_dispatch_received_message,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_handle_command_locally,The following statement contains a magic number: var completed = _bus.Send(command).Wait(500);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_forward_error_when_handling_command_locally,The following statement contains a magic number: var completed = task.Wait(500);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_not_handle_command_locally_when_local_dispatch_is_disabled,The following statement contains a magic number: var completed = _bus.Send(command).Wait(5);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_ack_transport_when_dispatch_done,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_ack_transport_when_dispatch_done,The following statement contains a magic number: task.Wait(10);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_create_message_dispatch,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_create_custom_message_dispatch_for_PersistMessageCommand,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,Dispatch,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Dispatch.cs,should_not_send_acknowledgement_when_message_handled,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_MessageProcessingFailed_on_command_error,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_MessageProcessingFailed_on_dispatch_error,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_MessageProcessingFailed_on_event_error,The following statement contains a magic number: var message = new FakeEvent(123);
Magic Number,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_not_send_a_MessageProcessingFailed_when_error_publication_is_not_enabled,The following statement contains a magic number: var message = new FakeEvent(123);
Magic Number,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_MessageProcessingFailed_on_error_with_local_processing,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_send_a_CustomProcessingFailed_on_error_with_local_processing_and_unserializable_message,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_not_send_a_MessageProcessingFailed_on_domain_exception_with_local_processing,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,DispatchErrors,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.DispatchErrors.cs,should_not_send_a_MessageProcessingFailed_on_domain_exception_with_local_processing,The following statement contains a magic number: SetupDispatch(command' error: new DomainException(123' "Exception message"));
Magic Number,Abc.Zebus.Tests.Core,Publish,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Publish.cs,should_not_consider_if_peer_is_up_to_publish_events,The following statement contains a magic number: var @event = new FakeEvent(456);
Magic Number,Abc.Zebus.Tests.Core,Publish,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Publish.cs,should_not_publish_message_when_bus_is_not_running,The following statement contains a magic number: var exception = Assert.Throws<InvalidOperationException>(() => _bus.Publish(new FakeEvent(42)));
Magic Number,Abc.Zebus.Tests.Core,Publish,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Publish.cs,should_publish_a_message,The following statement contains a magic number: var message = new FakeEvent(456);
Magic Number,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_int,The following statement contains a magic number: const int commandReply = 456;
Magic Number,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_int,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_int_and_a_message,The following statement contains a magic number: const int commandReply = 456;
Magic Number,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_int_and_a_message,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_object,The following statement contains a magic number: var command = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Core,Replay,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Reply.cs,handlers_reply_with_an_object,The following statement contains a magic number: var commandResult = new FakeCommandResult("CommandResult"' 45);
Magic Number,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_send_message,The following statement contains a magic number: var command = new FakeCommand(456);
Magic Number,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_not_send_message_when_bus_is_not_running,The following statement contains a magic number: var exception = Assert.Throws<InvalidOperationException>(() => _bus.Send(new FakeCommand(42)));
Magic Number,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_throw_exception_if_several_peers_can_handle_a_command,The following statement contains a magic number: var command = new FakeCommand(456);
Magic Number,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_throw_exception_if_no_peer_is_setup_to_handle_a_command,The following statement contains a magic number: var command = new FakeCommand(456);
Magic Number,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_not_consider_if_peer_is_up_to_send_commands,The following statement contains a magic number: var command = new FakeCommand(456);
Magic Number,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_not_throw_when_handling_a_persistent_command_even_if_peer_is_not_responding,The following statement contains a magic number: var command = new FakeCommand(456);
Magic Number,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_throw_when_sending_a_transient_command_to_a_non_responding_peer,The following statement contains a magic number: var command = new FakeNonPersistentCommand(456);
Magic Number,Abc.Zebus.Tests.Core,Send,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Send.cs,should_handle_command_locally_if_several_peers_can_handle_a_command_and_one_of_them_is_self,The following statement contains a magic number: var command = new FakeCommand(456);
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,can_batch_subscribe,The following statement contains a magic number: subscriptions.Add(Subscription.ByExample(x => new FakeRoutableCommand(2' "name")));
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_unsubscribe_to_batch,The following statement contains a magic number: subscriptions.Add(Subscription.ByExample(x => new FakeRoutableCommand(2' "name")));
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_unsubscribe_to_batch,The following statement contains a magic number: Wait.Until(() => directorySubscriptions.Count > 0' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_unsubscribe_static_subscription,The following statement contains a magic number: Wait.Until(() => directorySubscriptions.Count > 0' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_unsubscribe_from_message,The following statement contains a magic number: Wait.Until(() => subscriptions.Count > 0' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_resend_other_message_subscriptions_when_unsubscribing_from_a_message,The following statement contains a magic number: Wait.Until(() => subscriptions.Count > 0' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_unsubscribe_when_last_subscription_is_disposed,The following statement contains a magic number: Wait.Until(() => lastDirectorySubscriptions.Count > 0' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_unsubscribe_when_last_subscription_is_disposed,The following statement contains a magic number: Wait.Until(() => lastDirectorySubscriptions.Count > 0' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_only_call_specific_handler_once_per_type,The following statement contains a magic number: _bus.Subscribe(new[]                                 {                                     Subscription.Matching<FakeRoutableCommand>(x => x.Id == 1)'                                     Subscription.Matching<FakeRoutableCommand>(x => x.Id == 2)'                                     Subscription.Any<FakeCommand>()                                 }'                                 message => { });
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_only_call_specific_handler_once_per_type,The following statement contains a magic number: _messageDispatcherMock.Verify(x => x.AddInvoker(It.IsAny<IMessageHandlerInvoker>())' Times.Exactly(2));
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_wait_for_unsubscribe_to_complete_before_adding_new_subscriptions,The following statement contains a magic number: Wait.Until(() => unsubscribeSent' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_wait_for_unsubscribe_to_complete_before_adding_new_subscriptions,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_wait_for_unsubscribe_to_complete_before_adding_new_subscriptions,The following statement contains a magic number: Wait.Until(() => newSubscribeSent' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_fail_subscribe_if_previous_unsubscribe_failed,The following statement contains a magic number: Wait.Until(() => unsubscribeSent' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_fail_subscribe_if_previous_unsubscribe_failed,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,should_not_fail_subscribe_if_previous_unsubscribe_failed,The following statement contains a magic number: Wait.Until(() => newSubscribeSent' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,subscriptions_sent_to_the_directory_should_always_be_more_recent_than_the_previous,The following statement contains a magic number: const int threadCount = 10;
Magic Number,Abc.Zebus.Tests.Core,Subscribe,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\BusTests.Subscribe.cs,subscriptions_sent_to_the_directory_should_always_be_more_recent_than_the_previous,The following statement contains a magic number: const int subscriptionCountPerThread = 100;
Magic Number,Abc.Zebus.Tests.Core,MessageContextAwareBusTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\MessageContextAwareBusTests.cs,should_reply_with_code,The following statement contains a magic number: _bus.Reply(42);
Magic Number,Abc.Zebus.Tests.Core,MessageContextAwareBusTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\MessageContextAwareBusTests.cs,should_reply_with_code,The following statement contains a magic number: _context.ReplyCode.ShouldEqual(42);
Magic Number,Abc.Zebus.Tests.Core,MessageContextAwareBusTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\MessageContextAwareBusTests.cs,should_reply_with_response,The following statement contains a magic number: var response = new FakeCommandResult("X"' 42);
Magic Number,Abc.Zebus.Tests.Core,RoundRobinPeerSelectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\RoundRobinPeerSelectorTests.cs,should_return_null_when_no_peer_can_handle_the_command,The following statement contains a magic number: var command = new FakeCommand(42);
Magic Number,Abc.Zebus.Tests.Core,RoundRobinPeerSelectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\RoundRobinPeerSelectorTests.cs,should_return_the_only_handling_peer_when_there_is_only_one_handling_peer,The following statement contains a magic number: var command = new FakeCommand(42);
Magic Number,Abc.Zebus.Tests.Core,RoundRobinPeerSelectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\RoundRobinPeerSelectorTests.cs,should_resolve_peer_using_basic_round_robin,The following statement contains a magic number: var command = new FakeCommand(42);
Magic Number,Abc.Zebus.Tests.Core,RoundRobinPeerSelectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\RoundRobinPeerSelectorTests.cs,should_resolve_peer_using_basic_round_robin_for_different_commands,The following statement contains a magic number: var command1 = new FakeCommand(42);
Magic Number,Abc.Zebus.Tests.Core,RoundRobinPeerSelectorTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Core\RoundRobinPeerSelectorTests.cs,should_handle_handling_peers_count_changes,The following statement contains a magic number: var command = new FakeCommand(42);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,Setup,The following statement contains a magic number: _configurationMock.SetupGet(x => x.RegistrationTimeout).Returns(500.Milliseconds());
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_register_existing_peer,The following statement contains a magic number: Assert.Throws<AggregateException>(() => _directory.RegisterAsync(_bus' _self' subscriptions).Wait(20.Seconds()))                        .InnerException.ShouldBe<TimeoutException>();
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_timestamp_updatesubscriptions_with_a_minimum_ten_ticks_granularity,The following statement contains a magic number: i < 100
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_timestamp_updatesubscriptions_with_a_minimum_ten_ticks_granularity,The following statement contains a magic number: timeSinceLastCommand.ShouldBeGreaterOrEqualThan(10.Ticks());
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_have_unique_timestamp_in_UpdatePeerSubscriptionsCommand,The following statement contains a magic number: i < 100
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_discard_outdated_updates_on_PeerSubscriptionsUpdated,The following statement contains a magic number: updates.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_discard_outdated_updates_on_PeerSubscriptionsForTypesUpdated,The following statement contains a magic number: updates.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_get_peer_with_matching_subscrition_binding_key,The following statement contains a magic number: var command = new FakeRoutableCommand(10' "name");
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_get_peer_with_non_matching_subscrition_binding_key,The following statement contains a magic number: var command = new FakeRoutableCommand(10' "name");
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_unregister_peer,The following statement contains a magic number: unregisterPeerCommands.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,unregister_should_be_blocking,The following statement contains a magic number: var started = startUnregisterSignal.WaitOne(5.Seconds());
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,unregister_should_be_blocking,The following statement contains a magic number: unregistration.Wait(5.Seconds());
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_connect_to_next_directory_if_first_is_failing,The following statement contains a magic number: _bus.AddHandlerForPeer<RegisterPeerCommand>(new PeerId("Abc.Zebus.DirectoryService.0")' x =>              {                  Thread.Sleep(1000.Milliseconds());                  return new RegisterPeerResponse(new PeerDescriptor[0]);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_connect_to_next_directory_if_first_is_failing,The following statement contains a magic number: contactedPeers.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_order_directory_peers_randomly,The following statement contains a magic number: i < 100
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_consider_timestamp_at_message_type_level,The following statement contains a magic number: _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' SystemDateTime.UtcNow.AddSeconds(20)' MessageUtil.TypeId<FakeCommand>()' BindingKey.Empty));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_consider_timestamp_at_message_type_level,The following statement contains a magic number: _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' SystemDateTime.UtcNow.AddSeconds(10)' MessageUtil.TypeId<FakeEvent>()' BindingKey.Empty));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_support_multiple_peers_for_same_message,The following statement contains a magic number: peers.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_ignore_old_stop_message,The following statement contains a magic number: _directory.Handle(new PeerStopped(_otherPeer' SystemDateTime.UtcNow.AddSeconds(-5)));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_return_duplicates_in_peers_handling_messages_after_PeerSubscriptionsUpdated,The following statement contains a magic number: var peers = _directory.GetPeersHandlingMessage(new FakeRoutableCommand(42' "Foo"));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_return_duplicates_in_peers_handling_messages_after_PeerSubscriptionsUpdated,The following statement contains a magic number: var updatedDescriptor = _otherPeer.ToPeerDescriptor(true' new[]              {                  Subscription.Any<FakeRoutableCommand>()'                  Subscription.Matching<FakeRoutableCommand>(x => x.Id == 42)'              });
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_return_duplicates_in_peers_handling_messages_after_PeerSubscriptionsUpdated,The following statement contains a magic number: peers = _directory.GetPeersHandlingMessage(new FakeRoutableCommand(42' "Foo"));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_return_duplicates_in_peers_handling_messages_after_PeerSubscriptionsForTypesUpdated,The following statement contains a magic number: var peers = _directory.GetPeersHandlingMessage(new FakeRoutableCommand(42' "Foo"));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_return_duplicates_in_peers_handling_messages_after_PeerSubscriptionsForTypesUpdated,The following statement contains a magic number: var subscriptionsForTypes = new []              {                  new SubscriptionsForType(MessageUtil.TypeId<FakeRoutableCommand>()' BindingKey.Empty )'                  new SubscriptionsForType(MessageUtil.TypeId<FakeRoutableCommand>()' Subscription.Matching<FakeRoutableCommand>(x => x.Id == 42).BindingKey)'              };
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_not_return_duplicates_in_peers_handling_messages_after_PeerSubscriptionsForTypesUpdated,The following statement contains a magic number: peers = _directory.GetPeersHandlingMessage(new FakeRoutableCommand(42' "Foo"));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.GetPeerDescriptor(_otherPeer.Id).Subscriptions.Length.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.GetPeersHandlingMessage(new OtherFakeEvent3(3)).ExpectedSingle().Id.ShouldEqual(_otherPeer.Id);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow.AddTicks(2)' new MessageTypeId(typeof(OtherFakeEvent3))' new BindingKey("3")' new BindingKey("4")));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.GetPeerDescriptor(_otherPeer.Id).Subscriptions.Length.ShouldEqual(3);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.GetPeersHandlingMessage(new OtherFakeEvent3(3)).ExpectedSingle().Id.ShouldEqual(_otherPeer.Id);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.GetPeersHandlingMessage(new OtherFakeEvent3(4)).ExpectedSingle().Id.ShouldEqual(_otherPeer.Id);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id'DateTime.UtcNow.AddTicks(2)' new MessageTypeId(typeof(OtherFakeEvent3))' new BindingKey("4")));
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.GetPeerDescriptor(_otherPeer.Id).Subscriptions.Length.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.GetPeersHandlingMessage(new OtherFakeEvent3(3)).ShouldBeEmpty();
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_update_subscriptions_for_type,The following statement contains a magic number: _directory.GetPeersHandlingMessage(new OtherFakeEvent3(4)).ExpectedSingle().Id.ShouldEqual(_otherPeer.Id);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_ignore_outdated_subscriptions_by_type,The following statement contains a magic number: _directory.GetPeerDescriptor(_otherPeer.Id).Subscriptions.Length.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_ignore_outdated_subscriptions_by_type,The following statement contains a magic number: _directory.GetPeersHandlingMessage(new OtherFakeEvent3(3)).ShouldNotBeEmpty();
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_directory_events_during_the_register,The following statement contains a magic number: var task = Task.Run(() =>              {                  taskStarted.Set();                  for (var i = 0; i < 10000; i++)                  {                      _directory.Handle(peerStarted);                      _directory.Handle(peerStopped);                  }              }).WaitForActivation();
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_directory_events_during_the_register,The following statement contains a magic number: taskStarted.WaitOne(5.Seconds()).ShouldBeTrue("Task should be started");
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_handle_directory_events_during_the_register,The following statement contains a magic number: task.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_measure_time_elapsed_since_last_directory_ping,The following statement contains a magic number: await Task.Delay(200.Milliseconds());
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,should_measure_time_elapsed_since_last_directory_ping,The following statement contains a magic number: _directory.TimeSinceLastPing.ShouldBeGreaterOrEqualThan(time + 180.Milliseconds());
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureUpdatePerformance,The following statement contains a magic number: routingIndex < 500
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureUpdatePerformance,The following statement contains a magic number: typeIdIndex < 20
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureUpdatePerformanceWithManyBindingKeys,The following statement contains a magic number: bindingKey < 10000
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureUpdatePerformanceWithManyBindingKeys,The following statement contains a magic number: Measure.Execution(20' () =>              {                  //_directory = new PeerDirectoryClient(_configurationMock.Object);                  //_directory.Handle(new PeerStarted(_otherPeer.ToPeerDescriptor(false)));                  _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow' typeId' bindingKeysArray));                  _directory.Handle(new PeerSubscriptionsForTypesUpdated(_otherPeer.Id' DateTime.UtcNow' typeId' new BindingKey[0]));              });
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The following statement contains a magic number: subscriptionIndex < 10
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The following statement contains a magic number: subscriptionIndex < 10
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The following statement contains a magic number: litePeerIndex < 100
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The following statement contains a magic number: routingKeyIndex < 1000
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The following statement contains a magic number: messageTypeIndex < 10
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumption,The following statement contains a magic number: fatPeerIndex < 30
Magic Number,Abc.Zebus.Tests.Directory,PeerDirectoryClientTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerDirectoryClientTests.cs,MeasureMemoryConsumptionForSingleFatPeer,The following statement contains a magic number: routingKeyIndex < 100000
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,roundtrip_test,The following statement contains a magic number: peers.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,roundtrip_test,The following statement contains a magic number: peers.Count.ShouldEqual(4);
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,roundtrip_test,The following statement contains a magic number: peers.Count.ShouldEqual(3);
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureDynamicSubscriptionsPerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 10000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscriptionList.GetPeers(bindingKey);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureDynamicSubscriptionsPerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 10000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscriptionList.GetPeers(bindingKey);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureDynamicSubscriptionsPerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 10000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscriptionTree.GetPeers(bindingKey);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureDynamicSubscriptionsPerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 10000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscriptionTree.GetPeers(bindingKey);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureStaticSubscriptionsPerformance,The following statement contains a magic number: var peers = Enumerable.Range(0' 100).Select(x => new Peer(new PeerId("Abc.Testing" + x)' "tcp://testing:" + x)).ToList();
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureStaticSubscriptionsPerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 100000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscriptionList.GetPeers(BindingKey.Empty);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureStaticSubscriptionsPerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 100000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscriptionList.GetPeers(BindingKey.Empty);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureStaticSubscriptionsPerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 100000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscriptionTree.GetPeers(BindingKey.Empty);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,MeasureStaticSubscriptionsPerformance,The following statement contains a magic number: Measure.Execution(x =>              {                  x.Iteration = 100000;                  x.WarmUpIteration = 1000;                  x.Action = _ => subscriptionTree.GetPeers(BindingKey.Empty);              });
Magic Number,Abc.Zebus.Tests.Directory,PeerSubscriptionTreeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Directory\PeerSubscriptionTreeTests.cs,GenerateSubscriptions,The following statement contains a magic number: return from p in Enumerable.Range(0' 10)                     let peer = new Peer(new PeerId(p.ToString())' "endpoint")                     from l1 in "abcdef"                     from l2 in "abcdef"                     from l3 in "abcdef*"                     let subscription = new Subscription(_messageTypeId' new BindingKey(l1.ToString()' l2.ToString()' l3.ToString()))                     select new Tuple<Peer' Subscription>(peer' subscription);
Magic Number,Abc.Zebus.Tests.Dispatch,AsyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\AsyncMessageHandlerInvokerTests.cs,should_instanciate_new_message_context_aware_bus_for_every_handler_without_race_conditions,The following statement contains a magic number: Wait.Until(() => handlerData.WaitingHandlerCount == 2' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,AsyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\AsyncMessageHandlerInvokerTests.cs,should_instanciate_new_message_context_aware_bus_for_every_handler_without_race_conditions,The following statement contains a magic number: Wait.Until(() => handlerData.WaitingHandlerCount == 2' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,AsyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\AsyncMessageHandlerInvokerTests.cs,should_instanciate_new_message_context_aware_bus_for_every_handler_without_race_conditions,The following statement contains a magic number: Task.WaitAll(new Task[] { handler1' handler2 }' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,TestAsyncHandler,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\AsyncMessageHandlerInvokerTests.cs,Handle,The following statement contains a magic number: return Task.FromResult(42);
Magic Number,Abc.Zebus.Tests.Dispatch,BatchedMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\BatchedMessageHandlerInvokerTests.cs,should_invoke_handler,The following statement contains a magic number: var messages = new List<IMessage>              {                  new Message { Id = 1 }'                  new Message { Id = 2 }'              };
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,Setup,The following statement contains a magic number: _dispatchQueue = new DispatchQueue(_pipeManager' 200' "Default");
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_not_run_invoker_when_queue_is_not_started,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_run_invoker_when_queue_is_started,The following statement contains a magic number: message.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_run_continuation,The following statement contains a magic number: task.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_continue_processing_messages_after_continuation_error,The following statement contains a magic number: task.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_finish_current_invocation_before_stopping,The following statement contains a magic number: message.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_finish_current_invocation_before_stopping,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_finish_current_invocation_before_stopping,The following statement contains a magic number: stopTask.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_finish_async_invocations_before_stopping,The following statement contains a magic number: message.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_finish_async_invocations_before_stopping,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_finish_async_invocations_before_stopping,The following statement contains a magic number: invocation.Wait(10.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_finish_async_invocations_before_stopping,The following statement contains a magic number: stopTask.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_not_accept_invocations_after_stop_while_completing_async_invocations,The following statement contains a magic number: message.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_not_accept_invocations_after_stop_while_completing_async_invocations,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_not_accept_invocations_after_stop_while_completing_async_invocations,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_not_accept_invocations_after_stop_while_completing_async_invocations,The following statement contains a magic number: stopTask.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_purge,The following statement contains a magic number: message.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_purge,The following statement contains a magic number: _dispatchQueue.QueueLength.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_restart,The following statement contains a magic number: message.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_stop_processing_messages_after_stop,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_stop_processing_messages_after_stop,The following statement contains a magic number: Wait.Until(() => _dispatchQueue.IsRunning == false' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_stop_processing_messages_after_stop,The following statement contains a magic number: stopTask.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_batch_messages,The following statement contains a magic number: message0.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_batch_messages,The following statement contains a magic number: var messages = Enumerable.Range(0' 10)                                       .Select(x => new ExecutableEvent { Callback = i => invokedBatches.Add(i.Messages.ToList()) })                                       .ToList();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_batch_messages,The following statement contains a magic number: Wait.Until(() => invokedBatches.Count >= 1' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_run_continuation_with_batch,The following statement contains a magic number: dispatch1.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_run_continuation_with_batch,The following statement contains a magic number: dispatch2.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_run_continuation_with_batch_error,The following statement contains a magic number: firstMessage.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_run_async_without_blocking_dispatcher_thread,The following statement contains a magic number: Task.WhenAll(firstTask' secondTask).Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_enqueue_async_continuations_on_dispatch_queue_when_requested,The following statement contains a magic number: Task.WhenAll(allTasks).Wait(20.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_propagate_async_exceptions_from_continuations,The following statement contains a magic number: Task.WhenAll(firstTask' secondTask).Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_internleave_sync_and_async_messages_properly,The following statement contains a magic number: var firstTask = EnqueueAsyncInvocation(new AsyncExecutableEvent              {                  Callback = async _ =>                  {                      AddSequence(1);                      SynchronizationContext.Current.ShouldEqual(_dispatchQueue.SynchronizationContext);                      await tcs.Task.ConfigureAwait(true);                      AddSequence(4);                      SynchronizationContext.Current.ShouldEqual(_dispatchQueue.SynchronizationContext);                  }              });
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_internleave_sync_and_async_messages_properly,The following statement contains a magic number: var secondTask = EnqueueAsyncInvocation(new AsyncExecutableEvent              {                  Callback = async _ =>                  {                      AddSequence(2);                      SynchronizationContext.Current.ShouldEqual(_dispatchQueue.SynchronizationContext);                      await tcs.Task.ConfigureAwait(true);                      AddSequence(5);                      SynchronizationContext.Current.ShouldEqual(_dispatchQueue.SynchronizationContext);                  }              });
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_internleave_sync_and_async_messages_properly,The following statement contains a magic number: var secondTask = EnqueueAsyncInvocation(new AsyncExecutableEvent              {                  Callback = async _ =>                  {                      AddSequence(2);                      SynchronizationContext.Current.ShouldEqual(_dispatchQueue.SynchronizationContext);                      await tcs.Task.ConfigureAwait(true);                      AddSequence(5);                      SynchronizationContext.Current.ShouldEqual(_dispatchQueue.SynchronizationContext);                  }              });
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_internleave_sync_and_async_messages_properly,The following statement contains a magic number: var thirdTask = EnqueueInvocation(new ExecutableEvent              {                  Callback = _ =>                  {                      AddSequence(3);                      SynchronizationContext.Current.ShouldBeNull();                      Task.Run(() => tcs.SetResult(null));                  }              });
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_internleave_sync_and_async_messages_properly,The following statement contains a magic number: Task.WhenAll(allTasks).Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_internleave_sync_and_async_messages_properly,The following statement contains a magic number: sequence.ShouldEqual(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchQueueTests.cs,should_reset_local_dispatch_status,The following statement contains a magic number: Task.WhenAll(allTasks).Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,DynamicMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DynamicMessageHandlerInvokerTests.cs,should_do_this,The following statement contains a magic number: predicateBuilder.Verify(x => x.GetPredicate(It.IsAny<Type>()' It.IsAny<BindingKey>())' Times.Exactly(2));
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_invoke_both_sync_and_async_handlers,The following statement contains a magic number: asyncHandler.CalledSignal.Wait(50.Milliseconds()).ShouldBeFalse();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_invoke_both_sync_and_async_handlers,The following statement contains a magic number: asyncHandler.CalledSignal.Wait(10.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_filter_invoker,The following statement contains a magic number: dispatched.WaitOne(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_to_event_handler,The following statement contains a magic number: var evt = new FakeEvent(123);
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_get_reply_code,The following statement contains a magic number: Wait.Until(() => replyCode == ReplyCommand.ReplyCode' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_purge_dispatch_queues,The following statement contains a magic number: firstMessage.HandleStarted.Wait(2.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_purge_dispatch_queues,The following statement contains a magic number: dispatchQueue.QueueLength.ShouldEqual(3);
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_purge_dispatch_queues,The following statement contains a magic number: purgeCount.ShouldEqual(3);
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_hide_task_scheduler,The following statement contains a magic number: syncHandler.Signal.WaitOne(10.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_hide_task_scheduler,The following statement contains a magic number: asyncHandler.Signal.WaitOne(10.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,DispatchAndWaitForCompletion,The following statement contains a magic number: dispatch.Wait(20.Seconds()).ShouldBeTrue("Dispatch should be completed");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler1List.Count == 1 && handler1List[0].HandleStarted' 5.Seconds()' "First handler should be started");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler2List.Count == 1 && handler2List[0].HandleStarted' 5.Seconds()' "second handler should be started");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler1List[0].HandleStopped' 5.Seconds()' "First handler should be stopped");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler1List.Count == 2' 5.Seconds()' "Next handler should be created");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler1List.Count == 2' 5.Seconds()' "Next handler should be created");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler1List[1].HandleStarted' 5.Seconds()' "Next handler should be started");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler1List[1].HandleStopped' 5.Seconds()' "Next handler should be stopped");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler2List[0].HandleStopped' 5.Seconds()' "First handler should be stopped");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler2List.Count == 2' 5.Seconds()' "Next handler should be created");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler2List.Count == 2' 5.Seconds()' "Next handler should be created");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_dispatch_message_to_queue_name,The following statement contains a magic number: Wait.Until(() => handler2List[0].HandleStopped && handler2List[1].HandleStopped' 5.Seconds()' "Both handlers should be run");
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_set_queue_name_in_message_context,The following statement contains a magic number: Wait.Until(() => handler1.HandleStopped' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_run_invoker_synchronously_if_dispatch_queue_name_equals_current_queue_name,The following statement contains a magic number: var handler1 = new SyncCommandHandlerWithQueueName1              {                  Callback = () =>                  {                      var handler2 = new SyncCommandHandlerWithQueueName1();                      _containerMock.Setup(x => x.GetInstance(typeof(SyncCommandHandlerWithQueueName1))).Returns(handler2);                        // should be run synchronously                      Dispatch(new DispatchCommand());                        Wait.Until(() => handler2.HandleStopped' 5.Seconds());                  }              };
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_run_invoker_synchronously_if_dispatch_queue_name_equals_current_queue_name,The following statement contains a magic number: Wait.Until(() => handler1.HandleStopped' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_hang_when_running_invoker_synchronously_in_same_dispatch_queue,The following statement contains a magic number: Wait.Until(() => handler2.HandleStopped' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_use_queue_name_from_namespace,The following statement contains a magic number: Wait.Until(() => handler.DispatchQueueName != null' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_wait_for_dispatch_to_stop,The following statement contains a magic number: message.HandleStarted.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_wait_for_dispatch_to_stop,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_wait_for_dispatch_to_stop,The following statement contains a magic number: stopTask.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_handle_local_dispatch_when_stopping,The following statement contains a magic number: Wait.Until(() => handler1.HandleStarted' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_handle_local_dispatch_when_stopping,The following statement contains a magic number: Wait.Until(() => _messageDispatcher.Status == MessageDispatcherStatus.Stopping' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_handle_local_dispatch_when_stopping,The following statement contains a magic number: Wait.Until(() => handler2.HandleStopped' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_handle_local_dispatch_when_stopping,The following statement contains a magic number: Wait.Until(() => handler2.HandleStopped' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_handle_local_dispatch_when_stopping,The following statement contains a magic number: stopTask.Wait(10.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_accept_remote_dispatch_when_stopping,The following statement contains a magic number: Wait.Until(() => handler1.HandleStarted' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_accept_remote_dispatch_when_stopping,The following statement contains a magic number: Wait.Until(() => _messageDispatcher.Status == MessageDispatcherStatus.Stopping' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_accept_remote_dispatch_when_stopping,The following statement contains a magic number: Wait.Until(() => handler2.HandleStopped' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_accept_remote_dispatch_when_stopping,The following statement contains a magic number: stopTask.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_clone_message_when_dispatching_locally_to_a_different_queue,The following statement contains a magic number: Wait.Until(() => handler.HandleStopped' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_clone_message_when_dispatching_a_remote_message,The following statement contains a magic number: Wait.Until(() => handler.Called' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,MessageDispatcherTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,should_not_clone_message_when_dispatching_locally_to_the_current_queue,The following statement contains a magic number: Wait.Until(() => handler.Called' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch,DispatchQueueFactory,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\MessageDispatcherTests.cs,Create,The following statement contains a magic number: var taskScheduler = new DispatchQueue(_pipeManager' 200' queueName);
Magic Number,Abc.Zebus.Tests.Dispatch,SyncMessageHandlerInvokerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\SyncMessageHandlerInvokerTests.cs,MeasureHandlerCreationPerformances,The following statement contains a magic number: Measure.Execution(500000' () => invoker.CreateHandler(messageContext));
Magic Number,Abc.Zebus.Tests.Dispatch.DispatchMessages,AsyncCommandHandler,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchMessages\AsyncCommandHandler.cs,Handle,The following statement contains a magic number: return Task.Factory.StartNew(() =>                  {                      if (WaitForSignal)                          message.Signal.WaitOne(2.Seconds());                        CalledSignal.Set();                  });
Magic Number,Abc.Zebus.Tests.Dispatch.DispatchMessages,AsyncCommandHandler,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\DispatchMessages\AsyncCommandHandler.cs,Handle,The following statement contains a magic number: return Task.Factory.StartNew(() =>              {                  if (WaitForSignal)                      message.Signal.WaitOne(2.Seconds());                    CalledSignal.Set();              });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,AsyncPipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\AsyncPipeInvocationTests.cs,should_invoke_pipes_in_order_async,The following statement contains a magic number: _pipes.Add(new TestPipe              {                  Name = "Pipe1"'                  BeforeCallback = x => order.Add(1)'                  AfterCallback = x => order.Add(5)'              });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,AsyncPipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\AsyncPipeInvocationTests.cs,should_invoke_pipes_in_order_async,The following statement contains a magic number: _pipes.Add(new TestPipe              {                  Name = "Pipe2"'                  BeforeCallback = x => order.Add(2)'                  AfterCallback = x => order.Add(4)'              });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,AsyncPipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\AsyncPipeInvocationTests.cs,should_invoke_pipes_in_order_async,The following statement contains a magic number: _pipes.Add(new TestPipe              {                  Name = "Pipe2"'                  BeforeCallback = x => order.Add(2)'                  AfterCallback = x => order.Add(4)'              });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,AsyncPipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\AsyncPipeInvocationTests.cs,should_invoke_pipes_in_order_async,The following statement contains a magic number: _message.Callback = x => order.Add(3);
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,AsyncPipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\AsyncPipeInvocationTests.cs,should_invoke_pipes_in_order_async,The following statement contains a magic number: Wait.Until(() => order.Count == 5' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,AsyncPipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\AsyncPipeInvocationTests.cs,should_invoke_pipes_in_order_async,The following statement contains a magic number: Wait.Until(() => order.Count == 5' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,AsyncPipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\AsyncPipeInvocationTests.cs,should_get_exception_async,The following statement contains a magic number: task.Wait(5.Seconds()).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeInvocationTests.cs,should_apply_mutations,The following statement contains a magic number: _invocation.AddHandlerMutation(x => ((Handler)x).Value = 42);
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeInvocationTests.cs,should_apply_mutations,The following statement contains a magic number: handler.Value.ShouldEqual(42);
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeInvocationTests.cs,should_invoke_pipes_in_order,The following statement contains a magic number: _pipes.Add(new TestPipe              {                  Name = "Pipe1"'                  BeforeCallback = x =>                  {                      order.Add(1);                      x.State = "Pipe 1 state";                  }'                  AfterCallback = x =>                  {                      order.Add(5);                      x.State.ShouldEqual("Pipe 1 state");                  }'              });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeInvocationTests.cs,should_invoke_pipes_in_order,The following statement contains a magic number: _pipes.Add(new TestPipe              {                  Name = "Pipe2"'                  BeforeCallback = x =>                  {                      order.Add(2);                      x.State = "Pipe 2 state";                  }'                  AfterCallback = x =>                  {                      order.Add(4);                      x.State.ShouldEqual("Pipe 2 state");                  }'              });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeInvocationTests.cs,should_invoke_pipes_in_order,The following statement contains a magic number: _pipes.Add(new TestPipe              {                  Name = "Pipe2"'                  BeforeCallback = x =>                  {                      order.Add(2);                      x.State = "Pipe 2 state";                  }'                  AfterCallback = x =>                  {                      order.Add(4);                      x.State.ShouldEqual("Pipe 2 state");                  }'              });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeInvocationTests.cs,should_invoke_pipes_in_order,The following statement contains a magic number: _message.Callback = x => order.Add(3);
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeInvocationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeInvocationTests.cs,should_invoke_pipes_in_order,The following statement contains a magic number: order.Count.ShouldEqual(5);
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeManagerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeManagerTests.cs,should_build_invocation_with_pipe,The following statement contains a magic number: var message = new FakeCommand(123);
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeManagerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeManagerTests.cs,should_sort_pipes,The following statement contains a magic number: _pipeSource.Pipes.Add(new TestPipe { Name = "Fake2"' Priority = 100' IsAutoEnabled = true });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeManagerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeManagerTests.cs,should_sort_pipes,The following statement contains a magic number: _pipeSource.Pipes.Add(new TestPipe { Name = "Fake3"' Priority = 50' IsAutoEnabled = true });
Magic Number,Abc.Zebus.Tests.Dispatch.Pipes,PipeManagerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Dispatch\Pipes\PipeManagerTests.cs,should_sort_pipes,The following statement contains a magic number: enabledPipes.Count.ShouldEqual(3);
Magic Number,Abc.Zebus.Tests.Hosting,HostInitializerHelperTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\HostInitializerHelperTests.cs,should_invoke_initializers_in_order,The following statement contains a magic number: var initializers = Enumerable.Range(0' 10).Select(CreateMockInitializer).Reverse().ToArray();
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,SetUp,The following statement contains a magic number: _periodicInitializer = new XPeriodicActionHostInitializer(_bus' 20.Milliseconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_return_period,The following statement contains a magic number: _periodicInitializer.Period.ShouldEqual(20.Milliseconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_call_the_periodic_action,The following statement contains a magic number: Wait.Until(() => callCount >= 3' 1.Second());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_pause_execution_after_successive_failures,The following statement contains a magic number: Thread.Sleep(200.Milliseconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_after_error_pause_duration,The following statement contains a magic number: _periodicInitializer.ErrorCountBeforePause = 2;
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_after_error_pause_duration,The following statement contains a magic number: _periodicInitializer.ErrorPauseDuration = 200.Milliseconds();
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_after_error_pause_duration,The following statement contains a magic number: Wait.Until(() => callCount >= 2' 1.Second());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_after_error_pause_duration,The following statement contains a magic number: Thread.Sleep(100.Milliseconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_after_error_pause_duration,The following statement contains a magic number: callCount.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_after_error_pause_duration,The following statement contains a magic number: Wait.Until(() => callCount > 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_after_error_pause_duration,The following statement contains a magic number: Wait.Until(() => callCount > 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_if_the_10_failures_are_not_consecutive,The following statement contains a magic number: _periodicInitializer.PeriodicAction = () =>              {                  callCount++;                  if (callCount % 2 == 0)                      throw new Exception();              };
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_if_the_10_failures_are_not_consecutive,The following statement contains a magic number: Wait.Until(() => callCount >= 21' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_continue_execution_if_the_10_failures_are_not_consecutive,The following statement contains a magic number: Wait.Until(() => callCount >= 21' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_stop_the_loop_on_BeforeStop,The following statement contains a magic number: Wait.Until(() => callCount >= 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_stop_the_loop_on_BeforeStop,The following statement contains a magic number: Thread.Sleep(100.Milliseconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_start_at_specified_time,The following statement contains a magic number: _periodicInitializer = new XPeriodicActionHostInitializer(_bus' 20.Milliseconds()' () => DateTime.UtcNow + offset);
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_start_at_specified_time,The following statement contains a magic number: signal.WaitOne(2.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_start_at_specified_time,The following statement contains a magic number: firstCallTime.GetValueOrDefault().ShouldApproximateDateTime(startTime + offset' 50);
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_start_after_first_period,The following statement contains a magic number: var period = 500.Milliseconds();
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_start_after_first_period,The following statement contains a magic number: signal.WaitOne(2.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_start_after_first_period,The following statement contains a magic number: firstCallTime.GetValueOrDefault().ShouldApproximateDateTime(startTime + period' 50);
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_not_run_action_in_parallel,The following statement contains a magic number: _periodicInitializer.PeriodicAction = () =>              {                  if (!Monitor.TryEnter(_periodicInitializer))                  {                      wasRunInParallel = true;                      return;                  }                    if (runCount == 0)                      Thread.Sleep(200);                    runCount++;                    Monitor.Exit(_periodicInitializer);              };
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_not_run_action_in_parallel,The following statement contains a magic number: Wait.Until(() => runCount >= 2' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_not_run_action_in_parallel,The following statement contains a magic number: Wait.Until(() => runCount >= 2' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_run_action_for_missed_timeouts,The following statement contains a magic number: _periodicInitializer.PeriodicAction = () =>              {                  if (runCount == 0)                      Thread.Sleep(200);                    runCount++;              };
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_run_action_for_missed_timeouts,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_run_action_for_missed_timeouts,The following statement contains a magic number: var minimumRunCount = 200/ 20;
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_run_action_for_missed_timeouts,The following statement contains a magic number: var minimumRunCount = 200/ 20;
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_skip_missed_timeouts,The following statement contains a magic number: _periodicInitializer.PeriodicAction = () =>              {                  if (runCount == 0)                      Thread.Sleep(200);                    runCount++;              };
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_skip_missed_timeouts,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_skip_missed_timeouts,The following statement contains a magic number: var maximumRunCount = 5;
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_not_run_action_if_period_is_negative,The following statement contains a magic number: var period = -20.Milliseconds();
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_not_run_action_if_period_is_negative,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Hosting,PeriodicActionHostInitializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Hosting\PeriodicActionHostInitializerTests.cs,should_ignore_errors,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Abc.Zebus.Tests.Lotus,CustomProcessingFailedTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Lotus\CustomProcessingFailedTests.cs,should_serialize_details,The following statement contains a magic number: var details = new { foo = "bar"' baz = 42 };
Magic Number,Abc.Zebus.Tests.Lotus,ReplayMessageHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Lotus\ReplayMessageHandlerTests.cs,Should_replay_messages_on_failed_handlers,The following statement contains a magic number: var message = new TransportMessage(new MessageTypeId(typeof(FakeCommand))' new MemoryStream(new byte[20])' peer);
Magic Number,Abc.Zebus.Tests.Lotus,ReplayMessageHandlerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Lotus\ReplayMessageHandlerTests.cs,Should_replay_messages_on_all_handlers,The following statement contains a magic number: var message = new TransportMessage(new MessageTypeId(typeof(FakeCommand))' new MemoryStream(new byte[20])' peer);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportFixture.cs,Setup,The following statement contains a magic number: configuration.Setup(x => x.StartReplayTimeout).Returns(TimeSpan.FromMinutes(60));
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportFixture.cs,should_prioritize_infrastructure_messages,The following statement contains a magic number: Transport.MessageReceived += x =>              {                  Thread.Sleep(200);              };
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportFixture,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportFixture.cs,should_prioritize_infrastructure_messages,The following statement contains a magic number: Thread.Sleep(20);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_only_forward_replayed_messages_during_replay_phase,The following statement contains a magic number: var transportMessageToForward = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_only_forward_replayed_messages_during_replay_phase,The following statement contains a magic number: var normalTransportMessage = new FakeEvent(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_force_WasPersisted_for_replayed_messages,The following statement contains a magic number: var sourceTransportMessage = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_force_WasPersisted_for_replayed_messages_during_safety_phase,The following statement contains a magic number: var sourceTransportMessage = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_force_WasPersisted_for_replayed_messages_during_safety_phase,The following statement contains a magic number: Wait.Until(() => MessagesForwardedToBus.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_forward_a_normal_message_after_a_back_to_live_event,The following statement contains a magic number: var transportMessageToForward = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_forward_a_normal_message_after_a_back_to_live_event,The following statement contains a magic number: Wait.Until(() => MessagesForwardedToBus.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_switching_to_safety_phase,The following statement contains a magic number: var liveMessageToStack = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_switching_to_safety_phase,The following statement contains a magic number: var replayedMessageToPlayAfterStack = new FakeCommand(456).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_switching_to_safety_phase,The following statement contains a magic number: Wait.Until(() => MessagesForwardedToBus.Count >= 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_switching_to_safety_phase,The following statement contains a magic number: Wait.Until(() => MessagesForwardedToBus.Count >= 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_switching_to_safety_phase,The following statement contains a magic number: MessagesForwardedToBus.Count.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_crash_during_safety_phase,The following statement contains a magic number: var failingMessage = new FakeCommand(666).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_crash_during_safety_phase,The following statement contains a magic number: var otherMessage = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_crash_during_safety_phase,The following statement contains a magic number: Wait.Until(() => successfullyReceivedMessages.Count >= 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_handle_twice_duplicate_messages,The following statement contains a magic number: var duplicatedMessage = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_handle_twice_duplicate_messages,The following statement contains a magic number: Wait.Until(() => MessagesForwardedToBus.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_handle_replayed_message_with_unknown_replay_id,The following statement contains a magic number: var message = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_handle_replayed_message_with_unknown_replay_id,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_forward_normal_message_after_replay_phase,The following statement contains a magic number: var message = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_forward_normal_message_after_replay_phase,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_forward_normal_message_after_replay_phase,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_stop_to_deduplicate_after_safety_phase,The following statement contains a magic number: var duplicatedMessage = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_stop_to_deduplicate_after_safety_phase,The following statement contains a magic number: Wait.Until(() => MessagesForwardedToBus.Count == 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_stop_to_deduplicate_after_safety_phase,The following statement contains a magic number: Wait.Until(() => MessagesForwardedToBus.Count == 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_send_persistent_message_to_the_persistence_and_to_the_peer,The following statement contains a magic number: var message = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_send_persistent_message_only_to_the_persistence_when_peer_is_down,The following statement contains a magic number: var message = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,non_persistent_messages_should_not_be_sent_to_persistence_peer,The following statement contains a magic number: var message = new FakeNonPersistentCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,persistent_messages_sent_to_multiple_peers_should_only_be_persisted_for_persistent_ones,The following statement contains a magic number: var message = new FakeEvent(123).ToTransportMessage(Self);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,persistent_messages_sent_to_non_persistent_peers_should_not_generate_a_persist_command,The following statement contains a magic number: var message = new FakeEvent(123).ToTransportMessage(Self);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_publish_a_MessageHandled_event_after_a_persistent_message_is_processed_by_the_bus,The following statement contains a magic number: var command = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_consider_WasPersisted_before_publishing_a_MessageHandled_event,The following statement contains a magic number: var command = new FakeCommand(123).ToTransportMessage(wasPersisted: wasPersisted);
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_publish_a_MessageHandled_event_after_a_non_persistent_message_is_processed_by_the_bus,The following statement contains a magic number: var command = new FakeNonPersistentCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_persistent_transport_goes_down_and_comes_back_up,The following statement contains a magic number: var message = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_lose_messages_when_persistent_transport_goes_down_and_comes_back_up,The following statement contains a magic number: var ackedMessage = new FakeCommand(456).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_not_send_messages_to_persistence_twice_if_persistence_goes_up_and_down,The following statement contains a magic number: var ackedMessage = new FakeCommand(456).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,PersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\PersistentTransportTests.cs,should_discard_messages_waiting_for_persistence_on_stop,The following statement contains a magic number: var ackedMessage = new FakeCommand(456).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,TranscientPersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\TranscientPersistentTransportTests.cs,should_receive_messages_immediately_after_start,The following statement contains a magic number: var message = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,TranscientPersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\TranscientPersistentTransportTests.cs,should_receive_messages_immediately_after_start,The following statement contains a magic number: Wait.Until(() => MessagesForwardedToBus.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Persistence,TranscientPersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\TranscientPersistentTransportTests.cs,should_not_publish_a_MessageHandled_event_after_a_persistent_message_is_processed_by_a_non_persistent_host,The following statement contains a magic number: var command = new FakeCommand(123).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Persistence,TranscientPersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\TranscientPersistentTransportTests.cs,should_not_publish_a_MessageHandled_event_after_a_persistent_message_is_processed_by_a_non_persistent_host,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Abc.Zebus.Tests.Persistence,TranscientPersistentTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Persistence\TranscientPersistentTransportTests.cs,should_get_pending_send_count_from_inner_transport,The following statement contains a magic number: InnerTransport.PendingSendCount= 42;
Magic Number,Abc.Zebus.Tests.Routing,BindingKeyTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Routing\BindingKeyTests.cs,should_get_routing_key_from_message,The following statement contains a magic number: var message = new FakeRoutableCommand(42.42m' "name"' Guid.NewGuid());
Magic Number,Abc.Zebus.Tests.Routing,BindingKeyTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Routing\BindingKeyTests.cs,should_get_routing_key_from_message,The following statement contains a magic number: rountingKey.PartCount.ShouldEqual(3);
Magic Number,Abc.Zebus.Tests.Routing,BindingKeyTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Routing\BindingKeyTests.cs,should_get_routing_key_from_message,The following statement contains a magic number: rountingKey.GetPart(2).ShouldEqual(message.OtherId.ToString());
Magic Number,Abc.Zebus.Tests.Routing,BindingKeyTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Routing\BindingKeyTests.cs,should_get_routing_key_from_message_with_properties,The following statement contains a magic number: var message = new FakeRoutableCommandWithProperties { Id = 100' FeedId = 200 };
Magic Number,Abc.Zebus.Tests.Routing,BindingKeyTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Routing\BindingKeyTests.cs,should_get_routing_key_from_message_with_properties,The following statement contains a magic number: var message = new FakeRoutableCommandWithProperties { Id = 100' FeedId = 200 };
Magic Number,Abc.Zebus.Tests.Routing,BindingKeyTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Routing\BindingKeyTests.cs,should_get_routing_key_from_message_with_properties,The following statement contains a magic number: routingKey.PartCount.ShouldEqual(2);
Magic Number,Abc.Zebus.Tests.Routing,BindingKeyTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Routing\BindingKeyTests.cs,MeasurePerformances,The following statement contains a magic number: Measure.Execution(1000000' () => BindingKey.Create(message));
Magic Number,Abc.Zebus.Tests.Scan,MessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\MessageHandlerInvokerLoaderTests.cs,should_create_all_invoker_types,The following statement contains a magic number: Wait.Until(() => message.HandledSync' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Scan,MessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\MessageHandlerInvokerLoaderTests.cs,should_create_all_invoker_types,The following statement contains a magic number: Wait.Until(() => message.HandledAsync' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Scan,MessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\MessageHandlerInvokerLoaderTests.cs,should_create_all_invoker_types,The following statement contains a magic number: Wait.Until(() => message.HandledBatched' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Scan,MessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\MessageHandlerInvokerLoaderTests.cs,should_support_explicit_interface_implementations,The following statement contains a magic number: Wait.Until(() => message.HandledSync' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Scan,MessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\MessageHandlerInvokerLoaderTests.cs,should_support_explicit_interface_implementations,The following statement contains a magic number: Wait.Until(() => message.HandledAsync' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Scan,MessageHandlerInvokerLoaderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Scan\MessageHandlerInvokerLoaderTests.cs,should_support_explicit_interface_implementations,The following statement contains a magic number: Wait.Until(() => message.HandledBatched' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Serialization,MessageSerializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Serialization\MessageSerializerTests.cs,should_serialize_persist_message_command,The following statement contains a magic number: var transportMessage = new FakeEvent(42).ToTransportMessage(_self);
Magic Number,Abc.Zebus.Tests.Serialization,MessageSerializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Serialization\MessageSerializerTests.cs,should_deserialize_persist_message_command,The following statement contains a magic number: var transportMessage = new FakeEvent(42).ToTransportMessage(_self);
Magic Number,Abc.Zebus.Tests.Serialization,MessageSerializerTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Serialization\MessageSerializerTests.cs,should_clone_serializable_message,The following statement contains a magic number: var message = new SerializableMessage { Value = 42 };
Magic Number,Abc.Zebus.Tests.Transport,BackwardCompatibilityTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\BackwardCompatibilityTests.cs,should_deserialize_1_4_1_transport_messages,The following statement contains a magic number: var content = new MemoryStream(new byte[] { 1' 2' 3 });
Magic Number,Abc.Zebus.Tests.Transport,BackwardCompatibilityTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\BackwardCompatibilityTests.cs,should_deserialize_1_4_1_transport_messages,The following statement contains a magic number: var content = new MemoryStream(new byte[] { 1' 2' 3 });
Magic Number,Abc.Zebus.Tests.Transport,BackwardCompatibilityTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\BackwardCompatibilityTests.cs,should_read_WasPersisted_as_null_for_older_versions,The following statement contains a magic number: var content = new MemoryStream(new byte[] { 1' 2' 3 });
Magic Number,Abc.Zebus.Tests.Transport,BackwardCompatibilityTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\BackwardCompatibilityTests.cs,should_read_WasPersisted_as_null_for_older_versions,The following statement contains a magic number: var content = new MemoryStream(new byte[] { 1' 2' 3 });
Magic Number,Abc.Zebus.Tests.Transport,TransportMessageWriterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\TransportMessageWriterTests.cs,MeasureWritePerformance,The following statement contains a magic number: const int count = 10 * 1000 * 1000;
Magic Number,Abc.Zebus.Tests.Transport,TransportMessageWriterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\TransportMessageWriterTests.cs,MeasureWritePerformance,The following statement contains a magic number: const int count = 10 * 1000 * 1000;
Magic Number,Abc.Zebus.Tests.Transport,TransportMessageWriterTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\TransportMessageWriterTests.cs,MeasureWritePerformance,The following statement contains a magic number: const int count = 10 * 1000 * 1000;
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: var message = new byte[50];
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: var receiveBuffer = new byte[100];
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: Console.WriteLine("ZMQ v{0}"' ZmqUtil.GetVersion().ToString(3));
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: receiver.SetOption(ZmqSocketOption.RCVHWM' 10);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: receiver.SetOption(ZmqSocketOption.RCVTIMEO' 200);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: sender.SetOption(ZmqSocketOption.SNDHWM' 10);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: i < 10
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: i < 10
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: i < 10
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: sender.SetOption(ZmqSocketOption.SNDTIMEO' 1000);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreLostAfterDisconnect,The following statement contains a magic number: receiver.SetOption(ZmqSocketOption.RCVTIMEO' 2000);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreNotLostAfterDisconnect,The following statement contains a magic number: var message = new byte[100];
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreNotLostAfterDisconnect,The following statement contains a magic number: var receiveBuffer = new byte[100];
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreNotLostAfterDisconnect,The following statement contains a magic number: Console.WriteLine("ZMQ v{0}"' ZmqUtil.GetVersion().ToString(3));
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreNotLostAfterDisconnect,The following statement contains a magic number: receiver.SetOption(ZmqSocketOption.RCVTIMEO' 200);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,OkNowIKnowThatMyMessagesAreNotLostAfterDisconnect,The following statement contains a magic number: sender.SetOption(ZmqSocketOption.SNDTIMEO' 200);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTests.cs,should_get_error_messages,The following statement contains a magic number: Console.WriteLine(((ZmqErrorCode)(-42)).ToErrorMessage());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportPerformanceTests.cs,CreateIdleTransport,The following statement contains a magic number: Thread.Sleep(30000);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportPerformanceTests.cs,MeasureThroughput,The following statement contains a magic number: const int sendMessageCount = 2000000;
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportPerformanceTests.cs,MeasureThroughput,The following statement contains a magic number: var transportMessage = new FakeCommand(42).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportPerformanceTests.cs,CreateAndStartZmqTransport,The following statement contains a magic number: transport.SocketOptions.SendTimeout = 5.Seconds();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_crash_when_stopping_if_it_was_not_started,The following statement contains a magic number: configurationMock.SetupGet(x => x.WaitForEndOfStreamAckTimeout).Returns(100.Milliseconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_filter_received_messages_when_environment_is_not_specified,The following statement contains a magic number: Wait.Until(() => transport2ReceivedMessages.Count >= 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_let_the_outbound_thread_die_if_a_peer_cannot_be_resolved,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count >= 1' 2.Seconds()' "The outbound thread was killed and couldn't connect to the next peer");
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_dispatch_messages_received_from_wrong_environment,The following statement contains a magic number: var message2 = new FakeCommand(2).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_dispatch_messages_received_from_wrong_environment,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_dispatch_messages_received_from_wrong_environment,The following statement contains a magic number: Wait.Until(() => transport2ReceivedMessages.Count >= 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_messages,The following statement contains a magic number: Wait.Until(() => transport2ReceivedMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_messages,The following statement contains a magic number: var message2 = new FakeCommand(2).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_messages,The following statement contains a magic number: Wait.Until(() => transport1ReceivedMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_peer_and_persistence,The following statement contains a magic number: var message = new FakeCommand(999).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_peer_and_persistence,The following statement contains a magic number: Wait.Until(() => receiverMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_peer_and_persistence,The following statement contains a magic number: Wait.Until(() => persistenceMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_persistence,The following statement contains a magic number: var message = new FakeCommand(999).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_persistence,The following statement contains a magic number: Wait.Until(() => persistenceMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_persist_transport_message_to_persistence,The following statement contains a magic number: var message = new FakeCommand(999).ToTransportMessage().ToPersistTransportMessage(receiverPeerId);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_persist_transport_message_to_persistence,The following statement contains a magic number: Wait.Until(() => persistenceMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_write_WasPersisted_when_requested,The following statement contains a magic number: var otherMessage = new FakeCommand(2).ToTransportMessage();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_write_WasPersisted_when_requested,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count >= 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_write_WasPersisted_when_requested,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count >= 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_both_persisted_and_non_persisted_peers,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count >= 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_both_persisted_and_non_persisted_peers,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count >= 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_support_peer_endpoint_modifications,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_support_peer_endpoint_modifications,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count == 2' 2.Seconds()' "unable to receive message");
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_support_peer_endpoint_modifications,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count == 2' 2.Seconds()' "unable to receive message");
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_reuse_a_port_used_in_another_envionment,The following statement contains a magic number: var expectedPort = TcpUtil.GetRandomUnusedPort() + 5;
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_terminate_zmq_connection_of_a_forgotten_peer_after_some_time,The following statement contains a magic number: Wait.Until(() => senderTransport.OutboundSocketCount == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_terminate_zmq_connection_of_a_forgotten_peer_after_some_time,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_terminate_zmq_connection_of_a_started_peer_with_no_delay,The following statement contains a magic number: Wait.Until(() => senderTransport.OutboundSocketCount == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_terminate_zmq_connection_of_a_started_peer_with_no_delay,The following statement contains a magic number: Wait.Until(() => senderTransport.OutboundSocketCount == 0' 2.Seconds()' "Socket should be disconnected");
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_receive_many_messages,The following statement contains a magic number: i < 10
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_receive_many_messages,The following statement contains a magic number: Wait.Until(() => receviedMessages.Count == 10' 1.Second());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_receive_many_messages,The following statement contains a magic number: i < 10
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_block_when_hitting_high_water_mark,The following statement contains a magic number: senderTransport.SocketOptions.SendHighWaterMark = 3;
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_block_when_hitting_high_water_mark,The following statement contains a magic number: senderTransport.SocketOptions.SendTimeout = 50.Milliseconds();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_block_when_hitting_high_water_mark,The following statement contains a magic number: senderTransport.SocketOptions.SendRetriesBeforeSwitchingToClosedState = 2;
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_block_when_hitting_high_water_mark,The following statement contains a magic number: Wait.Until(() => receviedMessages.Count == expectedMessageCount' 2.Seconds()' "Failed to send message after " + i + " successful sent");
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_block_when_hitting_high_water_mark,The following statement contains a magic number: i <= 10
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_wait_blocked_peers_on_every_send,The following statement contains a magic number: senderTransport.SocketOptions.SendTimeout = 20.Milliseconds();
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_wait_blocked_peers_on_every_send,The following statement contains a magic number: i <= 10
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_wait_blocked_peers_on_every_send,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count == 10' 2.Seconds()' "Timed out while waiting for messages");
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_wait_blocked_peers_on_every_send,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count == 10' 2.Seconds()' "Timed out while waiting for messages");
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_wait_blocked_peers_on_every_send,The following statement contains a magic number: receiverStopwatch.ElapsedMilliseconds.ShouldBeLessOrEqualThan(200' "Throughput is too low");
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_wait_for_unknown_peer_on_every_send,The following statement contains a magic number: i < 1000
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_wait_for_unknown_peer_on_every_send,The following statement contains a magic number: Wait.Until(() => receivedMessageCount == 1000' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_wait_for_unknown_peer_on_every_send,The following statement contains a magic number: Wait.Until(() => receivedMessageCount == 1000' 5.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_various_sized_messages,The following statement contains a magic number: senderTransport.SocketOptions.SendHighWaterMark = 3;
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_various_sized_messages,The following statement contains a magic number: var messageBytes = new byte[5000];
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_various_sized_messages,The following statement contains a magic number: Wait.Until(() => receviedMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_various_sized_messages,The following statement contains a magic number: Wait.Until(() => receviedMessages.Count == 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_various_sized_messages,The following statement contains a magic number: Wait.Until(() => receviedMessages.Count == 2' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_send_message_to_self,The following statement contains a magic number: Wait.Until(() => receviedMessages.Count == 1' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_not_forward_messages_to_upper_layer_when_stopping,The following statement contains a magic number: Wait.Until(() => receivedMessages.Count > 1' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_process_all_messages_in_buffer_on_stop,The following statement contains a magic number: Wait.Until(() => state.ReceivedMessageCount != 0' 2.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_disconnect_peer_socket_of_a_stopped_peer_after_some_time,The following statement contains a magic number: Wait.Until(() => transport1.OutboundSocketCount == 1' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_disconnect_peer_socket_of_a_stopped_peer_after_some_time,The following statement contains a magic number: Wait.Until(() => transport2.OutboundSocketCount == 1' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,should_disconnect_peer_socket_of_a_stopped_peer_after_some_time,The following statement contains a magic number: Wait.Until(() => transport1.OutboundSocketCount == 0' 10.Seconds());
Magic Number,Abc.Zebus.Tests.Transport,ZmqTransportTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Transport\ZmqTransportTests.cs,CreateAndStartZmqTransport,The following statement contains a magic number: transport.SocketOptions.SendTimeout = 500.Milliseconds();
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: var setToRemoveFrom = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.Add(6);
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_add_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 3' 4' 5' 6 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: var setToRemoveFrom = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: setToRemoveFrom.Remove(3);
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_remove_an_item,The following statement contains a magic number: setToRemoveFrom.ShouldEqual(new[] { 1' 2' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_test_that_an_item_is_contained,The following statement contains a magic number: var setToRemoveFrom = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_test_that_an_item_is_contained,The following statement contains a magic number: setToRemoveFrom.Contains(3).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_test_that_an_item_is_contained,The following statement contains a magic number: setToRemoveFrom.Contains(7).ShouldBeFalse();
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: var setToCopy = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: var destinationArray = new int[5];
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: destinationArray.ShouldEqual(new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: destinationArray.ShouldEqual(new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: destinationArray.ShouldEqual(new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_copy_itself_to_an_array,The following statement contains a magic number: destinationArray.ShouldEqual(new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Collections,ConcurrentSetTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\ConcurrentSetTests.cs,should_clear_itself,The following statement contains a magic number: var setToClear = new ConcurrentSet<int>(Enumerable.Range(1' 5));
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureThroughput,The following statement contains a magic number: var enqueue = Task.Run(() => Enumerable.Range(0' 50000000).ForEach(queue.Add));
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureThroughput,The following statement contains a magic number: Console.WriteLine("{0} items processed in {1}"' 50000000' watch.Elapsed);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureThroughputRef,The following statement contains a magic number: var enqueue = Task.Run(() => Enumerable.Range(0' 50000000).ForEach(queue.Add));
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureThroughputRef,The following statement contains a magic number: Console.WriteLine("{0} items processed in {1}"' 50000000' watch.Elapsed);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureLatency,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureLatency,The following statement contains a magic number: i % 30 == 0
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureLatency,The following statement contains a magic number: i < 5000
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureLatency,The following statement contains a magic number: Console.WriteLine("{0}"' elapsed.TotalMilliseconds / 5000);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureLatencyRef,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureLatencyRef,The following statement contains a magic number: i % 30 == 0
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureLatencyRef,The following statement contains a magic number: i < 5000
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureLatencyRef,The following statement contains a magic number: Console.WriteLine("{0}"' elapsed.TotalMilliseconds / 5000);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureCpuUsage,The following statement contains a magic number: Thread.Sleep(20000);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionPerformanceTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionPerformanceTests.cs,MeasureCpuUsageRef,The following statement contains a magic number: Thread.Sleep(20000);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_get_consuming_enumerable,The following statement contains a magic number: var t1 = Task.Run(() => Enumerable.Range(0' 1000000).Select(x => 2 * x).ForEach(bc.Add));
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_get_consuming_enumerable,The following statement contains a magic number: var t1 = Task.Run(() => Enumerable.Range(0' 1000000).Select(x => 2 * x).ForEach(bc.Add));
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_get_consuming_enumerable,The following statement contains a magic number: var t2 = Task.Run(() => Enumerable.Range(0' 1000000).Select(x => 2 * x + 1).ForEach(bc.Add));
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_get_consuming_enumerable,The following statement contains a magic number: var t2 = Task.Run(() => Enumerable.Range(0' 1000000).Select(x => 2 * x + 1).ForEach(bc.Add));
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_get_consuming_enumerable,The following statement contains a magic number: const int itemCount = 2000000;
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var consume = Task.Run(() =>              {                  foreach (var batch in collection.GetConsumingEnumerable(5))                  {                      consumedItems.AddRange(batch);                        // simulate consumption lag                      Thread.Sleep(0);                  }                    Console.WriteLine("{0} consumed items"' consumedItems.Count);                  Console.WriteLine("Consumer done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: const int writerItemCount = 30000;
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var t1 = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' writerItemCount).Select(x => 3 * x))                  {                      collection.Add(item);                      Thread.SpinWait(1 << 4);                  }                  Console.WriteLine("T1 done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var t1 = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' writerItemCount).Select(x => 3 * x))                  {                      collection.Add(item);                      Thread.SpinWait(1 << 4);                  }                  Console.WriteLine("T1 done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var t2 = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' writerItemCount).Select(x => 3 * x + 1))                  {                      collection.Add(item);                      Thread.SpinWait(1 << 4);                  }                  Console.WriteLine("T2 done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var t2 = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' writerItemCount).Select(x => 3 * x + 1))                  {                      collection.Add(item);                      Thread.SpinWait(1 << 4);                  }                  Console.WriteLine("T2 done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var t3 = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' writerItemCount).Select(x => 3 * x + 2))                  {                      collection.Add(item);                      Thread.SpinWait(1 << 4);                      Thread.SpinWait(1 << 4);                  }                  Console.WriteLine("T3 done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var t3 = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' writerItemCount).Select(x => 3 * x + 2))                  {                      collection.Add(item);                      Thread.SpinWait(1 << 4);                      Thread.SpinWait(1 << 4);                  }                  Console.WriteLine("T3 done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var t3 = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' writerItemCount).Select(x => 3 * x + 2))                  {                      collection.Add(item);                      Thread.SpinWait(1 << 4);                      Thread.SpinWait(1 << 4);                  }                  Console.WriteLine("T3 done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: var t3 = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' writerItemCount).Select(x => 3 * x + 2))                  {                      collection.Add(item);                      Thread.SpinWait(1 << 4);                      Thread.SpinWait(1 << 4);                  }                  Console.WriteLine("T3 done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_multiple_writers,The following statement contains a magic number: const int expectedCount = writerItemCount * 3;
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_single_writer,The following statement contains a magic number: var consume = Task.Run(() =>              {                  foreach (var batch in collection.GetConsumingEnumerable(10))                  {                      consumedItems.AddRange(batch);                        // simulate very slow consumer                      Thread.Sleep(2);                  }                    Console.WriteLine("{0} consumed items"' consumedItems.Count);                  Console.WriteLine("Consumer done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_single_writer,The following statement contains a magic number: var consume = Task.Run(() =>              {                  foreach (var batch in collection.GetConsumingEnumerable(10))                  {                      consumedItems.AddRange(batch);                        // simulate very slow consumer                      Thread.Sleep(2);                  }                    Console.WriteLine("{0} consumed items"' consumedItems.Count);                  Console.WriteLine("Consumer done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_single_writer,The following statement contains a magic number: const int batchSize = 500000;
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_single_writer,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_single_writer,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_single_writer,The following statement contains a magic number: Enumerable.Range(2 * batchSize' batchSize)
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_single_writer,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_collection_with_single_writer,The following statement contains a magic number: const int expectedCount = 1500000;
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_multiple_times,The following statement contains a magic number: var consumerTask = Task.Run(() =>              {                  foreach (var batch in collection.GetConsumingEnumerable(10))                  {                      consumedItems.AddRange(batch);                      Thread.Yield();                  }                  Console.WriteLine("Consumer done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_multiple_times,The following statement contains a magic number: var flusherTask = Task.Run(() =>              {                  for (var i = 0; i < 10; ++i)                  {                      flushedItems.Add(collection.Flush());                      Thread.Sleep(50);                  }                  Console.WriteLine("Flusher done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_multiple_times,The following statement contains a magic number: var flusherTask = Task.Run(() =>              {                  for (var i = 0; i < 10; ++i)                  {                      flushedItems.Add(collection.Flush());                      Thread.Sleep(50);                  }                  Console.WriteLine("Flusher done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_multiple_times,The following statement contains a magic number: var adderTask = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' 5000000).Select(x => 3 * x))                  {                      collection.Add(item);                      Thread.Yield();                  }                  Console.WriteLine("Adder done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_multiple_times,The following statement contains a magic number: var adderTask = Task.Run(() =>              {                  foreach (var item in Enumerable.Range(0' 5000000).Select(x => 3 * x))                  {                      collection.Add(item);                      Thread.Yield();                  }                  Console.WriteLine("Adder done");              });
Magic Number,Abc.Zebus.Tests.Util.Collections,FlushableBlockingCollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Collections\FlushableBlockingCollectionTests.cs,should_flush_multiple_times,The following statement contains a magic number: consumedItems.Count.ShouldEqual(5000000);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_be_equal_to_datetime_when_not_set_or_paused,The following statement contains a magic number: sysDateTimeUtcNow.Subtract(dateTimeUtcNow).ShouldBeLessOrEqualThan(10.Milliseconds());
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_be_equal_to_datetime_when_not_set_or_paused,The following statement contains a magic number: sysDateTimeNow.Subtract(dateTimeNow).ShouldBeLessOrEqualThan(10.Milliseconds());
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_pause_time,The following statement contains a magic number: Thread.Sleep(50.Milliseconds());
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_pause_time,The following statement contains a magic number: Thread.Sleep(50.Milliseconds());
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_reset_time_when_paused,The following statement contains a magic number: Thread.Sleep(50.Milliseconds());
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_reset_time_when_paused,The following statement contains a magic number: Thread.Sleep(50.Milliseconds());
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_reset_time_when_set,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_reset_time_when_set,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_reset_time_when_set,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_reset_time_when_set,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_time,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_time,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_time,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_time,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_utc_time,The following statement contains a magic number: var fakeUtcNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Utc);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_utc_time,The following statement contains a magic number: var fakeUtcNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Utc);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_utc_time,The following statement contains a magic number: var fakeUtcNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Utc);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_utc_time,The following statement contains a magic number: var fakeUtcNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Utc);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_and_utc_time,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_and_utc_time,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_and_utc_time,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_and_utc_time,The following statement contains a magic number: var fakeNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Local);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_and_utc_time,The following statement contains a magic number: var fakeUtcNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Utc);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_and_utc_time,The following statement contains a magic number: var fakeUtcNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Utc);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_and_utc_time,The following statement contains a magic number: var fakeUtcNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Utc);
Magic Number,Abc.Zebus.Tests.Util,SystemDateTimeTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\SystemDateTimeTests.cs,should_set_time_with_fake_local_and_utc_time,The following statement contains a magic number: var fakeUtcNow = new DateTime(1995' 1' 1' 1' 2' 3' 4' DateTimeKind.Utc);
Magic Number,Abc.Zebus.Tests.Util,TcpUtilTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\TcpUtilTests.cs,is_port_unused_should_return_false_if_port_is_used,The following statement contains a magic number: const int port = 4848;
Magic Number,Abc.Zebus.Tests.Util,TypeUtilTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\TypeUtilTests.cs,should_resolve_type_fast,The following statement contains a magic number: i < 50000
Magic Number,Abc.Zebus.Tests.Util,UniqueTimestampProviderTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\UniqueTimestampProviderTests.cs,should_always_return_different_timestamps,The following statement contains a magic number: i < 1000
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendDictionaryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendDictionaryTests.cs,Should_TryRemove_from_ConcurrentDictionary_using_comparison_value,The following statement contains a magic number: dict.TryAdd(42' 12);
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendDictionaryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendDictionaryTests.cs,Should_TryRemove_from_ConcurrentDictionary_using_comparison_value,The following statement contains a magic number: dict.TryAdd(42' 12);
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendDictionaryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendDictionaryTests.cs,Should_TryRemove_from_ConcurrentDictionary_using_comparison_value,The following statement contains a magic number: dict.TryRemove(42' 5).ShouldBeFalse();
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendDictionaryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendDictionaryTests.cs,Should_TryRemove_from_ConcurrentDictionary_using_comparison_value,The following statement contains a magic number: dict.TryRemove(42' 5).ShouldBeFalse();
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendDictionaryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendDictionaryTests.cs,Should_TryRemove_from_ConcurrentDictionary_using_comparison_value,The following statement contains a magic number: dict.TryRemove(42' 12).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendDictionaryTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendDictionaryTests.cs,Should_TryRemove_from_ConcurrentDictionary_using_comparison_value,The following statement contains a magic number: dict.TryRemove(42' 12).ShouldBeTrue();
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_AddRange,The following statement contains a magic number: ICollection<int> collection = new[] { 1' 2' 3 }.ToList();
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_AddRange,The following statement contains a magic number: ICollection<int> collection = new[] { 1' 2' 3 }.ToList();
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_AddRange,The following statement contains a magic number: var returned = collection.AddRange(new[] { 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_AddRange,The following statement contains a magic number: var returned = collection.AddRange(new[] { 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_AddRange,The following statement contains a magic number: CollectionAssert.AreEquivalent(collection' new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_AddRange,The following statement contains a magic number: CollectionAssert.AreEquivalent(collection' new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_AddRange,The following statement contains a magic number: CollectionAssert.AreEquivalent(collection' new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_AddRange,The following statement contains a magic number: CollectionAssert.AreEquivalent(collection' new[] { 1' 2' 3' 4' 5 });
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_RemoveRange,The following statement contains a magic number: ICollection<int> collection = new[] { 1' 2' 3 }.ToList();
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_RemoveRange,The following statement contains a magic number: ICollection<int> collection = new[] { 1' 2' 3 }.ToList();
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_RemoveRange,The following statement contains a magic number: var returned = collection.RemoveRange(new[] { 1' 4 });
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_RemoveRange,The following statement contains a magic number: CollectionAssert.AreEquivalent(collection' new[] { 2' 3 });
Magic Number,Abc.Zebus.Tests.Util.Extensions,ExtendICollectionTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\Extensions\ExtendICollectionTests.cs,Test_RemoveRange,The following statement contains a magic number: CollectionAssert.AreEquivalent(collection' new[] { 2' 3 });
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_ints,The following statement contains a magic number: int two = 2;
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_ints,The following statement contains a magic number: Assert.That(two.Weeks()' Is.EqualTo(TimeSpan.FromDays(14)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_ints,The following statement contains a magic number: Assert.That(two.Days()' Is.EqualTo(TimeSpan.FromDays(2)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_ints,The following statement contains a magic number: Assert.That(two.Hours()' Is.EqualTo(TimeSpan.FromHours(2)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_ints,The following statement contains a magic number: Assert.That(two.Minutes()' Is.EqualTo(TimeSpan.FromMinutes(2)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_ints,The following statement contains a magic number: Assert.That(two.Seconds()' Is.EqualTo(TimeSpan.FromSeconds(2)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_ints,The following statement contains a magic number: Assert.That(two.Milliseconds()' Is.EqualTo(TimeSpan.FromMilliseconds(2)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_ints,The following statement contains a magic number: Assert.That(two.Ticks()' Is.EqualTo(TimeSpan.FromTicks(2)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The following statement contains a magic number: double oneAndAHalf = 1.5;
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The following statement contains a magic number: Assert.That(oneAndAHalf.Weeks()' Is.EqualTo(new TimeSpan(days: 10' hours: 12' minutes: 0' seconds: 0)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The following statement contains a magic number: Assert.That(oneAndAHalf.Weeks()' Is.EqualTo(new TimeSpan(days: 10' hours: 12' minutes: 0' seconds: 0)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The following statement contains a magic number: Assert.That(oneAndAHalf.Days()' Is.EqualTo(new TimeSpan(days: 1' hours: 12' minutes: 0' seconds: 0)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The following statement contains a magic number: Assert.That(oneAndAHalf.Hours()' Is.EqualTo(new TimeSpan(hours: 1' minutes: 30' seconds: 0)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The following statement contains a magic number: Assert.That(oneAndAHalf.Minutes()' Is.EqualTo(new TimeSpan(hours: 0' minutes: 1' seconds: 30)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The following statement contains a magic number: Assert.That(oneAndAHalf.Seconds()' Is.EqualTo(new TimeSpan(days: 0' hours: 0' minutes: 0' seconds: 1' milliseconds: 500)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_doubles,The following statement contains a magic number: Assert.That(oneAndAHalf.Milliseconds()' Is.EqualTo(TimeSpan.FromTicks((long)(TimeSpan.TicksPerMillisecond * 1.5))));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Note_difference_with_TimeSpanFromMilliseconds_which_accepts_double_but_is_only_millisecond_precise,The following statement contains a magic number: Assert.That(TimeSpan.FromMilliseconds(1.5)'                          Is.EqualTo(TimeSpan.FromMilliseconds(2)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Note_difference_with_TimeSpanFromMilliseconds_which_accepts_double_but_is_only_millisecond_precise,The following statement contains a magic number: Assert.That(TimeSpan.FromMilliseconds(1.5)'                          Is.EqualTo(TimeSpan.FromMilliseconds(2)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Note_difference_with_TimeSpanFromMilliseconds_which_accepts_double_but_is_only_millisecond_precise,The following statement contains a magic number: Assert.That(1.5.Milliseconds()'                          Is.Not.EqualTo(TimeSpan.FromMilliseconds(1.5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Note_difference_with_TimeSpanFromMilliseconds_which_accepts_double_but_is_only_millisecond_precise,The following statement contains a magic number: Assert.That(1.5.Milliseconds()'                          Is.Not.EqualTo(TimeSpan.FromMilliseconds(1.5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Creates_TimeSpans_readably_with_singular_aliases,The following statement contains a magic number: Assert.That(1.Week()' Is.EqualTo(TimeSpan.FromDays(7)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Weeks(2.Days(3.Hours(4.Minutes(15.Seconds(5.Milliseconds())))))'                          Is.EqualTo(new TimeSpan(days: 16' hours: 3' minutes: 4' seconds: 15' milliseconds: 5)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Milliseconds(3.Ticks(4.Ticks()))'                          Is.EqualTo(TimeSpan.FromTicks((2 * TimeSpan.TicksPerMillisecond) + 7)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Milliseconds(3.Ticks(4.Ticks()))'                          Is.EqualTo(TimeSpan.FromTicks((2 * TimeSpan.TicksPerMillisecond) + 7)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Milliseconds(3.Ticks(4.Ticks()))'                          Is.EqualTo(TimeSpan.FromTicks((2 * TimeSpan.TicksPerMillisecond) + 7)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Milliseconds(3.Ticks(4.Ticks()))'                          Is.EqualTo(TimeSpan.FromTicks((2 * TimeSpan.TicksPerMillisecond) + 7)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(2.Milliseconds(3.Ticks(4.Ticks()))'                          Is.EqualTo(TimeSpan.FromTicks((2 * TimeSpan.TicksPerMillisecond) + 7)));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(1.Week(1.Day(1.Hour(1.Minute(1.Second(1.Millisecond(1.Tick()))))))'                          Is.EqualTo(7.Days(24.Hours(60.Minutes(60.Seconds(1001.Milliseconds()))) + 1.Tick())));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(1.Week(1.Day(1.Hour(1.Minute(1.Second(1.Millisecond(1.Tick()))))))'                          Is.EqualTo(7.Days(24.Hours(60.Minutes(60.Seconds(1001.Milliseconds()))) + 1.Tick())));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(1.Week(1.Day(1.Hour(1.Minute(1.Second(1.Millisecond(1.Tick()))))))'                          Is.EqualTo(7.Days(24.Hours(60.Minutes(60.Seconds(1001.Milliseconds()))) + 1.Tick())));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(1.Week(1.Day(1.Hour(1.Minute(1.Second(1.Millisecond(1.Tick()))))))'                          Is.EqualTo(7.Days(24.Hours(60.Minutes(60.Seconds(1001.Milliseconds()))) + 1.Tick())));
Magic Number,Abc.Zebus.Tests.Util.FluentTime,TimeSpanCreationTests,D:\research\architectureSmells\repos\Abc-Arbitrage_Zebus\src\Abc.Zebus.Tests\Util\FluentTime\TimeSpanCreationTests.cs,Stacks_TimeSpans_readably_in_plural_and_singular,The following statement contains a magic number: Assert.That(1.Week(1.Day(1.Hour(1.Minute(1.Second(1.Millisecond(1.Tick()))))))'                          Is.EqualTo(7.Days(24.Hours(60.Minutes(60.Seconds(1001.Milliseconds()))) + 1.Tick())));
