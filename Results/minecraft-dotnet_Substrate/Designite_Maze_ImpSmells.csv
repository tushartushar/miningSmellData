Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,Cyclomatic complexity of the method is 13
Complex Method,Maze,Generator,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Generator,Cyclomatic complexity of the method is 13
Long Parameter List,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The method has 7 parameters. Parameters: bm' x1' y1' z1' x2' y2' z2
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.BuildRoom(bm' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.BuildRoom(bm' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.BuildRoom(bm' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 1' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 1' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 1' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 1' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 1' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 3' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 3' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 3' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 3' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 3' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 3' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 1);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 1);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 1);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 1);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 1);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 3);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 3);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 3);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 3);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 3);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 5' 2' 2' 5' 3);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 4' 2' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 4' 2' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 4' 2' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 4' 2' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 4' 2' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' 4' 2' 2' 5' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.BuildRoom(bm' 2' -1' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.BuildRoom(bm' 2' -1' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' -1' 2' 2' 0' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' -1' 2' 2' 0' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' -1' 2' 2' 0' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.LinkRooms(bm' 2' -1' 2' 2' 0' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.AddPrize(bm' 2' -1' 2);
Magic Number,Maze,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Main,The following statement contains a magic number: grid.AddPrize(bm' 2' -1' 2);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: originy = 27;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: xlen = 5;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: ylen = 5;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: zlen = 5;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: cellxlen = 5;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: cellylen = 5;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: cellzlen = 5;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: wallxwidth = 2;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: wallywidth = 2;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Grid,The following statement contains a magic number: wallzwidth = 2;
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: for (int xi = 0; xi < cellxlen + 2 * wallxwidth; xi++) {                  for (int zi = 0; zi < cellzlen + 2 * wallzwidth; zi++) {                      for (int yi = 0; yi < wallywidth; yi++) {                          bm.SetID(ox + xi' oy + yi' oz + zi' (int)BlockType.BEDROCK);                          bm.SetID(ox + xi' oy + yi + cellylen + wallywidth' oz + zi' (int)BlockType.BEDROCK);                      }                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: for (int xi = 0; xi < cellxlen + 2 * wallxwidth; xi++) {                  for (int zi = 0; zi < cellzlen + 2 * wallzwidth; zi++) {                      for (int yi = 0; yi < wallywidth; yi++) {                          bm.SetID(ox + xi' oy + yi' oz + zi' (int)BlockType.BEDROCK);                          bm.SetID(ox + xi' oy + yi + cellylen + wallywidth' oz + zi' (int)BlockType.BEDROCK);                      }                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: for (int xi = 0; xi < cellxlen + 2 * wallxwidth; xi++) {                  for (int zi = 0; zi < wallzwidth; zi++) {                      for (int yi = 0; yi < cellylen + 2 * wallywidth; yi++) {                          bm.SetID(ox + xi' oy + yi' oz + zi' (int)BlockType.BEDROCK);                          bm.SetID(ox + xi' oy + yi' oz + zi + cellzlen + wallzwidth' (int)BlockType.BEDROCK);                      }                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: for (int xi = 0; xi < cellxlen + 2 * wallxwidth; xi++) {                  for (int zi = 0; zi < wallzwidth; zi++) {                      for (int yi = 0; yi < cellylen + 2 * wallywidth; yi++) {                          bm.SetID(ox + xi' oy + yi' oz + zi' (int)BlockType.BEDROCK);                          bm.SetID(ox + xi' oy + yi' oz + zi + cellzlen + wallzwidth' (int)BlockType.BEDROCK);                      }                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: for (int xi = 0; xi < wallxwidth; xi++) {                  for (int zi = 0; zi < cellzlen + 2 * wallzwidth; zi++) {                      for (int yi = 0; yi < cellylen + 2 * wallywidth; yi++) {                          bm.SetID(ox + xi' oy + yi' oz + zi' (int)BlockType.BEDROCK);                          bm.SetID(ox + xi + cellxlen + wallxwidth' oy + yi' oz + zi' (int)BlockType.BEDROCK);                      }                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: for (int xi = 0; xi < wallxwidth; xi++) {                  for (int zi = 0; zi < cellzlen + 2 * wallzwidth; zi++) {                      for (int yi = 0; yi < cellylen + 2 * wallywidth; yi++) {                          bm.SetID(ox + xi' oy + yi' oz + zi' (int)BlockType.BEDROCK);                          bm.SetID(ox + xi + cellxlen + wallxwidth' oy + yi' oz + zi' (int)BlockType.BEDROCK);                      }                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth' oy + wallywidth + 2' oz + wallzwidth + 1' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth' oy + wallywidth + 2' oz + wallzwidth + cellzlen - 2' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth' oy + wallywidth + 2' oz + wallzwidth + cellzlen - 2' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + cellxlen - 1' oy + wallywidth + 2' oz + wallzwidth + 1' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + cellxlen - 1' oy + wallywidth + 2' oz + wallzwidth + cellzlen - 2' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + cellxlen - 1' oy + wallywidth + 2' oz + wallzwidth + cellzlen - 2' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + 1' oy + wallywidth + 2' oz + wallzwidth' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + cellxlen - 2' oy + wallywidth + 2' oz + wallzwidth' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + cellxlen - 2' oy + wallywidth + 2' oz + wallzwidth' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + 1' oy + wallywidth + 2' oz + wallzwidth + cellzlen - 1' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + cellxlen - 2' oy + wallywidth + 2' oz + wallzwidth + cellzlen - 1' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,BuildRoom,The following statement contains a magic number: bm.SetID(ox + wallxwidth + cellxlen - 2' oy + wallywidth + 2' oz + wallzwidth + cellzlen - 1' (int)BlockType.TORCH);
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,LinkRooms,The following statement contains a magic number: if (x1 != x2) {                  xx = originx + (cellxlen + wallxwidth) * Math.Max(x1' x2);                  for (int xi = 0; xi < wallxwidth; xi++) {                      int zc = zz + wallzwidth + (cellzlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xx + xi' yb' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc - 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 1' zc + 1' (int)BlockType.AIR);                      bm.SetID(xx + xi' yb + 2' zc' (int)BlockType.AIR);                  }              }              else if (z1 != z2) {                  zz = originz + (cellzlen + wallzwidth) * Math.Max(z1' z2);                  for (int zi = 0; zi < wallxwidth; zi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int yb = yy + wallywidth;                      bm.SetID(xc - 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc - 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc + 1' yb + 1' zz + zi' (int)BlockType.AIR);                      bm.SetID(xc' yb + 2' zz + zi' (int)BlockType.AIR);                  }              }              else if (y1 != y2) {                  yy = originy + (cellylen + wallywidth) * Math.Max(y1' y2);                  for (int yi = 0 - cellylen + 1; yi < wallywidth + 1; yi++) {                      int xc = xx + wallxwidth + (cellxlen / 2);                      int zc = zz + wallzwidth + (cellzlen / 2);                        bm.SetID(xc' yy + yi' zc' (int)BlockType.BEDROCK);                      bm.SetID(xc - 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc - 1' yy + yi' zc' 4);                      bm.SetID(xc + 1' yy + yi' zc' (int)BlockType.LADDER);                      bm.SetData(xc + 1' yy + yi' zc' 5);                      bm.SetID(xc' yy + yi' zc - 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc - 1' 2);                      bm.SetID(xc' yy + yi' zc + 1' (int)BlockType.LADDER);                      bm.SetData(xc' yy + yi' zc + 1' 3);                  }              }
Magic Number,Maze,Grid,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,AddPrize,The following statement contains a magic number: for (int xi = 0; xi < cellxlen; xi++) {                  for (int zi = 0; zi < cellzlen; zi++) {                      if (rand.NextDouble() < 0.1) {                          bm.SetID(ox + xi' oy' oz + zi' (int)BlockType.DIAMOND_BLOCK);                      }                  }              }
Magic Number,Maze,Generator,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Generator,The following statement contains a magic number: xlen = 5;
Magic Number,Maze,Generator,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Generator,The following statement contains a magic number: ylen = 5;
Magic Number,Maze,Generator,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\Maze\Program.cs,Generator,The following statement contains a magic number: zlen = 5;
