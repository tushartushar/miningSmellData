Implementation smell,Namespace,Class,File,Method,Description
Magic Number,GoodyChest,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\GoodyChest\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {                  Console.WriteLine("Usage: GoodyChest <world> <prob>");                  return;              }
Magic Number,GoodyChest,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\GoodyChest\Program.cs,Main,The following statement contains a magic number: foreach (ChunkRef chunk in cm) {                  if (rand.NextDouble() < p) {                      int x = rand.Next(chunk.Blocks.XDim);                      int z = rand.Next(chunk.Blocks.ZDim);                      int y = chunk.Blocks.GetHeight(x' z);                        // Can't build this high (-2 to account for new MC 1.6 height limitation)                      if (y >= chunk.Blocks.YDim - 2) {                          continue;                      }                        // Get a block object' then assign it to the chunk                      AlphaBlock block = BuildChest();                      chunk.Blocks.SetBlock(x' y + 1' z' block);                        // Save the chunk                      cm.Save();                        added++;                  }              }
Magic Number,GoodyChest,Program,C:\repos\minecraft-dotnet_Substrate\SubstrateCS\Examples\GoodyChest\Program.cs,BuildChest,The following statement contains a magic number: for (int i = 0; i < ent.Items.Capacity; i++) {                  if (rand.NextDouble() < 0.3) {                      // Ask the ItemTable for a random Item type registered with Substrate                      ItemInfo itype = ItemInfo.GetRandomItem();                        // Create the item object' give it an appropriate' random count (items in stack)                      Item item = new Item(itype.ID);                      item.Count = 1 + rand.Next(itype.StackSize);                        // Assign the item to the chest at slot i                      ent.Items[i] = item;                  }              }
