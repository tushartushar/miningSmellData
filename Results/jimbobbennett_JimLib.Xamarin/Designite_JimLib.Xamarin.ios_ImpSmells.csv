Implementation smell,Namespace,Class,File,Method,Description
Complex Method,JimBobBennett.JimLib.Xamarin.ios.Controls,ToolBarRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ToolBarRenderer.cs,HandleElementOnPropertyChanged,Cyclomatic complexity of the method is 8
Complex Method,JimBobBennett.JimLib.Xamarin.ios.Extensions,SystemButtonItemExtensions,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Extensions\SystemButtonItemExtensions.cs,ConvertToSystemItem,Cyclomatic complexity of the method is 24
Long Parameter List,JimBobBennett.JimLib.Xamarin.ios.Images,ImageHelper,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Images\ImageHelper.cs,GetImageAsync,The method has 8 parameters. Parameters: baseUrl' resource' username' password' timeout' headers' options' canCache
Long Identifier,JimBobBennett.JimLib.Xamarin.ios.Controls,ToolBarRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ToolBarRenderer.cs,ButtonsCollectionOnCollectionChanged,The length of the parameter notifyCollectionChangedEventArgs is 32.
Long Statement,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedEntryRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedEntryRenderer.cs,SetKeyboardStyle,The length of the statement  "            Control.KeyboardAppearance = view.KeyboardStyle == KeyboardStyle.Dark ? UIKeyboardAppearance.Dark : UIKeyboardAppearance.Light; " is 127.
Long Statement,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedTabbedPageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedTabbedPageRenderer.cs,ViewWillAppear,The length of the statement  "                TabBar.SelectionIndicatorImage = UIImage.FromFile(page.TabBarSelectedImage).CreateResizableImage(new UIEdgeInsets(0' 0' 0' 0)' UIImageResizingMode.Stretch); " is 156.
Long Statement,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedTabbedPageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedTabbedPageRenderer.cs,ViewWillAppear,The length of the statement  "                TabBar.BackgroundImage = UIImage.FromFile(page.TabBarBackgroundImage).CreateResizableImage(new UIEdgeInsets(0' 0' 0' 0)' UIImageResizingMode.Stretch); " is 150.
Long Statement,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedViewCellRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedViewCellRenderer.cs,GetCell,The length of the statement  "                cell.SelectionStyle = extendedCell.HighlightSelection ? UITableViewCellSelectionStyle.Default : UITableViewCellSelectionStyle.None; " is 131.
Long Statement,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedViewCellRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedViewCellRenderer.cs,GetCell,The length of the statement  "                cell.SeparatorInset = new UIEdgeInsets((float) extendedCell.SeparatorPadding.Top' (float) extendedCell.SeparatorPadding.Left' " is 125.
Long Statement,JimBobBennett.JimLib.Xamarin.ios.Controls,GridViewRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewRenderer.cs,OnElementChanged,The length of the statement  "                    ContentInset = new UIEdgeInsets((float) Element.Padding.Top' (float) Element.Padding.Left' (float) Element.Padding.Bottom' (float) Element.Padding.Right)'" is 154.
Empty Catch Block,JimBobBennett.JimLib.Xamarin.ios.Controls,GridViewRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewRenderer.cs,OnElementChanged,The method has an empty catch block.
Empty Catch Block,JimBobBennett.JimLib.Xamarin.ios.Controls,GridViewRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewRenderer.cs,ElementPropertyChanged,The method has an empty catch block.
Empty Catch Block,JimBobBennett.JimLib.Xamarin.ios.SocialMedia,SocialMediaConnections,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\SocialMedia\SocialMediaConnections.cs,ViewOnFacebook,The method has an empty catch block.
Empty Catch Block,JimBobBennett.JimLib.Xamarin.ios.SocialMedia,SocialMediaConnections,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\SocialMedia\SocialMediaConnections.cs,ViewOnTwitter,The method has an empty catch block.
Empty Catch Block,JimBobBennett.JimLib.Xamarin.ios.SocialMedia,SocialMediaConnections,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\SocialMedia\SocialMediaConnections.cs,ChatOnWhatsApp,The method has an empty catch block.
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Contacts,Contacts,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Contacts\Contacts.cs,CreateContact,The following statement contains a magic number: var scaled = ImageHelper.MaxResizeImage(thumb' 128' 128);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Contacts,Contacts,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Contacts\Contacts.cs,CreateContact,The following statement contains a magic number: var scaled = ImageHelper.MaxResizeImage(thumb' 128' 128);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedEntryRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedEntryRenderer.cs,SetButtons,The following statement contains a magic number: var toolbar = new UIToolbar(new CGRect(0.0f' 0.0f' Control.Frame.Size.Width' 44.0f))              {                  Translucent = true'                   Items = view.AccessoryButtons.Select(b => b.CreateButton()).ToArray()              };
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,SetCircular,The following statement contains a magic number: Control.Layer.CornerRadius = Control.Frame.Size.Width / 2;
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,BuildFallbackImage,The following statement contains a magic number: var pathFrameWidth = Math.Min(Control.Frame.Width' _label.Frame.Width * 1.2f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,BuildFallbackImage,The following statement contains a magic number: var pathFrameHeight = Math.Min(Control.Frame.Height' _label.Frame.Height * 1.2f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,BuildFallbackImage,The following statement contains a magic number: var pathFrame = new CGRect((nfloat)((Control.Frame.Width - pathFrameWidth) / 2f)'  				(nfloat)((Control.Frame.Height - pathFrameHeight) / 2f)'  				(nfloat)pathFrameWidth'  				(nfloat)pathFrameHeight);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,BuildFallbackImage,The following statement contains a magic number: var pathFrame = new CGRect((nfloat)((Control.Frame.Width - pathFrameWidth) / 2f)'  				(nfloat)((Control.Frame.Height - pathFrameHeight) / 2f)'  				(nfloat)pathFrameWidth'  				(nfloat)pathFrameHeight);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,BuildFallbackImage,The following statement contains a magic number: var path = UIBezierPath.FromRoundedRect(pathFrame' 5f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,SetLabelSizeAndPosition,The following statement contains a magic number: _label.Frame = new CGRect(Control.Frame.Width / 10'                  Control.Frame.Height / 10'                  Control.Frame.Width * 0.8f'                  _label.Frame.Height * 0.8f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,SetLabelSizeAndPosition,The following statement contains a magic number: _label.Frame = new CGRect(Control.Frame.Width / 10'                  Control.Frame.Height / 10'                  Control.Frame.Width * 0.8f'                  _label.Frame.Height * 0.8f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,SetLabelSizeAndPosition,The following statement contains a magic number: _label.Frame = new CGRect(Control.Frame.Width / 10'                  Control.Frame.Height / 10'                  Control.Frame.Width * 0.8f'                  _label.Frame.Height * 0.8f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,SetLabelSizeAndPosition,The following statement contains a magic number: _label.Frame = new CGRect(Control.Frame.Width / 10'                  Control.Frame.Height / 10'                  Control.Frame.Width * 0.8f'                  _label.Frame.Height * 0.8f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,SetLabelSizeAndPosition,The following statement contains a magic number: var newFrame = new CGRect((Control.Frame.Width - _label.Frame.Width) / 2'                  (Control.Frame.Height - _label.Frame.Height) / 2'                  _label.Frame.Width'                  _label.Frame.Height);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedImageRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedImageRenderer.cs,SetLabelSizeAndPosition,The following statement contains a magic number: var newFrame = new CGRect((Control.Frame.Width - _label.Frame.Width) / 2'                  (Control.Frame.Height - _label.Frame.Height) / 2'                  _label.Frame.Width'                  _label.Frame.Height);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedViewCellRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedViewCellRenderer.cs,SetDiscolosure,The following statement contains a magic number: detailDisclosureButton.Frame = new CGRect(0f' 0f' 30f' 30f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedViewCellRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedViewCellRenderer.cs,SetDiscolosure,The following statement contains a magic number: detailDisclosureButton.Frame = new CGRect(0f' 0f' 30f' 30f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,GridViewCell,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewCell.cs,LayoutSubviews,The following statement contains a magic number: frame.X = (Bounds.Width - frame.Width) / 2;
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,GridViewCell,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewCell.cs,LayoutSubviews,The following statement contains a magic number: frame.Y = (Bounds.Height - frame.Height) / 2;
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,GridItemSelectedViewOverlay,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewCell.cs,Draw,The following statement contains a magic number: g.SetLineWidth(10);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,GridItemSelectedViewOverlay,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewCell.cs,Draw,The following statement contains a magic number: UIColor.FromRGB(64' 30' 168).SetStroke();
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,GridItemSelectedViewOverlay,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewCell.cs,Draw,The following statement contains a magic number: UIColor.FromRGB(64' 30' 168).SetStroke();
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,GridItemSelectedViewOverlay,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewCell.cs,Draw,The following statement contains a magic number: UIColor.FromRGB(64' 30' 168).SetStroke();
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,GridViewRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewRenderer.cs,SetLabelSizeAndPosition,The following statement contains a magic number: var newFrame = new CGRect((Control.Frame.Width - size.Width) / 2'                 (Control.Frame.Height - size.Height) / 2'                 size.Width'                 size.Height);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Controls,GridViewRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\GridViewRenderer.cs,SetLabelSizeAndPosition,The following statement contains a magic number: var newFrame = new CGRect((Control.Frame.Width - size.Width) / 2'                 (Control.Frame.Height - size.Height) / 2'                 size.Width'                 size.Height);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Extensions,ToolBarButtonExtensions,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Extensions\ToolBarButtonExtensions.cs,CreateButtonForToolbar,The following statement contains a magic number: uiButton.Frame = new CGRect (0' 0' 24' 24);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Extensions,ToolBarButtonExtensions,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Extensions\ToolBarButtonExtensions.cs,CreateButtonForToolbar,The following statement contains a magic number: uiButton.Frame = new CGRect (0' 0' 24' 24);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Extensions,ToolBarButtonExtensions,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Extensions\ToolBarButtonExtensions.cs,WireUpEnabledToCanExecute,The following statement contains a magic number: button.Command.CanExecuteChanged += (s' e) =>                          uiButton.InvokeOnMainThread(() =>                              {                                  var enabled = button.Command.CanExecute(button.CommandParameter);                                    if (uiButton.Enabled == enabled) return;                                    uiButton.Enabled = enabled;                                      if (uiButton.Image != null)                                      uiButton.Image = ImageHelper.AdjustOpacity(uiButton.Image' enabled ? 1 : 0.5f);                              });
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Extensions,ToolBarButtonExtensions,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Extensions\ToolBarButtonExtensions.cs,WireUpEnabledToCanExecute,The following statement contains a magic number: uiButton.Image = ImageHelper.AdjustOpacity(uiButton.Image' 0.5f);
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Images,ImageHelper,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Images\ImageHelper.cs,GetImageSourceFromUIImage,The following statement contains a magic number: return uiImage == null ? null : ImageSource.FromStream(() => uiImage.AsJPEG(0.75f).AsStream());
Magic Number,JimBobBennett.JimLib.Xamarin.ios.Images,ImageHelper,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Images\ImageHelper.cs,GetBase64FromImageSource,The following statement contains a magic number: switch (imageType)              {                  case ImageType.Jpeg:                      return image.AsJPEG(0.75f).GetBase64EncodedString(NSDataBase64EncodingOptions.None);                  case ImageType.Png:                      return image.AsPNG().GetBase64EncodedString(NSDataBase64EncodingOptions.None);              }
Magic Number,JimBobBennett.JimLib.Xamarin.Network,LocalServerDiscovery,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Network\LocalServerDiscovery.cs,DiscoverLocalServersAsync,The following statement contains a magic number: await this.WaitForAsync(() => _foundServer.TryGetValue(port' out firstServer)' 10000);
Magic Number,JimBobBennett.JimLib.Xamarin.Network,ServerDiscovery,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Network\ServerDiscovery.cs,CreateUdpClient,The following statement contains a magic number: await Task.Delay(10000);
Missing Default,JimBobBennett.JimLib.Xamarin.ios.Contacts,Contacts,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Contacts\Contacts.cs,AddSocialProfiles,The following switch statement is missing a default case: switch (socialMediaUser.Type)                  {                      case Account.Twitter:                          socialProfile.ServiceName = ABPersonSocialProfileService.Twitter;                          break;                      case Account.Facebook:                          socialProfile.ServiceName = ABPersonSocialProfileService.Facebook;                          break;                  }
Missing Default,JimBobBennett.JimLib.Xamarin.ios.Controls,ExtendedEntryRenderer,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Controls\ExtendedEntryRenderer.cs,SetTextAlignment,The following switch statement is missing a default case: switch (view.XAlign)              {                  case TextAlignment.Center:                      Control.TextAlignment = UITextAlignment.Center;                      break;                  case TextAlignment.End:                      Control.TextAlignment = UITextAlignment.Right;                      break;                  case TextAlignment.Start:                      Control.TextAlignment = UITextAlignment.Left;                      break;              }
Missing Default,JimBobBennett.JimLib.Xamarin.ios.Images,ImageHelper,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Images\ImageHelper.cs,GetBase64FromImageSource,The following switch statement is missing a default case: switch (imageType)              {                  case ImageType.Jpeg:                      return image.AsJPEG(0.75f).GetBase64EncodedString(NSDataBase64EncodingOptions.None);                  case ImageType.Png:                      return image.AsPNG().GetBase64EncodedString(NSDataBase64EncodingOptions.None);              }
Missing Default,JimBobBennett.JimLib.Xamarin.ios.Purchases,TransactionObserver,D:\research\architectureSmells\repos\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin.ios\Purchases\TransactionObserver.cs,UpdatedTransactions,The following switch statement is missing a default case: switch (transaction.TransactionState)                  {                      case SKPaymentTransactionState.Purchased:                      case SKPaymentTransactionState.Restored:                          OnTransactionPurchased(transaction);                          break;                      case SKPaymentTransactionState.Failed:                          OnTransactionFailed(transaction);                          break;                  }
