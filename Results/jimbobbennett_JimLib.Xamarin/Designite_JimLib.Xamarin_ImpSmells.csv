Implementation smell,Namespace,Class,File,Method,Description
Long Method,JimBobBennett.JimLib.Xamarin.Views,BaseContentPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\BaseContentPage.cs,BaseContentPage,The method has 69 lines of code.
Long Method,JimBobBennett.JimLib.Xamarin.Views,ImageViewerPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\ImageViewerPage.cs,BuildControls,The method has 71 lines of code.
Complex Method,JimBobBennett.JimLib.Xamarin.Controls,CardView,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Controls\CardView.cs,BuildGridImpl,Cyclomatic complexity of the method is 8
Complex Method,JimBobBennett.JimLib.Xamarin.Controls,ToolBar,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Controls\ToolBar.cs,AccessoryButtonsPropertyChanging,Cyclomatic complexity of the method is 9
Complex Method,JimBobBennett.JimLib.Xamarin.Controls,ExtendedEntry,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Controls\ExtendedEntry.cs,AccessoryButtonsPropertyChanging,Cyclomatic complexity of the method is 7
Complex Method,JimBobBennett.JimLib.Xamarin.Navigation,NavigationStackManager,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Navigation\NavigationStackManager.cs,PopAsync,Cyclomatic complexity of the method is 11
Complex Method,JimBobBennett.JimLib.Xamarin.Navigation,NavigationStackManager,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Navigation\NavigationStackManager.cs,RollbackToRootAsync,Cyclomatic complexity of the method is 8
Long Parameter List,JimBobBennett.JimLib.Xamarin.Controls,CardView,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Controls\CardView.cs,CreateViewCard,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.Images,IImageHelper,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Images\IImageHelper.cs,GetImageAsync,The method has 8 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.Navigation,IUtilityViewNavigation,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Navigation\IUtilityViewNavigation.cs,ShowImageViewer,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.Navigation,UtilityViewNavigation,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Navigation\UtilityViewNavigation.cs,ShowImageViewer,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.ValueConverters,BooleanToObjectValueConverter,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\ValueConverters\BooleanToObjectValueConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.ValueConverters,BooleanToObjectValueConverter,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\ValueConverters\BooleanToObjectValueConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.ValueConverters,InvertBooleanValueConverter,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\ValueConverters\InvertBooleanValueConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.ValueConverters,InvertBooleanValueConverter,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\ValueConverters\InvertBooleanValueConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.Views,BaseContentPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\BaseContentPage.cs,GetOptionFromUserAsync,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.Views,BaseContentPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\BaseContentPage.cs,ShowAlertAsync,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.Views,IView,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\IView.cs,GetOptionFromUserAsync,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.Views,IView,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\IView.cs,ShowAlertAsync,The method has 4 parameters.
Long Parameter List,JimBobBennett.JimLib.Xamarin.Views,ViewFactoryException,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\ViewFactoryException.cs,ViewFactoryException,The method has 4 parameters.
Long Identifier,JimBobBennett.JimLib.Xamarin.Controls,ToolBar,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Controls\ToolBar.cs,ButtonsOnCollectionChanged,The length of the parameter notifyCollectionChangedEventArgs is 32.
Long Statement,JimBobBennett.JimLib.Xamarin,AppBase,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\AppBase.cs,InitializeContainer,The length of the statement  "	builder.RegisterType<ImageViewerPage> ().UsingConstructor (typeof(ImageViewerViewModel)' typeof(INavigationStackManager)); " is 122.
Long Statement,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,Equals,The length of the statement  "	return Type == other.Type && string.Equals (Label' other.Label) && string.Equals (StreetAddress' other.StreetAddress) && string.Equals (City' other.City) && string.Equals (Region' other.Region) && string.Equals (Country' other.Country) && string.Equals (PostalCode' other.PostalCode); " is 284.
Long Statement,JimBobBennett.JimLib.Xamarin.Contacts,Email,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Email.cs,Equals,The length of the statement  "	return string.Equals (Address' other.Address) && string.Equals (Label' other.Label) && AddressType == other.AddressType; " is 120.
Long Statement,JimBobBennett.JimLib.Xamarin.Contacts,InstantMessagingAccount,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\InstantMessagingAccount.cs,Equals,The length of the statement  "	return Service == other.Service && string.Equals (ServiceLabel' other.ServiceLabel) && string.Equals (Account' other.Account); " is 126.
Long Statement,JimBobBennett.JimLib.Xamarin.SocialMedia,Account,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\SocialMedia\Account.cs,Equals,The length of the statement  "	return string.Equals (_name' other._name) && string.Equals (_type' other._type) && string.Equals (_userId' other._userId); " is 122.
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Type;  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (StreetAddress != null ? StreetAddress.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (City != null ? City.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Region != null ? Region.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Country != null ? Country.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PostalCode != null ? PostalCode.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Type;  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (StreetAddress != null ? StreetAddress.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (City != null ? City.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Region != null ? Region.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Country != null ? Country.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PostalCode != null ? PostalCode.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Type;  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (StreetAddress != null ? StreetAddress.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (City != null ? City.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Region != null ? Region.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Country != null ? Country.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PostalCode != null ? PostalCode.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Type;  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (StreetAddress != null ? StreetAddress.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (City != null ? City.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Region != null ? Region.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Country != null ? Country.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PostalCode != null ? PostalCode.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Type;  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (StreetAddress != null ? StreetAddress.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (City != null ? City.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Region != null ? Region.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Country != null ? Country.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PostalCode != null ? PostalCode.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Type;  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (StreetAddress != null ? StreetAddress.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (City != null ? City.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Region != null ? Region.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Country != null ? Country.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (PostalCode != null ? PostalCode.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (StreetAddress != null ? StreetAddress.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (City != null ? City.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Region != null ? Region.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Country != null ? Country.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Address,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Address.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PostalCode != null ? PostalCode.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Email,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Email.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (Address != null ? Address.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (int)AddressType;  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Email,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Email.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (Address != null ? Address.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (int)AddressType;  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Email,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Email.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Email,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Email.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)AddressType;  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,InstantMessagingAccount,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\InstantMessagingAccount.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Service;  	hashCode = (hashCode * 397) ^ (ServiceLabel != null ? ServiceLabel.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Account != null ? Account.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,InstantMessagingAccount,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\InstantMessagingAccount.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Service;  	hashCode = (hashCode * 397) ^ (ServiceLabel != null ? ServiceLabel.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Account != null ? Account.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,InstantMessagingAccount,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\InstantMessagingAccount.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (ServiceLabel != null ? ServiceLabel.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,InstantMessagingAccount,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\InstantMessagingAccount.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Account != null ? Account.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Phone,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Phone.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Type;  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Number != null ? Number.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Phone,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Phone.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (int)Type;  	hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Number != null ? Number.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Phone,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Phone.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Label != null ? Label.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Contacts,Phone,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Contacts\Phone.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Number != null ? Number.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.SocialMedia,Account,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\SocialMedia\Account.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Type != null ? Type.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (UserId != null ? UserId.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.SocialMedia,Account,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\SocialMedia\Account.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (Name != null ? Name.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Type != null ? Type.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (UserId != null ? UserId.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,JimBobBennett.JimLib.Xamarin.SocialMedia,Account,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\SocialMedia\Account.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Type != null ? Type.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.SocialMedia,Account,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\SocialMedia\Account.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (UserId != null ? UserId.GetHashCode () : 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Views,BaseContentPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\BaseContentPage.cs,BaseContentPage,The following statement contains a magic number: _opacityGrid.Opacity = 0.75;  
Magic Number,JimBobBennett.JimLib.Xamarin.Views,BaseContentPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\BaseContentPage.cs,BaseContentPage,The following statement contains a magic number: Padding = new Thickness (0' Device.OnPlatform (20' 0' 0)' 0' 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Views,BaseContentPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\BaseContentPage.cs,SetPadding,The following statement contains a magic number: if (ParentIsNavigationPage (Parent) && Padding == new Thickness (0' Device.OnPlatform (20' 0' 0)' 0' 0))  	Padding = new Thickness (0' 0' 0' 0);  
Magic Number,JimBobBennett.JimLib.Xamarin.Views,ImageViewerPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\ImageViewerPage.cs,BuildControls,The following statement contains a magic number: Grid.SetRow (titleLabel' 2);  
Magic Number,JimBobBennett.JimLib.Xamarin.Views,ImageViewerPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\ImageViewerPage.cs,BuildControls,The following statement contains a magic number: Grid.SetRow (textLabel' 3);  
Magic Number,JimBobBennett.JimLib.Xamarin.Views,ImageViewerPage,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Views\ImageViewerPage.cs,BuildControls,The following statement contains a magic number: Grid.SetRow (toolBar' 4);  
Missing Default,JimBobBennett.JimLib.Xamarin.Navigation,NavigationStackManager,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Navigation\NavigationStackManager.cs,PopAsync,The following switch statement is missing a default case: switch (top.Item2) {  case PageState.Normal:  	_pages.Pop ();  	await top.Item1.Navigation.PopAsync ();  	OnPagePopped (top.Item1);  	break;  case PageState.Modal:  	_pages.Pop ();  	await top.Item1.Navigation.PopModalAsync ();  	OnPagePopped (top.Item1);  	break;  }  
Missing Default,JimBobBennett.JimLib.Xamarin.Navigation,NavigationStackManager,D:\newReposJune17\jimbobbennett_JimLib.Xamarin\JimLib.Xamarin\Navigation\NavigationStackManager.cs,RollbackToRootAsync,The following switch statement is missing a default case: switch (top.Item2) {  case PageState.Modal:  	await top.Item1.Navigation.PopModalAsync ();  	break;  case PageState.Normal:  	await top.Item1.Navigation.PopAsync ();  	break;  }  
