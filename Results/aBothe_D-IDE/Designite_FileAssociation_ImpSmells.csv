Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,Cyclomatic complexity of the method is 13
Long Parameter List,BrendanGrant.Helpers.FileAssociation,FileAssociationInfo,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\FileAssociationInfo.cs,Create,The method has 4 parameters.
Long Parameter List,BrendanGrant.Helpers.FileAssociation,ShellNotification,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\ShellNotification.cs,SHChangeNotify,The method has 4 parameters.
Long Statement,BrendanGrant.Helpers.FileAssociation,ShellNotification,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\ShellNotification.cs,NotifyOfChange,The length of the statement  "	SHChangeNotify ((uint)ShellChangeNotificationEvents.SHCNE_ASSOCCHANGED' (uint)(ShellChangeNotificationFlags.SHCNF_IDLIST | ShellChangeNotificationFlags.SHCNF_FLUSHNOWAIT)' IntPtr.Zero' IntPtr.Zero); " is 198.
Empty Catch Block,BrendanGrant.Helpers.FileAssociation,ProgramAssociationInfo,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\ProgramAssociationInfo.cs,TryGetInt,The method has an empty catch block.
Magic Number,BrendanGrant.Helpers.FileAssociation,ProgramIcon,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\ProgramIcon.cs,Parse,The following statement contains a magic number: if (regString.StartsWith ("\"") && regString.EndsWith ("\"")) {  	if (regString.Length > 3)  		regString = regString.Substring (1' regString.Length - 2);  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,ProgramIcon,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\ProgramIcon.cs,Parse,The following statement contains a magic number: if (regString.StartsWith ("\"") && regString.EndsWith ("\"")) {  	if (regString.Length > 3)  		regString = regString.Substring (1' regString.Length - 2);  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,ProgramIcon,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\ProgramIcon.cs,Parse,The following statement contains a magic number: if (regString.Length > 3)  	regString = regString.Substring (1' regString.Length - 2);  
Magic Number,BrendanGrant.Helpers.FileAssociation,ProgramIcon,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\ProgramIcon.cs,Parse,The following statement contains a magic number: if (regString.Length > 3)  	regString = regString.Substring (1' regString.Length - 2);  
Magic Number,BrendanGrant.Helpers.FileAssociation,ProgramIcon,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\ProgramIcon.cs,Parse,The following statement contains a magic number: regString = regString.Substring (1' regString.Length - 2);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: for (int x = 0; x < parts.Length; x++) {  	key = key.OpenSubKey (parts [x]' true);  	if (key == null) {  		key = lastKey.CreateSubKey (parts [x]);  	}  	if (x == parts.Length - 1) {  		if (value is string) {  			key.SetValue (valueName' value.ToString ());  		} else if (value is uint || value.GetType ().IsEnum) {  			object o = key.GetValue (valueName' null);  			if (o == null) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else {  				RegistryValueKind kind = key.GetValueKind (valueName);  				if (kind == RegistryValueKind.DWord) {  					key.SetValue (valueName' value' RegistryValueKind.DWord);  				} else if (kind == RegistryValueKind.Binary) {  					uint num = (uint)value;  					byte[] b = new byte[4];  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 1);  					b [2] = (byte)((num & 0x00FF0000) >> 2);  					b [3] = (byte)((num & 0xFF000000) >> 3);  					b [0] = (byte)((num & 0x000000FF) >> 0);  					b [1] = (byte)((num & 0x0000FF00) >> 8);  					b [2] = (byte)((num & 0x00FF0000) >> 16);  					b [3] = (byte)((num & 0xFF000000) >> 24);  					key.SetValue (valueName' b' RegistryValueKind.Binary);  				} else if (kind == RegistryValueKind.String) {  					key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  				}  			}  		} else if (value is Guid) {  			key.SetValue (valueName' ((Guid)value).ToString ("B"));  		}  	}  	lastKey = key;  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (x == parts.Length - 1) {  	if (value is string) {  		key.SetValue (valueName' value.ToString ());  	} else if (value is uint || value.GetType ().IsEnum) {  		object o = key.GetValue (valueName' null);  		if (o == null) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else {  			RegistryValueKind kind = key.GetValueKind (valueName);  			if (kind == RegistryValueKind.DWord) {  				key.SetValue (valueName' value' RegistryValueKind.DWord);  			} else if (kind == RegistryValueKind.Binary) {  				uint num = (uint)value;  				byte[] b = new byte[4];  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 1);  				b [2] = (byte)((num & 0x00FF0000) >> 2);  				b [3] = (byte)((num & 0xFF000000) >> 3);  				b [0] = (byte)((num & 0x000000FF) >> 0);  				b [1] = (byte)((num & 0x0000FF00) >> 8);  				b [2] = (byte)((num & 0x00FF0000) >> 16);  				b [3] = (byte)((num & 0xFF000000) >> 24);  				key.SetValue (valueName' b' RegistryValueKind.Binary);  			} else if (kind == RegistryValueKind.String) {  				key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  			}  		}  	} else if (value is Guid) {  		key.SetValue (valueName' ((Guid)value).ToString ("B"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is string) {  	key.SetValue (valueName' value.ToString ());  } else if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (value is uint || value.GetType ().IsEnum) {  	object o = key.GetValue (valueName' null);  	if (o == null) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else {  		RegistryValueKind kind = key.GetValueKind (valueName);  		if (kind == RegistryValueKind.DWord) {  			key.SetValue (valueName' value' RegistryValueKind.DWord);  		} else if (kind == RegistryValueKind.Binary) {  			uint num = (uint)value;  			byte[] b = new byte[4];  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 1);  			b [2] = (byte)((num & 0x00FF0000) >> 2);  			b [3] = (byte)((num & 0xFF000000) >> 3);  			b [0] = (byte)((num & 0x000000FF) >> 0);  			b [1] = (byte)((num & 0x0000FF00) >> 8);  			b [2] = (byte)((num & 0x00FF0000) >> 16);  			b [3] = (byte)((num & 0xFF000000) >> 24);  			key.SetValue (valueName' b' RegistryValueKind.Binary);  		} else if (kind == RegistryValueKind.String) {  			key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  		}  	}  } else if (value is Guid) {  	key.SetValue (valueName' ((Guid)value).ToString ("B"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (o == null) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else {  	RegistryValueKind kind = key.GetValueKind (valueName);  	if (kind == RegistryValueKind.DWord) {  		key.SetValue (valueName' value' RegistryValueKind.DWord);  	} else if (kind == RegistryValueKind.Binary) {  		uint num = (uint)value;  		byte[] b = new byte[4];  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 1);  		b [2] = (byte)((num & 0x00FF0000) >> 2);  		b [3] = (byte)((num & 0xFF000000) >> 3);  		b [0] = (byte)((num & 0x000000FF) >> 0);  		b [1] = (byte)((num & 0x0000FF00) >> 8);  		b [2] = (byte)((num & 0x00FF0000) >> 16);  		b [3] = (byte)((num & 0xFF000000) >> 24);  		key.SetValue (valueName' b' RegistryValueKind.Binary);  	} else if (kind == RegistryValueKind.String) {  		key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  	}  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.DWord) {  	key.SetValue (valueName' value' RegistryValueKind.DWord);  } else if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: if (kind == RegistryValueKind.Binary) {  	uint num = (uint)value;  	byte[] b = new byte[4];  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 1);  	b [2] = (byte)((num & 0x00FF0000) >> 2);  	b [3] = (byte)((num & 0xFF000000) >> 3);  	b [0] = (byte)((num & 0x000000FF) >> 0);  	b [1] = (byte)((num & 0x0000FF00) >> 8);  	b [2] = (byte)((num & 0x00FF0000) >> 16);  	b [3] = (byte)((num & 0xFF000000) >> 24);  	key.SetValue (valueName' b' RegistryValueKind.Binary);  } else if (kind == RegistryValueKind.String) {  	key.SetValue (valueName' "x" + ((uint)value).ToString ("X8"));  }  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [2] = (byte)((num & 0x00FF0000) >> 2);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [2] = (byte)((num & 0x00FF0000) >> 2);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [3] = (byte)((num & 0xFF000000) >> 3);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [3] = (byte)((num & 0xFF000000) >> 3);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [1] = (byte)((num & 0x0000FF00) >> 8);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [2] = (byte)((num & 0x00FF0000) >> 16);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [2] = (byte)((num & 0x00FF0000) >> 16);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [3] = (byte)((num & 0xFF000000) >> 24);  
Magic Number,BrendanGrant.Helpers.FileAssociation,RegistryWrapper,D:\newReposJune17\aBothe_D-IDE\D-IDE2\Misc\FileAssociation\RegistryWrapper.cs,Write,The following statement contains a magic number: b [3] = (byte)((num & 0xFF000000) >> 24);  
