Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,Cyclomatic complexity of the method is 10
Complex Method,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,Cyclomatic complexity of the method is 8
Complex Method,BarCamp,BarcodeCaptureDeviceExceptions,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDeviceExceptions.cs,ProcessUnhandledException,Cyclomatic complexity of the method is 8
Long Parameter List,BarCamp,BarcodeDetectedEventArgs,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeDetectedEventArgs.cs,InitPointMapping,The method has 8 parameters.
Long Parameter List,BarCamp,BarcodePosition,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodePosition.cs,BarcodePosition,The method has 6 parameters.
Long Parameter List,BarCamp,BarcodePosition,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodePosition.cs,GetExtendedPoint,The method has 5 parameters.
Long Parameter List,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,addFriendToDb,The method has 5 parameters.
Long Statement,BarCamp,CoordinateConverter,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\CoordinateConverter.cs,ConvertGeocoordinate,The length of the statement  "	return new GeoCoordinate (geocoordinate.Latitude' geocoordinate.Longitude' geocoordinate.Altitude ?? Double.NaN' geocoordinate.Accuracy' geocoordinate.AltitudeAccuracy ?? Double.NaN' geocoordinate.Speed ?? Double.NaN' geocoordinate.Heading ?? Double.NaN); " is 255.
Long Statement,BarCamp,EditProfilePage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\EditProfilePage.xaml.cs,getInfo,The length of the statement  "	forEncode = txtBox_Name.Text + "||" + txtBox_Phone.Text + "||" + txtBox_Email.Text + "||" + txtBox_Profession.Text + "||" + txtBlk_FbId.Text; " is 141.
Long Statement,BarCamp,EditProfilePage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\EditProfilePage.xaml.cs,fbInvoke,The length of the statement  "	var profilePictureUrl = string.Format ("https://graph.facebook.com/{0}/picture?type={1}&access_token={2}"' App.FacebookId' "square"' App.AccessToken); " is 150.
Long Statement,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,pinGPS,The length of the statement  "	//var pushPin_EventVenue = MapExtensions.GetChildren(map_Fullscreen).OfType<Pushpin>().First(p => p.Name == "MyPushpin"); " is 121.
Long Statement,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,pinEventVenue,The length of the statement  "	//var pushPin_EventVenue = MapExtensions.GetChildren(map_Fullscreen).OfType<Pushpin>().First(p => p.Name == "MyPushpin"); " is 121.
Long Statement,BarCamp,IndoorMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\IndoorMap.xaml.cs,angleBetween2Lines,The length of the statement  "		double angle1 = Math.Atan2 (line1.PrimaryContact.Y - line1.SecondaryContact.Y' line1.PrimaryContact.X - line1.SecondaryContact.X); " is 130.
Long Statement,BarCamp,IndoorMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\IndoorMap.xaml.cs,angleBetween2Lines,The length of the statement  "		double angle2 = Math.Atan2 (line2.PrimaryContact.Y - line2.SecondaryContact.Y' line2.PrimaryContact.X - line2.SecondaryContact.X); " is 130.
Long Statement,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,cacheAgenda_DownloadStringCompleted,The length of the statement  "	//http://mikaelkoskinen.net/webbrowser-navigatetostring-broken-in-windows-phone-8-and-also-affects-windows-phone-7-apps-solution-included " is 137.
Long Statement,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,cacheSponsor_DownloadStringCompleted,The length of the statement  "	StreamWriter file = new StreamWriter (new IsolatedStorageFileStream ("sponsor.html"' System.IO.FileMode.Create' store)); " is 120.
Long Statement,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,cacheSponsor_DownloadStringCompleted,The length of the statement  "	//http://mikaelkoskinen.net/webbrowser-navigatetostring-broken-in-windows-phone-8-and-also-affects-windows-phone-7-apps-solution-included " is 137.
Long Statement,BarCamp.Pages,FacebookLoginPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FacebookLoginPage.xaml.cs,Authenticate,The length of the statement  "		Dispatcher.BeginInvoke (() => NavigationService.Navigate (new Uri ("/Pages/EditProfilePage.xaml?msg=" + App.FacebookId' UriKind.Relative))); " is 140.
Empty Catch Block,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The method has an empty catch block.
Empty Catch Block,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The method has an empty catch block.
Empty Catch Block,BarCamp,BarcodeCaptureDeviceExceptions,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDeviceExceptions.cs,ProcessUnhandledException,The method has an empty catch block.
Empty Catch Block,BarCamp,BarcodeCaptureDeviceExceptions,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDeviceExceptions.cs,ProcessUnhandledException,The method has an empty catch block.
Empty Catch Block,BarCamp,BarcodeCaptureDeviceExceptions,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDeviceExceptions.cs,ProcessUnhandledException,The method has an empty catch block.
Empty Catch Block,BarCamp,BarcodeCaptureDeviceExceptions,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDeviceExceptions.cs,ProcessUnhandledException,The method has an empty catch block.
Empty Catch Block,BarCamp,BarcodeCaptureDeviceExceptions,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDeviceExceptions.cs,ProcessUnhandledException,The method has an empty catch block.
Empty Catch Block,BarCamp,BarcodeCaptureDeviceExceptions,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDeviceExceptions.cs,ProcessUnhandledException,The method has an empty catch block.
Empty Catch Block,BarCamp,BarcodeDetectedEventArgs,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeDetectedEventArgs.cs,GetBarcodeBorderUIVideoUniformFill,The method has an empty catch block.
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The following statement contains a magic number: try {  	if (_inited)  		throw new InvalidOperationException ("already inited");  	// choose front or back  	CameraSensorLocation cameraLocation;  	if (PhotoCaptureDevice.AvailableSensorLocations.Contains (CameraSensorLocation.Back)) {  		var supportedResolutions = PhotoCaptureDevice.GetAvailableCaptureResolutions (CameraSensorLocation.Back);  		_initRes = GetBestResolution (supportedResolutions);  		cameraLocation = CameraSensorLocation.Back;  	}  	else if (PhotoCaptureDevice.AvailableSensorLocations.Contains (CameraSensorLocation.Front)) {  		var supportedResolutions = PhotoCaptureDevice.GetAvailableCaptureResolutions (CameraSensorLocation.Front);  		_initRes = GetBestResolution (supportedResolutions);  		cameraLocation = CameraSensorLocation.Front;  	}  	else {  		throw new CriticalCameraNotSupportedException ();  	}  	// open camera  	_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  	#region retry when failed hack  	if (_device == null) {  		try {  			await Task.Delay (200);  			_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  		}  		catch {  		}  		if (_device == null) {  			await Task.Delay (500);  			_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  		}  	}  	#endregion  	ThrowIfDisposed ();  	// set flash mode' focus range...  	SetDeviceProperties (cameraLocation);  	var list = PhotoCaptureDevice.GetAvailablePreviewResolutions (cameraLocation);  	Windows.Foundation.Size resPreview = GetBestPreviewResolution (list' _initRes);  	await _device.SetPreviewResolutionAsync (resPreview);  	ThrowIfDisposed ();  	_previewSize = resPreview;  	// init auto focus timer  	OnAutoFocusPropertyChanged ();  	// init barcode reader  	OnAutoDetectBarcodePropertyChanged ();  	// init frame report and barcode detect timer  	StartFrameTimer ();  	_inited = true;  }  catch (ObjectDisposedException) {  	Dispose ();  	//throw new CardCaptureDeviceDisposedException();  }  catch (CriticalCameraNotSupportedException notSupportEx) {  	ThrowExceptionOrDisposed (notSupportEx' true);  }  catch {  	ThrowExceptionOrDisposed (new InitCameraFailedException ()' true);  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The following statement contains a magic number: try {  	if (_inited)  		throw new InvalidOperationException ("already inited");  	// choose front or back  	CameraSensorLocation cameraLocation;  	if (PhotoCaptureDevice.AvailableSensorLocations.Contains (CameraSensorLocation.Back)) {  		var supportedResolutions = PhotoCaptureDevice.GetAvailableCaptureResolutions (CameraSensorLocation.Back);  		_initRes = GetBestResolution (supportedResolutions);  		cameraLocation = CameraSensorLocation.Back;  	}  	else if (PhotoCaptureDevice.AvailableSensorLocations.Contains (CameraSensorLocation.Front)) {  		var supportedResolutions = PhotoCaptureDevice.GetAvailableCaptureResolutions (CameraSensorLocation.Front);  		_initRes = GetBestResolution (supportedResolutions);  		cameraLocation = CameraSensorLocation.Front;  	}  	else {  		throw new CriticalCameraNotSupportedException ();  	}  	// open camera  	_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  	#region retry when failed hack  	if (_device == null) {  		try {  			await Task.Delay (200);  			_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  		}  		catch {  		}  		if (_device == null) {  			await Task.Delay (500);  			_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  		}  	}  	#endregion  	ThrowIfDisposed ();  	// set flash mode' focus range...  	SetDeviceProperties (cameraLocation);  	var list = PhotoCaptureDevice.GetAvailablePreviewResolutions (cameraLocation);  	Windows.Foundation.Size resPreview = GetBestPreviewResolution (list' _initRes);  	await _device.SetPreviewResolutionAsync (resPreview);  	ThrowIfDisposed ();  	_previewSize = resPreview;  	// init auto focus timer  	OnAutoFocusPropertyChanged ();  	// init barcode reader  	OnAutoDetectBarcodePropertyChanged ();  	// init frame report and barcode detect timer  	StartFrameTimer ();  	_inited = true;  }  catch (ObjectDisposedException) {  	Dispose ();  	//throw new CardCaptureDeviceDisposedException();  }  catch (CriticalCameraNotSupportedException notSupportEx) {  	ThrowExceptionOrDisposed (notSupportEx' true);  }  catch {  	ThrowExceptionOrDisposed (new InitCameraFailedException ()' true);  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The following statement contains a magic number: if (_device == null) {  	try {  		await Task.Delay (200);  		_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  	}  	catch {  	}  	if (_device == null) {  		await Task.Delay (500);  		_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The following statement contains a magic number: if (_device == null) {  	try {  		await Task.Delay (200);  		_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  	}  	catch {  	}  	if (_device == null) {  		await Task.Delay (500);  		_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The following statement contains a magic number: try {  	await Task.Delay (200);  	_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  }  catch {  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The following statement contains a magic number: await Task.Delay (200);  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The following statement contains a magic number: if (_device == null) {  	await Task.Delay (500);  	_device = await PhotoCaptureDevice.OpenAsync (cameraLocation' _initRes);  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,InitAsync,The following statement contains a magic number: await Task.Delay (500);  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,AwaitWhenNotFocusing,The following statement contains a magic number: while (_focusing) {  	await Task.Delay (50).ConfigureAwait (false);  	ThrowIfDisposed ();  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,AwaitWhenNotFocusing,The following statement contains a magic number: await Task.Delay (50).ConfigureAwait (false);  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (AutoDetectBarcode) {  	if (_barcodeDecoding == true)  		return;  	_barcodeDecoding = true;  	try {  		var result = await DetectBarcodeAsync (width' height);  		if (result != null) {  			// raise BarcodeDetected  			BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  			args.HostImageSize = new Size (width' height);  			if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  				int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  				Debug.Assert (result.ResultPoints.Length >= 3);  				if (result.ResultPoints.Length >= 3) {  					var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  					var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  					var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  					args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  				}  			}  			if (BarcodeDetected != null) {  				BarcodeDetected (this' args);  			}  		}  	}  	catch (ObjectDisposedException) {  		throw new CardCaptureDeviceDisposedException ();  	}  	catch {  	}  	finally {  		_barcodeDecoding = false;  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (AutoDetectBarcode) {  	if (_barcodeDecoding == true)  		return;  	_barcodeDecoding = true;  	try {  		var result = await DetectBarcodeAsync (width' height);  		if (result != null) {  			// raise BarcodeDetected  			BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  			args.HostImageSize = new Size (width' height);  			if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  				int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  				Debug.Assert (result.ResultPoints.Length >= 3);  				if (result.ResultPoints.Length >= 3) {  					var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  					var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  					var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  					args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  				}  			}  			if (BarcodeDetected != null) {  				BarcodeDetected (this' args);  			}  		}  	}  	catch (ObjectDisposedException) {  		throw new CardCaptureDeviceDisposedException ();  	}  	catch {  	}  	finally {  		_barcodeDecoding = false;  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (AutoDetectBarcode) {  	if (_barcodeDecoding == true)  		return;  	_barcodeDecoding = true;  	try {  		var result = await DetectBarcodeAsync (width' height);  		if (result != null) {  			// raise BarcodeDetected  			BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  			args.HostImageSize = new Size (width' height);  			if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  				int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  				Debug.Assert (result.ResultPoints.Length >= 3);  				if (result.ResultPoints.Length >= 3) {  					var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  					var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  					var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  					args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  				}  			}  			if (BarcodeDetected != null) {  				BarcodeDetected (this' args);  			}  		}  	}  	catch (ObjectDisposedException) {  		throw new CardCaptureDeviceDisposedException ();  	}  	catch {  	}  	finally {  		_barcodeDecoding = false;  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (AutoDetectBarcode) {  	if (_barcodeDecoding == true)  		return;  	_barcodeDecoding = true;  	try {  		var result = await DetectBarcodeAsync (width' height);  		if (result != null) {  			// raise BarcodeDetected  			BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  			args.HostImageSize = new Size (width' height);  			if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  				int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  				Debug.Assert (result.ResultPoints.Length >= 3);  				if (result.ResultPoints.Length >= 3) {  					var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  					var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  					var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  					args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  				}  			}  			if (BarcodeDetected != null) {  				BarcodeDetected (this' args);  			}  		}  	}  	catch (ObjectDisposedException) {  		throw new CardCaptureDeviceDisposedException ();  	}  	catch {  	}  	finally {  		_barcodeDecoding = false;  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: try {  	var result = await DetectBarcodeAsync (width' height);  	if (result != null) {  		// raise BarcodeDetected  		BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  		args.HostImageSize = new Size (width' height);  		if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  			int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  			Debug.Assert (result.ResultPoints.Length >= 3);  			if (result.ResultPoints.Length >= 3) {  				var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  				var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  				var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  				args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  			}  		}  		if (BarcodeDetected != null) {  			BarcodeDetected (this' args);  		}  	}  }  catch (ObjectDisposedException) {  	throw new CardCaptureDeviceDisposedException ();  }  catch {  }  finally {  	_barcodeDecoding = false;  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: try {  	var result = await DetectBarcodeAsync (width' height);  	if (result != null) {  		// raise BarcodeDetected  		BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  		args.HostImageSize = new Size (width' height);  		if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  			int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  			Debug.Assert (result.ResultPoints.Length >= 3);  			if (result.ResultPoints.Length >= 3) {  				var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  				var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  				var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  				args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  			}  		}  		if (BarcodeDetected != null) {  			BarcodeDetected (this' args);  		}  	}  }  catch (ObjectDisposedException) {  	throw new CardCaptureDeviceDisposedException ();  }  catch {  }  finally {  	_barcodeDecoding = false;  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: try {  	var result = await DetectBarcodeAsync (width' height);  	if (result != null) {  		// raise BarcodeDetected  		BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  		args.HostImageSize = new Size (width' height);  		if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  			int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  			Debug.Assert (result.ResultPoints.Length >= 3);  			if (result.ResultPoints.Length >= 3) {  				var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  				var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  				var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  				args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  			}  		}  		if (BarcodeDetected != null) {  			BarcodeDetected (this' args);  		}  	}  }  catch (ObjectDisposedException) {  	throw new CardCaptureDeviceDisposedException ();  }  catch {  }  finally {  	_barcodeDecoding = false;  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: try {  	var result = await DetectBarcodeAsync (width' height);  	if (result != null) {  		// raise BarcodeDetected  		BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  		args.HostImageSize = new Size (width' height);  		if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  			int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  			Debug.Assert (result.ResultPoints.Length >= 3);  			if (result.ResultPoints.Length >= 3) {  				var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  				var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  				var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  				args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  			}  		}  		if (BarcodeDetected != null) {  			BarcodeDetected (this' args);  		}  	}  }  catch (ObjectDisposedException) {  	throw new CardCaptureDeviceDisposedException ();  }  catch {  }  finally {  	_barcodeDecoding = false;  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (result != null) {  	// raise BarcodeDetected  	BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  	args.HostImageSize = new Size (width' height);  	if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  		int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  		Debug.Assert (result.ResultPoints.Length >= 3);  		if (result.ResultPoints.Length >= 3) {  			var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  			var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  			var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  			args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  		}  	}  	if (BarcodeDetected != null) {  		BarcodeDetected (this' args);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (result != null) {  	// raise BarcodeDetected  	BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  	args.HostImageSize = new Size (width' height);  	if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  		int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  		Debug.Assert (result.ResultPoints.Length >= 3);  		if (result.ResultPoints.Length >= 3) {  			var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  			var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  			var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  			args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  		}  	}  	if (BarcodeDetected != null) {  		BarcodeDetected (this' args);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (result != null) {  	// raise BarcodeDetected  	BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  	args.HostImageSize = new Size (width' height);  	if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  		int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  		Debug.Assert (result.ResultPoints.Length >= 3);  		if (result.ResultPoints.Length >= 3) {  			var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  			var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  			var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  			args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  		}  	}  	if (BarcodeDetected != null) {  		BarcodeDetected (this' args);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (result != null) {  	// raise BarcodeDetected  	BarcodeDetectedEventArgs args = new BarcodeDetectedEventArgs (result);  	args.HostImageSize = new Size (width' height);  	if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  		int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  		Debug.Assert (result.ResultPoints.Length >= 3);  		if (result.ResultPoints.Length >= 3) {  			var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  			var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  			var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  			args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  		}  	}  	if (BarcodeDetected != null) {  		BarcodeDetected (this' args);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  	int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  	Debug.Assert (result.ResultPoints.Length >= 3);  	if (result.ResultPoints.Length >= 3) {  		var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  		var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  		var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  		args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  	int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  	Debug.Assert (result.ResultPoints.Length >= 3);  	if (result.ResultPoints.Length >= 3) {  		var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  		var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  		var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  		args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  	int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  	Debug.Assert (result.ResultPoints.Length >= 3);  	if (result.ResultPoints.Length >= 3) {  		var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  		var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  		var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  		args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (args.IsQRCode && result.ResultMetadata.ContainsKey (ResultMetadataType.QRCODE_DIMENSION)) {  	int dimension = (int)result.ResultMetadata [ResultMetadataType.QRCODE_DIMENSION];  	Debug.Assert (result.ResultPoints.Length >= 3);  	if (result.ResultPoints.Length >= 3) {  		var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  		var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  		var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  		args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  	}  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: Debug.Assert (result.ResultPoints.Length >= 3);  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (result.ResultPoints.Length >= 3) {  	var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  	var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  	var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  	args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (result.ResultPoints.Length >= 3) {  	var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  	var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  	var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  	args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,BarcodeTimer_Tick,The following statement contains a magic number: if (result.ResultPoints.Length >= 3) {  	var p1 = new Point (result.ResultPoints [0].X' result.ResultPoints [0].Y);  	var p2 = new Point (result.ResultPoints [1].X' result.ResultPoints [1].Y);  	var p3 = new Point (result.ResultPoints [2].X' result.ResultPoints [2].Y);  	args.BarcodePosition = new BarcodePosition (p1' p2' p3' dimension' width' height);  }  
Magic Number,BarCamp,BarcodeCaptureDevice,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeCaptureDevice.cs,IsSameRatio,The following statement contains a magic number: return Math.Abs (ratio - right) < 0.01;  
Magic Number,BarCamp,BarcodeDetectedEventArgs,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeDetectedEventArgs.cs,CreateBarcodeBorder,The following statement contains a magic number: if (_vufBarcodeBorder == null) {  	_vufBarcodeBorder = new Border ();  	_vufBarcodeBorder.Width = width;  	_vufBarcodeBorder.Height = height;  	Deployment.Current.Dispatcher.CheckAccess ();  	Canvas canvas = new Canvas ();  	_vufBarcodeBorder.Child = canvas;  	canvas.HorizontalAlignment = HorizontalAlignment.Left;  	canvas.VerticalAlignment = VerticalAlignment.Top;  	System.Windows.Shapes.Path path = new System.Windows.Shapes.Path ();  	path.StrokeThickness = 4;  	canvas.Children.Add (path);  	if (borderColor == null)  		borderColor = Colors.White;  	path.Stroke = new SolidColorBrush (borderColor.Value);  	path.Fill = backBrush;  	PathGeometry pg = new PathGeometry ();  	_vufBarcodePolyLine = new PolyLineSegment ();  	_vufBarcodePath = new PathFigure ();  	path.Data = pg;  	pg.Figures.Add (_vufBarcodePath);  	_vufBarcodePath.Segments.Add (_vufBarcodePolyLine);  	_vufBarcodePath.IsClosed = true;  }  
Magic Number,BarCamp,BarcodeDetectedEventArgs,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeDetectedEventArgs.cs,CreateBarcodeBorder,The following statement contains a magic number: path.StrokeThickness = 4;  
Magic Number,BarCamp,BarcodeDetectedEventArgs,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeDetectedEventArgs.cs,InitPointMapping,The following statement contains a magic number: if (r1 < r) {  	double n = h1 / h;  	double offset = (w1 - h1 * r) / 2;  	_pointMappingX = x => n * x + offset;  	_pointMappingY = y => n * y;  }  else {  	double n = w1 / w;  	double offset = (h1 - w1 / r) / 2;  	_pointMappingX = x => n * x;  	_pointMappingY = y => n * y + offset;  }  
Magic Number,BarCamp,BarcodeDetectedEventArgs,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodeDetectedEventArgs.cs,InitPointMapping,The following statement contains a magic number: if (r1 < r) {  	double n = h1 / h;  	double offset = (w1 - h1 * r) / 2;  	_pointMappingX = x => n * x + offset;  	_pointMappingY = y => n * y;  }  else {  	double n = w1 / w;  	double offset = (h1 - w1 / r) / 2;  	_pointMappingX = x => n * x;  	_pointMappingY = y => n * y + offset;  }  
Magic Number,BarCamp,BarcodePosition,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodePosition.cs,GetExtendDistance,The following statement contains a magic number: return Math.Sqrt (2) * side;  
Magic Number,BarCamp,BarcodePosition,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodePosition.cs,GetExtendedPoint,The following statement contains a magic number: if (calcDistance > 2 * distance) {  	y = -common + y1;  	x = -s * common + x1;  }  
Magic Number,BarCamp,BarcodePosition,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\BarcodePosition.cs,CloseTo,The following statement contains a magic number: return Math.Abs (x - y) < 0.000001;  
Magic Number,BarCamp,EditProfilePage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\EditProfilePage.xaml.cs,shreadAndSet,The following statement contains a magic number: try {  	txtBox_Name.Text = shread [0];  	txtBox_Phone.Text = shread [1];  	txtBox_Email.Text = shread [2];  	txtBox_Profession.Text = shread [3];  }  catch (Exception e) {  	txtBox_Name.Text = string.Empty;  	txtBox_Phone.Text = string.Empty;  	txtBox_Email.Text = string.Empty;  	txtBox_Profession.Text = string.Empty;  	return;  }  
Magic Number,BarCamp,EditProfilePage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\EditProfilePage.xaml.cs,shreadAndSet,The following statement contains a magic number: try {  	txtBox_Name.Text = shread [0];  	txtBox_Phone.Text = shread [1];  	txtBox_Email.Text = shread [2];  	txtBox_Profession.Text = shread [3];  }  catch (Exception e) {  	txtBox_Name.Text = string.Empty;  	txtBox_Phone.Text = string.Empty;  	txtBox_Email.Text = string.Empty;  	txtBox_Profession.Text = string.Empty;  	return;  }  
Magic Number,BarCamp,EditProfilePage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\EditProfilePage.xaml.cs,shreadAndSet,The following statement contains a magic number: txtBox_Email.Text = shread [2];  
Magic Number,BarCamp,EditProfilePage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\EditProfilePage.xaml.cs,shreadAndSet,The following statement contains a magic number: txtBox_Profession.Text = shread [3];  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,loadEventVenue,The following statement contains a magic number: map_Fullscreen.ZoomLevel = 16;  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,GPSFunction,The following statement contains a magic number: if (watcher == null) {  	watcher = new GeoCoordinateWatcher (GeoPositionAccuracy.High);  	watcher.MovementThreshold = 20;  	watcher.StatusChanged += new EventHandler<GeoPositionStatusChangedEventArgs> (watcher_StatusChanged);  	watcher.PositionChanged += new EventHandler<GeoPositionChangedEventArgs<GeoCoordinate>> (watcher_PositionChanged);  }  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,GPSFunction,The following statement contains a magic number: watcher.MovementThreshold = 20;  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,sampleCode,The following statement contains a magic number: overlay0.GeoCoordinate = new GeoCoordinate (37.228510' -80.422860);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,sampleCode,The following statement contains a magic number: overlay0.GeoCoordinate = new GeoCoordinate (37.228510' -80.422860);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,sampleCode,The following statement contains a magic number: pushpin0.GeoCoordinate = new GeoCoordinate (37.228510' -80.422860);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,sampleCode,The following statement contains a magic number: pushpin0.GeoCoordinate = new GeoCoordinate (37.228510' -80.422860);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,sampleCode,The following statement contains a magic number: pushpin1.GeoCoordinate = new GeoCoordinate (37.226399' -80.425271);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,sampleCode,The following statement contains a magic number: pushpin1.GeoCoordinate = new GeoCoordinate (37.226399' -80.425271);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,sampleCode,The following statement contains a magic number: pushpin2.GeoCoordinate = new GeoCoordinate (37.228900' -80.427450);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,sampleCode,The following statement contains a magic number: pushpin2.GeoCoordinate = new GeoCoordinate (37.228900' -80.427450);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,samplecodetwo,The following statement contains a magic number: pushpin0.GeoCoordinate = new GeoCoordinate (37.228510' -80.422860);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,samplecodetwo,The following statement contains a magic number: pushpin0.GeoCoordinate = new GeoCoordinate (37.228510' -80.422860);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,samplecodetwo,The following statement contains a magic number: pushpin1.GeoCoordinate = new GeoCoordinate (37.226399' -80.425271);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,samplecodetwo,The following statement contains a magic number: pushpin1.GeoCoordinate = new GeoCoordinate (37.226399' -80.425271);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,samplecodetwo,The following statement contains a magic number: pushpin2.GeoCoordinate = new GeoCoordinate (37.228900' -80.427450);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,samplecodetwo,The following statement contains a magic number: pushpin2.GeoCoordinate = new GeoCoordinate (37.228900' -80.427450);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,samplecodetwo,The following statement contains a magic number: overlay0.GeoCoordinate = new GeoCoordinate (37.228510' -80.422860);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,samplecodetwo,The following statement contains a magic number: overlay0.GeoCoordinate = new GeoCoordinate (37.228510' -80.422860);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,ShowMyLocationOnTheMap,The following statement contains a magic number: this.map_Fullscreen.ZoomLevel = 16;  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,ShowMyLocationOnTheMap,The following statement contains a magic number: myCircle.Height = 20;  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,ShowMyLocationOnTheMap,The following statement contains a magic number: myCircle.Width = 20;  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,ShowMyLocationOnTheMap,The following statement contains a magic number: myCircle.Opacity = 50;  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,ShowMyLocationOnTheMap,The following statement contains a magic number: myLocationOverlay.PositionOrigin = new Point (0.5' 0.5);  
Magic Number,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,ShowMyLocationOnTheMap,The following statement contains a magic number: myLocationOverlay.PositionOrigin = new Point (0.5' 0.5);  
Magic Number,BarCamp,IndoorMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\IndoorMap.xaml.cs,angleBetween2Lines,The following statement contains a magic number: if (line1 != null && line2 != null) {  	double angle1 = Math.Atan2 (line1.PrimaryContact.Y - line1.SecondaryContact.Y' line1.PrimaryContact.X - line1.SecondaryContact.X);  	double angle2 = Math.Atan2 (line2.PrimaryContact.Y - line2.SecondaryContact.Y' line2.PrimaryContact.X - line2.SecondaryContact.X);  	return (angle1 - angle2) * 180 / Math.PI;  }  else {  	return 0.0;  }  
Magic Number,BarCamp,IndoorMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\IndoorMap.xaml.cs,angleBetween2Lines,The following statement contains a magic number: return (angle1 - angle2) * 180 / Math.PI;  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,startCountdown,The following statement contains a magic number: if (this.dispatcherTimer == null) {  	this.dispatcherTimer = new DispatcherTimer ();  	this.dispatcherTimer.Interval = TimeSpan.FromMilliseconds (100);  	this.dispatcherTimer.Tick += new EventHandler (dispatcherTimer_Tick);  }  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,startCountdown,The following statement contains a magic number: this.dispatcherTimer.Interval = TimeSpan.FromMilliseconds (100);  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,startCountdown,The following statement contains a magic number: this.EndTime = new DateTime (2013' 7' STARTDAY' STARTTIME' 0' 0);  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,startCountdown,The following statement contains a magic number: this.EndTime = new DateTime (2013' 7' STARTDAY' STARTTIME' 0' 0);  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,calculator,The following statement contains a magic number: d = d / 60 / 60 / 24;  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,calculator,The following statement contains a magic number: d = d / 60 / 60 / 24;  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,calculator,The following statement contains a magic number: d = d / 60 / 60 / 24;  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,calculator,The following statement contains a magic number: d = (d - day) * 24;  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,calculator,The following statement contains a magic number: d = (d - hour) * 60;  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,calculator,The following statement contains a magic number: d = (d - minute) * 60;  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,loadEventVenue,The following statement contains a magic number: map_Home.ZoomLevel = 16;  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: foreach (FriendListItem f in FriendListItems) {  	if (f.FriendPhone.Equals (box [1]) && f.FriendEmail.Equals (box [2])) {  		MessageBox.Show ("Existing friend.");  		return;  	}  }  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: if (f.FriendPhone.Equals (box [1]) && f.FriendEmail.Equals (box [2])) {  	MessageBox.Show ("Existing friend.");  	return;  }  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: if (box.Count () == 5) {  	addFriendToDb (box [0]' box [1]' box [2]' box [3]' box [4]);  	MessageBox.Show ("Friend added.");  }  else {  	MessageBox.Show ("Accept only BarCamp QRcode.");  }  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: if (box.Count () == 5) {  	addFriendToDb (box [0]' box [1]' box [2]' box [3]' box [4]);  	MessageBox.Show ("Friend added.");  }  else {  	MessageBox.Show ("Accept only BarCamp QRcode.");  }  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: if (box.Count () == 5) {  	addFriendToDb (box [0]' box [1]' box [2]' box [3]' box [4]);  	MessageBox.Show ("Friend added.");  }  else {  	MessageBox.Show ("Accept only BarCamp QRcode.");  }  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: if (box.Count () == 5) {  	addFriendToDb (box [0]' box [1]' box [2]' box [3]' box [4]);  	MessageBox.Show ("Friend added.");  }  else {  	MessageBox.Show ("Accept only BarCamp QRcode.");  }  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: addFriendToDb (box [0]' box [1]' box [2]' box [3]' box [4]);  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: addFriendToDb (box [0]' box [1]' box [2]' box [3]' box [4]);  
Magic Number,BarCamp,MainPage,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\MainPage.xaml.cs,processAndAdd,The following statement contains a magic number: addFriendToDb (box [0]' box [1]' box [2]' box [3]' box [4]);  
Magic Number,ExtendedSplash,ExtendedSplashScreen,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\ExtendedSplashScreen.xaml.cs,Splash_Screen,The following statement contains a magic number: await Task.Delay (TimeSpan.FromSeconds (3));  
Missing Default,BarCamp,FullScreenMap,C:\repos\yinsee_barcamppg2013-wp\BarCamp\BarCamp\Pages\FullScreenMap.xaml.cs,watcher_StatusChanged,The following switch statement is missing a default case: switch (e.Status) {  case GeoPositionStatus.Disabled:  	MessageBox.Show ("Location Service is not enabled on the device");  	break;  case GeoPositionStatus.NoData:  	MessageBox.Show (" The Location Service is working' but it cannot get location data.");  	break;  }  
