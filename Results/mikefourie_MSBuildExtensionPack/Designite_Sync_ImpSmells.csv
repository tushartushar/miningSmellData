Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MSBuild.ExtensionPack,BaseTask,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Common\BaseTask.cs,TargetingLocalMachine,The length of the statement  "                    this.Log.LogError(string.Format(CultureInfo.CurrentCulture' "This task does not support remote execution. Please remove the MachineName: {0}"' this.MachineName)); " is 162.
Long Statement,MSBuild.ExtensionPack,BaseTask,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Common\BaseTask.cs,GetManagementScope,The length of the statement  "            this.LogTaskMessage(MessageImportance.Low' string.Format(CultureInfo.CurrentCulture' "ManagementScope Set: {0}"' "\\\\" + this.MachineName + wmiNamespace)); " is 156.
Long Statement,MSBuild.ExtensionPack,BaseTask,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Common\BaseTask.cs,GetManagementScope,The length of the statement  "            this.LogTaskMessage(MessageImportance.Low' string.Format(CultureInfo.CurrentCulture' "ManagementScope Set: {0}"' "\\\\" + this.MachineName + wmiNamespace)); " is 156.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,InternalExecute,The length of the statement  "                this.Log.LogError(string.Format(CultureInfo.CurrentCulture' "Source Folder does not exist: {0}"' this.Source.GetMetadata("FullPath"))); " is 135.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,InternalExecute,The length of the statement  "                FileSyncOptions fso = this.SyncOptions.Aggregate(new FileSyncOptions()' (current' opt) => current | (FileSyncOptions)Enum.Parse(typeof(FileSyncOptions)' opt.ItemSpec)); " is 168.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,SyncFolders,The length of the statement  "            this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "Syncing Folders: {0} and {1}. Direction: {2}"' this.Source.GetMetadata("FullPath")' this.Destination.GetMetadata("FullPath")' this.Direction)); " is 206.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,SyncFolders,The length of the statement  "                this.LogTaskMessage(MessageImportance.Low' string.Format(CultureInfo.CurrentCulture' "Creating Destination Folder: {0}"' this.Destination.GetMetadata("FullPath"))); " is 164.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,SyncFolders,The length of the statement  "                    this.LogTaskMessage(MessageImportance.Low' string.Format(CultureInfo.CurrentCulture' "Adding ExclusionFilter: {0}"' f.Name)); " is 125.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,SyncFiles,The length of the statement  "            using (FileSyncProvider sourceProvider = new FileSyncProvider(sourceSyncId' this.Source.GetMetadata("FullPath")' filter' this.syncOptions)) " is 139.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,SyncFiles,The length of the statement  "                using (FileSyncProvider destinationProvider = new FileSyncProvider(destinationSyncId' this.Destination.GetMetadata("FullPath")' filter' this.syncOptions)) " is 154.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,SyncFiles,The length of the statement  "                    SyncOrchestrator agent = new SyncOrchestrator { LocalProvider = sourceProvider' RemoteProvider = destinationProvider' Direction = this.direction }; " is 147.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,OnAppliedChange,The length of the statement  "                    this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "{0} : {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' args.NewFilePath)); " is 160.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,OnAppliedChange,The length of the statement  "                    this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "{0} : {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' args.OldFilePath)); " is 160.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,OnAppliedChange,The length of the statement  "                    this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "{0} : {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' args.OldFilePath)); " is 160.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,OnAppliedChange,The length of the statement  "                    this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "{0} : {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' args.NewFilePath)); " is 160.
Long Statement,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,OnSkippedChange,The length of the statement  "            this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "SKIPPED {0} for {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' !string.IsNullOrEmpty(args.CurrentFilePath) ? args.CurrentFilePath : args.NewFilePath)); " is 239.
Missing Default,MSBuild.ExtensionPack.FileSystem,Sync,C:\repos\mikefourie_MSBuildExtensionPack\Releases\3.5.14.0\Main3.5\Sync\Sync.cs,OnAppliedChange,The following switch statement is missing a default case: switch (args.ChangeType)              {                  case ChangeType.Create:                      this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "{0} : {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' args.NewFilePath));                      break;                  case ChangeType.Delete:                      this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "{0} : {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' args.OldFilePath));                      break;                  case ChangeType.Update:                      this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "{0} : {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' args.OldFilePath));                      break;                  case ChangeType.Rename:                      this.LogTaskMessage(string.Format(CultureInfo.CurrentCulture' "{0} : {1}"' args.ChangeType.ToString().ToUpper(CultureInfo.CurrentUICulture)' args.NewFilePath));                      break;              }
