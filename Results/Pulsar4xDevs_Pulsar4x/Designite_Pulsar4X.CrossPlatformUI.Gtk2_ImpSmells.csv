Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Pulsar4X.CrossPlatformUI.Gtk2,GtkGLSurface,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI.Gtk2\GtkGLSurface.cs,OnExposeEvent,Cyclomatic complexity of the method is 8
Long Statement,Pulsar4X.CrossPlatformUI.Gtk2,GtkGLSurface,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI.Gtk2\GtkGLSurface.cs,OnExposeEvent,The length of the statement  "				GraphicsMode graphicsMode = new GraphicsMode(colorBufferColorFormat' DepthBPP' StencilBPP' Samples' accumulationColorFormat' buffers' Stereo); " is 142.
Long Statement,Pulsar4X.CrossPlatformUI.Gtk2,GtkGLSurface,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI.Gtk2\GtkGLSurface.cs,OnExposeEvent,The length of the statement  "			eventExpose.Window.Display.Sync(); // Add Sync call to fix resize rendering problem (Jay L. T. Cornwall) - How does this affect VSync? " is 134.
Magic Number,Pulsar4X.CrossPlatformUI.Gtk2,GtkGLSurface,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI.Gtk2\GtkGLSurface.cs,OnExposeEvent,The following statement contains a magic number: if (!initialized)  			{  				initialized = true;    				// If this looks uninitialized...  initialize.  				if( ColorBPP == 0 )  				{  					ColorBPP = 32;    					if( DepthBPP == 0 ) DepthBPP = 16;  				}    				ColorFormat colorBufferColorFormat = new ColorFormat(ColorBPP);    				ColorFormat accumulationColorFormat = new ColorFormat(AccumulatorBPP);    				int buffers = 2;  				if( SingleBuffer ) buffers--;    				GraphicsMode graphicsMode = new GraphicsMode(colorBufferColorFormat' DepthBPP' StencilBPP' Samples' accumulationColorFormat' buffers' Stereo);    				// IWindowInfo  				if (Configuration.RunningOnWindows)  				{  					IntPtr windowHandle = gdk_win32_drawable_get_handle(GdkWindow.Handle);  					windowInfo = OpenTK.Platform.Utilities.CreateWindowsWindowInfo(windowHandle);  				}  				else if (Configuration.RunningOnMacOS)  				{  					IntPtr windowHandle = gdk_x11_drawable_get_xid(GdkWindow.Handle);  					bool ownHandle = true;  					bool isControl = true;  					windowInfo = OpenTK.Platform.Utilities.CreateMacOSCarbonWindowInfo(windowHandle' ownHandle' isControl);  				}  				else if (Configuration.RunningOnX11)  				{  					IntPtr display = gdk_x11_display_get_xdisplay(Display.Handle);  					int screen = Screen.Number;  					IntPtr windowHandle = gdk_x11_drawable_get_xid(GdkWindow.Handle);  					IntPtr rootWindow = gdk_x11_drawable_get_xid(RootWindow.Handle);    					IntPtr visualInfo;  					if (graphicsMode.Index.HasValue)  					{  						XVisualInfo info = new XVisualInfo();  						info.VisualID = graphicsMode.Index.Value;  						int dummy;  						visualInfo = XGetVisualInfo(display' XVisualInfoMask.ID' ref info' out dummy);  					}  					else  					{  						visualInfo = GetVisualInfo(display);  					}    					windowInfo = OpenTK.Platform.Utilities.CreateX11WindowInfo(display' screen' windowHandle' rootWindow' visualInfo);  					XFree(visualInfo);  				}  				else throw new PlatformNotSupportedException();    				// GraphicsContext  				graphicsContext = new GraphicsContext(graphicsMode' windowInfo' GlVersionMajor' GlVersionMinor' graphicsContextFlags);  				graphicsContext.MakeCurrent(windowInfo);    				if (GraphicsContext.ShareContexts)  				{  					Interlocked.Increment(ref graphicsContextCount);    					if (!sharedContextInitialized)  					{  						sharedContextInitialized = true;  						((IGraphicsContextInternal)graphicsContext).LoadAll();  						OnGraphicsContextInitialized();  					}  				}  				else  				{  					((IGraphicsContextInternal)graphicsContext).LoadAll();  					OnGraphicsContextInitialized();  				}    				OnInitialized();  			}  			else  			{  				graphicsContext.MakeCurrent(windowInfo);  			}
Magic Number,Pulsar4X.CrossPlatformUI.Gtk2,GtkGLSurface,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI.Gtk2\GtkGLSurface.cs,OnExposeEvent,The following statement contains a magic number: if (!initialized)  			{  				initialized = true;    				// If this looks uninitialized...  initialize.  				if( ColorBPP == 0 )  				{  					ColorBPP = 32;    					if( DepthBPP == 0 ) DepthBPP = 16;  				}    				ColorFormat colorBufferColorFormat = new ColorFormat(ColorBPP);    				ColorFormat accumulationColorFormat = new ColorFormat(AccumulatorBPP);    				int buffers = 2;  				if( SingleBuffer ) buffers--;    				GraphicsMode graphicsMode = new GraphicsMode(colorBufferColorFormat' DepthBPP' StencilBPP' Samples' accumulationColorFormat' buffers' Stereo);    				// IWindowInfo  				if (Configuration.RunningOnWindows)  				{  					IntPtr windowHandle = gdk_win32_drawable_get_handle(GdkWindow.Handle);  					windowInfo = OpenTK.Platform.Utilities.CreateWindowsWindowInfo(windowHandle);  				}  				else if (Configuration.RunningOnMacOS)  				{  					IntPtr windowHandle = gdk_x11_drawable_get_xid(GdkWindow.Handle);  					bool ownHandle = true;  					bool isControl = true;  					windowInfo = OpenTK.Platform.Utilities.CreateMacOSCarbonWindowInfo(windowHandle' ownHandle' isControl);  				}  				else if (Configuration.RunningOnX11)  				{  					IntPtr display = gdk_x11_display_get_xdisplay(Display.Handle);  					int screen = Screen.Number;  					IntPtr windowHandle = gdk_x11_drawable_get_xid(GdkWindow.Handle);  					IntPtr rootWindow = gdk_x11_drawable_get_xid(RootWindow.Handle);    					IntPtr visualInfo;  					if (graphicsMode.Index.HasValue)  					{  						XVisualInfo info = new XVisualInfo();  						info.VisualID = graphicsMode.Index.Value;  						int dummy;  						visualInfo = XGetVisualInfo(display' XVisualInfoMask.ID' ref info' out dummy);  					}  					else  					{  						visualInfo = GetVisualInfo(display);  					}    					windowInfo = OpenTK.Platform.Utilities.CreateX11WindowInfo(display' screen' windowHandle' rootWindow' visualInfo);  					XFree(visualInfo);  				}  				else throw new PlatformNotSupportedException();    				// GraphicsContext  				graphicsContext = new GraphicsContext(graphicsMode' windowInfo' GlVersionMajor' GlVersionMinor' graphicsContextFlags);  				graphicsContext.MakeCurrent(windowInfo);    				if (GraphicsContext.ShareContexts)  				{  					Interlocked.Increment(ref graphicsContextCount);    					if (!sharedContextInitialized)  					{  						sharedContextInitialized = true;  						((IGraphicsContextInternal)graphicsContext).LoadAll();  						OnGraphicsContextInitialized();  					}  				}  				else  				{  					((IGraphicsContextInternal)graphicsContext).LoadAll();  					OnGraphicsContextInitialized();  				}    				OnInitialized();  			}  			else  			{  				graphicsContext.MakeCurrent(windowInfo);  			}
Magic Number,Pulsar4X.CrossPlatformUI.Gtk2,GtkGLSurface,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI.Gtk2\GtkGLSurface.cs,OnExposeEvent,The following statement contains a magic number: if (!initialized)  			{  				initialized = true;    				// If this looks uninitialized...  initialize.  				if( ColorBPP == 0 )  				{  					ColorBPP = 32;    					if( DepthBPP == 0 ) DepthBPP = 16;  				}    				ColorFormat colorBufferColorFormat = new ColorFormat(ColorBPP);    				ColorFormat accumulationColorFormat = new ColorFormat(AccumulatorBPP);    				int buffers = 2;  				if( SingleBuffer ) buffers--;    				GraphicsMode graphicsMode = new GraphicsMode(colorBufferColorFormat' DepthBPP' StencilBPP' Samples' accumulationColorFormat' buffers' Stereo);    				// IWindowInfo  				if (Configuration.RunningOnWindows)  				{  					IntPtr windowHandle = gdk_win32_drawable_get_handle(GdkWindow.Handle);  					windowInfo = OpenTK.Platform.Utilities.CreateWindowsWindowInfo(windowHandle);  				}  				else if (Configuration.RunningOnMacOS)  				{  					IntPtr windowHandle = gdk_x11_drawable_get_xid(GdkWindow.Handle);  					bool ownHandle = true;  					bool isControl = true;  					windowInfo = OpenTK.Platform.Utilities.CreateMacOSCarbonWindowInfo(windowHandle' ownHandle' isControl);  				}  				else if (Configuration.RunningOnX11)  				{  					IntPtr display = gdk_x11_display_get_xdisplay(Display.Handle);  					int screen = Screen.Number;  					IntPtr windowHandle = gdk_x11_drawable_get_xid(GdkWindow.Handle);  					IntPtr rootWindow = gdk_x11_drawable_get_xid(RootWindow.Handle);    					IntPtr visualInfo;  					if (graphicsMode.Index.HasValue)  					{  						XVisualInfo info = new XVisualInfo();  						info.VisualID = graphicsMode.Index.Value;  						int dummy;  						visualInfo = XGetVisualInfo(display' XVisualInfoMask.ID' ref info' out dummy);  					}  					else  					{  						visualInfo = GetVisualInfo(display);  					}    					windowInfo = OpenTK.Platform.Utilities.CreateX11WindowInfo(display' screen' windowHandle' rootWindow' visualInfo);  					XFree(visualInfo);  				}  				else throw new PlatformNotSupportedException();    				// GraphicsContext  				graphicsContext = new GraphicsContext(graphicsMode' windowInfo' GlVersionMajor' GlVersionMinor' graphicsContextFlags);  				graphicsContext.MakeCurrent(windowInfo);    				if (GraphicsContext.ShareContexts)  				{  					Interlocked.Increment(ref graphicsContextCount);    					if (!sharedContextInitialized)  					{  						sharedContextInitialized = true;  						((IGraphicsContextInternal)graphicsContext).LoadAll();  						OnGraphicsContextInitialized();  					}  				}  				else  				{  					((IGraphicsContextInternal)graphicsContext).LoadAll();  					OnGraphicsContextInitialized();  				}    				OnInitialized();  			}  			else  			{  				graphicsContext.MakeCurrent(windowInfo);  			}
