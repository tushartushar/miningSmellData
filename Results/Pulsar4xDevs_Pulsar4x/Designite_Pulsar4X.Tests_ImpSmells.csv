Implementation smell,Namespace,Class,File,Method,Description
Long Method,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The method has 104 lines of code.
Long Method,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,EngineComponentSD,The method has 112 lines of code.
Long Method,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The method has 123 lines of code.
Long Method,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The method has 115 lines of code.
Complex Method,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,Cyclomatic complexity of the method is 12
Complex Method,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,Cyclomatic complexity of the method is 17
Long Identifier,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,Factory,The length of the parameter instalationConstructionAbility is 30.
Long Identifier,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,Factory,The length of the parameter shipComponentsConstructionAbility is 33.
Long Statement,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasASpecificItemThatItDoesnotHave_Should_ReturnFalse,The length of the statement  "            cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 }); " is 141.
Long Statement,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItDoesnotHaveEnoughOf_Should_ReturnFalse,The length of the statement  "            cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 }); " is 141.
Long Statement,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasExactlyEnoughOf_Should_ReturnTrue,The length of the statement  "            cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 }); " is 141.
Long Statement,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasMoreTHanEnoughOf_Should_ReturnTrue,The length of the statement  "            cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 }); " is 141.
Long Statement,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The length of the statement  "            rockPile.StoredCargoTypes.Add(rocks.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 35007' FreeCapacityKg = 32154 }); " is 121.
Long Statement,Pulsar4X.Tests,DataBlobTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\DataBlobTests.cs,JsonConstructor,The length of the statement  "            ConstructorInfo[] constructors = dataBlobType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 132.
Long Statement,Pulsar4X.Tests,DataBlobTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\DataBlobTests.cs,JsonConstructor,The length of the statement  "            foreach (ConstructorInfo constructorInfo in constructors.Where(constructorInfo => constructorInfo.GetCustomAttributes().Contains(jsonConstructorAttribute))) " is 156.
Long Statement,Pulsar4X.Tests,DataBlobTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\DataBlobTests.cs,JsonConstructor,The length of the statement  "            foreach (ConstructorInfo constructorInfo in constructors.Where(constructorInfo => constructorInfo.GetParameters().Length == 0 && constructorInfo.IsPublic)) " is 155.
Long Statement,Pulsar4X.Tests,DataBlobTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\DataBlobTests.cs,JsonConstructor,The length of the statement  "                    Assert.Pass(dataBlobType.ToString() + " will deserialize with the only parametrized constructor available. Make sure parameters match the Json property names saved in the Json file."); " is 184.
Long Statement,Pulsar4X.Tests,DataBlobTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\DataBlobTests.cs,JsonConstructor,The length of the statement  "            foreach (ConstructorInfo constructorInfo in constructors.Where(constructorInfo => constructorInfo.GetParameters().Length == 0 && constructorInfo.IsPrivate)) " is 156.
Long Statement,Pulsar4X.Tests,DataBlobTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\DataBlobTests.cs,JsonConstructor,The length of the statement  "                // Test if the datablob has a private constructor with no parameters (JSON can use a private constructor' though undesirable) " is 125.
Long Statement,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The length of the statement  "            _species1 = Entity.Create(_game.GlobalManager' Guid.Empty' new List<BaseDataBlob> {new SpeciesDB(1' 0.1' 1.9' 1.0' 0.4' 4' 14' -15' 45)}); " is 138.
Long Statement,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,TestSelfReferencingEntity,The length of the statement  "            Assert.IsTrue(testEntity.GetValueCompareHash() == clonedEntity.GetValueCompareHash()' "ValueCompareHash should match");//currently valueCompareHash does not check guid of the entity. I'm undecided wheather it should or not.  " is 223.
Long Statement,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,TestSelfReferencingEntity,The length of the statement  "            Assert.IsTrue(game2.GlobalManager.FindEntityByGuid(testEntity.Guid' out clonedTest)' "Game2 should have the test entity"); " is 122.
Long Statement,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,TestSelfReferencingEntity,The length of the statement  "            Assert.IsTrue(testEntity.Guid == clonedEntity.Guid' "ID's need to match' if we get to this assert' then we've got two entities in game2' one of them has the correct guid but no datablobs' the other has a new guid but is complete."); " is 232.
Long Statement,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,EntityLookup,The length of the statement  "            Assert.Catch(typeof(KeyNotFoundException)' () => _game.GlobalManager.GetAllEntitiesWithDataBlob<BaseDataBlob>(_smAuthToken)); " is 125.
Long Statement,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,HasDataBlobTests,The length of the statement  "            Assert.True(EntityManager.TryGetTypeIndex(typeof(OrbitDB)' out typeIndex_OrbitDB)' "We should be able to find the type index for OrbitDB"); " is 139.
Long Statement,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,HasDataBlobTests,The length of the statement  "            Assert.True(EntityManager.TryGetTypeIndex(typeof(CargoStorageDB)' out typeIndex_CargoStorageDB)' "We should be able to find the type index for CargoStorageDB"); " is 160.
Long Statement,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,HasDataBlobTests,The length of the statement  "            Assert.False(testEntity.HasDataBlob(typeIndex_CargoStorageDB)' "This entity should NOT have a CargoStorageDB by index" ); " is 121.
Long Statement,Pulsar4X.Tests,FactoryTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\FactoryTests.cs,CreateNewColony,The length of the statement  "            //Assert.IsTrue(HasAllRequiredDatablobs(colony' requiredDataBlobs)' "Colony Entity doesn't contains all required datablobs"); " is 125.
Long Statement,Pulsar4X.Tests,FactoryTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\FactoryTests.cs,CreateScientist,The length of the statement  "            //Assert.IsTrue(HasAllRequiredDatablobs(scientist' requiredDataBlobs)' "Scientist Entity doesn't contains all required datablobs"); " is 131.
Long Statement,Pulsar4X.Tests,NetworkTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\NetworkTests.cs,Init,The length of the statement  "            _netClient = new Networking.NetworkClient("localhost"' 4888' new GameVM());//ugly' refactor so GameVM isn't required and or network isnt needed to be created here? " is 163.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The length of the statement  "                Assert.AreEqual(o_e' e3' 1.0e-5' "TestData: " + testData.TestName +"\n iteration: " + i + "\n EccentricVector Magnitude should equal the Eccentricity"); " is 152.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestLoANCalc,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TrueAnomalyCalcs,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The length of the statement  "                    Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E1)' "EccentricAnomaly E1 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E1));// these two should be calculatd the same way.   " is 196.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The length of the statement  "                    Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E2)' 1.0E-7' "EccentricAnomaly E2 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E2)); " is 158.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The length of the statement  "                    Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E3)' 1.0E-7' "EccentricAnomaly E3 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E3)); " is 158.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The length of the statement  "                    //Assert.AreEqual(o_E' E4' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E4)); " is 124.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The length of the statement  "                    //Assert.AreEqual(o_E' E5' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E5)); " is 124.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestMeanAnomalyCalcs,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestAngleOfPeriapsCalcs,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The length of the statement  "                    Assert.AreEqual(o_a' ke_a' 0.001' "SemiMajorAxis a"); //should be more accurate than this' though if testing from a given set of ke to state' and back' the calculated could be more acurate... " is 191.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The length of the statement  "                    Assert.AreEqual(o_i' ke_i' 1.0E-7' "Inclination i expected: " + Angle.ToDegrees(o_i) + " was: " + Angle.ToDegrees(ke_i)); " is 121.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The length of the statement  "                    Assert.AreEqual(o_n' ke_n' 1.0E-7' "MeanMotion n expected: " + Angle.ToDegrees(o_n) + " was: " + Angle.ToDegrees(ke_n)); " is 120.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The length of the statement  "                    Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ke_ν)' 1.0E-7' "True Anomaly ν expected: " + Angle.ToDegrees(o_ν) + " was: " + Angle.ToDegrees(ke_ν)); " is 157.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The length of the statement  "                    Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' ke_E)' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(ke_E)); " is 161.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The length of the statement  "                    Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_M' ke_M0)' 1.0E-7' "MeanAnomaly M expected: " + Angle.ToDegrees(o_M) + " was: " + Angle.ToDegrees(ke_M0)); " is 158.
Long Statement,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingPosition,The length of the statement  "                double o_M = OrbitMath.GetMeanAnomalyFromTime(o_M0' o_n' timeSinceEpoch.TotalSeconds); //orbitProcessor uses this calc directly " is 127.
Long Statement,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The length of the statement  "            Assert.AreEqual(elements.Eccentricity' elementsKm.Eccentricity' 1.0e-9); //this is where inacuarcy from units stars creaping in' not much can do about that. " is 156.
Long Statement,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The length of the statement  "            //var speedVectorAU = OrbitMath.PreciseOrbitalVelocityVector(sgp' position' elements.SemiMajorAxis' elements.Eccentricity' elements.LoAN + elements.AoP); " is 153.
Long Statement,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The length of the statement  "            //below was some experimentation with different ways of calculating things' and an attempt to use decimal for Eccentricity. " is 123.
Long Statement,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The length of the statement  "            Vector3 targetObjPosition = new Vector3 { X = Distance.AuToMt(0.149246434443459)'  Y= Distance.AuToMt(-0.712107888348067) }; " is 124.
Long Statement,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The length of the statement  "            OrbitDB targetOrbit = OrbitDB.FromVector(parentEntity' myMass' parentMass' sgp_m' targetObjPosition' targetObjVelocity' currentDateTime); " is 137.
Long Statement,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The length of the statement  "            //this test is currently failing and I'm unsure why. right now the code is using a 1s timestep so it should come out exact... " is 125.
Long Statement,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The length of the statement  "            Assert.AreEqual(distance1' distance2); //if we put the variable timstep which is related to the speed of the object in we'll have to give this a delta " is 150.
Long Statement,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,CreateTestUniverse,The length of the statement  "            _game = new Game(new NewGameSettings { GameName = "Pathfinding Test Game"' StartDateTime = DateTime.Now' MaxSystems = 10 }); " is 124.
Long Statement,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,Init,The length of the statement  "            ComponentTemplateSD infrastructureSD = _game.Game.StaticData.ComponentTemplates[new Guid("08b3e64c-912a-4cd0-90b0-6d0f1014e9bb")]; " is 130.
Long Statement,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,Init,The length of the statement  "            ComponentDesigner infrastructureDesigner = new ComponentDesigner(infrastructureSD' _game.HumanFaction.GetDataBlob<FactionTechDB>()); " is 132.
Long Statement,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The length of the statement  "            ComponentDesigner infrastructureDesigner = new ComponentDesigner(infrastructureSD' _game.HumanFaction.GetDataBlob<FactionTechDB>()); " is 132.
Long Statement,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The length of the statement  "                    //var infrastuctures = _game.EarthColony.GetDataBlob<ComponentInstancesDB>().SpecificInstances[infrastructureEntity].Where(inf => inf.DesignEntity.HasDataBlob<LifeSupportAbilityDB>()); " is 184.
Long Statement,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,ComparitiveTests,The length of the statement  "            Assert.AreEqual(firstOrigional.ManagerSubpulses.GetTotalNumberOfProceses()' firstLoaded.ManagerSubpulses.GetTotalNumberOfProceses()); " is 133.
Long Statement,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,ComparitiveTests,The length of the statement  "            Assert.AreEqual(firstOrigional.ManagerSubpulses.GetInteruptDateTimes()' firstLoaded.ManagerSubpulses.GetInteruptDateTimes()); " is 125.
Long Statement,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,EngineComponentSD,The length of the statement  "            component.MineralCostFormula = new Dictionary<Guid' string> { { new Guid("2d4b2866-aa4a-4b9a-b8aa-755fe509c0b3")' "[Mass] * 8" } }; " is 131.
Long Statement,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,EngineComponentSD,The length of the statement  "            fuelConsumptionArgsDB7.AbilityFormula = "DataBlobArgs(GuidString('33e6ac88-0235-4917-a7ff-35c8886aad3a')' Ability(6)' 1)"; " is 122.
Long Statement,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,GeneralCargo,The length of the statement  "            generalCargoCapacityAbility.AbilityFormula = "DataBlobArgs(Ability(0)' GuidString('16b4c4f0-7292-4f4d-8fea-22103c70b288')' Ability(1)' Ability(2))"; " is 148.
Long Statement,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,Init,The length of the statement  "            _faction.GetDataBlob<FactionTechDB>().ResearchedTechs.Add(new Guid("c827d369-3f16-43ef-b112-7d5bcafb74c7")' 1); //Nuclear Thermal Engine Technology " is 147.
Long Statement,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,TestShipCreation,The length of the statement  "            Assert.AreEqual(warpPower * add2engineNumber' warpAbility.TotalWarpPower' "Incorrect TotalEnginePower 2nd engine added"); " is 121.
Long Statement,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,TestShipCreation,The length of the statement  "            Assert.IsTrue(energyMax >= warpAbility.BubbleCreationCost' "Ship does not store enough energy for a succesfull warp bubble creation"); " is 134.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The length of the statement  "                if (gasSym == "H2" || gasSym == "CH4" || gasSym == "NH3" || gasSym == "CO" || gasSym == "NO" || gasSym == "H2S" || gasSym == "NO2" || gasSym == "SO2") " is 150.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The length of the statement  "                weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses); //TODO what's our greenhouse factor an pressure? " is 127.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The length of the statement  "                weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses); //TODO what's our greenhouse factor an pressure? " is 127.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The length of the statement  "                weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses); //TODO what's our greenhouse factor an pressure? " is 127.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The length of the statement  "                    weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses); //TODO what's our greenhouse factor an pressure? " is 127.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The length of the statement  "                    weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses); //TODO what's our greenhouse factor an pressure? " is 127.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The length of the statement  "                    weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses); //TODO what's our greenhouse factor an pressure? " is 127.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The length of the statement  "            //Toxic Gasses(CC = 2): Hydrogen(H2)' Methane(CH4)' Ammonia(NH3)' Carbon Monoxide(CO)' Nitrogen Monoxide(NO)' Hydrogen Sulfide(H2S)' Nitrogen Dioxide(NO2)' Sulfur Dioxide(SO2) " is 175.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The length of the statement  "                testAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses); //TODO what's our greenhouse factor an pressure? " is 126.
Long Statement,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The length of the statement  "                    testAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses); //TODO what's our greenhouse factor an pressure? " is 126.
Long Statement,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestLoadDefaultData,The length of the statement  "            Game game = new Game(new NewGameSettings { GameName = "Unit Test Game"' StartDateTime = DateTime.Now' MaxSystems = 0 }); " is 120.
Long Statement,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestOverwriteDefaultData,The length of the statement  "            Game game = new Game(new NewGameSettings { GameName = "Unit Test Game"' StartDateTime = DateTime.Now' MaxSystems = 0 }); " is 120.
Long Statement,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestIDLookup,The length of the statement  "            Game game = new Game(new NewGameSettings { GameName = "Unit Test Game"' StartDateTime = DateTime.Now' MaxSystems = 0 }); " is 120.
Long Statement,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,CreateAndFillStarSystem,The length of the statement  "            _game = new Game(new NewGameSettings { GameName = "Unit Test Game"' StartDateTime = DateTime.Now' MaxSystems = 0 }); // reinit with empty game' so we can do a clean test. " is 170.
Long Statement,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,PerformanceTest,The length of the statement  "            _game = new Game(new NewGameSettings { GameName = "Unit Test Game"' StartDateTime = DateTime.Now' MaxSystems = 0 }); // reinit with empty game' so we can do a clean test. " is 170.
Long Statement,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,PerformanceTest,The length of the statement  "            string output = $"Total run time: {totalTime.ToString("N4")}s' per system: {(totalTime / numSystems * 1000).ToString("N2")}ms.\ntotal memory used: {(totalMemory / 1024.0).ToString("N2")} MB' per system: {(totalMemory / numSystems).ToString("N2")} KB.\nTotal Entities: {totalEntities}' per system: {totalEntities / (float)numSystems}.\nMemory per entity: {(totalMemory / totalEntities).ToString("N2")}KB"; " is 404.
Long Statement,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,JPConnectivity,The length of the statement  "            _game = new Game(new NewGameSettings { GameName = "Unit Test Game"' StartDateTime = DateTime.Now' MaxSystems = numSystems }); " is 125.
Long Statement,Pulsar4X.Tests,TestingUtilities,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\TestingUtilities.cs,CreateTestUniverse,The length of the statement  "            var gamesettings = new NewGameSettings { GameName = "Unit Test Game"' StartDateTime = testTime' MaxSystems = numSystems' DefaultSolStart = generateDefaultHumans' CreatePlayerFaction = false }; " is 192.
Complex Conditional,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The conditional expression  "gasSym == "H2" || gasSym == "CH4" || gasSym == "NH3" || gasSym == "CO" || gasSym == "NO" || gasSym == "H2S" || gasSym == "NO2" || gasSym == "SO2""  is complex.
Complex Conditional,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The conditional expression  "gasSym == "Cl2" || gasSym == "F2" || gasSym == "Br2" || gasSym == "I2""  is complex.
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,Init,The following statement contains a magic number: gameSettings.MaxSystems = 10;
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMineral_Should_CorrectlyRespond,The following statement contains a magic number: var diceRollMinerals = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMineral_Should_CorrectlyRespond,The following statement contains a magic number: var diceRollMinerals = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMineral_Should_CorrectlyRespond,The following statement contains a magic number: var randomMineral = new MineralSD()                  {                      ID = Guid.NewGuid()'                      CargoTypeID = mineralCargoTypeId'                      Mass = 1000'                      Name = "RandomMineral_" + i.ToString()'                      Description = "A random mineral."                  };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMineral_Should_CorrectlyRespond,The following statement contains a magic number: var diceRoll = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMineral_Should_CorrectlyRespond,The following statement contains a magic number: var diceRoll = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMineral_Should_CorrectlyRespond,The following statement contains a magic number: var randomCargoThing = new JustSomeCargoThing()                  {                      ID = Guid.NewGuid()'                      CargoTypeID = otherCargoTypeId'                      Mass = 1000'                      Name = "AThing_" + i.ToString()                  };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMaterial_Should_CorrectlyRespond,The following statement contains a magic number: var diceRollMaterials = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMaterial_Should_CorrectlyRespond,The following statement contains a magic number: var diceRollMaterials = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMaterial_Should_CorrectlyRespond,The following statement contains a magic number: var randomMaterial = new ProcessedMaterialSD()                  {                      ID = Guid.NewGuid()'                      CargoTypeID = materialCargoTypeId'                      Mass = 1000'                      Name = "RandomMaterial_" + i.ToString()'                      Description = "A random material."                  };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMaterial_Should_CorrectlyRespond,The following statement contains a magic number: var diceRoll = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMaterial_Should_CorrectlyRespond,The following statement contains a magic number: var diceRoll = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsAMaterial_Should_CorrectlyRespond,The following statement contains a magic number: var randomCargoThing = new JustSomeCargoThing()                  {                      ID = Guid.NewGuid()'                      CargoTypeID = otherCargoTypeId'                      Mass = 1000'                      Name = "AThing_" + i.ToString()                  };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsOtherCargo_Should_CorrectlyRespond,The following statement contains a magic number: var diceRollMaterials = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsOtherCargo_Should_CorrectlyRespond,The following statement contains a magic number: var diceRollMaterials = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsOtherCargo_Should_CorrectlyRespond,The following statement contains a magic number: var randomMaterial = new ProcessedMaterialSD()                  {                      ID = Guid.NewGuid()'                      CargoTypeID = materialCargoTypeId'                      Mass = 1000'                      Name = "RandomMaterial_" + i.ToString()'                      Description = "A random material."                  };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsOtherCargo_Should_CorrectlyRespond,The following statement contains a magic number: var diceRoll = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsOtherCargo_Should_CorrectlyRespond,The following statement contains a magic number: var diceRoll = theDice.Next(15' 20);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,CargoDefinitionsLibrary_When_AskedIfSomethingIsOtherCargo_Should_CorrectlyRespond,The following statement contains a magic number: var randomCargoThing = new JustSomeCargoThing()                  {                      ID = Guid.NewGuid()'                      CargoTypeID = otherCargoTypeId'                      Mass = 1000'                      Name = "AThing_" + i.ToString()                  };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasASpecificItemThatItDoesnotHave_Should_ReturnFalse,The following statement contains a magic number: cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasASpecificItemThatItDoesnotHave_Should_ReturnFalse,The following statement contains a magic number: cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItDoesnotHaveEnoughOf_Should_ReturnFalse,The following statement contains a magic number: cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItDoesnotHaveEnoughOf_Should_ReturnFalse,The following statement contains a magic number: cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItDoesnotHaveEnoughOf_Should_ReturnFalse,The following statement contains a magic number: StorageSpaceProcessor.AddCargo(cookiePile' cookies' 6);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItDoesnotHaveEnoughOf_Should_ReturnFalse,The following statement contains a magic number: var cookieCheck = new Dictionary<ICargoable' int>              {                  { cookies' 7 }              };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasExactlyEnoughOf_Should_ReturnTrue,The following statement contains a magic number: cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasExactlyEnoughOf_Should_ReturnTrue,The following statement contains a magic number: cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasExactlyEnoughOf_Should_ReturnTrue,The following statement contains a magic number: StorageSpaceProcessor.AddCargo(cookiePile' cookies' 7);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasExactlyEnoughOf_Should_ReturnTrue,The following statement contains a magic number: var cookieCheck = new Dictionary<ICargoable' int>              {                  { cookies' 7 }              };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasMoreTHanEnoughOf_Should_ReturnTrue,The following statement contains a magic number: cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasMoreTHanEnoughOf_Should_ReturnTrue,The following statement contains a magic number: cookiePile.StoredCargoTypes.Add(cookies.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 9999999999999' FreeCapacityKg = 9999999999999 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasMoreTHanEnoughOf_Should_ReturnTrue,The following statement contains a magic number: StorageSpaceProcessor.AddCargo(cookiePile' cookies' 99);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckIfItHasCargoThatItHasMoreTHanEnoughOf_Should_ReturnTrue,The following statement contains a magic number: var cookieCheck = new Dictionary<ICargoable' int>              {                  { cookies' 7 }              };
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: rockPile.StoredCargoTypes.Add(rocks.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 35007' FreeCapacityKg = 32154 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: rockPile.StoredCargoTypes.Add(rocks.CargoTypeID' new CargoTypeStore() { MaxCapacityKg = 35007' FreeCapacityKg = 32154 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: rockPile.StoredCargoTypes.Add(Guid.NewGuid()' new CargoTypeStore() { MaxCapacityKg = 99998' FreeCapacityKg = 99997 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: rockPile.StoredCargoTypes.Add(Guid.NewGuid()' new CargoTypeStore() { MaxCapacityKg = 99998' FreeCapacityKg = 99997 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: rockPile.StoredCargoTypes.Add(Guid.NewGuid()' new CargoTypeStore() { MaxCapacityKg = 99996' FreeCapacityKg = 99995 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: rockPile.StoredCargoTypes.Add(Guid.NewGuid()' new CargoTypeStore() { MaxCapacityKg = 99996' FreeCapacityKg = 99995 });
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: Assert.AreEqual(3215' canStoreThisManyItems.FreeCapacityItem);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: Assert.AreEqual(32154' canStoreThisManyItems.FreeCapacityKg);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: StorageSpaceProcessor.AddCargo(rockPile' rocks' 215);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: Assert.AreEqual(3000' canStoreThisManyItems.FreeCapacityItem);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,StorageSpaceProcessor_When_AskedToCheckAvailableStorageSpace_Should_ReturnCorrectAnswerForTheRequestedCargoItem,The following statement contains a magic number: Assert.AreEqual(30004' canStoreThisManyItems.FreeCapacityKg);
Magic Number,Pulsar4X.Tests,CargoSpaceTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\CargoSpaceTests.cs,SetupRockTradeGood,The following statement contains a magic number: var rock = new ProcessedMaterialSD              {                  Name = "Rock"'                  Description = "A pile of heavy rocks. Very useful. Trust me."'                  ID = Guid.NewGuid()'                  CargoTypeID = Guid.NewGuid()'                  Mass = 10              };
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _species1 = Entity.Create(_game.GlobalManager' Guid.Empty' new List<BaseDataBlob> {new SpeciesDB(1' 0.1' 1.9' 1.0' 0.4' 4' 14' -15' 45)});
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _species1 = Entity.Create(_game.GlobalManager' Guid.Empty' new List<BaseDataBlob> {new SpeciesDB(1' 0.1' 1.9' 1.0' 0.4' 4' 14' -15' 45)});
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _species1 = Entity.Create(_game.GlobalManager' Guid.Empty' new List<BaseDataBlob> {new SpeciesDB(1' 0.1' 1.9' 1.0' 0.4' 4' 14' -15' 45)});
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _species1 = Entity.Create(_game.GlobalManager' Guid.Empty' new List<BaseDataBlob> {new SpeciesDB(1' 0.1' 1.9' 1.0' 0.4' 4' 14' -15' 45)});
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _species1 = Entity.Create(_game.GlobalManager' Guid.Empty' new List<BaseDataBlob> {new SpeciesDB(1' 0.1' 1.9' 1.0' 0.4' 4' 14' -15' 45)});
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _species1 = Entity.Create(_game.GlobalManager' Guid.Empty' new List<BaseDataBlob> {new SpeciesDB(1' 0.1' 1.9' 1.0' 0.4' 4' 14' -15' 45)});
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _species1 = Entity.Create(_game.GlobalManager' Guid.Empty' new List<BaseDataBlob> {new SpeciesDB(1' 0.1' 1.9' 1.0' 0.4' 4' 14' -15' 45)});
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _pop1 = new Dictionary<Entity' long> { { _species1' 10 } };
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,Init,The following statement contains a magic number: _pop2 = new Dictionary<Entity' long> { { _species1' 5 } };
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,GetDataBlobsByEntity,The following statement contains a magic number: Assert.AreEqual(2' dataBlobs.Count);
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,GetDataBlobByEntity,The following statement contains a magic number: Assert.Catch(typeof(ArgumentOutOfRangeException)' () =>              {                  testEntity.GetDataBlob<AtmosphereDB>(-42);              });
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,RemoveEntities,The following statement contains a magic number: Assert.AreEqual(2' testList.Count);
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,RemoveDataBlobs,The following statement contains a magic number: Assert.Catch(typeof(ArgumentException)' () => testEntity.RemoveDataBlob(-42));
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,EntityLookup,The following statement contains a magic number: Assert.AreEqual(2' entities.Count);
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,EntityLookup,The following statement contains a magic number: Assert.AreEqual(2' entities.Count);
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,EntityLookup,The following statement contains a magic number: Assert.AreEqual(3' entities.Count);
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,EntityLookup,The following statement contains a magic number: ComparableBitArray badMask = new ComparableBitArray(4242);
Magic Number,Pulsar4X.Tests,EntityManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\EntityManagerTests.cs,EntityLookup,The following statement contains a magic number: Assert.AreEqual(Entity.InvalidEntity' _game.GlobalManager.GetFirstEntityWithDataBlob(_smAuthToken' 4242));
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateX,The following statement contains a magic number: var rotMtx = Matrix3d.IDRotateX(Math.PI * 0.5);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateX,The following statement contains a magic number: Assert.AreEqual(0' rotvec.X' 1.5e-15' "X should be 0' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateX,The following statement contains a magic number: Assert.AreEqual(-testVectorZ.Z' rotvec.Y' 1.5e-15' "Y should be "+ (-testVectorY.Z) + "' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateX,The following statement contains a magic number: Assert.AreEqual(0' rotvec.Z' 1.5e-15' "Z should be 0' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateY,The following statement contains a magic number: var rotMtx = Matrix3d.IDRotateY(Math.PI * 0.5);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateY,The following statement contains a magic number: Assert.AreEqual(0' rotvec.X' 1.5e-15' "X should be 0' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateY,The following statement contains a magic number: Assert.AreEqual(0' rotvec.Y' 1.5e-15' "Y should be 0' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateY,The following statement contains a magic number: Assert.AreEqual(-testVectorX.X' rotvec.Z' 1.5e-15' "Z should be "+ (-testVectorY.X) + "' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateZ,The following statement contains a magic number: var rotMtx = Matrix3d.IDRotateZ(Math.PI * 0.5);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateZ,The following statement contains a magic number: Assert.AreEqual(0' rotvec.X' 1.5e-15' "X should be 0' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateZ,The following statement contains a magic number: Assert.AreEqual(-testVectorX.X' rotvec.Y' 1.5e-15' "Y should be "+ (-testVectorY.X) + "' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,RotateZ,The following statement contains a magic number: Assert.AreEqual(0' rotvec.Z' 1.5e-15' "Z should be 0' \r The vector is: " + rotvec);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,MultiRotate,The following statement contains a magic number: var rotMtx1 = Matrix3d.IDRotateZ(Math.PI * 0.5);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,MultiRotate,The following statement contains a magic number: var rotMtx2 = Matrix3d.IDRotateZ(Math.PI * 0.5);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,MultiRotate,The following statement contains a magic number: Assert.AreEqual(-testVectorX.X' rotvec.X' 1.5e-15);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,MultiRotate,The following statement contains a magic number: Assert.AreEqual(0' rotvec.Y' 1.5e-15);
Magic Number,Pulsar4X.Tests,MatrixTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\MatrixTests.cs,MultiRotate,The following statement contains a magic number: Assert.AreEqual(0' rotvec.Z' 1.5e-15);
Magic Number,Pulsar4X.Tests,NetworkTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\NetworkTests.cs,Init,The following statement contains a magic number: _netClient = new Networking.NetworkClient("localhost"' 4888' new GameVM());
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(hackspeed' hackVector.Length()' 1.0e-10' "TestData: " + testData.TestName +"\n iteration: " + i);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(vel1.Length()' plocVel.Length()' 1.0e-10' "TestData: " + testData.TestName +"\n iteration: " + i);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(hackspeed' vel1.Length()' 1.0e-10' "TestData: " + testData.TestName +"\n iteration: " + i);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(hackVector.X' plocVel.X' 1.0e-10);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(hackVector.Y' plocVel.Y' 1.0e-10);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(hackVector.Z' plocVel.Z' 1.0e-10);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(pv.heading' pv1.heading' 1.0e-7);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(pv.speed' pv1.speed' 1.0e-7);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(vel.Length()' vel1.Length()' 1.0e-7);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(vel.Length()' pv.speed' 1.0e-7);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: Assert.AreEqual(o_e' e3' 1.0e-5' "TestData: " + testData.TestName +"\n iteration: " + i + "\n EccentricVector Magnitude should equal the Eccentricity");
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestOrbitalVelocityCalcs,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestLoANCalc,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestLoANCalc,The following statement contains a magic number: Assert.AreEqual(o_Ω' loAN' 1.0e-10);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestLoANCalc,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TrueAnomalyCalcs,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TrueAnomalyCalcs,The following statement contains a magic number: Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ν1)' 1.0E-7' "True Anomaly ν expected: " + d0 + " was: " + d1);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TrueAnomalyCalcs,The following statement contains a magic number: o_e > 1.0e-7
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TrueAnomalyCalcs,The following statement contains a magic number: Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ν2)' 1.0E-7' "True Anomaly ν expected: " + d0 + " was: " + d2);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TrueAnomalyCalcs,The following statement contains a magic number: Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ν3)' 1.0E-7' "True Anomaly ν expected: " + d0 + " was: " + d3);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TrueAnomalyCalcs,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The following statement contains a magic number: Assert.Multiple(() =>                  {                                            Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E1)' "EccentricAnomaly E1 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E1));// these two should be calculatd the same way.                        Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E2)' 1.0E-7' "EccentricAnomaly E2 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E2));                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E3)' 1.0E-7' "EccentricAnomaly E3 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E3));                      //Assert.AreEqual(o_E' E4' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E4));                      //Assert.AreEqual(o_E' E5' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E5));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The following statement contains a magic number: Assert.Multiple(() =>                  {                                            Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E1)' "EccentricAnomaly E1 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E1));// these two should be calculatd the same way.                        Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E2)' 1.0E-7' "EccentricAnomaly E2 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E2));                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' E3)' 1.0E-7' "EccentricAnomaly E3 expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E3));                      //Assert.AreEqual(o_E' E4' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E4));                      //Assert.AreEqual(o_E' E5' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(E5));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestEccentricAnomalyCalcs,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestMeanAnomalyCalcs,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestMeanAnomalyCalcs,The following statement contains a magic number: Assert.AreEqual(o_M' M1' 1.0E-7' "MeanAnomaly M expected: " + Angle.ToDegrees(o_M) + " was: " + Angle.ToDegrees(M1));
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestMeanAnomalyCalcs,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestAngleOfPeriapsCalcs,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestAngleOfPeriapsCalcs,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ω' ω1' 1.0E-7' "i"+i+" AoP ω1 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω1));                      Assert.AreEqual(o_ω' ω2' 1.0E-7' "i"+i+" AoP ω2 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω2));                      Assert.AreEqual(o_ω' ω3' 1.0E-7' "i"+i+" AoP ω4 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω3));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestAngleOfPeriapsCalcs,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ω' ω1' 1.0E-7' "i"+i+" AoP ω1 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω1));                      Assert.AreEqual(o_ω' ω2' 1.0E-7' "i"+i+" AoP ω2 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω2));                      Assert.AreEqual(o_ω' ω3' 1.0E-7' "i"+i+" AoP ω4 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω3));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestAngleOfPeriapsCalcs,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ω' ω1' 1.0E-7' "i"+i+" AoP ω1 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω1));                      Assert.AreEqual(o_ω' ω2' 1.0E-7' "i"+i+" AoP ω2 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω2));                      Assert.AreEqual(o_ω' ω3' 1.0E-7' "i"+i+" AoP ω4 expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ω3));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestAngleOfPeriapsCalcs,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: Assert.AreEqual(periodInSeconds' orbitDB.OrbitalPeriod.TotalSeconds' 0.1);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      //these should not change (other than floating point errors) between each itteration                      Assert.AreEqual(o_a' ke_a' 0.001' "SemiMajorAxis a"); //should be more accurate than this' though if testing from a given set of ke to state' and back' the calculated could be more acurate...                      Assert.AreEqual(o_e' ke_e' 0.00001' "Eccentricity e");                      Assert.AreEqual(o_i' ke_i' 1.0E-7' "Inclination i expected: " + Angle.ToDegrees(o_i) + " was: " + Angle.ToDegrees(ke_i));                      Assert.AreEqual(o_Ω' ke_Ω' 1.0E-7' "LoAN Ω expected: " + Angle.ToDegrees(o_Ω) + " was: " + Angle.ToDegrees(ke_Ω));                      Assert.AreEqual(o_ω' ke_ω' 1.0E-7' "AoP ω expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ke_ω));                      Assert.AreEqual(o_n' ke_n' 1.0E-7' "MeanMotion n expected: " + Angle.ToDegrees(o_n) + " was: " + Angle.ToDegrees(ke_n));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      //these should not change (other than floating point errors) between each itteration                      Assert.AreEqual(o_a' ke_a' 0.001' "SemiMajorAxis a"); //should be more accurate than this' though if testing from a given set of ke to state' and back' the calculated could be more acurate...                      Assert.AreEqual(o_e' ke_e' 0.00001' "Eccentricity e");                      Assert.AreEqual(o_i' ke_i' 1.0E-7' "Inclination i expected: " + Angle.ToDegrees(o_i) + " was: " + Angle.ToDegrees(ke_i));                      Assert.AreEqual(o_Ω' ke_Ω' 1.0E-7' "LoAN Ω expected: " + Angle.ToDegrees(o_Ω) + " was: " + Angle.ToDegrees(ke_Ω));                      Assert.AreEqual(o_ω' ke_ω' 1.0E-7' "AoP ω expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ke_ω));                      Assert.AreEqual(o_n' ke_n' 1.0E-7' "MeanMotion n expected: " + Angle.ToDegrees(o_n) + " was: " + Angle.ToDegrees(ke_n));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      //these should not change (other than floating point errors) between each itteration                      Assert.AreEqual(o_a' ke_a' 0.001' "SemiMajorAxis a"); //should be more accurate than this' though if testing from a given set of ke to state' and back' the calculated could be more acurate...                      Assert.AreEqual(o_e' ke_e' 0.00001' "Eccentricity e");                      Assert.AreEqual(o_i' ke_i' 1.0E-7' "Inclination i expected: " + Angle.ToDegrees(o_i) + " was: " + Angle.ToDegrees(ke_i));                      Assert.AreEqual(o_Ω' ke_Ω' 1.0E-7' "LoAN Ω expected: " + Angle.ToDegrees(o_Ω) + " was: " + Angle.ToDegrees(ke_Ω));                      Assert.AreEqual(o_ω' ke_ω' 1.0E-7' "AoP ω expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ke_ω));                      Assert.AreEqual(o_n' ke_n' 1.0E-7' "MeanMotion n expected: " + Angle.ToDegrees(o_n) + " was: " + Angle.ToDegrees(ke_n));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      //these should not change (other than floating point errors) between each itteration                      Assert.AreEqual(o_a' ke_a' 0.001' "SemiMajorAxis a"); //should be more accurate than this' though if testing from a given set of ke to state' and back' the calculated could be more acurate...                      Assert.AreEqual(o_e' ke_e' 0.00001' "Eccentricity e");                      Assert.AreEqual(o_i' ke_i' 1.0E-7' "Inclination i expected: " + Angle.ToDegrees(o_i) + " was: " + Angle.ToDegrees(ke_i));                      Assert.AreEqual(o_Ω' ke_Ω' 1.0E-7' "LoAN Ω expected: " + Angle.ToDegrees(o_Ω) + " was: " + Angle.ToDegrees(ke_Ω));                      Assert.AreEqual(o_ω' ke_ω' 1.0E-7' "AoP ω expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ke_ω));                      Assert.AreEqual(o_n' ke_n' 1.0E-7' "MeanMotion n expected: " + Angle.ToDegrees(o_n) + " was: " + Angle.ToDegrees(ke_n));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      //these should not change (other than floating point errors) between each itteration                      Assert.AreEqual(o_a' ke_a' 0.001' "SemiMajorAxis a"); //should be more accurate than this' though if testing from a given set of ke to state' and back' the calculated could be more acurate...                      Assert.AreEqual(o_e' ke_e' 0.00001' "Eccentricity e");                      Assert.AreEqual(o_i' ke_i' 1.0E-7' "Inclination i expected: " + Angle.ToDegrees(o_i) + " was: " + Angle.ToDegrees(ke_i));                      Assert.AreEqual(o_Ω' ke_Ω' 1.0E-7' "LoAN Ω expected: " + Angle.ToDegrees(o_Ω) + " was: " + Angle.ToDegrees(ke_Ω));                      Assert.AreEqual(o_ω' ke_ω' 1.0E-7' "AoP ω expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ke_ω));                      Assert.AreEqual(o_n' ke_n' 1.0E-7' "MeanMotion n expected: " + Angle.ToDegrees(o_n) + " was: " + Angle.ToDegrees(ke_n));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      //these should not change (other than floating point errors) between each itteration                      Assert.AreEqual(o_a' ke_a' 0.001' "SemiMajorAxis a"); //should be more accurate than this' though if testing from a given set of ke to state' and back' the calculated could be more acurate...                      Assert.AreEqual(o_e' ke_e' 0.00001' "Eccentricity e");                      Assert.AreEqual(o_i' ke_i' 1.0E-7' "Inclination i expected: " + Angle.ToDegrees(o_i) + " was: " + Angle.ToDegrees(ke_i));                      Assert.AreEqual(o_Ω' ke_Ω' 1.0E-7' "LoAN Ω expected: " + Angle.ToDegrees(o_Ω) + " was: " + Angle.ToDegrees(ke_Ω));                      Assert.AreEqual(o_ω' ke_ω' 1.0E-7' "AoP ω expected: " + Angle.ToDegrees(o_ω) + " was: " + Angle.ToDegrees(ke_ω));                      Assert.AreEqual(o_n' ke_n' 1.0E-7' "MeanMotion n expected: " + Angle.ToDegrees(o_n) + " was: " + Angle.ToDegrees(ke_n));                  });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingStaticKeplerConversions,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: Assert.AreEqual(periodInSeconds' orbitDB.OrbitalPeriod.TotalSeconds' 0.1);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ν' ke_ν' 1.0E-10);                      Assert.AreEqual(o_e' ke_e' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(ke_E' ke_E2)' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ke_ν)' 1.0E-7' "True Anomaly ν expected: " + Angle.ToDegrees(o_ν) + " was: " + Angle.ToDegrees(ke_ν));                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' ke_E)' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(ke_E));                      //we're testing ke_M0 here because epoch for ke is *now*.                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_M' ke_M0)' 1.0E-7' "MeanAnomaly M expected: " + Angle.ToDegrees(o_M) + " was: " + Angle.ToDegrees(ke_M0));                    });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ν' ke_ν' 1.0E-10);                      Assert.AreEqual(o_e' ke_e' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(ke_E' ke_E2)' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ke_ν)' 1.0E-7' "True Anomaly ν expected: " + Angle.ToDegrees(o_ν) + " was: " + Angle.ToDegrees(ke_ν));                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' ke_E)' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(ke_E));                      //we're testing ke_M0 here because epoch for ke is *now*.                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_M' ke_M0)' 1.0E-7' "MeanAnomaly M expected: " + Angle.ToDegrees(o_M) + " was: " + Angle.ToDegrees(ke_M0));                    });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ν' ke_ν' 1.0E-10);                      Assert.AreEqual(o_e' ke_e' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(ke_E' ke_E2)' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ke_ν)' 1.0E-7' "True Anomaly ν expected: " + Angle.ToDegrees(o_ν) + " was: " + Angle.ToDegrees(ke_ν));                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' ke_E)' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(ke_E));                      //we're testing ke_M0 here because epoch for ke is *now*.                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_M' ke_M0)' 1.0E-7' "MeanAnomaly M expected: " + Angle.ToDegrees(o_M) + " was: " + Angle.ToDegrees(ke_M0));                    });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ν' ke_ν' 1.0E-10);                      Assert.AreEqual(o_e' ke_e' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(ke_E' ke_E2)' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ke_ν)' 1.0E-7' "True Anomaly ν expected: " + Angle.ToDegrees(o_ν) + " was: " + Angle.ToDegrees(ke_ν));                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' ke_E)' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(ke_E));                      //we're testing ke_M0 here because epoch for ke is *now*.                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_M' ke_M0)' 1.0E-7' "MeanAnomaly M expected: " + Angle.ToDegrees(o_M) + " was: " + Angle.ToDegrees(ke_M0));                    });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ν' ke_ν' 1.0E-10);                      Assert.AreEqual(o_e' ke_e' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(ke_E' ke_E2)' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ke_ν)' 1.0E-7' "True Anomaly ν expected: " + Angle.ToDegrees(o_ν) + " was: " + Angle.ToDegrees(ke_ν));                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' ke_E)' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(ke_E));                      //we're testing ke_M0 here because epoch for ke is *now*.                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_M' ke_M0)' 1.0E-7' "MeanAnomaly M expected: " + Angle.ToDegrees(o_M) + " was: " + Angle.ToDegrees(ke_M0));                    });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(o_ν' ke_ν' 1.0E-10);                      Assert.AreEqual(o_e' ke_e' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(ke_E' ke_E2)' 1.0E-10);                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_ν' ke_ν)' 1.0E-7' "True Anomaly ν expected: " + Angle.ToDegrees(o_ν) + " was: " + Angle.ToDegrees(ke_ν));                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_E' ke_E)' 1.0E-7' "EccentricAnomaly E expected: " + Angle.ToDegrees(o_E) + " was: " + Angle.ToDegrees(ke_E));                      //we're testing ke_M0 here because epoch for ke is *now*.                      Assert.AreEqual(0' Angle.DifferenceBetweenRadians(o_M' ke_M0)' 1.0E-7' "MeanAnomaly M expected: " + Angle.ToDegrees(o_M) + " was: " + Angle.ToDegrees(ke_M0));                    });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingVariableKeplerConversions,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingPosition,The following statement contains a magic number: Assert.AreEqual(periodInSeconds' orbitDB.OrbitalPeriod.TotalSeconds' 0.1);
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingPosition,The following statement contains a magic number: double segmentTime = periodInSeconds / 16;
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingPosition,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(pm.Length()' Distance.AuToMt(pau.Length())' 1.0E-2);                      Assert.AreEqual(pm.X' Distance.AuToMt(pau.X)' 1.0E-2);                      Assert.AreEqual(pm.Y' Distance.AuToMt(pau.Y)' 1.0E-2);                      Assert.AreEqual(pm.Z' Distance.AuToMt(pau.Z)' 1.0E-2);                                          });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingPosition,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(pm.Length()' Distance.AuToMt(pau.Length())' 1.0E-2);                      Assert.AreEqual(pm.X' Distance.AuToMt(pau.X)' 1.0E-2);                      Assert.AreEqual(pm.Y' Distance.AuToMt(pau.Y)' 1.0E-2);                      Assert.AreEqual(pm.Z' Distance.AuToMt(pau.Z)' 1.0E-2);                                          });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingPosition,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(pm.Length()' Distance.AuToMt(pau.Length())' 1.0E-2);                      Assert.AreEqual(pm.X' Distance.AuToMt(pau.X)' 1.0E-2);                      Assert.AreEqual(pm.Y' Distance.AuToMt(pau.Y)' 1.0E-2);                      Assert.AreEqual(pm.Z' Distance.AuToMt(pau.Z)' 1.0E-2);                                          });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingPosition,The following statement contains a magic number: Assert.Multiple(() =>                  {                      Assert.AreEqual(pm.Length()' Distance.AuToMt(pau.Length())' 1.0E-2);                      Assert.AreEqual(pm.X' Distance.AuToMt(pau.X)' 1.0E-2);                      Assert.AreEqual(pm.Y' Distance.AuToMt(pau.Y)' 1.0E-2);                      Assert.AreEqual(pm.Z' Distance.AuToMt(pau.Z)' 1.0E-2);                                          });
Magic Number,Pulsar4X.Tests,OrbitFuzzTesting,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitFuzzTesting.cs,TestingPosition,The following statement contains a magic number: i < 16
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitEpoch,The following statement contains a magic number: double parentMass = 1.989e30;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitEpoch,The following statement contains a magic number: double objMass = 2.2e+15;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitEpoch,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.AuToMt(0.57) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitEpoch,The following statement contains a magic number: Vector3 velocity = new Vector3() { Y = 54000 };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitEpoch,The following statement contains a magic number: BaseDataBlob[] parentblobs = new BaseDataBlob[3];
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitEpoch,The following statement contains a magic number: parentblobs[2] = new OrbitDB();
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestPreciseOrbitalSpeed,The following statement contains a magic number: var parentMass = 5.97237e24;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestPreciseOrbitalSpeed,The following statement contains a magic number: var objMass = 7.342e22;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestPreciseOrbitalSpeed,The following statement contains a magic number: var speedm = OrbitMath.InstantaneousOrbitalSpeed(sgpm' 405400000' 384399000);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestPreciseOrbitalSpeed,The following statement contains a magic number: var speedm = OrbitMath.InstantaneousOrbitalSpeed(sgpm' 405400000' 384399000);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestPreciseOrbitalSpeed,The following statement contains a magic number: Assert.AreEqual(970' speedm' 0.025);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestPreciseOrbitalSpeed,The following statement contains a magic number: Assert.AreEqual(970' speedm' 0.025);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestAngles,The following statement contains a magic number: var e = 0.5;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestAngles,The following statement contains a magic number: var a = 100;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestAngles,The following statement contains a magic number: double angleDelta = 0.00001;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.KmToAU(405400) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Vector3 velocity = new Vector3() { Y = Distance.KmToAU(0.97) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: double parentMass = 5.97237e24;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: double objMass = 7.342e22;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Vector3 postionKm = new Vector3() { X = 405400 };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Vector3 velocityKm = new Vector3() { Y = 0.97 };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(Distance.AuToKm(elements.SemiMajorAxis)' elementsKm.SemiMajorAxis' 0.001);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(elements.Eccentricity' elementsKm.Eccentricity' 1.0e-9);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(Distance.AuToKm(elements.Apoapsis)' elementsKm.Apoapsis' 0.001);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(Distance.AuToKm(elements.Periapsis)' elementsKm.Periapsis' 0.001);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(elementsKm.Apoapsis + elementsKm.Periapsis' elementsKm.SemiMajorAxis * 2' 0.001);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(elementsKm.Apoapsis + elementsKm.Periapsis' elementsKm.SemiMajorAxis * 2' 0.001);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(speedKm' speedKm2' 0.001);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: var sma = 1 / (2 / postionKm.Length() - velocityKm.Length() * velocityKm.Length() / sgpKm);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(Periapsis + Apoapsis' sma * 2' 0.0001);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: Assert.AreEqual(Periapsis + Apoapsis' sma * 2' 0.0001);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: var difference1 = (Periapsis + Apoapsis) - sma * 2;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestKeplerElementsFromVectors,The following statement contains a magic number: var difference2 = (elementsKm.Apoapsis + elementsKm.Periapsis) - elementsKm.SemiMajorAxis * 2;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: double parentMass = 5.97237e24;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: double objMass = 7.342e22;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.KmToM(405400) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: Vector3 velocity = new Vector3() { Y = 970 };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: parentMass = 1.989e30;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: objMass = 2.2e+15;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: position = new Vector3() { X = Distance.AuToMt(0.57) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: velocity = new Vector3() { Y = Distance.KmToM(54) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: parentMass = 1.989e30;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: objMass = 2.2e+15;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: velocity = new Vector3() { Y = Distance.KmToM(54) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: parentMass = 1.989e30;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: objMass = 10000;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitsFromVectorTests,The following statement contains a magic number: position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,Distance_AuToMt_When_Given1_Should_Give149597870700,The following statement contains a magic number: Assert.AreEqual(149597870700d' Distance.AuToMt(1.0d));
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateAngularMomentum_When_ZeroXPositiveYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateAngularMomentum_When_ZeroXPositiveYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateAngularMomentum_When_ZeroXPositiveYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: Vector3 velocity = new Vector3() { X = 0' Y = Distance.KmToM(2) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateAngularMomentum_When_ZeroXPositiveYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: var expectedResult = new Vector3(                  0'                  0'                  74798935350000.0              );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateAngularMomentum_When_ZeroXNegativeYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateAngularMomentum_When_ZeroXNegativeYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateAngularMomentum_When_ZeroXNegativeYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: var expectedResult = new Vector3(                  0'                  0'                  -37399467675000.0d              );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateLongitudeOfAscendingNode_When_APositiveNodeVector_Should_GiveCorrectResult,The following statement contains a magic number: var nodeVector = new Vector3(                  0'                  0'                  37399467675000.0d              );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateLongitudeOfAscendingNode_When_APositiveNodeVector_Should_GiveCorrectResult,The following statement contains a magic number: Assert.AreEqual(0' calculatedResult' 0.000000001d);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateLongitudeOfAscendingNode_When_ANegativeNodeVector_Should_GiveCorrectResult,The following statement contains a magic number: var nodeVector = new Vector3(                  0'                  0'                  -37399467675000.0d              );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateLongitudeOfAscendingNode_When_ANegativeNodeVector_Should_GiveCorrectResult,The following statement contains a magic number: Assert.AreEqual(0.7853981767666225d' calculatedResult' 0.000000001d);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_CalculateLongitudeOfAscendingNode_When_ANegativeNodeVector_Should_GiveCorrectResult,The following statement contains a magic number: Assert.AreEqual(0.7853981767666225d' calculatedResult' 0.000000001d);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_KeplerFromPositionAndVelocity_When_ZeroXPositiveYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: double parentMass = 1.989e30;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,OrbitMath_KeplerFromPositionAndVelocity_When_ZeroXPositiveYVelocity_Should_GiveCorrectResults,The following statement contains a magic number: double objMass = 10000;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,FailingOrbitsFromVectorTests,The following statement contains a magic number: double parentMass = 1.989e30;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,FailingOrbitsFromVectorTests,The following statement contains a magic number: double objMass = 10000;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,FailingOrbitsFromVectorTests,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,FailingOrbitsFromVectorTests,The following statement contains a magic number: Vector3 position = new Vector3() { X = Distance.AuToMt(0.25)' Y = Distance.AuToMt(0.25) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,FailingOrbitsFromVectorTests,The following statement contains a magic number: velocity = new Vector3() { X = Distance.KmToM(0)' Y = -Distance.KmToAU(2) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: double angleΔ = 0.0000000001;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: BaseDataBlob[] parentblobs = new BaseDataBlob[3];
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: parentblobs[2] = new OrbitDB();
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: var lenke1 = ke.SemiMajorAxis * 2;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(lenke1' lenke2' 1.0E-10);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: var lendb1 = objOrbit.SemiMajorAxis_AU * 2;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(lendb1' lendb2' 1.0E-10 );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(lenke1' lendb1' 1.0E-10 );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(lenke2' lendb2' 1.0E-10 );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(ke.Apoapsis' objOrbit.Apoapsis_AU' 1.0E-10 );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(ke.Periapsis' objOrbit.Periapsis_AU' 1.0E-10 );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(kemathPosKM.Length()' posKM.Length()' 0.01);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(posKM.Length()' resultKM.Length()' 0.01' "TA: " + orbtaDeg);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(posKM.X' resultKM.X' 0.01' "TA: " + orbtaDeg);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(posKM.Y' resultKM.Y' 0.01' "TA: " + orbtaDeg);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestOrbitDBFromVectors,The following statement contains a magic number: Assert.AreEqual(posKM.Z' resultKM.Z' 0.01' "TA: " + orbtaDeg);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: double myMass = 10000;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: double parentMass = 1.989e30;
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: BaseDataBlob[] parentblobs = new BaseDataBlob[3];
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: parentblobs[2] = new OrbitDB();
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Vector3 currentPos_m = new Vector3 { X= Distance.AuToMt( -0.77473184638034)' Y =Distance.AuToMt( 0.967145228951685) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Vector3 currentPos_m = new Vector3 { X= Distance.AuToMt( -0.77473184638034)' Y =Distance.AuToMt( 0.967145228951685) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Vector3 currentVelocity_m = new Vector3 { Y = Distance.KmToM(40) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: double nonNewtSpeed_m = Distance.KmToM( 283.018);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Vector3 targetObjPosition = new Vector3 { X = Distance.AuToMt(0.149246434443459)'  Y= Distance.AuToMt(-0.712107888348067) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Vector3 targetObjPosition = new Vector3 { X = Distance.AuToMt(0.149246434443459)'  Y= Distance.AuToMt(-0.712107888348067) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Vector3 targetObjVelocity = new Vector3 { Y = Distance.KmToM(35) };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: var currentDateTime = new DateTime(2000' 1' 1);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Assert.AreEqual(futurePos1_m.Length()' futurePos2_m.Length()' 0.01);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Assert.AreEqual(futurePos1_m.X' futurePos2_m.X' 0.01);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Assert.AreEqual(futurePos1_m.Y' futurePos2_m.Y' 0.01);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Assert.AreEqual(futurePos1_m.Z' futurePos2_m.Z' 0.01);
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Assert.AreEqual(nonNewtSpeed_m' speed' 1.0e-4 );
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestIntercept,The following statement contains a magic number: Assert.AreEqual(distance_m' distb_m' 100.0' "Out by a difference of " + dif + " meters");
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: PositionDB pos1 = new PositionDB(mgr.ManagerGuid) { X_AU = 0' Y_AU = 8.52699302490434E-05' Z_AU = 0 };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: BaseDataBlob[] objBlobs1 = new BaseDataBlob[3];
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: objBlobs1[1] = new MassVolumeDB() { Mass = 10000 };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: objBlobs1[2] = new NewtonMoveDB(parentEntity' new Vector3(-10.0' 0' 0));
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: objBlobs1[2] = new NewtonMoveDB(parentEntity' new Vector3(-10.0' 0' 0));
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: PositionDB pos2 = new PositionDB(mgr.ManagerGuid) { X_AU = 0' Y_AU = 8.52699302490434E-05' Z_AU = 0 };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: BaseDataBlob[] objBlobs2 = new BaseDataBlob[3];
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: objBlobs2[1] = new MassVolumeDB() { Mass = 10000 };
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: objBlobs2[2] = new NewtonMoveDB(parentEntity' new Vector3(-10.0' 0' 0));
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: objBlobs2[2] = new NewtonMoveDB(parentEntity' new Vector3(-10.0' 0' 0));
Magic Number,Pulsar4X.Tests,OrbitTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\OrbitTests.cs,TestNewtonTrajectory,The following statement contains a magic number: var seconds = 100;
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: Assert.AreEqual(6' graph.Count);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: graph.AddUndirectedEdge(node1' node2' 5);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: graph.AddUndirectedEdge(node2' node3' 7);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: Assert.AreEqual(12d' totalCost);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: Assert.AreEqual(3' pathStack.Count);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: graph.AddUndirectedEdge(node1' node3' 6);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: graph.AddUndirectedEdge(node3' node4' 9);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: graph.AddUndirectedEdge(node3' node5' 10);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: graph.AddUndirectedEdge(node5' node6' 2);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: Assert.AreEqual(18d' totalCost);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: Assert.AreEqual(4' pathStack.Count);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: graph.AddDirectedEdge(node2' node3' 2);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: Assert.AreEqual(3' totalCost);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,GraphTest,The following statement contains a magic number: Assert.AreEqual(3' pathStack.Count);
Magic Number,Pulsar4X.Tests,PathfindingTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PathfindingTests.cs,CreateTestUniverse,The following statement contains a magic number: _game = new Game(new NewGameSettings { GameName = "Pathfinding Test Game"' StartDateTime = DateTime.Now' MaxSystems = 10 });
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] basePop = new long[] { 0' 5' 10' 100' 999' 1000' 10000' 100000' 10000000 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] basePop = new long[] { 0' 5' 10' 100' 999' 1000' 10000' 100000' 10000000 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] basePop = new long[] { 0' 5' 10' 100' 999' 1000' 10000' 100000' 10000000 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] basePop = new long[] { 0' 5' 10' 100' 999' 1000' 10000' 100000' 10000000 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] basePop = new long[] { 0' 5' 10' 100' 999' 1000' 10000' 100000' 10000000 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] basePop = new long[] { 0' 5' 10' 100' 999' 1000' 10000' 100000' 10000000 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] basePop = new long[] { 0' 5' 10' 100' 999' 1000' 10000' 100000' 10000000 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] basePop = new long[] { 0' 5' 10' 100' 999' 1000' 10000' 100000' 10000000 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] infrastructureAmounts = new long[] { 0' 1' 5' 100 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: long[] infrastructureAmounts = new long[] { 0' 1' 5' 100 };
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,testPlanetAndSpecies,The following statement contains a magic number: k < 10
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,calcNewPop,The following statement contains a magic number: growthRate = -50.0;
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["N"]' 0.79f);
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["O"]' 0.20f);
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["Ar"]' 0.01f);
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: AtmosphereDB atmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: AtmosphereDB atmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: resultPlanet.GetDataBlob<SystemBodyInfoDB>().BaseTemperature = 14.0f;
Magic Number,Pulsar4X.Tests,PopulationProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\PopulationProcessorTest.cs,setAtmosphere,The following statement contains a magic number: earthBodyDB.BaseTemperature = 20.0f;
Magic Number,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,GameImportExport,The following statement contains a magic number: const int numSystems = 10;
Magic Number,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,GameImportExport,The following statement contains a magic number: Assert.AreEqual(3' entities.Count);
Magic Number,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,GameImportExport,The following statement contains a magic number: Assert.AreEqual(2' entities.Count);
Magic Number,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,CompareLoadedGameWithOrigional,The following statement contains a magic number: Game newGame = TestingUtilities.CreateTestUniverse(10' _testTime' true);
Magic Number,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,EntityImportExport,The following statement contains a magic number: _game = TestingUtilities.CreateTestUniverse(10);
Magic Number,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,StarSystemImportExport,The following statement contains a magic number: _game = TestingUtilities.CreateTestUniverse(10);
Magic Number,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,SaveGameConsistency,The following statement contains a magic number: const int maxTries = 10;
Magic Number,Pulsar4X.Tests,SerializationManagerTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SerializationManagerTests.cs,SaveGameConsistency,The following statement contains a magic number: TestingUtilities.CreateTestUniverse(10);
Magic Number,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,Init,The following statement contains a magic number: _faction.GetDataBlob<FactionTechDB>().ResearchedTechs.Add(new Guid("b8ef73c7-2ef0-445e-8461-1e0508958a0e")'3);
Magic Number,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,Init,The following statement contains a magic number: _faction.GetDataBlob<FactionTechDB>().ResearchedTechs.Add(new Guid("08fa4c4b-0ddb-4b3a-9190-724d715694de")' 3);
Magic Number,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,Init,The following statement contains a magic number: _faction.GetDataBlob<FactionTechDB>().ResearchedTechs.Add(new Guid("8557acb9-c764-44e7-8ee4-db2c2cebf0bc")' 5);
Magic Number,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,TestEngineComponentFactory,The following statement contains a magic number: designer.ComponentDesignAttributes["Size"].SetValueFromInput(250);
Magic Number,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,TestEngineComponentFactory,The following statement contains a magic number: Assert.AreEqual(250' engineDesign.Mass);
Magic Number,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,TestMineInstalationFactory,The following statement contains a magic number: Assert.AreEqual(10' mineDesign.GetAttribute<MineResourcesAtbDB>().ResourcesPerEconTick.Values.ElementAt(0));
Magic Number,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,TestCargoComponentCreation,The following statement contains a magic number: Assert.AreEqual(100' attributeDB.StorageCapacity);
Magic Number,Pulsar4X.Tests,ComponentTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipComponentTests.cs,TestFactoryComponentCreation,The following statement contains a magic number: Assert.AreEqual(100' attributeDB.ConstructionPoints[ConstructionType.ShipComponents]);
Magic Number,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,Init,The following statement contains a magic number: _faction.GetDataBlob<FactionTechDB>().ResearchedTechs.Add(new Guid("b8ef73c7-2ef0-445e-8461-1e0508958a0e")' 3);
Magic Number,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,Init,The following statement contains a magic number: _faction.GetDataBlob<FactionTechDB>().ResearchedTechs.Add(new Guid("08fa4c4b-0ddb-4b3a-9190-724d715694de")' 3);
Magic Number,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,Init,The following statement contains a magic number: _faction.GetDataBlob<FactionTechDB>().ResearchedTechs.Add(new Guid("8557acb9-c764-44e7-8ee4-db2c2cebf0bc")' 5);
Magic Number,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,TestShipCreation,The following statement contains a magic number: targetPos.X += expectedSpeed2 * 60 * 60;
Magic Number,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,TestShipCreation,The following statement contains a magic number: targetPos.X += expectedSpeed2 * 60 * 60;
Magic Number,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,TestShipCreation,The following statement contains a magic number: Assert.AreEqual(warpAbility.CurrentVectorMS.Length()' expectedSpeed2' 1.0E-15);
Magic Number,Pulsar4X.Tests,ShipEntityTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\ShipTests.cs,TestShipCreation,The following statement contains a magic number: Assert.AreEqual(distance' expectedSpeed2' 1.0E-15);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: gameSettings.MaxSystems = 10;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _coldPlanet.GetDataBlob<SystemBodyInfoDB>().BaseTemperature = -20.0f;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _hotPlanet.GetDataBlob<SystemBodyInfoDB>().BaseTemperature = 120.0f;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _lowGravPlanet.GetDataBlob<SystemBodyInfoDB>().Gravity = 0.05;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highGravPlanet.GetDataBlob<SystemBodyInfoDB>().Gravity = 5.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _humanSpecies.GetDataBlob<SpeciesDB>().TemperatureToleranceRange = 20;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _exampleSpecies.GetDataBlob<SpeciesDB>().TemperatureToleranceRange = 20;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _lowGravSpecies.GetDataBlob<SpeciesDB>().TemperatureToleranceRange = 20;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highGravSpecies.GetDataBlob<SpeciesDB>().TemperatureToleranceRange = 20;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _lowTempSpecies.GetDataBlob<SpeciesDB>().TemperatureToleranceRange = 20;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highTempSpecies.GetDataBlob<SpeciesDB>().TemperatureToleranceRange = 20;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _lowGravSpecies.GetDataBlob<SpeciesDB>().BaseGravity = 0.4;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _lowGravSpecies.GetDataBlob<SpeciesDB>().MaximumGravityConstraint = 0.5;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _lowGravSpecies.GetDataBlob<SpeciesDB>().MinimumGravityConstraint = 0.01;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highGravSpecies.GetDataBlob<SpeciesDB>().BaseGravity = 4.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highGravSpecies.GetDataBlob<SpeciesDB>().MaximumGravityConstraint = 5.5;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highGravSpecies.GetDataBlob<SpeciesDB>().MinimumGravityConstraint = 4.5;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _lowTempSpecies.GetDataBlob<SpeciesDB>().BaseTemperature = -50.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _lowTempSpecies.GetDataBlob<SpeciesDB>().MinimumTemperatureConstraint = -100.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highTempSpecies.GetDataBlob<SpeciesDB>().BaseTemperature = 200.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highTempSpecies.GetDataBlob<SpeciesDB>().MaximumTemperatureConstraint = 300.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,Init,The following statement contains a magic number: _highTempSpecies.GetDataBlob<SpeciesDB>().MinimumTemperatureConstraint = 100.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: expectedCost = 2.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(_gasDictionary[gasSym]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: expectedCost = 3.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(_gasDictionary[gasSym]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: expectedCost = 2.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(_gasDictionary[gasSym]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: expectedCost = 2.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(lowToxicGases[gasSym1]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(lowToxicGases[gasSym2]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: expectedCost = 3.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(highToxicGases[gasSym1]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(highToxicGases[gasSym2]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: expectedCost = 3.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(lowToxicGases[gasSym1]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: atmoGasses.Add(highToxicGases[gasSym2]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyToxicityCost,The following statement contains a magic number: weirdAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["N"]' (float)(2.0f * i));
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: totalPressure = 2.0f * i;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["O"]' 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: totalPressure += 0.1f;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: testAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: testAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: expected = 2.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: totalPressure > 4.0
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyPressureCost,The following statement contains a magic number: i < 10.0
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyTemperatureCost,The following statement contains a magic number: expected = Math.Abs((idealTemp + 273.15) - (temp + 273.15)) / tempRange;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyTemperatureCost,The following statement contains a magic number: expected = Math.Abs((idealTemp + 273.15) - (temp + 273.15)) / tempRange;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyTemperatureCost,The following statement contains a magic number: temp < 500
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: i + j > 40
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["N"]' i * 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["O"]' j * 0.1f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: testAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: testAtmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: expected = 2.0;
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: j < 1|| j > 3
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: j < 20
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,testColonyGasCost,The following statement contains a magic number: i < 40
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["N"]' 0.79f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["O"]' 0.20f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: atmoGasses.Add(_gasDictionary["Ar"]' 0.01f);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: AtmosphereDB atmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,setEarthPlanet,The following statement contains a magic number: AtmosphereDB atmosphereDB = new AtmosphereDB(1f' true' 71' 1f' 1f' 57.2f' atmoGasses);
Magic Number,Pulsar4X.Tests,SpeciesProcessorTest,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SpeciesProcessorTest.cs,setAtmosphere,The following statement contains a magic number: earthBodyDB.BaseTemperature = 20.0f;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The following statement contains a magic number: gas.BoilingPoint = 100;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The following statement contains a magic number: gas.BoilingPoint = 100;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The following statement contains a magic number: min.Abundance.Add(BodyType.Asteroid' 0.01);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The following statement contains a magic number: min.Abundance.Add(BodyType.Comet' 0.05);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The following statement contains a magic number: min.Abundance.Add(BodyType.DwarfPlanet' 0.075);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The following statement contains a magic number: min.Abundance.Add(BodyType.GasDwarf' 0.1);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The following statement contains a magic number: min.Abundance.Add(BodyType.IceGiant' 0.5);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestExport,The following statement contains a magic number: min.Abundance.Add(BodyType.Moon' 0.5);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestRefinedMatsSave,The following statement contains a magic number: soriumFuel.RefineryPointCost = 10;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestRefinedMatsSave,The following statement contains a magic number: DepleatedDuranuim.RawMineralCosts.Add(new Guid("2dfc78ea-f8a4-4257-bc04-47279bf104ef")' 5);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestRefinedMatsSave,The following statement contains a magic number: DepleatedDuranuim.RefineryPointCost = 20;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestRefinedMatsSave,The following statement contains a magic number: DepleatedDuranuim.OutputAmount = 6;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestTechSave,The following statement contains a magic number: enginePowerModMax.MaxLevel = 7;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestTechSave,The following statement contains a magic number: enginePowerModMin.MaxLevel = 7;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestTechSave,The following statement contains a magic number: fuelUsage.MaxLevel = 12;
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestJdicExtension,The following statement contains a magic number: dict.SafeValueAdd(1' 2);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestJdicExtension,The following statement contains a magic number: dict.SafeValueAdd(2' 5);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestJdicExtension,The following statement contains a magic number: dict.SafeValueAdd(2' 5);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestJdicExtension,The following statement contains a magic number: Assert.AreEqual(dict[1]' 3);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestJdicExtension,The following statement contains a magic number: Assert.AreEqual(dict[2]' 5);
Magic Number,Pulsar4X.Tests,StaticDataTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\StaticDataTests.cs,TestJdicExtension,The following statement contains a magic number: Assert.AreEqual(dict[2]' 5);
Magic Number,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,CreateAndFillStarSystem,The following statement contains a magic number: var system = ssf.CreateSystem(_game' "Argon Prime"' 12345);
Magic Number,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,PerformanceTest,The following statement contains a magic number: const int numSystems = 1000;
Magic Number,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,PerformanceTest,The following statement contains a magic number: double totalMemory = (endMemory - startMemory) / 1024.0;
Magic Number,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,PerformanceTest,The following statement contains a magic number: string output = $"Total run time: {totalTime.ToString("N4")}s' per system: {(totalTime / numSystems * 1000).ToString("N2")}ms.\ntotal memory used: {(totalMemory / 1024.0).ToString("N2")} MB' per system: {(totalMemory / numSystems).ToString("N2")} KB.\nTotal Entities: {totalEntities}' per system: {totalEntities / (float)numSystems}.\nMemory per entity: {(totalMemory / totalEntities).ToString("N2")}KB";
Magic Number,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,PerformanceTest,The following statement contains a magic number: string output = $"Total run time: {totalTime.ToString("N4")}s' per system: {(totalTime / numSystems * 1000).ToString("N2")}ms.\ntotal memory used: {(totalMemory / 1024.0).ToString("N2")} MB' per system: {(totalMemory / numSystems).ToString("N2")} KB.\nTotal Entities: {totalEntities}' per system: {totalEntities / (float)numSystems}.\nMemory per entity: {(totalMemory / totalEntities).ToString("N2")}KB";
Magic Number,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,JPConnectivity,The following statement contains a magic number: const int numSystems = 2000;
Magic Number,Pulsar4X.Tests,SystemGenTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\SystemGenTests.cs,JPConnectivity,The following statement contains a magic number: Console.WriteLine($"Number of systems with {index} JumpPoints: {d} ({d / (double)numSystems * 100d}% of all systems)");
Magic Number,Pulsar4X.Tests,TestingUtilities,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\TestingUtilities.cs,BasicSol,The following statement contains a magic number: double parentMass = 1.989e30;
Magic Number,Pulsar4X.Tests,TestingUtilities,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\TestingUtilities.cs,BasicSol,The following statement contains a magic number: BaseDataBlob[] parentblobs = new BaseDataBlob[3];
Magic Number,Pulsar4X.Tests,TestingUtilities,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\TestingUtilities.cs,BasicSol,The following statement contains a magic number: parentblobs[2] = new OrbitDB();
Magic Number,Pulsar4X.Tests,TestingUtilities,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\TestingUtilities.cs,BasicEarth,The following statement contains a magic number: double parentMass = 5.97237e24;
Magic Number,Pulsar4X.Tests,TestingUtilities,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\TestingUtilities.cs,BasicEarth,The following statement contains a magic number: BaseDataBlob[] parentblobs = new BaseDataBlob[3];
Magic Number,Pulsar4X.Tests,TestingUtilities,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\TestingUtilities.cs,BasicEarth,The following statement contains a magic number: parentblobs[2] = new OrbitDB();
Magic Number,Pulsar4X.Tests,UnitHelperTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\UnitHelperTests.cs,AngleConversionTest,The following statement contains a magic number: Assert.That(Angle.ToRadians(from)' Is.EqualTo(to).Within(0.0000000001));
Magic Number,Pulsar4X.Tests,UnitHelperTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\UnitHelperTests.cs,TemperatureConversionTest,The following statement contains a magic number: Assert.That(Temperature.ToKelvin(from)' Is.EqualTo(to).Within(0.000000001));
Magic Number,Pulsar4X.Tests,UnitHelperTests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\UnitHelperTests.cs,TemperatureConversionTest,The following statement contains a magic number: Assert.That(Temperature.ToKelvin(from)' Is.EqualTo(to).Within(0.0001));
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Init,The following statement contains a magic number: vec1 = new Vector3(0' 1' 2);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Init,The following statement contains a magic number: vec2 = new Vector3(2' 1' 0);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Addition,The following statement contains a magic number: Assert.That(vec1 + vec2' Is.EqualTo(new Vector3(2' 2' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Addition,The following statement contains a magic number: Assert.That(vec1 + vec2' Is.EqualTo(new Vector3(2' 2' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Addition,The following statement contains a magic number: Assert.That(vec1 + vec2' Is.EqualTo(new Vector3(2' 2' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Addition,The following statement contains a magic number: Assert.That(Vector3.Add(vec1' vec2)' Is.EqualTo(new Vector3(2' 2' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Addition,The following statement contains a magic number: Assert.That(Vector3.Add(vec1' vec2)' Is.EqualTo(new Vector3(2' 2' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Addition,The following statement contains a magic number: Assert.That(Vector3.Add(vec1' vec2)' Is.EqualTo(new Vector3(2' 2' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Subtraction,The following statement contains a magic number: Assert.That(vec1 - vec2' Is.EqualTo(new Vector3(-2' 0' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Subtraction,The following statement contains a magic number: Assert.That(vec1 - vec2' Is.EqualTo(new Vector3(-2' 0' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Subtraction,The following statement contains a magic number: Assert.That(Vector3.Subtract(vec1' vec2)' Is.EqualTo(new Vector3(-2' 0' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Subtraction,The following statement contains a magic number: Assert.That(Vector3.Subtract(vec1' vec2)' Is.EqualTo(new Vector3(-2' 0' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(vec1 * 2' Is.EqualTo(new Vector3(0.0' 2.0' 4.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(vec1 * 2' Is.EqualTo(new Vector3(0.0' 2.0' 4.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(vec1 * 2' Is.EqualTo(new Vector3(0.0' 2.0' 4.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(3 * vec1' Is.EqualTo(new Vector3(0.0' 3.0' 6.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(3 * vec1' Is.EqualTo(new Vector3(0.0' 3.0' 6.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(3 * vec1' Is.EqualTo(new Vector3(0.0' 3.0' 6.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(Vector3.Multiply(vec1' 2)' Is.EqualTo(new Vector3(0.0' 2.0' 4.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(Vector3.Multiply(vec1' 2)' Is.EqualTo(new Vector3(0.0' 2.0' 4.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(Vector3.Multiply(vec1' 2)' Is.EqualTo(new Vector3(0.0' 2.0' 4.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(Vector3.Multiply(3' vec1)' Is.EqualTo(new Vector3(0.0' 3.0' 6.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(Vector3.Multiply(3' vec1)' Is.EqualTo(new Vector3(0.0' 3.0' 6.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Multiplication,The following statement contains a magic number: Assert.That(Vector3.Multiply(3' vec1)' Is.EqualTo(new Vector3(0.0' 3.0' 6.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(vec1 / vec2' Is.EqualTo(new Vector3(0.5' 1' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(vec1 / vec2' Is.EqualTo(new Vector3(0.5' 1' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(vec1 / 2' Is.EqualTo(new Vector3(0.5' 0.5' 1)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(vec1 / 2' Is.EqualTo(new Vector3(0.5' 0.5' 1)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(vec1 / 2' Is.EqualTo(new Vector3(0.5' 0.5' 1)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(Vector3.Divide(vec1' vec2)' Is.EqualTo(new Vector3(0.5' 1' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(Vector3.Divide(vec1' vec2)' Is.EqualTo(new Vector3(0.5' 1' 2)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(Vector3.Divide(vec1' 2)' Is.EqualTo(new Vector3(0.5' 0.5' 1)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(Vector3.Divide(vec1' 2)' Is.EqualTo(new Vector3(0.5' 0.5' 1)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Division,The following statement contains a magic number: Assert.That(Vector3.Divide(vec1' 2)' Is.EqualTo(new Vector3(0.5' 0.5' 1)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Length,The following statement contains a magic number: Assert.That(vec1.Length()' Is.EqualTo(Math.Sqrt(3.0)).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Length,The following statement contains a magic number: Assert.That(vec1.LengthSquared()' Is.EqualTo(3.0).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Length,The following statement contains a magic number: Assert.That(vec2.LengthSquared()' Is.EqualTo(5.0).Within(1).Ulps);
Magic Number,Pulsar4X.Tests,Vector3Tests,C:\research\architectureSmells\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.Tests\Vector3Tests.cs,Length,The following statement contains a magic number: Assert.That(vec2.Length()' Is.EqualTo(Math.Sqrt(5)).Within(1).Ulps);
