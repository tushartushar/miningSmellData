Implementation smell,Namespace,Class,File,Method,Description
Long Method,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,LoadGLFont,The method has 114 lines of code.
Complex Method,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,EntityIcon,Cyclomatic complexity of the method is 8
Complex Method,Pulsar4X.CrossPlatformUI.Views,IconCollection,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\IconCollection.cs,TextIconsDistribute,Cyclomatic complexity of the method is 9
Long Parameter List,Pulsar4X.CrossPlatformUI.GLUtilities,GLFont,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLFont.cs,GLFont,The method has 6 parameters. Parameters: a_oEffect' a_v3Pos' a_v2Size' a_oColor' a_szFontDataFile' a_szText
Long Parameter List,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,GLLine,The method has 5 parameters. Parameters: a_oEffect' a_v3Pos' a_v2Size' a_oColor' a_szTexture
Long Parameter List,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The method has 5 parameters. Parameters: a_oEffect' a_v3Pos' a_v2Size' a_oColor' a_szTexture
Long Identifier,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,,The length of the parameter DEFAULT_STRING_TEXTURE_WIDTH_PER_CHAR is 37.
Long Identifier,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,,The length of the parameter DEFAULT_STRING_TEXTURE_HEIGHT_PER_CHAR is 38.
Long Statement,Pulsar4X.CrossPlatformUI.Commands,ComponentTemplateViewCMD,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Commands\ComponentTemplateViewCMD.cs,OnExecuted,The length of the statement  "            mw.AddOrSelectTabPanel("Component Template"' new Views.ComponentTemplateDesigner.ComponentTemplateDesignerParentView(designVM)); " is 128.
Long Statement,Pulsar4X.CrossPlatformUI.Commands,LoadGame,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Commands\LoadGame.cs,OnExecuted,The length of the statement  "                DialogResult result = MessageBox.Show("Would you like to save the current game?"' MessageBoxButtons.YesNo' MessageBoxType.Question' MessageBoxDefaultButton.Yes); " is 161.
Long Statement,Pulsar4X.CrossPlatformUI.Commands,NewGame,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Commands\NewGame.cs,OnExecuted,The length of the statement  "                DialogResult result = MessageBox.Show("Would you like to save the current game?"' "Save game?"' MessageBoxButtons.YesNoCancel' MessageBoxType.Question' MessageBoxDefaultButton.Yes); " is 181.
Long Statement,Pulsar4X.CrossPlatformUI,MainForm,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\MainForm.cs,OnClosing,The length of the statement  "                var result = MessageBox.Show("Would you like to save the game before exiting?"' MessageBoxButtons.YesNoCancel' MessageBoxType.Question' MessageBoxDefaultButton.Yes); " is 165.
Long Statement,Pulsar4X.CrossPlatformUI,OpenGLRenderer,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Lib\OpenGLRenderer.cs,LoadScenes,The length of the statement  "                    //GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(scene.mesh.vertices.Count * Vector3.SizeInBytes)' scene.mesh.vertices.ToArray()' BufferUsageHint.StaticDraw); " is 160.
Long Statement,Pulsar4X.CrossPlatformUI,OpenGLRenderer,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Lib\OpenGLRenderer.cs,LoadScenes,The length of the statement  "                    //GL.BufferData(BufferTarget.ElementArrayBuffer' (IntPtr)(scene.mesh.indices.Count * sizeof(uint))' scene.mesh.indices.ToArray()' BufferUsageHint.StaticDraw); " is 158.
Long Statement,Pulsar4X.CrossPlatformUI,OpenGLRenderer,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Lib\OpenGLRenderer.cs,LoadScenes,The length of the statement  "                    //GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(scene.position_data.Count * Vector3.SizeInBytes)' IntPtr.Zero' BufferUsageHint.StreamDraw); " is 142.
Long Statement,Pulsar4X.CrossPlatformUI,OpenGLRenderer,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Lib\OpenGLRenderer.cs,Draw,The length of the statement  "                GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(scene.position_data.Count * Vector3.SizeInBytes)' IntPtr.Zero' BufferUsageHint.StreamDraw); " is 140.
Long Statement,Pulsar4X.CrossPlatformUI,OpenGLRenderer,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Lib\OpenGLRenderer.cs,Draw,The length of the statement  "                GL.BufferSubData(BufferTarget.ArrayBuffer' IntPtr.Zero' (IntPtr)(scene.position_data.Count * Vector3.SizeInBytes)' scene.position_data.ToArray()); " is 146.
Long Statement,Pulsar4X.CrossPlatformUI,OpenGLRenderer,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Lib\OpenGLRenderer.cs,Draw,The length of the statement  "                GL.DrawElementsInstanced(PrimitiveType.Triangles' scene.mesh.indices.Count' DrawElementsType.UnsignedInt' IntPtr.Zero' scene.position_data.Count); " is 146.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,UpdateVBOs,The length of the statement  "            GL.BufferSubData<GLVertex>(BufferTarget.ArrayBuffer' IntPtr.Zero' new IntPtr(m_aoVerticies.Length * GLVertex.SizeInBytes())' m_aoVerticies); " is 140.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,UpdateVBOs,The length of the statement  "            //GL.BindBuffer(BufferTarget.ArrayBuffer' m_uiVertexBufferHandle);// Lets Open GL know that this is the current active buffer object. " is 133.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,UpdateVBOs,The length of the statement  "            //GL.BufferData<GLVertex>(BufferTarget.ArrayBuffer' new IntPtr(m_aoVerticies.Length * GLVertex.SizeInBytes())' m_aoVerticies' BufferUsageHint.StaticDraw); // tells OpenGL about the structure of the data. " is 203.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,UpdateVBOs,The length of the statement  "            //GL.BindBuffer(BufferTarget.ElementArrayBuffer' m_uiIndexBufferHandle); // Lets Open GL know that this is the current active buffer object. " is 140.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,UpdateVBOs,The length of the statement  "            //GL.BufferData(BufferTarget.ElementArrayBuffer' new IntPtr(m_auiIndicies.Length * sizeof(ushort))' m_auiIndicies' BufferUsageHint.StaticDraw); // Tells OpenGL how the data is structured. " is 187.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,UpdateVBOs,The length of the statement  "            GL.BindBuffer(BufferTarget.ArrayBuffer' m_uiVertexBufferHandle);// Lets Open GL know that this is the current active buffer object. " is 131.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,UpdateVBOs,The length of the statement  "            GL.BufferData<GLVertex>(BufferTarget.ArrayBuffer' new IntPtr(m_aoVerticies.Length * GLVertex.SizeInBytes())' m_aoVerticies' BufferUsageHint.StaticDraw); // tells OpenGL about the structure of the data. " is 201.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,UpdateVBOs,The length of the statement  "            GL.BindBuffer(BufferTarget.ElementArrayBuffer' m_uiIndexBufferHandle); // Lets Open GL know that this is the current active buffer object. " is 138.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,UpdateVBOs,The length of the statement  "            GL.BufferData(BufferTarget.ElementArrayBuffer' new IntPtr(m_auiIndicies.Length * sizeof(ushort))' m_auiIndicies' BufferUsageHint.StaticDraw); // Tells OpenGL how the data is structured. " is 185.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,LoadTexture,The length of the statement  "            System.Drawing.Imaging.BitmapData oRawTextureData = oTextureBitmap.LockBits(new Rectangle(0' 0' oTextureBitmap.Width' oTextureBitmap.Height)' " is 141.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,LoadTexture,The length of the statement  "            GL.TexImage2D(TextureTarget.Texture2D' 0' PixelInternalFormat.Rgba' oTextureBitmap.Width' oTextureBitmap.Height' 0' PixelFormat.Rgba' PixelType.UnsignedByte' oRawTextureData.Scan0); " is 181.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,GenStringTexture,The length of the statement  "            a_v2Size.X = a_szString.Length * DEFAULT_STRING_TEXTURE_WIDTH_PER_CHAR; // Calcs the texture width based on no of chars. " is 120.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,GenStringTexture,The length of the statement  "            System.Drawing.Imaging.BitmapData oBitmapData = oStringBitmap.LockBits(new Rectangle(0' 0' oStringBitmap.Width' oStringBitmap.Height)' " is 134.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,LoadGLFont,The length of the statement  "                    /// All of the System.Globalization stuff is due ot the fact that the default float.TryParse behaves differently on different computers. thanks microsoft. " is 154.
Long Statement,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,LoadGLFont,The length of the statement  "                        logger.Info("ResourceManager.cs Char: " + szBuffer + " Coordinates: " + oUVCoords.m_v2UVMin.X + "/" + oUVCoords.m_v2UVMin.Y + "'" + oUVCoords.m_v2UVMax.X + "/" + oUVCoords.m_v2UVMax.Y + " is 185.
Long Statement,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The length of the statement  "                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit); " is 134.
Long Statement,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The length of the statement  "                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit); " is 134.
Long Statement,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The length of the statement  "                sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit); " is 126.
Long Statement,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The length of the statement  "                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit); " is 166.
Long Statement,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The length of the statement  "                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit); " is 166.
Long Statement,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The length of the statement  "                sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit); " is 158.
Long Statement,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,DrawMe,The length of the statement  "            g.DrawText(font' color'  _camera.ViewPortSize.Width - offsetRight - sizeAndLabel.Key' _camera.ViewPortSize.Height - TextOffsetBottom' sizeAndLabel.Value); " is 154.
Long Statement,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,DrawMe,The length of the statement  "            if (_entity.HasDataBlob<PropulsionDB>()) //this seems a little hacky way to get this specific thing to redraw each update. " is 122.
Long Statement,Pulsar4X.CrossPlatformUI.Views,NewGame,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\NewGame.xeto.cs,BindControls,The length of the statement  "			var NumberOfSystemsBinding = (new BindableBinding<NumericUpDown' double>(NumberOfSystems' c => c.Value' (c' v) => c.Value = v)); " is 128.
Long Statement,Pulsar4X.CrossPlatformUI.Views,NewGame,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\NewGame.xeto.cs,MoveModDownButton_Click,The length of the statement  "			if (SelectedModsList.SelectedValue != null && SelectedModsList.SelectedIndex != new_game_options.SelectedModList.Count - 1) { " is 125.
Long Statement,Pulsar4X.CrossPlatformUI.Views,IconCollection,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\IconCollection.cs,TextIconsDistribute,The length of the statement  "                int lowestPosIndex = occupiedPosition.BinarySearch(TextIconList[i].ViewDisplayRect + new Point(0'(int)TextIconList[i].ViewNameSize.Height) ' byViewPos); " is 152.
Long Statement,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,GetStartArcAngle,The length of the statement  "            Vector4 pos = _bodyPositionDB.AbsolutePosition - _parentPositionDB.AbsolutePosition; //adjust so moons get the right positions     " is 126.
Long Statement,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,DrawMe,The length of the statement  "            PointF boundingBoxTopLeft = new PointF((float)_parentPositionDB.AbsolutePosition.X * _camera.ZoomLevel' (float)_parentPositionDB.AbsolutePosition.Y * _camera.ZoomLevel); " is 169.
Long Statement,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,DrawMe,The length of the statement  "            PointF bodyPos = new PointF((float)_bodyPositionDB.AbsolutePosition.X * _camera.ZoomLevel' (float)_bodyPositionDB.AbsolutePosition.Y * _camera.ZoomLevel); " is 154.
Long Statement,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHintMinMax,The length of the statement  "            minFormula.GotFocus += (sender' e) => ((ComponentTemplateDesignerBaseVM)DataContext).SubControlInFocus = FocusedControl.MinControl;             " is 131.
Long Statement,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHintMinMax,The length of the statement  "            maxFormula.GotFocus += (sender' e) => ((ComponentTemplateDesignerBaseVM)DataContext).SubControlInFocus = FocusedControl.MaxControl; " is 131.
Long Statement,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHintMinMax,The length of the statement  "            stepFormula.GotFocus += (sender' e) => ((ComponentTemplateDesignerBaseVM)DataContext).SubControlInFocus = FocusedControl.StepControl; " is 133.
Long Statement,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHintNone,The length of the statement  "            //label.Text = "Does Not display anything' however' \r\nAbilityFormula still works 'under the hood' \r\nOr use in conjunction with Datablob type and args"; " is 155.
Long Statement,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateDesignerParentView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateDesignerParentView.xeto.cs,RefreshAbilityList,The length of the statement  "            //can be removed when the next version of eto.forms comes out as of this writing we're using 2.2 (it's fixed in the dev version of eto.forms) " is 141.
Long Statement,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateMainPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateMainPropertiesView.xeto.cs,SetViewModel,The length of the statement  "                //chkbx.CheckedBinding.BindDataContext((DictionaryVM<ECSLib.ComponentMountType' bool?' bool?> x) => x[kvp.Key]' (m' val) => m[kvp.Key] = val); " is 142.
Long Statement,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateMainPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateMainPropertiesView.xeto.cs,SetViewModel,The length of the statement  "                chkbx.CheckedBinding.BindDataContext((ObservableDictionary<ECSLib.ComponentMountType' bool?> x) => x[key]' (m' val) => m[key] = val); " is 133.
Complex Conditional,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,LoadGLFont,The conditional expression  "r1 == false || r2 == false || r3 == false || r4 == false"  is complex.
Empty Catch Block,Pulsar4X.CrossPlatformUI.GLUtilities,ResourceManager,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\ResourceManager.cs,LoadGLFont,The method has an empty catch block.
Magic Number,Pulsar4X.CrossPlatformUI,MainForm,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\MainForm.cs,MainForm,The following statement contains a magic number: ClientSize = new Size(600' 400);
Magic Number,Pulsar4X.CrossPlatformUI,MainForm,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\MainForm.cs,MainForm,The following statement contains a magic number: ClientSize = new Size(600' 400);
Magic Number,Pulsar4X.CrossPlatformUI,OpenGLRenderer,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Lib\OpenGLRenderer.cs,Draw,The following statement contains a magic number: foreach (var scene_kv in data.scenes)              {                  var scene = scene_kv.Value;                  var view_projection = scene.camera.GetViewProjectionMatrix();                  GL.UniformMatrix4(VP_Matrix_Unif' 1' false' ref view_projection.Row0.X);                  GL.BindBuffer(BufferTarget.ArrayBuffer' scene.position_buffer_id);                  // Write null to avoid implicit sync                  GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(scene.position_data.Count * Vector3.SizeInBytes)' IntPtr.Zero' BufferUsageHint.StreamDraw);                  GL.BufferSubData(BufferTarget.ArrayBuffer' IntPtr.Zero' (IntPtr)(scene.position_data.Count * Vector3.SizeInBytes)' scene.position_data.ToArray());                    // 2nd attribute buffer : instance position vectors                  GL.BindBuffer(BufferTarget.ArrayBuffer' scene.position_buffer_id);                  GL.EnableVertexAttribArray(1);                  GL.VertexAttribPointer(1' 3' VertexAttribPointerType.Float' false' 0' 0);                    GL.VertexAttribDivisor(1' 1); // positions : one per quad (its center) -> 1                    GL.DrawElementsInstanced(PrimitiveType.Triangles' scene.mesh.indices.Count' DrawElementsType.UnsignedInt' IntPtr.Zero' scene.position_data.Count);              }
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffect,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffect.cs,SetModelMatrix,The following statement contains a magic number: GL.UniformMatrix4(m_aiShaderMatrixLocations[2]' false' ref a_m4Model);
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffect,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffect.cs,StartUsing,The following statement contains a magic number: GL.UniformMatrix4(m_aiShaderMatrixLocations[2]' false' ref a_m4Model);
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffect,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffect.cs,StartUsing,The following statement contains a magic number: GL.UniformMatrix4(m_aiShaderMatrixLocations[2]' false' ref a_m4Model);
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffectBasic21,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffectBasic21.cs,GLEffectBasic21,The following statement contains a magic number: GL.BindAttribLocation(m_iShaderProgramHandle' 2' "UVCord");
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffectBasic21,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffectBasic21.cs,GLEffectBasic21,The following statement contains a magic number: m_aiShaderMatrixLocations = new int[3];
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffectBasic21,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffectBasic21.cs,GLEffectBasic21,The following statement contains a magic number: m_aiShaderMatrixLocations[2] = GL.GetUniformLocation(m_iShaderProgramHandle' "ModelMatrix");
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffectBasic30,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffectBasic30.cs,GLEffectBasic30,The following statement contains a magic number: GL.BindAttribLocation(m_iShaderProgramHandle' 2' "UVCord");
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffectBasic30,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffectBasic30.cs,GLEffectBasic30,The following statement contains a magic number: m_aiShaderMatrixLocations = new int[3];
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLEffectBasic30,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLEffectBasic30.cs,GLEffectBasic30,The following statement contains a magic number: m_aiShaderMatrixLocations[2] = GL.GetUniformLocation(m_iShaderProgramHandle' "ModelMatrix");
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLFont,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLFont.cs,UpdateUVCoords,The following statement contains a magic number: for (int i = 0; i < iCharsToDraw; ++i)              {                  if (m_oFontData.m_dicCharMap.TryGetValue(caText[i]' out oGLUVCoords))                  {                      // noew set UV coords as required:                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }                  else                  {                      m_oFontData.m_dicCharMap.TryGetValue(' '' out oGLUVCoords); // get value for space!                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }              }
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLFont,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLFont.cs,UpdateUVCoords,The following statement contains a magic number: for (int i = 0; i < iCharsToDraw; ++i)              {                  if (m_oFontData.m_dicCharMap.TryGetValue(caText[i]' out oGLUVCoords))                  {                      // noew set UV coords as required:                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }                  else                  {                      m_oFontData.m_dicCharMap.TryGetValue(' '' out oGLUVCoords); // get value for space!                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }              }
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLFont,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLFont.cs,UpdateUVCoords,The following statement contains a magic number: for (int i = 0; i < iCharsToDraw; ++i)              {                  if (m_oFontData.m_dicCharMap.TryGetValue(caText[i]' out oGLUVCoords))                  {                      // noew set UV coords as required:                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }                  else                  {                      m_oFontData.m_dicCharMap.TryGetValue(' '' out oGLUVCoords); // get value for space!                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }              }
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLFont,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLFont.cs,UpdateUVCoords,The following statement contains a magic number: for (int i = 0; i < iCharsToDraw; ++i)              {                  if (m_oFontData.m_dicCharMap.TryGetValue(caText[i]' out oGLUVCoords))                  {                      // noew set UV coords as required:                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }                  else                  {                      m_oFontData.m_dicCharMap.TryGetValue(' '' out oGLUVCoords); // get value for space!                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }              }
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLFont,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLFont.cs,UpdateUVCoords,The following statement contains a magic number: for (int i = 0; i < iCharsToDraw; ++i)              {                  if (m_oFontData.m_dicCharMap.TryGetValue(caText[i]' out oGLUVCoords))                  {                      // noew set UV coords as required:                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }                  else                  {                      m_oFontData.m_dicCharMap.TryGetValue(' '' out oGLUVCoords); // get value for space!                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }              }
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLFont,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLFont.cs,UpdateUVCoords,The following statement contains a magic number: for (int i = 0; i < iCharsToDraw; ++i)              {                  if (m_oFontData.m_dicCharMap.TryGetValue(caText[i]' out oGLUVCoords))                  {                      // noew set UV coords as required:                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }                  else                  {                      m_oFontData.m_dicCharMap.TryGetValue(' '' out oGLUVCoords); // get value for space!                      m_lQuads[i].Verticies[0].m_v2UV.X = oGLUVCoords.m_v2UVMin.X;    // 0' 1                      m_lQuads[i].Verticies[0].m_v2UV.Y = oGLUVCoords.m_v2UVMax.Y;    // 0' 1                      m_lQuads[i].Verticies[1].m_v2UV = oGLUVCoords.m_v2UVMax;    // 1' 1                      m_lQuads[i].Verticies[2].m_v2UV = oGLUVCoords.m_v2UVMin;    // 0' 0                      m_lQuads[i].Verticies[3].m_v2UV.X = oGLUVCoords.m_v2UVMax.X;    // 1 ' 0                      m_lQuads[i].Verticies[3].m_v2UV.Y = oGLUVCoords.m_v2UVMin.Y;    // 1 ' 0                      m_lQuads[i].UpdateVBOs();                  }              }
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,GLLine,The following statement contains a magic number: m_aoVerticies = new GLVertex[2];
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,GLLine,The following statement contains a magic number: m_auiIndicies = new ushort[2];
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,GLLine,The following statement contains a magic number: GL.VertexAttribPointer(0' 4' VertexAttribPointerType.Float' false' GLVertex.SizeInBytes()' 0);
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,GLLine,The following statement contains a magic number: GL.VertexAttribPointer(1' 4' VertexAttribPointerType.Float' true' GLVertex.SizeInBytes()' Vector4.SizeInBytes);
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,GLLine,The following statement contains a magic number: GL.VertexAttribPointer(2' 2' VertexAttribPointerType.Float' false' GLVertex.SizeInBytes()' (Vector4.SizeInBytes + Vector4.SizeInBytes));
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,GLLine,The following statement contains a magic number: GL.VertexAttribPointer(2' 2' VertexAttribPointerType.Float' false' GLVertex.SizeInBytes()' (Vector4.SizeInBytes + Vector4.SizeInBytes));
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLLine,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLLine.cs,GLLine,The following statement contains a magic number: GL.EnableVertexAttribArray(2);
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: m_aoVerticies = new GLVertex[4];
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: m_aoVerticies[2] = new GLVertex(new Vector4(-0.5f' 0.5f * fYScale' 0.0f' 1.0f)' a_oColor' new Vector2(0.0f' 0.0f));
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: m_aoVerticies[3] = new GLVertex(new Vector4(0.5f' 0.5f * fYScale' 0.0f' 1.0f)' a_oColor' new Vector2(1.0f' 0.0f));
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: m_auiIndicies = new ushort[4];
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: m_auiIndicies[2] = 2;
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: m_auiIndicies[2] = 2;
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: m_auiIndicies[3] = 3;
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: m_auiIndicies[3] = 3;
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: GL.VertexAttribPointer(0' 4' VertexAttribPointerType.Float' false' GLVertex.SizeInBytes()' 0);
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: GL.VertexAttribPointer(1' 4' VertexAttribPointerType.Float' true' GLVertex.SizeInBytes()' Vector4.SizeInBytes);
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: GL.VertexAttribPointer(2' 2' VertexAttribPointerType.Float' false' GLVertex.SizeInBytes()' (Vector4.SizeInBytes + Vector4.SizeInBytes));
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: GL.VertexAttribPointer(2' 2' VertexAttribPointerType.Float' false' GLVertex.SizeInBytes()' (Vector4.SizeInBytes + Vector4.SizeInBytes));
Magic Number,Pulsar4X.CrossPlatformUI.GLUtilities,GLQuad,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\GLUtilities\GLQuad.cs,GLQuad,The following statement contains a magic number: GL.EnableVertexAttribArray(2);
Magic Number,Pulsar4X.CrossPlatformUI.Views,SysInfo1dMap,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SysInfo1dMap.xeto.cs,OnPaint,The following statement contains a magic number: if (_cam != null)              {                  _cam.WorldOffset(new PointF(-Width / 2' -Height / 2));              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,SysInfo1dMap,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SysInfo1dMap.xeto.cs,OnPaint,The following statement contains a magic number: if (_cam != null)              {                  _cam.WorldOffset(new PointF(-Width / 2' -Height / 2));              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,SysInfo1dMap,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SysInfo1dMap.xeto.cs,OnPaint,The following statement contains a magic number: icon.DrawMe(e.Graphics' new PointF(8 * xIndex' 8 * yIndex));
Magic Number,Pulsar4X.CrossPlatformUI.Views,SysInfo1dMap,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SysInfo1dMap.xeto.cs,OnPaint,The following statement contains a magic number: icon.DrawMe(e.Graphics' new PointF(8 * xIndex' 8 * yIndex));
Magic Number,Pulsar4X.CrossPlatformUI.Views,SysInfo1dMap,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SysInfo1dMap.xeto.cs,RecursiveDraw,The following statement contains a magic number: icon.DrawMe(g' new PointF(16 * xIndex' 16 * yIndex));
Magic Number,Pulsar4X.CrossPlatformUI.Views,SysInfo1dMap,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SysInfo1dMap.xeto.cs,RecursiveDraw,The following statement contains a magic number: icon.DrawMe(g' new PointF(16 * xIndex' 16 * yIndex));
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,ScaleIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\ScaleIcon.cs,calcLabelAndSize,The following statement contains a magic number: if (MinWorldLength > 0.001)              {                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 5)' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength / 2)' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)nearestWorldLength)' nearestWorldLength + unit);                  return;                }              else              {                  MinWorldLength = _camera.WorldDistance(ScaleMinLength) * GameConstants.Units.KmPerAu;                  unit = " km";                  nearestWorldLength = Math.Pow(10' Math.Ceiling(Math.Log10(MinWorldLength)));                  if (nearestWorldLength / 5 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 5))' nearestWorldLength / 5 + unit);                      return;                  }                    if (nearestWorldLength / 2 > MinWorldLength)                  {                      sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu / 2))' nearestWorldLength / 2 + unit);                      return;                  }                    sizeAndLabel = new KeyValuePair<int' string>((int)_camera.ViewDistance((float)(nearestWorldLength / GameConstants.Units.KmPerAu))' nearestWorldLength + unit);                  return;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float width = 8;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float height = 8;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: path.AddEllipse(-2' -2' 4' 4);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: path.AddEllipse(-2' -2' 4' 4);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: path.AddEllipse(-2' -2' 4' 4);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: path.AddEllipse(-2' -2' 4' 4);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: int maxSpeed = db.MaximumSpeed / 10;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: int totalEP = db.TotalEnginePower / 25;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float currentSpeedLen = currentSpeed.Length / 10;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float red = 128 / 255;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float red = 128 / 255;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float green = 128 / 255;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float green = 128 / 255;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float blue = 128 / 255;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: float blue = 128 / 255;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: Color colour = new Color(128 /255' 128/255' 128/255);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: Color colour = new Color(128 /255' 128/255' 128/255);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: Color colour = new Color(128 /255' 128/255' 128/255);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: Color colour = new Color(128 /255' 128/255' 128/255);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: Color colour = new Color(128 /255' 128/255' 128/255);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: Color colour = new Color(128 /255' 128/255' 128/255);
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: foreach (var item in cargodb.CargoCapicity)              {                  int height = (int)(item.Value / 100);                  int width = (int)(item.Value / 100);                  Pen containerPen = new Pen(new Color(red' green' blue));                  green += 20 / 255;                  GraphicsPath containerPath = new GraphicsPath();                  containerPath.AddRectangle(width / 2' stackHeight' width' height);                  PenPathPair container = new PenPathPair() { Pen = containerPen' Path = containerPath };                  _shapes.Add(container);                  stackHeight += height;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: foreach (var item in cargodb.CargoCapicity)              {                  int height = (int)(item.Value / 100);                  int width = (int)(item.Value / 100);                  Pen containerPen = new Pen(new Color(red' green' blue));                  green += 20 / 255;                  GraphicsPath containerPath = new GraphicsPath();                  containerPath.AddRectangle(width / 2' stackHeight' width' height);                  PenPathPair container = new PenPathPair() { Pen = containerPen' Path = containerPath };                  _shapes.Add(container);                  stackHeight += height;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: foreach (var item in cargodb.CargoCapicity)              {                  int height = (int)(item.Value / 100);                  int width = (int)(item.Value / 100);                  Pen containerPen = new Pen(new Color(red' green' blue));                  green += 20 / 255;                  GraphicsPath containerPath = new GraphicsPath();                  containerPath.AddRectangle(width / 2' stackHeight' width' height);                  PenPathPair container = new PenPathPair() { Pen = containerPen' Path = containerPath };                  _shapes.Add(container);                  stackHeight += height;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: foreach (var item in cargodb.CargoCapicity)              {                  int height = (int)(item.Value / 100);                  int width = (int)(item.Value / 100);                  Pen containerPen = new Pen(new Color(red' green' blue));                  green += 20 / 255;                  GraphicsPath containerPath = new GraphicsPath();                  containerPath.AddRectangle(width / 2' stackHeight' width' height);                  PenPathPair container = new PenPathPair() { Pen = containerPen' Path = containerPath };                  _shapes.Add(container);                  stackHeight += height;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,SetIconFor,The following statement contains a magic number: foreach (var item in cargodb.CargoCapicity)              {                  int height = (int)(item.Value / 100);                  int width = (int)(item.Value / 100);                  Pen containerPen = new Pen(new Color(red' green' blue));                  green += 20 / 255;                  GraphicsPath containerPath = new GraphicsPath();                  containerPath.AddRectangle(width / 2' stackHeight' width' height);                  PenPathPair container = new PenPathPair() { Pen = containerPen' Path = containerPath };                  _shapes.Add(container);                  stackHeight += height;              }
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,Thrust,The following statement contains a magic number: int maxSpeed = db.MaximumSpeed / 10;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,Thrust,The following statement contains a magic number: int totalEP = db.TotalEnginePower / 25;
Magic Number,Pulsar4X.CrossPlatformUI.Views,EntityIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\EntityIcon.cs,Thrust,The following statement contains a magic number: float currentSpeedLen = currentSpeed.Length / 10;
Magic Number,Pulsar4X.CrossPlatformUI.Views,MinMaxSlider,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\MinMaxSlider.xeto.cs,MinMaxSlider,The following statement contains a magic number: NumericUpDown.DecimalPlaces = 4;
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: _orbitAngle = (float)(_orbitDB.LongitudeOfAscendingNode + _orbitDB.ArgumentOfPeriapsis*2);
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: _orbitAngle = _orbitAngle % 360;
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: if (_orbitAngle < 0)                  _orbitAngle += 360;
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: _radianAngle = _orbitAngle * Math.PI / 180;
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: _orbitElipseWidth =  (float)_orbitDB.SemiMajorAxis * 2 ;
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: _orbitElipseHeight = (float)Math.Sqrt((_orbitDB.SemiMajorAxis * _orbitDB.SemiMajorAxis) * (1 - _orbitDB.Eccentricity * _orbitDB.Eccentricity)) * 2;
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: double focalX = (_focalDistance * Math.Cos(_orbitAngle * Math.PI / 180));
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: double focalY = (_focalDistance * Math.Sin(_orbitAngle * Math.PI / 180));
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: double eccentX = 0 - (_orbitElipseWidth / _orbitElipseHeight * Math.Sin(_orbitAngle * Math.PI / 180));
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,OrbitRing,The following statement contains a magic number: double eccentY = 0 + (_orbitElipseWidth / _orbitElipseHeight * Math.Cos(_orbitAngle * Math.PI / 180));
Magic Number,Pulsar4X.CrossPlatformUI.Views,OrbitRing,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\OrbitRing.cs,GetStartArcAngle,The following statement contains a magic number: return (float)(Math.Atan2(normalY' normalX) * 180 / Math.PI);
Magic Number,Pulsar4X.CrossPlatformUI.Views,SystemMap_DrawableView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemMap_DrawableView.xeto.cs,OnPaint,The following statement contains a magic number: Font font = new Font(FontFamilies.Fantasy' 8);
Magic Number,Pulsar4X.CrossPlatformUI.Views,TextIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\TextIcon.cs,TextIcon,The following statement contains a magic number: DefaultViewOffset = new PointF(8' -font.LineHeight/2);
Magic Number,Pulsar4X.CrossPlatformUI.Views,TextIcon,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\SystemView\TextIcon.cs,TextIcon,The following statement contains a magic number: DefaultViewOffset = new PointF(8' -font.LineHeight/2);
Magic Number,Pulsar4X.CrossPlatformUI.Views.CargoView,CargoTypeStoreView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\CargoView\CargoTypeStoreView.xeto.cs,TypeStore_CollectionChanged,The following statement contains a magic number: CargoGrid.Height = 52 + 24 * _vm.TypeStore.Count;
Magic Number,Pulsar4X.CrossPlatformUI.Views.CargoView,CargoTypeStoreView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\CargoView\CargoTypeStoreView.xeto.cs,TypeStore_CollectionChanged,The following statement contains a magic number: CargoGrid.Height = 52 + 24 * _vm.TypeStore.Count;
Magic Number,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHintMinMax,The following statement contains a magic number: TableLayout tl1 = new TableLayout(2' 3);
Magic Number,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHintMinMax,The following statement contains a magic number: TableLayout tl1 = new TableLayout(2' 3);
Magic Number,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHintMinMax,The following statement contains a magic number: tl1.Add(lblStep' 0' 2);
Magic Number,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHintMinMax,The following statement contains a magic number: tl1.Add(stepFormula' 1' 2);
Magic Number,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateDesignerParentView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateDesignerParentView.xeto.cs,RefreshAbilityList,The following statement contains a magic number: PaddingPnl.Height = AbilityTemplates.Items.Count * 42;
Missing Default,Pulsar4X.CrossPlatformUI,MainForm,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\MainForm.cs,OnClosing,The following switch statement is missing a default case: switch (result)                  {                      case DialogResult.Yes:                          var saveGame = new SaveGame(_gameVM);                          saveGame.Execute();                          break;                        case DialogResult.Cancel:                          e.Cancel = true;                          break;                  }
Missing Default,Pulsar4X.CrossPlatformUI.Views,ComponentDesignView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentDesignView.xeto.cs,SetViewModel,The following switch statement is missing a default case: switch (componentAbilityVM.GuiHint)                  {                      case GuiHint.GuiTechSelectionList:                          AbilitySelectionList asl = new AbilitySelectionList(componentAbilityVM);                          AbilitysLayout.Items.Add(asl);                          break;                      case GuiHint.GuiSelectionMaxMin:                          MinMaxSlider mms = new MinMaxSlider(componentAbilityVM.minMaxSliderVM) {};                          AbilitysLayout.Items.Add(mms);                          break;                  }
Missing Default,Pulsar4X.CrossPlatformUI.Views.ComponentTemplateDesigner,ComponentTemplateAbilityPropertiesView,C:\repos\Pulsar4xDevs_Pulsar4x\Pulsar4X\Pulsar4X.CrossPlatformUI\Views\ComponentTemplateDesigner\ComponentTemplateAbilityPropertiesView.xeto.cs,GuiHint_SelectedIndexChanged,The following switch statement is missing a default case: switch (_viewModel.SelectedGuiHint.GetKey())              {                  case ECSLib.GuiHint.GuiSelectionMaxMin:                      GuiHintMinMax();                      break;                  case ECSLib.GuiHint.GuiTechSelectionList:                      GuiTechSelectionList();                      break;                  case ECSLib.GuiHint.GuiTextDisplay:                      GuiHintTextDisplay();                      break;                  case ECSLib.GuiHint.None:                      GuiHintNone();                      break;                }
