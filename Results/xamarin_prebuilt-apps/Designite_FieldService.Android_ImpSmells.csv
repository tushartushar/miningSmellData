Implementation smell,Namespace,Class,File,Method,Description
Long Method,FieldService.Android,SummaryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryActivity.cs,SetFrameFragment,The method has 105 lines of code.
Long Method,FieldService.Android.Activities,SummaryHistoryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryHistoryActivity.cs,SetFrameFragment,The method has 119 lines of code.
Complex Method,FieldService.Android,SummaryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryActivity.cs,SetFrameFragment,Cyclomatic complexity of the method is 8
Complex Method,FieldService.Android.Activities,SummaryHistoryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryHistoryActivity.cs,SetFrameFragment,Cyclomatic complexity of the method is 9
Long Identifier,FieldService.Android,MapViewActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapViewActivity.cs,,The length of the parameter ConnectionFailureResolutionRequest is 34.
Long Statement,FieldService.Android,AssignmentsActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\AssignmentsActivity.cs,OnCreate,The length of the statement  "			view.LayoutParameters = new LinearLayout.LayoutParams (LinearLayout.LayoutParams.FillParent' LinearLayout.LayoutParams.WrapContent); " is 132.
Long Statement,FieldService.Android,AssignmentsActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\AssignmentsActivity.cs,OnResume,The length of the statement  "					assignmentsListView.Adapter = new AssignmentsAdapter (this' Resource.Layout.AssignmentItemLayout' assignmentViewModel.Assignments); " is 131.
Long Statement,FieldService.Android,AssignmentsActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\AssignmentsActivity.cs,ReloadAssignments,The length of the statement  "					assignmentsListView.Adapter = new AssignmentsAdapter (this' Resource.Layout.AssignmentItemLayout' assignmentViewModel.Assignments); " is 131.
Long Statement,FieldService.Android,AssignmentsActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\AssignmentsActivity.cs,SetActiveAssignmentVisible,The length of the statement  "			var adapter = new SpinnerAdapter<AssignmentStatus> (assignmentViewModel.AvailableStatuses' this' Resource.Layout.SimpleSpinnerItem); " is 132.
Long Statement,FieldService.Android,AssignmentsActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\AssignmentsActivity.cs,SetActiveAssignmentVisible,The length of the statement  "			job.Text = string.Format ("#{0} {1}\n{2}"' assignment.JobNumber' assignment.StartDate.ToShortDateString ()' assignment.CompanyName); " is 132.
Long Statement,FieldService.Android,AssignmentsActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\AssignmentsActivity.cs,SetActiveAssignmentVisible,The length of the statement  "			address.Text = string.Format ("{0}\n{1}' {2} {3}"' assignment.Address' assignment.City' assignment.State' assignment.Zip); " is 122.
Long Statement,FieldService.Android,SummaryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryActivity.cs,OnCreate,The length of the statement  "				ActionBar.Title = string.Format ("#{0} {1} {2}"' assignment.JobNumber' "Summary"' assignment.StartDate.ToShortDateString ()); " is 125.
Long Statement,FieldService.Android,SummaryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryActivity.cs,OnCreate,The length of the statement  "				address.Text = string.Format ("{0}\n{1}' {2} {3}"' assignment.Address' assignment.City' assignment.State' assignment.Zip); " is 122.
Long Statement,FieldService.Android,SummaryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryActivity.cs,NavigationSelected,The length of the statement  "			ActionBar.Title = string.Format ("#{0} {1} {2}"' assignment.JobNumber' screen' assignment.StartDate.ToShortDateString ()); " is 122.
Long Statement,FieldService.Android,AssignmentsAdapter,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\AssignmentsAdapter.cs,GetView,The length of the statement  "				timerlinearLayout.Visibility = Context.Resources.Configuration.Orientation == Orientation.Landscape ? ViewStates.Invisible : ViewStates.Gone; " is 141.
Long Statement,FieldService.Android,AssignmentsAdapter,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\AssignmentsAdapter.cs,GetView,The length of the statement  "				var adapter = new SpinnerAdapter<AssignmentStatus> (assignmentViewModel.AvailableStatuses' Context' Resource.Layout.SimpleSpinnerItem); " is 135.
Long Statement,FieldService.Android,AssignmentsAdapter,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\AssignmentsAdapter.cs,GetView,The length of the statement  "			job.Text = string.Format ("#{0} {1}\n{2}"' assignment.JobNumber' assignment.StartDate.ToShortDateString ()' assignment.CompanyName); " is 132.
Long Statement,FieldService.Android,AssignmentsAdapter,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\AssignmentsAdapter.cs,GetView,The length of the statement  "			address.Text = string.Format ("{0}\n{1}' {2} {3}"' assignment.Address' assignment.City' assignment.State' assignment.Zip); " is 122.
Long Statement,FieldService.Android,AssignmentTabActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\AssignmentTabActivity.cs,OnCreate,The length of the statement  "			//In order to use tabs outside of a TabActivity I have to use this local activity manager and dispatch create the savedInstanceState " is 132.
Long Statement,FieldService.Android,MapViewActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapViewActivity.cs,OnCreate,The length of the statement  "			view.LayoutParameters = new LinearLayout.LayoutParams (LinearLayout.LayoutParams.MatchParent' LinearLayout.LayoutParams.WrapContent); " is 133.
Long Statement,FieldService.Android,MapViewActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapViewActivity.cs,SetAssignment,The length of the statement  "			var adapter = new SpinnerAdapter<AssignmentStatus> (assignmentViewModel.AvailableStatuses' this' Resource.Layout.SimpleSpinnerItem); " is 132.
Long Statement,FieldService.Android,MapViewActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapViewActivity.cs,SetAssignment,The length of the statement  "			job.Text = string.Format ("#{0} {1}\n{2}"' assignment.JobNumber' assignment.StartDate.ToShortDateString ()' assignment.CompanyName); " is 132.
Long Statement,FieldService.Android,MapViewActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapViewActivity.cs,SetAssignment,The length of the statement  "			address.Text = string.Format ("{0}\n{1}' {2} {3}"' assignment.Address' assignment.City' assignment.State' assignment.Zip); " is 122.
Long Statement,FieldService.Android.Activities,SummaryHistoryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryHistoryActivity.cs,OnCreate,The length of the statement  "					ActionBar.Title = string.Format ("#{0} {1} {2}"' assignmentHistory.JobNumber' "Summary"' historyViewModel.PastAssignment.StartDate.ToShortDateString ()); " is 153.
Long Statement,FieldService.Android.Activities,SummaryHistoryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryHistoryActivity.cs,OnCreate,The length of the statement  "					address.Text = string.Format ("{0}\n{1}' {2} {3}"' assignmentHistory.Address' assignmentHistory.City' assignmentHistory.State' assignmentHistory.Zip); " is 150.
Long Statement,FieldService.Android.Activities,SummaryHistoryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryHistoryActivity.cs,NavigationSelected,The length of the statement  "			ActionBar.Title = string.Format ("#{0} {1} {2}"' assignmentHistory.JobNumber' screen' historyViewModel.PastAssignment.StartDate.ToShortDateString ()); " is 150.
Long Statement,FieldService.Android.Adapters,HistoryListAdapter,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\HistoryListAdapter.cs,GetView,The length of the statement  "					address.Text = string.Format ("{0}\n{1}' {2}{3}"' assignment.Address' assignment.City' assignment.State' assignment.Zip); " is 121.
Long Statement,FieldService.Android.Adapters,HistoryListAdapter,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\HistoryListAdapter.cs,GetView,The length of the statement  "					address.Text = string.Format ("Length: {0}  {1}"' assignment.CallLength.ToString (@"hh\:mm\:ss")' assignment.CallDescription); " is 126.
Long Statement,FieldService.Android.Fragments,ConfirmationFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\ConfirmationFragment.cs,ReloadSignature,The length of the statement  "					using (var bmp = BitmapFactory.DecodeByteArray (assignmentViewModel.Signature.Image' 0' assignmentViewModel.Signature.Image.Length)) " is 132.
Long Statement,FieldService.Android.Fragments,HistoryFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\HistoryFragment.cs,OnCreateView,The length of the statement  "						historySearchAdapter = new HistoryListAdapter (Activity' Resource.Layout.HistoryItemLayout' History.OrderBy (h => h.Date).ToList ()); " is 133.
Long Statement,FieldService.Android.Fragments,HistoryFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\HistoryFragment.cs,OnCreateView,The length of the statement  "						historySearchAdapter = new HistoryListAdapter (Activity' Resource.Layout.HistoryItemLayout' History.Where (h => h.Type == AssignmentHistoryType.PhoneCall).ToList ()); " is 166.
Long Statement,FieldService.Android.Fragments,HistoryFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\HistoryFragment.cs,OnCreateView,The length of the statement  "						historySearchAdapter = new HistoryListAdapter (Activity' Resource.Layout.HistoryItemLayout' History.Where (h => h.Type == AssignmentHistoryType.Assignment).ToList ()); " is 167.
Long Statement,FieldService.Android.Fragments,HistoryFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\HistoryFragment.cs,OnCreateView,The length of the statement  "				historySearchAdapter = new HistoryListAdapter (Activity' Resource.Layout.HistoryItemLayout' History.OrderBy (a => a.Date).ToList ()); " is 133.
Long Statement,FieldService.Android.Fragments,MapFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\MapFragment.cs,OnCreate,The length of the statement  "			//credits go to BahaiResearch.com on stackoverflow http://stackoverflow.com/questions/5109336/mapview-in-a-fragment-honeycomb " is 125.
Long Statement,FieldService.Android.Fragments,NavigationFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\NavigationFragment.cs,OnCreateView,The length of the statement  "			var spinnerAdapter = new SpinnerAdapter<AssignmentStatus> (assignmentViewModel.AvailableStatuses' Activity' Resource.Layout.SimpleSpinnerItem); " is 143.
Long Statement,FieldService.Android.Fragments,NavigationFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\NavigationFragment.cs,OnCreateView,The length of the statement  "								navigationSelector.OnItemClick (navigationListView' navigationListView.GetChildAt (confirmationPosition)' confirmationPosition' 0); " is 131.
Long Statement,FieldService.Android.Fragments,NavigationFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\NavigationFragment.cs,OnResume,The length of the statement  "			//RunOnUIThread doesn't allow the listview to be inflated with the views when it is called.  So when we try to get the view from the listview to display " is 152.
Long Statement,FieldService.Android.Fragments,NavigationFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\NavigationFragment.cs,OnResume,The length of the statement  "			//the arrow indicating which position we are at in the list the view returned is null. Post from the listview allows the views inside the listview to be inflated " is 161.
Long Statement,FieldService.Android.Fragments,NavigationFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\NavigationFragment.cs,OnResume,The length of the statement  "			//and we are able to then access all views inside the listview.  the caveat here is some people have stated that post does not work on all android devices. " is 155.
Long Statement,FieldService.Android.Fragments,NavigationItemSelectorListener,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\NavigationFragment.cs,OnItemClick,The length of the statement  "					if (fragment.navigationListView.FirstVisiblePosition <= fragment.lastposition && fragment.lastposition <= fragment.navigationListView.LastVisiblePosition) { " is 156.
Long Statement,FieldService.Android.Utilities,AndroidExtensions,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Utilities\AndroidExtensions.cs,ToSampleSize,The length of the statement  "            sampleSize = (int)Math.Ceiling ((double)Math.Max (options.OutWidth / Constants.MaxWidth' options.OutHeight / Constants.MaxHeight)); " is 131.
Long Statement,FieldService.ViewModels,LoginViewModel,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\ViewModels\LoginViewModel.cs,Validate,The length of the statement  "            ValidateProperty (() => string.IsNullOrEmpty (username)' Catalog.GetString ("UsernameValidation"' comment: "Error message for username")); " is 138.
Long Statement,FieldService.ViewModels,LoginViewModel,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\ViewModels\LoginViewModel.cs,Validate,The length of the statement  "            ValidateProperty (() => string.IsNullOrEmpty (password)' Catalog.GetString ("PasswordValidation"' comment: "Error message for password")); " is 138.
Long Statement,FieldService.Data,SampleAssignmentService,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\Data\SampleAssignmentService.cs,GetSignatureAsync,The length of the statement  "            return Database.GetConnection (cancellationToken).Table<Signature> ().Where (s => s.AssignmentId == assignment.Id).FirstOrDefaultAsync (); " is 138.
Long Statement,FieldService.Data,SampleAssignmentService,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\Data\SampleAssignmentService.cs,GetDocumentsAsync,The length of the statement  "                        new Document { Title = "Valuable Information"' Path = "Data/valuableinformation.pdf"' Type = DocumentType.Specifications }' " is 123.
Long Statement,FieldService.Data,SampleAssignmentService,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\Data\SampleAssignmentService.cs,GetAssignmentHistoryAsync,The length of the statement  "            //We are returning history with matching company names - in the real world there would be a company or customer table here " is 122.
Long Statement,FieldService.Data,SampleAssignmentService,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\Data\SampleAssignmentService.cs,GetAssignmentHistoryAsync,The length of the statement  "                    select AssignmentHistory.*' Assignment.JobNumber' Assignment.CompanyName' Assignment.ContactName' Assignment.ContactPhone' Assignment.Address' Assignment.City' Assignment.State' Assignment.Zip' Assignment.Description' Assignment.StartDate' Assignment.EndDate " is 258.
Long Statement,FieldService.Data,SampleAssignmentService,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\Data\SampleAssignmentService.cs,GetExpensePhotoAsync,The length of the statement  "            return Database.GetConnection (cancellationToken).Table<ExpensePhoto> ().Where (p => p.ExpenseId == expense.Id).FirstOrDefaultAsync (); " is 135.
Virtual Method Call from Constructor,FieldService.ViewModels,ViewModelBase,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\ViewModels\ViewModelBase.cs,ViewModelBase,The constructor "ViewModelBase" calls a virtual method "Validate".
Magic Number,FieldService.Android,MapFragmentActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapFragmentActivity.cs,OnMapReady,The following statement contains a magic number: googleMap.MoveCamera (CameraUpdateFactory.NewLatLngZoom (markerOptions.Position' 15f));
Magic Number,FieldService.Android,MapViewActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapViewActivity.cs,PostDelayInitMap,The following statement contains a magic number: initTry == 4
Magic Number,FieldService.Android,MapViewActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapViewActivity.cs,PostDelayInitMap,The following statement contains a magic number: mapView.PostDelayed (() => {  				initTry++;  				if (mapView.Width == 0)  					PostDelayInitMap (bounds);  				else  					googleMap.MoveCamera (CameraUpdateFactory.NewLatLngBounds (bounds' 0));  			}' 250);
Magic Number,FieldService.Android,MapViewActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\MapViewActivity.cs,OnSaveInstanceState,The following statement contains a magic number: mapData.Zoom = 10;
Magic Number,FieldService.Android,SpinnerAdapter<T>,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\SpinnerAdapter.cs,GetView,The following statement contains a magic number: textView.TextSize = 18f;
Magic Number,FieldService.Android,SpinnerAdapter<T>,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\SpinnerAdapter.cs,GetView,The following statement contains a magic number: textView.SetPadding (0' 10' 0' 10);
Magic Number,FieldService.Android,SpinnerAdapter<T>,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\SpinnerAdapter.cs,GetView,The following statement contains a magic number: textView.SetPadding (0' 10' 0' 10);
Magic Number,FieldService.Android,SpinnerAdapter<T>,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\SpinnerAdapter.cs,GetView,The following statement contains a magic number: (int)Build.VERSION.SdkInt >= 19
Magic Number,FieldService.Android.Dialogs,AddLaborDialog,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Dialogs\AddLaborDialog.cs,OnCreate,The following statement contains a magic number: addHours.Click += (sender' e) => {  				//add to the hours  				double total = hours.Text.ToDouble (CultureInfo.InvariantCulture);  				total += .5;  				CurrentLabor.Hours = TimeSpan.FromHours (total);  				hours.Text = total.ToString ("0.0");  			};
Magic Number,FieldService.Android.Dialogs,AddLaborDialog,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Dialogs\AddLaborDialog.cs,OnCreate,The following statement contains a magic number: subtractHours.Click += (sender' e) => {  				//subtract the hours  				double total = hours.Text.ToDouble (CultureInfo.InvariantCulture);  				total -= .5;  				total = total < 0.0 ? 0.0 : total;  				CurrentLabor.Hours = TimeSpan.FromHours (total);  				hours.Text = total.ToString ("0.0");  			};
Magic Number,FieldService.Android.Utilities,AndroidExtensions,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Utilities\AndroidExtensions.cs,ToIntE6,The following statement contains a magic number: return (int)(value * 1000000);
Magic Number,FieldService.Android.Utilities,AndroidExtensions,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Utilities\AndroidExtensions.cs,ToByteArray,The following statement contains a magic number: bmp.Compress (Bitmap.CompressFormat.Jpeg' 80' stream)
Magic Number,FieldService.ViewModels,AssignmentViewModel,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Shared\ViewModels\AssignmentViewModel.cs,AssignmentViewModel,The following statement contains a magic number: timer = new Timer (1000);
Missing Default,FieldService.Android,SummaryActivity,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Activities\SummaryActivity.cs,SetFrameFragment,The following switch statement is missing a default case: switch (screen) {  			case "Summary":  				var summaryFragment = new SummaryFragment ();  				summaryFragment.Assignment = assignment;  				transaction.SetTransition (FragmentTransit.FragmentOpen);  				transaction.Replace (Resource.Id.contentFrame' summaryFragment);  				transaction.Commit ();  				items.Visibility = addItems.Visibility = ViewStates.Invisible;  				addExpense.Visibility = addLabor.Visibility = ViewStates.Gone;  				break;  			case "Map":  				var mapFragment = new MapFragment ();  				transaction.SetTransition (FragmentTransit.FragmentOpen);  				transaction.Replace (Resource.Id.contentFrame' mapFragment);  				transaction.Commit ();  				items.Visibility = addItems.Visibility = ViewStates.Invisible;  				addExpense.Visibility = addLabor.Visibility = ViewStates.Gone;  				break;  			case "Items":  				var itemFragment = new ItemFragment ();  				itemFragment.Assignment = assignment;  				itemViewModel.LoadAssignmentItemsAsync (assignment).ContinueWith (_ => {  					RunOnUiThread (() => {  						itemFragment.AssignmentItems = itemViewModel.AssignmentItems;  						transaction.SetTransition (FragmentTransit.FragmentOpen);  						transaction.Replace (Resource.Id.contentFrame' itemFragment);  						transaction.Commit ();  						items.Visibility = addItems.Visibility = ViewStates.Visible;  						addExpense.Visibility = addLabor.Visibility = ViewStates.Gone;  						items.Text = string.Format ("({0}) Items"' assignment.TotalItems.ToString ());  					});  				});  				break;  			case "Labor Hours":  				var laborHourFragment = new LaborHourFragment ();  				await laborViewModel.LoadLaborHoursAsync (assignment);  				RunOnUiThread (() => {  					laborHourFragment.LaborHours = laborViewModel.LaborHours;  					laborHourFragment.Assignment = assignment;  					transaction.SetTransition (FragmentTransit.FragmentOpen);  					transaction.Replace (Resource.Id.contentFrame' laborHourFragment);  					transaction.Commit ();  					addLabor.Visibility = items.Visibility = ViewStates.Visible;  					addExpense.Visibility = addItems.Visibility = ViewStates.Gone;  					items.Text = string.Format ("{0} hrs"' assignment.TotalHours.TotalHours.ToString ("0.0"));  				});  				break;  			case "Confirmations":  				var confirmationFragment = new ConfirmationFragment ();  				await photoViewModel.LoadPhotosAsync (assignment);  				RunOnUiThread (() => {  					confirmationFragment.Photos = photoViewModel.Photos;  					confirmationFragment.Assignment = assignment;  					transaction.SetTransition (FragmentTransit.FragmentOpen);  					transaction.Replace (Resource.Id.contentFrame' confirmationFragment);  					transaction.Commit ();  					addLabor.Visibility = items.Visibility = ViewStates.Invisible;  					addExpense.Visibility = addItems.Visibility = ViewStates.Gone;  				});  				break;  			case "Expenses":  				var expenseFragment = new ExpenseFragment ();  				await expenseViewModel.LoadExpensesAsync (assignment);  				RunOnUiThread (() => {  					expenseFragment.Expenses = expenseViewModel.Expenses;  					expenseFragment.Assignment = assignment;  					transaction.SetTransition (FragmentTransit.FragmentOpen);  					transaction.Replace (Resource.Id.contentFrame' expenseFragment);  					transaction.Commit ();  					addLabor.Visibility = addItems.Visibility = ViewStates.Gone;  					items.Visibility = addExpense.Visibility = ViewStates.Visible;  					items.Text = assignment.TotalExpenses.ToString ("$0.00");  				});  				break;  			case "Documents":  				var documentFragment = new DocumentFragment ();  				documentViewModel.LoadDocumentsAsync ();  				RunOnUiThread (() => {  					documentFragment.Documents = documentViewModel.Documents;  					transaction.SetTransition (FragmentTransit.FragmentOpen);  					transaction.Replace (Resource.Id.contentFrame' documentFragment);  					transaction.Commit ();  					items.Visibility = addItems.Visibility = ViewStates.Invisible;  					addExpense.Visibility = addLabor.Visibility = ViewStates.Gone;  				});  				break;  			case "History":  				var historyFragment = new HistoryFragment ();  				await historyViewModel.LoadHistoryAsync (assignment);  				RunOnUiThread (() => {  					historyFragment.History = historyViewModel.History;  					historyFragment.Assignment = assignment;  					transaction.SetTransition (FragmentTransit.FragmentOpen);  					transaction.Replace (Resource.Id.contentFrame' historyFragment);  					transaction.Commit ();  					items.Visibility = addItems.Visibility = ViewStates.Invisible;  					addExpense.Visibility =  addLabor.Visibility = ViewStates.Gone;  				});  				break;  			}
Missing Default,FieldService.Android,AssignmentsAdapter,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Adapters\AssignmentsAdapter.cs,OnClick,The following switch statement is missing a default case: switch (v.Id) {  			case Resource.Id.assignmentAccept:  				activeAssignment.Status = assignmentViewModel.ActiveAssignment == null ?  					AssignmentStatus.Active : AssignmentStatus.Hold;  				SaveAssignment (activeAssignment' position);  				break;  			case Resource.Id.assignmentDecline:  				activeAssignment.Status = AssignmentStatus.Declined;  				SaveAssignment (activeAssignment' position);  				break;  			case Resource.Id.assignmentPhoneLayout:  				var view = (View)v.Parent;  				var phone = view.FindViewById<TextView> (Resource.Id.assignmentPhone);  				var activity = this.activity;  				activity.MakePhoneCall (phone.Text);  				break;  			case Resource.Id.assignmentAddressLayout:  				var intent = new Intent (Context' typeof(SummaryActivity));  				var tabActivity = (AssignmentTabActivity)this.activity.Parent;  				tabActivity.MapData = null;  				assignmentViewModel.SelectedAssignment = activeAssignment;  				menuViewModel.MenuIndex = Constants.Navigation.IndexOf ("Map");  				Context.StartActivity (intent);  				break;  			}
Missing Default,FieldService.Android.Dialogs,ExpenseDialog,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Dialogs\ExpenseDialog.cs,OnClick,The following switch statement is missing a default case: switch (v.Id) {  			case Resource.Id.addExpenseDelete:  				if (CurrentExpense != null && CurrentExpense.Id != -1)  					DeleteExpense ();  				else  					Dismiss ();  				break;  			case Resource.Id.addExpenseSave:  				SaveExpense ();  				break;  			case Resource.Id.addExpenseCancel:  				Dismiss ();  				break;  			case Resource.Id.addExpenseAddPhoto:  				var choices = new List<string> ();  				choices.Add (activity.Resources.GetString (Resource.String.Gallery));  				if (mediaPicker.IsCameraAvailable)  					choices.Add (activity.Resources.GetString (Resource.String.Camera));    				AlertDialog.Builder takePictureDialog = new AlertDialog.Builder (activity);  				takePictureDialog.SetTitle ("Select:");  				takePictureDialog.SetItems (choices.ToArray ()' (innerSender' innerE) => {  					if (innerE.Which == 0) {  						mediaPicker.PickPhotoAsync ().ContinueWith (t => {  							if (t.IsCanceled)  								return;  							activity.RunOnUiThread (() => {  								expenseAddPhoto.Visibility = ViewStates.Gone;  								imageBitmap = BitmapFactory.DecodeStream (t.Result.GetStream ());  								imageBitmap = Extensions.ResizeBitmap (imageBitmap' Constants.MaxWidth' Constants.MaxHeight);  								expensePhoto.SetImageBitmap (imageBitmap);  								expenseViewModel.Photo = new ExpensePhoto { ExpenseId = CurrentExpense.Id };  							});  						});  					} else if (innerE.Which == 1) {  						//camera  						StoreCameraMediaOptions options = new StoreCameraMediaOptions ();  						options.Directory = "FieldService";  						options.Name = "FieldService.jpg";  						mediaPicker.TakePhotoAsync (options).ContinueWith (t => {  							if (t.IsCanceled)  								return;  							activity.RunOnUiThread (() => {  								expenseAddPhoto.Visibility = ViewStates.Gone;  								imageBitmap = BitmapFactory.DecodeStream (t.Result.GetStream ());  								imageBitmap = Extensions.ResizeBitmap (imageBitmap' Constants.MaxWidth' Constants.MaxHeight);  								expensePhoto.SetImageBitmap (imageBitmap);  								expenseViewModel.Photo = new ExpensePhoto { ExpenseId = CurrentExpense.Id };  							});  						});  					}  				});  				takePictureDialog.Show ();  				break;  			}
Missing Default,FieldService.Android.Fragments,NavigationFragment,D:\research\architectureSmells\repos\xamarin_prebuilt-apps\FieldService\FieldService.Android\Fragments\NavigationFragment.cs,SetActiveAssignment,The following switch statement is missing a default case: switch (Assignment.Status) {  				case AssignmentStatus.New:  					navigationStatusLayout.Visibility = timerLayout.Visibility = ViewStates.Gone;  					break;  				case AssignmentStatus.Hold:  					navigationStatusImage.SetImageResource (Resource.Drawable.HoldImage);  					navigationStatusLayout.Visibility = ViewStates.Visible;  					timerLayout.Visibility = ViewStates.Gone;  					break;  				case AssignmentStatus.Active:  				case AssignmentStatus.Complete:  					navigationStatusLayout.Visibility = timerLayout.Visibility = ViewStates.Visible;  					navigationStatusImage.SetImageResource (Resource.Drawable.EnrouteImage);  					navigationStatus.SetSelection (assignmentViewModel.AvailableStatuses.ToList ().IndexOf (AssignmentStatus.Active));  					timerHours.Text = assignmentViewModel.Hours.ToString (@"hh\:mm\:ss");    					Activity.RunOnUiThread (() => {  						timer.Checked = assignmentViewModel.Recording;  					});  					break;  				}
