Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GameHelpersLib,Input,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Input.cs,IsMouseDown,Cyclomatic complexity of the method is 16
Complex Method,GameHelpersLib,Input,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Input.cs,IsMouseUp,Cyclomatic complexity of the method is 16
Complex Method,GameHelpersLib,Particle,C:\repos\Jaex_ParticleEngine\GameHelpersLib\ParticleSystem\Particle.cs,CheckRectangleLimit,Cyclomatic complexity of the method is 9
Complex Method,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Update,Cyclomatic complexity of the method is 16
Long Parameter List,GameHelpersLib,DrawingHelpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\DrawingHelpers.cs,DrawTextWithShadow,The method has 6 parameters.
Long Statement,GameHelpersLib,Particle,C:\repos\Jaex_ParticleEngine\GameHelpersLib\ParticleSystem\Particle.cs,CheckRectangleLimit,The length of the statement  "			if (properPosition.X < -properWidth || properPosition.X > RectangleLimit.Width || properPosition.Y < -properHeight || properPosition.Y > RectangleLimit.Height) { " is 161.
Long Statement,GameHelpersLib,Particle,C:\repos\Jaex_ParticleEngine\GameHelpersLib\ParticleSystem\Particle.cs,Draw,The length of the statement  "	spriteBatch.Draw (Texture' Position' SourceRectangle' new Color (Color' Opacity)' Angle' Origin' Scale' SpriteEffects.None' 0); " is 127.
Long Statement,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Draw,The length of the statement  "		consoleYOffset = (int)MathHelpers.Lerp (-consoleHeight' 0' (float)Math.Sqrt ((float)(now - stateStartTime) / (float)AnimationTime)); " is 132.
Long Statement,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Draw,The length of the statement  "		consoleYOffset = (int)MathHelpers.Lerp (0' -consoleHeight' ((float)(now - stateStartTime) / (float)AnimationTime) * ((float)(now - stateStartTime) / (float)AnimationTime)); " is 172.
Long Statement,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,DrawConsole,The length of the statement  "	spriteBatch.Draw (background' new Rectangle (consoleXOffset' consoleYOffset' consoleWidth' consoleHeight)' Color.White); " is 120.
Long Statement,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,DrawConsole,The length of the statement  "	spriteBatch.Draw (border' new Rectangle (consoleXOffset' consoleYOffset + consoleHeight - 1' consoleWidth' 1)' Color.White); " is 124.
Long Statement,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,DrawConsole,The length of the statement  "	spriteBatch.Draw (border' new Rectangle (consoleXOffset + consoleWidth - 1' consoleYOffset' 1' consoleHeight)' Color.White); " is 124.
Long Statement,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,DrawConsole,The length of the statement  "		DrawingHelpers.DrawTextWithShadow (spriteBatch' lines [i]' new Vector2 (consoleXOffset + 10' consoleYOffset + consoleHeight - 10 - spriteFont.LineSpacing * i)' spriteFont' Color.White' Color.Black); " is 198.
Complex Conditional,GameHelpersLib,Particle,C:\repos\Jaex_ParticleEngine\GameHelpersLib\ParticleSystem\Particle.cs,CheckRectangleLimit,The conditional expression  "properPosition.X < -properWidth || properPosition.X > RectangleLimit.Width || properPosition.Y < -properHeight || properPosition.Y > RectangleLimit.Height"  is complex.
Magic Number,GameHelpersLib,DrawingHelpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\DrawingHelpers.cs,DrawTextWithShadow,The following statement contains a magic number: sb.DrawString (font' text' position + shadowOffset [2]' shadowColor);  
Magic Number,GameHelpersLib,DrawingHelpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\DrawingHelpers.cs,DrawTextWithShadow,The following statement contains a magic number: sb.DrawString (font' text' position + shadowOffset [3]' shadowColor);  
Magic Number,GameHelpersLib,Extensions,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Extensions.cs,NextColor,The following statement contains a magic number: return new Color (rand.Next (0' 256)' rand.Next (0' 256)' rand.Next (0' 256));  
Magic Number,GameHelpersLib,Extensions,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Extensions.cs,NextColor,The following statement contains a magic number: return new Color (rand.Next (0' 256)' rand.Next (0' 256)' rand.Next (0' 256));  
Magic Number,GameHelpersLib,Extensions,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Extensions.cs,NextColor,The following statement contains a magic number: return new Color (rand.Next (0' 256)' rand.Next (0' 256)' rand.Next (0' 256));  
Magic Number,GameHelpersLib,Extensions,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Extensions.cs,Offset,The following statement contains a magic number: return new Rectangle (rect.X - offset' rect.Y - offset' rect.Width + offset * 2' rect.Height + offset * 2);  
Magic Number,GameHelpersLib,Extensions,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Extensions.cs,Offset,The following statement contains a magic number: return new Rectangle (rect.X - offset' rect.Y - offset' rect.Width + offset * 2' rect.Height + offset * 2);  
Magic Number,GameHelpersLib,Helpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Helpers.cs,HSVToColor,The following statement contains a magic number: if (hue < 2) {  	return new Color (x + m' c + m' m);  }  
Magic Number,GameHelpersLib,Helpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Helpers.cs,HSVToColor,The following statement contains a magic number: if (hue < 3) {  	return new Color (m' c + m' x + m);  }  
Magic Number,GameHelpersLib,Helpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Helpers.cs,HSVToColor,The following statement contains a magic number: if (hue < 4) {  	return new Color (m' x + m' c + m);  }  
Magic Number,GameHelpersLib,Helpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\Helpers.cs,HSVToColor,The following statement contains a magic number: if (hue < 5) {  	return new Color (x + m' m' c + m);  }  
Magic Number,GameHelpersLib,HueAnimation,C:\repos\Jaex_ParticleEngine\GameHelpersLib\HueAnimation.cs,Next,The following statement contains a magic number: Hue %= 6;  
Magic Number,GameHelpersLib,MathHelpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\MathHelpers.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow (pos2.X - pos1.X' 2) + Math.Pow (pos2.Y - pos1.Y' 2));  
Magic Number,GameHelpersLib,MathHelpers,C:\repos\Jaex_ParticleEngine\GameHelpersLib\MathHelpers.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow (pos2.X - pos1.X' 2) + Math.Pow (pos2.Y - pos1.Y' 2));  
Magic Number,GameHelpersLib,Particle,C:\repos\Jaex_ParticleEngine\GameHelpersLib\ParticleSystem\Particle.cs,CheckRectangleLimit,The following statement contains a magic number: if (RectangleLimitAction != ParticleRectangleLimitAction.None && !RectangleLimit.IsEmpty) {  	Vector2 properOrigin = new Vector2 ((float)Texture.Width * Scale / 2' (float)Texture.Height * Scale / 2);  	Vector2 properPosition = Position - properOrigin;  	float properWidth = SourceRectangle.Width * Scale;  	float properHeight = SourceRectangle.Height * Scale;  	if (RectangleLimitAction == ParticleRectangleLimitAction.Kill) {  		if (properPosition.X < -properWidth || properPosition.X > RectangleLimit.Width || properPosition.Y < -properHeight || properPosition.Y > RectangleLimit.Height) {  			IsActive = false;  		}  	}  	else if (RectangleLimitAction == ParticleRectangleLimitAction.Bounce) {  		if (properPosition.X <= 0) {  			Position = new Vector2 (properOrigin.X' Position.Y);  			Direction = new Vector2 (-Direction.X' Direction.Y);  		}  		else if (properPosition.X >= RectangleLimit.Width - properWidth) {  			Position = new Vector2 (RectangleLimit.Width - properOrigin.X' Position.Y);  			Direction = new Vector2 (-Direction.X' Direction.Y);  		}  		if (properPosition.Y <= 0) {  			Position = new Vector2 (Position.X' properOrigin.Y);  			Direction = new Vector2 (Direction.X' -Direction.Y);  		}  		else if (properPosition.Y >= RectangleLimit.Height - properHeight) {  			Position = new Vector2 (Position.X' RectangleLimit.Height - properOrigin.Y);  			Direction = new Vector2 (Direction.X' -Direction.Y);  		}  	}  }  
Magic Number,GameHelpersLib,Particle,C:\repos\Jaex_ParticleEngine\GameHelpersLib\ParticleSystem\Particle.cs,CheckRectangleLimit,The following statement contains a magic number: if (RectangleLimitAction != ParticleRectangleLimitAction.None && !RectangleLimit.IsEmpty) {  	Vector2 properOrigin = new Vector2 ((float)Texture.Width * Scale / 2' (float)Texture.Height * Scale / 2);  	Vector2 properPosition = Position - properOrigin;  	float properWidth = SourceRectangle.Width * Scale;  	float properHeight = SourceRectangle.Height * Scale;  	if (RectangleLimitAction == ParticleRectangleLimitAction.Kill) {  		if (properPosition.X < -properWidth || properPosition.X > RectangleLimit.Width || properPosition.Y < -properHeight || properPosition.Y > RectangleLimit.Height) {  			IsActive = false;  		}  	}  	else if (RectangleLimitAction == ParticleRectangleLimitAction.Bounce) {  		if (properPosition.X <= 0) {  			Position = new Vector2 (properOrigin.X' Position.Y);  			Direction = new Vector2 (-Direction.X' Direction.Y);  		}  		else if (properPosition.X >= RectangleLimit.Width - properWidth) {  			Position = new Vector2 (RectangleLimit.Width - properOrigin.X' Position.Y);  			Direction = new Vector2 (-Direction.X' Direction.Y);  		}  		if (properPosition.Y <= 0) {  			Position = new Vector2 (Position.X' properOrigin.Y);  			Direction = new Vector2 (Direction.X' -Direction.Y);  		}  		else if (properPosition.Y >= RectangleLimit.Height - properHeight) {  			Position = new Vector2 (Position.X' RectangleLimit.Height - properOrigin.Y);  			Direction = new Vector2 (Direction.X' -Direction.Y);  		}  	}  }  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,GameConsole,The following statement contains a magic number: MaxLineCount = 25;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,GameConsole,The following statement contains a magic number: outputBuffer = new StringBuilder (1024);  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,LoadFont,The following statement contains a magic number: consoleWidth = Game.Window.ClientBounds.Right - Game.Window.ClientBounds.Left - 20;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,LoadFont,The following statement contains a magic number: consoleHeight = font.LineSpacing * MaxLineCount + 20;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,LoadFont,The following statement contains a magic number: lineWidth = (int)((consoleWidth - 20) / font.MeasureString ("a").X) - 2;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,LoadFont,The following statement contains a magic number: lineWidth = (int)((consoleWidth - 20) / font.MeasureString ("a").X) - 2;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,LoadContent,The following statement contains a magic number: background = DrawingHelpers.CreateOnePixelTexture (GraphicsDevice' new Color (0' 0' 0' 175));  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Draw,The following statement contains a magic number: consoleWidth = Game.Window.ClientBounds.Right - Game.Window.ClientBounds.Left - 20;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Draw,The following statement contains a magic number: consoleHeight = spriteFont.LineSpacing * MaxLineCount + 20;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Draw,The following statement contains a magic number: consoleXOffset = 10;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Draw,The following statement contains a magic number: lineWidth = (int)((consoleWidth - 20) / spriteFont.MeasureString ("a").X) - 2;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Draw,The following statement contains a magic number: lineWidth = (int)((consoleWidth - 20) / spriteFont.MeasureString ("a").X) - 2;  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,DrawConsole,The following statement contains a magic number: for (int i = 0; i < lines.Count && i <= MaxLineCount; i++) {  	DrawingHelpers.DrawTextWithShadow (spriteBatch' lines [i]' new Vector2 (consoleXOffset + 10' consoleYOffset + consoleHeight - 10 - spriteFont.LineSpacing * i)' spriteFont' Color.White' Color.Black);  }  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,DrawConsole,The following statement contains a magic number: for (int i = 0; i < lines.Count && i <= MaxLineCount; i++) {  	DrawingHelpers.DrawTextWithShadow (spriteBatch' lines [i]' new Vector2 (consoleXOffset + 10' consoleYOffset + consoleHeight - 10 - spriteFont.LineSpacing * i)' spriteFont' Color.White' Color.Black);  }  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,DrawConsole,The following statement contains a magic number: DrawingHelpers.DrawTextWithShadow (spriteBatch' lines [i]' new Vector2 (consoleXOffset + 10' consoleYOffset + consoleHeight - 10 - spriteFont.LineSpacing * i)' spriteFont' Color.White' Color.Black);  
Magic Number,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,DrawConsole,The following statement contains a magic number: DrawingHelpers.DrawTextWithShadow (spriteBatch' lines [i]' new Vector2 (consoleXOffset + 10' consoleYOffset + consoleHeight - 10 - spriteFont.LineSpacing * i)' spriteFont' Color.White' Color.Black);  
Missing Default,GameHelpersLib,GameConsole,C:\repos\Jaex_ParticleEngine\GameHelpersLib\GameConsole.cs,Update,The following switch statement is missing a default case: switch (consoleState) {  case ConsoleState.Opening:  	if (now - stateStartTime > AnimationTime) {  		consoleState = ConsoleState.Open;  		stateStartTime = now;  	}  	break;  case ConsoleState.Closing:  	if (now - stateStartTime > AnimationTime) {  		consoleState = ConsoleState.Closed;  		stateStartTime = now;  		Visible = false;  	}  	break;  case ConsoleState.Open:  	if (Input.IsKeyDown (Keys.OemTilde' true)) {  		consoleState = ConsoleState.Closing;  		stateStartTime = now;  	}  	break;  case ConsoleState.Closed:  	if (Input.IsKeyDown (Keys.OemTilde' true)) {  		consoleState = ConsoleState.Opening;  		stateStartTime = now;  		Visible = true;  	}  	break;  }  
