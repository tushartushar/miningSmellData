Implementation smell,Namespace,Class,File,Method,Description
Complex Method,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,Cyclomatic complexity of the method is 31
Long Parameter List,capturehunter,Form1,C:\repos\kikakubu-ksg_capturehunter\Form1.cs,BitBlt,The method has 9 parameters.
Long Statement,capturehunter,Form1,C:\repos\kikakubu-ksg_capturehunter\Form1.cs,Form1_Load,The length of the statement  "	System.Diagnostics.FileVersionInfo ver = System.Diagnostics.FileVersionInfo.GetVersionInfo (System.Reflection.Assembly.GetExecutingAssembly ().Location); " is 153.
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case WM_NCHITTEST:  	Point p = this.PointToClient (new Point (m.LParam.ToInt32 () % 65536' m.LParam.ToInt32 () / 65536));  	if (p.X > this.ClientRectangle.Right) {  		break;  	}  	if (p.X < this.ClientRectangle.Left) {  		break;  	}  	if (p.Y < this.ClientRectangle.Top) {  		break;  	}  	if (p.Y > this.ClientRectangle.Bottom) {  		break;  	}  	if (p.X < this.ClientRectangle.Left + 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPLEFT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMLEFT;  			return;  		}  		m.Result = (System.IntPtr)HTLEFT;  		return;  	}  	if (p.X > this.ClientRectangle.Right - 5) {  		if (p.Y < this.ClientRectangle.Top + 5) {  			m.Result = (System.IntPtr)HTTOPRIGHT;  			return;  		}  		if (p.Y > this.ClientRectangle.Bottom - 5) {  			m.Result = (System.IntPtr)HTBOTTOMRIGHT;  			return;  		}  		m.Result = (System.IntPtr)HTRIGHT;  		return;  	}  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOP;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOM;  		return;  	}  	m.Result = (System.IntPtr)HTCAPTION;  	return;  case NCLBUTTONDBLCLK:  	f1.textBox_X.Text = this.Left.ToString ();  	f1.textBox_Y.Text = this.Top.ToString ();  	f1.textBox_width.Text = this.Width.ToString ();  	f1.textBox_height.Text = this.Height.ToString ();  	this.Hide ();  	return;  default:  	break;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.X < this.ClientRectangle.Left + 5) {  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOPLEFT;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOMLEFT;  		return;  	}  	m.Result = (System.IntPtr)HTLEFT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.X < this.ClientRectangle.Left + 5) {  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOPLEFT;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOMLEFT;  		return;  	}  	m.Result = (System.IntPtr)HTLEFT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.X < this.ClientRectangle.Left + 5) {  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOPLEFT;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOMLEFT;  		return;  	}  	m.Result = (System.IntPtr)HTLEFT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.Y < this.ClientRectangle.Top + 5) {  	m.Result = (System.IntPtr)HTTOPLEFT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.Y > this.ClientRectangle.Bottom - 5) {  	m.Result = (System.IntPtr)HTBOTTOMLEFT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.X > this.ClientRectangle.Right - 5) {  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOPRIGHT;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOMRIGHT;  		return;  	}  	m.Result = (System.IntPtr)HTRIGHT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.X > this.ClientRectangle.Right - 5) {  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOPRIGHT;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOMRIGHT;  		return;  	}  	m.Result = (System.IntPtr)HTRIGHT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.X > this.ClientRectangle.Right - 5) {  	if (p.Y < this.ClientRectangle.Top + 5) {  		m.Result = (System.IntPtr)HTTOPRIGHT;  		return;  	}  	if (p.Y > this.ClientRectangle.Bottom - 5) {  		m.Result = (System.IntPtr)HTBOTTOMRIGHT;  		return;  	}  	m.Result = (System.IntPtr)HTRIGHT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.Y < this.ClientRectangle.Top + 5) {  	m.Result = (System.IntPtr)HTTOPRIGHT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.Y > this.ClientRectangle.Bottom - 5) {  	m.Result = (System.IntPtr)HTBOTTOMRIGHT;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.Y < this.ClientRectangle.Top + 5) {  	m.Result = (System.IntPtr)HTTOP;  	return;  }  
Magic Number,capturehunter,AreaCapture,C:\repos\kikakubu-ksg_capturehunter\AreaCapture.cs,WndProc,The following statement contains a magic number: if (p.Y > this.ClientRectangle.Bottom - 5) {  	m.Result = (System.IntPtr)HTBOTTOM;  	return;  }  
Magic Number,capturehunter,Form1,C:\repos\kikakubu-ksg_capturehunter\Form1.cs,Form1_Load,The following statement contains a magic number: ofd.FilterIndex = 2;  
Magic Number,capturehunter,Form1,C:\repos\kikakubu-ksg_capturehunter\Form1.cs,myCapture,The following statement contains a magic number: for (int i = 0; i < int.Parse (this.textBox_sheets.Text); i++) {  	string str = Path.GetFileName (capture [i]);  	sb.Append ("'" + str.Substring (0' 22) + "''");  }  
Magic Number,capturehunter,Form1,C:\repos\kikakubu-ksg_capturehunter\Form1.cs,myCapture,The following statement contains a magic number: sb.Append ("'" + str.Substring (0' 22) + "''");  
Magic Number,capturehunter,Form1,C:\repos\kikakubu-ksg_capturehunter\Form1.cs,button_start_Click,The following statement contains a magic number: if (boolStartFlag) {  	boolStartFlag = false;  	timer1.Stop ();  	this.button_start.Text = "連キャプ\r\n開始";  	this.button_start.BackColor = SystemColors.Control;  }  else {  	boolStartFlag = true;  	timer1.Interval = 1000;  	timer1.Start ();  	this.button_start.Text = "連キャプ\r\n停止";  	this.button_start.BackColor = Color.Red;  }  
Magic Number,capturehunter,Form1,C:\repos\kikakubu-ksg_capturehunter\Form1.cs,button_start_Click,The following statement contains a magic number: timer1.Interval = 1000;  
