Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MMBot.Slack,SlackAdapter,C:\repos\mmbot_mmbot\MMBot.Slack\SlackAdapter.cs,Initialize,The length of the statement  "                helpSb.AppendLine("  MMBOT_SLACK_TOKEN: This is the service token you are given when you add your Bot to your Team Services."); " is 127.
Long Statement,MMBot.Slack,SlackAdapter,C:\repos\mmbot_mmbot\MMBot.Slack\SlackAdapter.cs,Initialize,The length of the statement  "                helpSb.AppendLine("  MMBOT_SLACK_COMMANDTOKENS: Optional. The comma delimited list of expected command tokens from the Slack commands hook. If none supplied then any token will be accepted."); " is 192.
Long Statement,MMBot.Slack,SlackAdapter,C:\repos\mmbot_mmbot\MMBot.Slack\SlackAdapter.cs,Initialize,The length of the statement  "                helpSb.AppendLine("More info on these values and how to create the mmbot.ini file can be found at https://github.com/mmbot/mmbot/wiki/Configuring-mmbot"); " is 154.
Long Statement,MMBot.Slack,SlackAdapter,C:\repos\mmbot_mmbot\MMBot.Slack\SlackAdapter.cs,HandleSlackCommand,The length of the statement  "                    Logger.Warn(string.Format("An invalid token was received from the Slack command hook. Please check that the token '{0}' was expected."' token)); " is 144.
Magic Number,MMBot.Slack,PerSecondRateLimiter,C:\repos\mmbot_mmbot\MMBot.Slack\PerSecondRateLimiter.cs,PerSecondRateLimiter,The following statement contains a magic number: bucket = new FixedTokenBucket(1' 1' 1000 / requestsPerSecond);
Magic Number,MMBot.Slack,PerSecondRateLimiter,C:\repos\mmbot_mmbot\MMBot.Slack\PerSecondRateLimiter.cs,Limit,The following statement contains a magic number: while (true)              {                  if (!bucket.ShouldThrottle(1))                  {                      break;                  }                    Thread.Sleep(100);              }
Magic Number,MMBot.Slack,SlackAdapter,C:\repos\mmbot_mmbot\MMBot.Slack\SlackAdapter.cs,ConnectSocket,The following statement contains a magic number: for (var i = 0; i < 10 && _socket == null; i++)              {                  var start = _api.RtmStart();                  if (!start.Ok)                  {                      Logger.WarnFormat("Unable to start connection with Slack Adapter ({0}). Retrying"' start.Error);                      await Task.Delay(TimeSpan.FromSeconds(1));                      continue;                  }                    // URL only valid for 30sec                  _socket = new WebSocket(start.Url);                    _botUserId = start.Self.Id;                    _users = start.Users.ToList();                  _rooms = start.Channels.ToList();                  _ims = start.Ims.ToList();                    Rooms.Clear();                  Rooms.AddAll(start.Channels.Select(c => c.Name));                    LogRooms.Clear();                  LogRooms.AddAll(Rooms.Intersect(_logRooms' StringComparer.InvariantCultureIgnoreCase));              }
