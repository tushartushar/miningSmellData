Implementation smell,Namespace,Class,File,Method,Description
Long Method,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,The method has 169 lines of code.
Long Method,WCell.MPQTool,DBCTool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBCTool.cs,Dump,The method has 129 lines of code.
Complex Method,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,Cyclomatic complexity of the method is 30
Complex Method,WCell.MPQTool.DBC.Compare,DBCDirComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCDirComparer.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,WCell.MPQTool,DBCTool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBCTool.cs,Dump,Cyclomatic complexity of the method is 9
Complex Method,MpqReader,MpqHuffman,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqHuffman.cs,AdjustTree,Cyclomatic complexity of the method is 10
Complex Method,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,LoadBlock,Cyclomatic complexity of the method is 9
Complex Method,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,DecompressMulti,Cyclomatic complexity of the method is 11
Complex Method,MpqReader,MpqWavCompression,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqWavCompression.cs,Decompress,Cyclomatic complexity of the method is 24
Complex Method,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,DecodeLit,Cyclomatic complexity of the method is 8
Long Parameter List,WCell.MPQTool.StormLibWrapper,NativeMethods,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\StormLibWrapper\NativeMethods.cs,ReadFile,The method has 5 parameters. Parameters: fileHandle' buffer' numberOfBytes' numberOfBytesRead' overlapped
Long Parameter List,WCell.MPQTool.StormLibWrapper,NativeMethods,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\StormLibWrapper\NativeMethods.cs,Compress,The method has 7 parameters. Parameters: outBuffer' outLength' inBuffer' inLength' cmp' cmpType' cmpLevel
Long Statement,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,The length of the statement  "				change = string.Format("Column Count {0} from {1} to {2}"' oldReader.ColumnCount > newReader.ColumnCount ? "decreased" : "increased"' " is 133.
Long Statement,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,The length of the statement  "				change += string.Format("Record Size {0} from {1} to {2}"' oldReader.RecordSize > newReader.RecordSize ? "decreased" : "increased"' " is 131.
Long Statement,WCell.MPQTool.DBC.Compare,DBCDirComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCDirComparer.cs,Compare,The length of the statement  "			writer.WriteLine("Changes in files{0}:"' maxTestAmount != int.MaxValue ? " - Testing with first " + maxTestAmount + " rows" : ""); " is 130.
Long Statement,WCell.MPQTool,DBCTool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBCTool.cs,Dump,The length of the statement  "					Console.WriteLine("Output Directory: {0} ({1})"' outputDir.FullName' outputDir.Exists ? "already exists" : "does not exist"); " is 125.
Long Statement,WCell.MPQTool.StormLibWrapper,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\StormLibWrapper\MpqStream.cs,ReadCoTaskMem,The length of the statement  "            ErrorHandler.ThrowOnFailure(NativeMethods.ReadFile(fileHandle' buffer' (uint)count' out bytesRead' (IntPtr)null)' "Could not read file content."); " is 146.
Magic Number,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,The following statement contains a magic number: newReader.RecordSize != (newReader.ColumnCount * 4)
Magic Number,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,The following statement contains a magic number: var oldRows = new byte[oldReader.RecordCount * 3][];
Magic Number,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,The following statement contains a magic number: var newRows = new byte[newReader.RecordCount * 3][];
Magic Number,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,The following statement contains a magic number: var percent = changes[col] / (float)testAmount * 100;
Magic Number,WCell.MPQTool.DBC.Compare,DBCFileComparer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\Compare\DBCFileComparer.cs,Compare,The following statement contains a magic number: var matchPercent = matchCount / (float)testAmount * 100;
Magic Number,WCell.MPQTool,DBCTool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBCTool.cs,ProcessMPQ,The following statement contains a magic number: var byFileContents = new byte[8192];
Magic Number,WCell.MPQTool,DBCTool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBCTool.cs,GetLocale,The following statement contains a magic number: dirInfo.Name.Length == 4 && dirInfo.GetFiles("*.mpq").Length > 0
Magic Number,WCell.MPQTool,MpqLibrarian,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\MpqLibrarian.cs,MpqLibrarian,The following statement contains a magic number: var locale = localeDir.Substring(localeDir.Length - 4' 4);
Magic Number,WCell.MPQTool,MpqLibrarian,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\MpqLibrarian.cs,MpqLibrarian,The following statement contains a magic number: var locale = localeDir.Substring(localeDir.Length - 4' 4);
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,DBCReader,The following statement contains a magic number: Readers[(int)CellType.Float] = delegate(DBCReader reader' byte[] bytes' uint index' out object value) {  			                               	value = bytes.GetFloat(index);  			                               	return 4;  			                               };
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,DBCReader,The following statement contains a magic number: Readers[(int)CellType.Int] = delegate(DBCReader reader' byte[] bytes' uint index' out object value) {  			                             	value = bytes.GetInt32(index);  			                             	return 4;  			                             };
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,DBCReader,The following statement contains a magic number: Readers[(int)CellType.UInt] = delegate(DBCReader reader' byte[] bytes' uint index' out object value) {  			                              	value = bytes.GetUInt32(index);  			                              	return 4;  			                              };
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,DBCReader,The following statement contains a magic number: Readers[(int)CellType.String] = delegate(DBCReader reader' byte[] bytes' uint index' out object value) {  			                                	var offset = bytes.GetUInt32(index);  			                                	value = reader.GetString(offset);  			                                	return 4;  			                                };
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,DBCReader,The following statement contains a magic number: fileStream.Length < 4
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,DBCReader,The following statement contains a magic number: binReader.BaseStream.Position = 20;
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,GetStringMatchPct,The following statement contains a magic number: var maxIdenticalCount = (int)((m_recordCount / 100f) * (100f - uniquePct));
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,GetStringMatchPct,The following statement contains a magic number: var maxIdenticalCount = (int)((m_recordCount / 100f) * (100f - uniquePct));
Magic Number,WCell.MPQTool.DBC,DBCReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\DBC\DBCReader.cs,GetStringMatchPct,The following statement contains a magic number: return (matches / (float)m_recordCount) * 100f;
Magic Number,MpqReader,BitStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\BitStream.cs,ReadBits,The following statement contains a magic number: BitCount > 16
Magic Number,MpqReader,BitStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\BitStream.cs,ReadBits,The following statement contains a magic number: int result = mCurrent & (0xffff >> (16 - BitCount));
Magic Number,MpqReader,BitStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\BitStream.cs,PeekByte,The following statement contains a magic number: EnsureBits(8) == false
Magic Number,MpqReader,BitStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\BitStream.cs,EnsureBits,The following statement contains a magic number: mBitCount += 8;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,HashString,The following statement contains a magic number: seed2 = (uint)val + seed1 + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,HashString,The following statement contains a magic number: seed2 = (uint)val + seed1 + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Seed1 = ((~Seed1 << 21) + 0x11111111) | (Seed1 >> 11);
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Seed1 = ((~Seed1 << 21) + 0x11111111) | (Seed1 >> 11);
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: seed2 = result + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: seed2 = result + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Data[i + 1] = ((byte)((result >> 8) & 0xff));
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Data[i + 2] = ((byte)((result >> 16) & 0xff));
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Data[i + 2] = ((byte)((result >> 16) & 0xff));
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Data[i + 3] = ((byte)((result >> 24) & 0xff));
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Data[i + 3] = ((byte)((result >> 24) & 0xff));
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: i < Data.Length - 3
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Seed1 = ((~Seed1 << 21) + 0x11111111) | (Seed1 >> 11);
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: Seed1 = ((~Seed1 << 21) + 0x11111111) | (Seed1 >> 11);
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: seed2 = result + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DecryptBlock,The following statement contains a magic number: seed2 = result + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DetectFileSeed,The following statement contains a magic number: seed1 = ((~seed1 << 21) + 0x11111111) | (seed1 >> 11);
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DetectFileSeed,The following statement contains a magic number: seed1 = ((~seed1 << 21) + 0x11111111) | (seed1 >> 11);
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DetectFileSeed,The following statement contains a magic number: seed2 = result + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DetectFileSeed,The following statement contains a magic number: seed2 = result + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DetectFileSeed,The following statement contains a magic number: seed1 = ((~seed1 << 21) + 0x11111111) | (seed1 >> 11);
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DetectFileSeed,The following statement contains a magic number: seed1 = ((~seed1 << 21) + 0x11111111) | (seed1 >> 11);
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DetectFileSeed,The following statement contains a magic number: seed2 = result + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,DetectFileSeed,The following statement contains a magic number: seed2 = result + seed2 + (seed2 << 5) + 3;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,BuildStormBuffer,The following statement contains a magic number: seed = (seed * 125 + 3) % 0x2aaaab;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,BuildStormBuffer,The following statement contains a magic number: seed = (seed * 125 + 3) % 0x2aaaab;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,BuildStormBuffer,The following statement contains a magic number: uint temp = (seed & 0xffff) << 16;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,BuildStormBuffer,The following statement contains a magic number: seed = (seed * 125 + 3) % 0x2aaaab;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,BuildStormBuffer,The following statement contains a magic number: seed = (seed * 125 + 3) % 0x2aaaab;
Magic Number,MpqReader,MpqArchive,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqArchive.cs,BuildStormBuffer,The following statement contains a magic number: i < 5
Magic Number,MpqReader,MpqHuffman,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqHuffman.cs,Decompress,The following statement contains a magic number: switch(decoded)  				{  					case 256:  						break;  					case 257:  						int newvalue = bitstream.ReadBits(8);  						outputstream.WriteByte((byte)newvalue);  						tail = InsertNode(tail' newvalue);  						break;  					default:  						outputstream.WriteByte((byte)decoded);  						break;  				}
Magic Number,MpqReader,MpqHuffman,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqHuffman.cs,Decompress,The following statement contains a magic number: switch(decoded)  				{  					case 256:  						break;  					case 257:  						int newvalue = bitstream.ReadBits(8);  						outputstream.WriteByte((byte)newvalue);  						tail = InsertNode(tail' newvalue);  						break;  					default:  						outputstream.WriteByte((byte)decoded);  						break;  				}
Magic Number,MpqReader,MpqHuffman,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqHuffman.cs,Decompress,The following statement contains a magic number: switch(decoded)  				{  					case 256:  						break;  					case 257:  						int newvalue = bitstream.ReadBits(8);  						outputstream.WriteByte((byte)newvalue);  						tail = InsertNode(tail' newvalue);  						break;  					default:  						outputstream.WriteByte((byte)decoded);  						break;  				}
Magic Number,MpqReader,MpqHuffman,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqHuffman.cs,BuildList,The following statement contains a magic number: var root = new LinkedNode(256' 1);
Magic Number,MpqReader,MpqHuffman,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqHuffman.cs,BuildList,The following statement contains a magic number: root = root.Insert(new LinkedNode(257' 1));
Magic Number,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,LoadBlockPositions,The following statement contains a magic number: uint blockpossize = (uint) blockposcount * 4;
Magic Number,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,LoadBlock,The following statement contains a magic number: uint value1 = BitConverter.ToUInt32(data' 4);
Magic Number,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,LoadBlock,The following statement contains a magic number: mSeed1 = MpqArchive.DetectFileSeed(value0' value1' 0x46464952' mBlock.FileSize - 8);
Magic Number,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,LoadBlock,The following statement contains a magic number: mBlock.IsEncrypted && mBlock.FileSize > 3
Magic Number,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,DecompressMulti,The following statement contains a magic number: (comptype & 8) != 0
Magic Number,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,DecompressMulti,The following statement contains a magic number: (comptype & 2) != 0
Magic Number,MpqReader,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqStream.cs,DecompressMulti,The following statement contains a magic number: byte[] result = MpqWavCompression.Decompress(sinput' 2);
Magic Number,MpqReader,MpqWavCompression,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqWavCompression.cs,Decompress,The following statement contains a magic number: ChannelCount == 2
Magic Number,MpqReader,MpqWavCompression,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqWavCompression.cs,Decompress,The following statement contains a magic number: switch (value & 0x7f)  					{  						case 0:  							if(Array1[channel] != 0) Array1[channel]--;  							output.Write((short)Array2[channel]);  							break;  						case 1:  							Array1[channel] += 8;  							if(Array1[channel] > 0x58) Array1[channel] = 0x58;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  						case 2:  							break;  						default:  							Array1[channel] -= 8;  							if(Array1[channel] < 0) Array1[channel] = 0;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  					}
Magic Number,MpqReader,MpqWavCompression,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqWavCompression.cs,Decompress,The following statement contains a magic number: switch (value & 0x7f)  					{  						case 0:  							if(Array1[channel] != 0) Array1[channel]--;  							output.Write((short)Array2[channel]);  							break;  						case 1:  							Array1[channel] += 8;  							if(Array1[channel] > 0x58) Array1[channel] = 0x58;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  						case 2:  							break;  						default:  							Array1[channel] -= 8;  							if(Array1[channel] < 0) Array1[channel] = 0;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  					}
Magic Number,MpqReader,MpqWavCompression,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqWavCompression.cs,Decompress,The following statement contains a magic number: switch (value & 0x7f)  					{  						case 0:  							if(Array1[channel] != 0) Array1[channel]--;  							output.Write((short)Array2[channel]);  							break;  						case 1:  							Array1[channel] += 8;  							if(Array1[channel] > 0x58) Array1[channel] = 0x58;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  						case 2:  							break;  						default:  							Array1[channel] -= 8;  							if(Array1[channel] < 0) Array1[channel] = 0;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  					}
Magic Number,MpqReader,MpqWavCompression,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqWavCompression.cs,Decompress,The following statement contains a magic number: switch (value & 0x7f)  					{  						case 0:  							if(Array1[channel] != 0) Array1[channel]--;  							output.Write((short)Array2[channel]);  							break;  						case 1:  							Array1[channel] += 8;  							if(Array1[channel] > 0x58) Array1[channel] = 0x58;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  						case 2:  							break;  						default:  							Array1[channel] -= 8;  							if(Array1[channel] < 0) Array1[channel] = 0;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  					}
Magic Number,MpqReader,MpqWavCompression,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\MpqWavCompression.cs,Decompress,The following statement contains a magic number: switch (value & 0x7f)  					{  						case 0:  							if(Array1[channel] != 0) Array1[channel]--;  							output.Write((short)Array2[channel]);  							break;  						case 1:  							Array1[channel] += 8;  							if(Array1[channel] > 0x58) Array1[channel] = 0x58;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  						case 2:  							break;  						default:  							Array1[channel] -= 8;  							if(Array1[channel] < 0) Array1[channel] = 0;  							if (ChannelCount == 2) channel = 1 - channel;  							break;  					}
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,PKLibDecompress,The following statement contains a magic number: 4 > mDSizeBits || mDSizeBits > 6
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,PKLibDecompress,The following statement contains a magic number: 4 > mDSizeBits || mDSizeBits > 6
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,DecodeLit,The following statement contains a magic number: switch(mStream.ReadBits(1))  			{  				case -1:  					return -1;  					  				case 1:  					// The next bits are position in buffers  					int pos = sPosition2[mStream.PeekByte()];    					// Skip the bits we just used  					if (mStream.ReadBits(sLenBits[pos]) == -1) return -1;  	  					int nbits = sExLenBits[pos];  					if(nbits != 0)  					{  						// TODO: Verify this conversion  						int val2 = mStream.ReadBits(nbits);  						if (val2 == -1 && (pos + val2 != 0x10e)) return -1;    						pos = sLenBase[pos] + val2;  					}  					return pos + 0x100; // Return number of bytes to repeat    				case 0:  					if (mCType == CompressionType.Binary)  						return mStream.ReadBits(8);    					// TODO: Text mode  					throw new NotImplementedException("Text mode is not yet implemented");  				default:  					return 0;  			}
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,DecodeDist,The following statement contains a magic number: mStream.EnsureBits(8) == false
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,DecodeDist,The following statement contains a magic number: mStream.EnsureBits(2) == false
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,DecodeDist,The following statement contains a magic number: pos = (pos << 2) | mStream.ReadBits(2);
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,DecodeDist,The following statement contains a magic number: pos = (pos << 2) | mStream.ReadBits(2);
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,DecodeDist,The following statement contains a magic number: Length == 2
Magic Number,MpqReader,PKLibDecompress,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\SCSharp.Mpq\PKLibDecompress.cs,GenerateDecodeTable,The following statement contains a magic number: var result = new byte[256];
Magic Number,WCell.MPQTool.StormLibWrapper,MpqFile,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\StormLibWrapper\MpqFile.cs,GetFileSize,The following statement contains a magic number: return ((long)highBits << 32) + lowBits;
Magic Number,WCell.MPQTool.StormLibWrapper,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\StormLibWrapper\MpqStream.cs,Seek,The following statement contains a magic number: var distanceToMoveHigh = (int)(Math.Abs(offset) >> 32) * Math.Sign(offset);
Magic Number,WCell.MPQTool.StormLibWrapper,MpqStream,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.MPQTool\StormLibWrapper\MpqStream.cs,Seek,The following statement contains a magic number: return position = ((long)distanceToMoveHigh << 32) + newPosition;
