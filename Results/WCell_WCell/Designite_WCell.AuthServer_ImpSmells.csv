Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WCell.AuthServer.Commands,AccountCommand,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Commands\AccountCommands.cs,Process,Cyclomatic complexity of the method is 8
Complex Method,WCell.AuthServer.IPC,IPCServiceAdapter,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\IPC\IPCServiceAdapter.cs,RegisterRealmServer,Cyclomatic complexity of the method is 9
Long Parameter List,WCell.AuthServer.Accounts,AccountMgr,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Accounts\AccountMgr.cs,CreateAccount,The method has 5 parameters. Parameters: username' passHash' email' privLevel' clientId
Long Parameter List,WCell.AuthServer.Accounts,AccountMgr,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Accounts\AccountMgr.cs,CreateAccount,The method has 5 parameters. Parameters: username' password' email' privLevel' clientId
Long Parameter List,WCell.AuthServer.IPC,IPCServiceAdapter,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\IPC\IPCServiceAdapter.cs,RegisterRealmServer,The method has 10 parameters. Parameters: realmName' addr' port' chrCount' capacity' serverType' flags' serverCategory' serverStatus' clientVersion
Long Parameter List,WCell.AuthServer.IPC,IPCServiceAdapter,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\IPC\IPCServiceAdapter.cs,UpdateRealmServer,The method has 7 parameters. Parameters: serverName' chrCount' capacity' serverType' flags' serverCategory' serverStatus
Long Statement,WCell.AuthServer,AuthServerConfiguration,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\AuthServerConfiguration.cs,Init,The length of the statement  "					log.Warn("Config-file \"{0}\" not found - Created new \"{0}\". Please take a little time to configure your server and then restart the Application."'Instance.FilePath); " is 168.
Long Statement,WCell.AuthServer.Commands,SetClientIdCommand,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Commands\AccountCommands.cs,Process,The length of the statement  "						trigger.Reply("Invalid ClientId specified - Choose either of: " + Enum.GetValues(typeof(ClientId)).OfType<object>().ToString("' ")); " is 132.
Long Statement,WCell.AuthServer.Commands,AddBanCommand,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Commands\AdminCommands.cs,Initialize,The length of the statement  "				EnglishDescription = "Adds a new Ban on the given mask and optionally a time until the Ban will be lifted and a reason."; " is 121.
Long Statement,WCell.AuthServer.Commands,GCCommand,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Commands\DevCommands.cs,Initialize,The length of the statement  "				EnglishDescription = "Don't use this unless you are well aware of the stages and heuristics involved in the GC process!"; " is 121.
Long Statement,WCell.AuthServer.IPC,IPCServiceAdapter,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\IPC\IPCServiceAdapter.cs,GetCurrentEndPoint,The length of the statement  "            return (RemoteEndpointMessageProperty)OperationContext.Current.IncomingMessageProperties[RemoteEndpointMessageProperty.Name]; " is 125.
Long Statement,WCell.AuthServer.IPC,IPCServiceAdapter,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\IPC\IPCServiceAdapter.cs,RegisterRealmServer,The length of the statement  "						log.Warn("Unallowed Realm (\"{0}\") tried to register from: {1} (For more info' see the <RealmIPs> entry in your configuration)"'  " is 129.
Complex Conditional,WCell.AuthServer.Firewall,BanMgr,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Firewall\BanMgr.cs,IsInvalid,The conditional expression  "(bte != -1 && bte != 0) || (found != -2 && bte != found)"  is complex.
Empty Catch Block,WCell.AuthServer.Database,AuthDBMgr,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Database\AuthDBMgr.cs,Initialize,The method has an empty catch block.
Empty Catch Block,WCell.AuthServer.IPC,IPCServiceAdapter,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\IPC\IPCServiceAdapter.cs,RegisterRealmServer,The method has an empty catch block.
Empty Catch Block,WCell.AuthServer.IPC,IPCServiceHost,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\IPC\IPCServiceHost.cs,StopService,The method has an empty catch block.
Magic Number,WCell.AuthServer,AuthenticationHandler,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\AuthenticationHandler.cs,SendAuthChallengeSuccessReply,The following statement contains a magic number: byte[] randbytes = new byte[16];
Magic Number,WCell.AuthServer,AuthenticationHandler,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\AuthenticationHandler.cs,LoginClient,The following statement contains a magic number: var authInfo = new AuthenticationInfo  			{  				SessionKey = client.Authenticator.SRP.SessionKey.GetBytes(40)'  				Salt = client.Authenticator.SRP.Salt.GetBytes(32)'  				Verifier = client.Authenticator.SRP.Verifier.GetBytes()'  				SystemInformation = ClientInformation.Serialize(client.Info)  			};
Magic Number,WCell.AuthServer,AuthenticationHandler,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\AuthenticationHandler.cs,LoginClient,The following statement contains a magic number: var authInfo = new AuthenticationInfo  			{  				SessionKey = client.Authenticator.SRP.SessionKey.GetBytes(40)'  				Salt = client.Authenticator.SRP.Salt.GetBytes(32)'  				Verifier = client.Authenticator.SRP.Verifier.GetBytes()'  				SystemInformation = ClientInformation.Serialize(client.Info)  			};
Magic Number,WCell.AuthServer,AuthenticationHandler,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\AuthenticationHandler.cs,AutoCreateAccount,The following statement contains a magic number: return AccountMgr.Instance.CreateAccount(  				client.AccountName'  				client.Authenticator.SRP.Credentials.GetBytes(20)'  				null'  				role'  				ClientId.Wotlk  				);
Magic Number,WCell.AuthServer,RealmEntry,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\RealmEntry.cs,SendRealmList,The following statement contains a magic number: packet.Position += 2;
Magic Number,WCell.AuthServer,RealmEntry,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\RealmEntry.cs,SendRealmList,The following statement contains a magic number: packet.Write((short)packet.TotalLength - 3);
Magic Number,WCell.AuthServer.Commands,ShutdownCommand,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Commands\AdminCommands.cs,Process,The following statement contains a magic number: var delay = trigger.Text.NextUInt(10);
Magic Number,WCell.AuthServer.Commands,ShutdownCommand,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Commands\AdminCommands.cs,Process,The following statement contains a magic number: AuthenticationServer.Instance.ShutdownIn(delay * 1000);
Magic Number,WCell.AuthServer.Firewall,BanMgr,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Firewall\BanMgr.cs,IsInvalid,The following statement contains a magic number: var found = -2;
Magic Number,WCell.AuthServer.Firewall,BanMgr,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Firewall\BanMgr.cs,IsInvalid,The following statement contains a magic number: (bte != -1 && bte != 0) || (found != -2 && bte != found)
Magic Number,WCell.AuthServer.Firewall,BanMgr,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Firewall\BanMgr.cs,GetBytes,The following statement contains a magic number: var maskParts = new int[6];
Magic Number,WCell.AuthServer.Database,AuthDBMgr,D:\research\architectureSmells\repos\WCell_WCell\Services\WCell.AuthServer\Database\AuthDBMgr.cs,Initialize,The following statement contains a magic number: DatabaseUtil.DBErrorHook = exception => AccountMgr.Instance.Count < 100;
