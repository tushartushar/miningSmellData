Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WCell.Tools.Commands,PASubCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,WCell.Tools.Domi,WCellEnumWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\WCellEnumWriter.cs,WriteEnum,Cyclomatic complexity of the method is 16
Complex Method,WCell.Tools.Domi.Output,GOOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\GOOutput.cs,Write,Cyclomatic complexity of the method is 13
Complex Method,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WritePassiveEffects,Cyclomatic complexity of the method is 12
Complex Method,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteInvisSpells,Cyclomatic complexity of the method is 9
Complex Method,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteSpellFamilies,Cyclomatic complexity of the method is 21
Complex Method,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,CreateMaps,Cyclomatic complexity of the method is 8
Complex Method,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,FindAbilities,Cyclomatic complexity of the method is 10
Complex Method,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,AddSpell,Cyclomatic complexity of the method is 15
Complex Method,WCell.Tools.PATools,PATool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\PATools\PATool.cs,DefaultOpCodeValidator,Cyclomatic complexity of the method is 16
Complex Method,WCell.Tools.PATools,PATool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\PATools\PATool.cs,OnLoad,Cyclomatic complexity of the method is 9
Long Parameter List,WCell.Tools.Domi,WCellEnumWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\WCellEnumWriter.cs,WriteEnum,The method has 7 parameters. Parameters: enumName' enumSuffix' group' values' validator' getNameDelegate' getIdDelegate
Long Parameter List,WCell.Tools.Domi,WCellEnumWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\WCellEnumWriter.cs,WriteEnum,The method has 10 parameters. Parameters: enumName' enumSuffix' group' values' hexadecimal' validator' getNameDelegate' getCommentDelegate' getDuplNameDelegate' getIdDelegate
Long Parameter List,WCell.Tools.Domi.Output,NPCOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\NPCOutput.cs,WritePerByte,The method has 5 parameters. Parameters: bytes0' no' name' enumType' convertType
Long Parameter List,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteFields,The method has 5 parameters. Parameters: writer' obj' fields' prefix' lookedUp
Long Parameter List,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteField,The method has 5 parameters. Parameters: writer' nameAndPrefix' fieldType' obj' lookedUp
Long Parameter List,WCell.Tools.PATools,PATool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\PATools\PATool.cs,Init,The method has 5 parameters. Parameters: parentCfg' filename' selectedDir' outputTarget' defaultParser
Long Parameter List,WCell.Tools,VariablePurifier,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\VariablePurifier.cs,PurifyFiles,The method has 5 parameters. Parameters: dirName' filter' recursive' backupDir' ignore
Long Parameter List,WCell.Tools,VariablePurifier,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\VariablePurifier.cs,PurifyFiles,The method has 5 parameters. Parameters: dir' filter' recursive' backupDir' ignore
Long Statement,WCell.Tools.Commands,PASelectDirCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Initialize,The length of the statement  "				EnglishDescription = "Selects the given directory or -if directory is ommited- shows the currently selected directory."; " is 120.
Long Statement,WCell.Tools.Commands,PASelectParserCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Initialize,The length of the statement  "				EnglishDescription = "Selects the given log-parser. Make sure to choose the right one for the format of your log files."; " is 121.
Long Statement,WCell.Tools.Commands,PAAddSelectedFilesCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Initialize,The length of the statement  "					"Parameters can either be fully qualified file-names (relative or absolute) or numbers that correspond to the index within the currently selected Directory. The -l switch optionally lists all files (with numbers) of the given directory."; " is 238.
Long Statement,WCell.Tools.Commands,PARemoveSelectedFilesCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Initialize,The length of the statement  "					"Removes either all (-a) or the given log-file(s) to the list of selected log-files. Only selected log-files will be parsed. " + " is 128.
Long Statement,WCell.Tools.Commands,PARemoveSelectedFilesCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Initialize,The length of the statement  "					"Parameters can either be fully qualified file-names (relative or absolute) or numbers that correspond to the index of the currently selected files."; " is 150.
Long Statement,WCell.Tools.Commands,PARemoveIncOrFilterCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Initialize,The length of the statement  "					EnglishDescription = "Removes inclusive Or-filters. - A packet is only parsed if its opcode contains at least one these." + " is 123.
Long Statement,WCell.Tools.Commands,PARemoveExcAndFilterCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Initialize,The length of the statement  "					EnglishDescription = "Removes exclusive And-filters. - A packet is only parsed if *no* opcode contains *all* of these." + " is 121.
Long Statement,WCell.Tools.Commands,PARemoveExcOrFilterCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\PacketAnalyzerCommand.cs,Initialize,The length of the statement  "					EnglishDescription = "Removes exclusive Or-filters. - A packet is only parsed if *no* opcode contains *any* of these." + " is 120.
Long Statement,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,WriteSpellLines,The length of the statement  "			using (writer = new CodeFileWriter(outputFileName' "WCell.RealmServer.Spells"' "SpellLines"' "static partial class"' ""' " is 120.
Long Statement,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,FindTalents,The length of the statement  "					((spell.Talent == null || spell.ClassId == 0) && (spell.Ability == null || spell.Rank == 0 || spell.Ability.Skill.Category != SkillCategory.Profession)) || " is 155.
Long Statement,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,FindTalents,The length of the statement  "					spell.HasEffectWith(effect => effect.EffectType == SpellEffectType.LearnPetSpell || effect.EffectType == SpellEffectType.LearnSpell)) " is 133.
Long Statement,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,AddSpell,The length of the statement  "					(spll.Description.Contains(spell.Id.ToString()) || spll.CategoryCooldownTime > 0 || (spll.CastDelay >0 && spell.CastDelay == 0)))) " is 130.
Long Statement,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,AddSpell,The length of the statement  "					(spell.Description.Contains(spll.Id.ToString()) || spll.CategoryCooldownTime == 0 || (spll.CastDelay > 0 && spell.CastDelay == 0))); " is 132.
Long Statement,WCell.Tools.PATools,PATool,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\PATools\PATool.cs,OnLoad,The length of the statement  "			m_parser = new GenericLogParser(m_LogParseHandler' new LogHandler(DefaultOpCodeValidator' HandlePackets' HandleUpdatePackets)); " is 127.
Long Statement,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellWithSpellClassMaskAndSpellClassSet,The length of the statement  "			            where ((spell.SpellClassMask[0] & u1) != 0) || ((spell.SpellClassMask[1] & u2) != 0) || ((spell.SpellClassMask[2] & u3) != 0) " is 125.
Complex Conditional,WCell.Tools.Domi.Output,GOOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\GOOutput.cs,Write,The conditional expression  "field.Name != "Names" && field.Name != "Id" && field.Name != "Fields" &&  				    field.Name != "InteractRadius" && field.Name != "Type" && field.Name != "Lock" &&  					field.Name != "LockId" && field.Name != "LinkedTrapId" && field.Name != "Templates" &&  					field.Name != "Id" && field.Name != "GOId""  is complex.
Complex Conditional,WCell.Tools.Domi.Output,GOOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\GOOutput.cs,IsDefaultVal,The conditional expression  "(val is int && ((int) val) == 0) ||  			    (val is uint && ((uint) val == 0 || (uint) val == uint.MaxValue)) ||  			    (val is float && ((float) val) == 0) ||  			    (val is bool && !(bool) val)"  is complex.
Complex Conditional,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteField,The conditional expression  "!(obj is string) && !(obj is Spell) && fieldFields.Length > 0 && !fieldType.IsEnum"  is complex.
Complex Conditional,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteSpellFamilies,The conditional expression  "spell.SpellClassSet != SpellClassSet.Generic && spell.Ability != null &&  				    IsEnhancer(spell) && !IsAbility(spell)"  is complex.
Complex Conditional,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,FindTalents,The conditional expression  "spell == null ||  					((spell.Talent == null || spell.ClassId == 0) && (spell.Ability == null || spell.Rank == 0 || spell.Ability.Skill.Category != SkillCategory.Profession)) ||  					spell.IsTriggeredSpell ||  					spell.HasEffectWith(effect => effect.EffectType == SpellEffectType.LearnPetSpell || effect.EffectType == SpellEffectType.LearnSpell)"  is complex.
Complex Conditional,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,AddSpell,The conditional expression  "line.Any(spll => spell.Rank == spll.Rank &&  					(spll.Description.Contains(spell.Id.ToString()) || spll.CategoryCooldownTime > 0 || (spll.CastDelay >0 && spell.CastDelay == 0)))"  is complex.
Magic Number,WCell.Tools.Commands,RandomWPCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\WPCommands.cs,Process,The following statement contains a magic number: var min = text.NextInt(3);
Magic Number,WCell.Tools.Commands,RandomWPCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\WPCommands.cs,Process,The following statement contains a magic number: var max = text.NextInt(5);
Magic Number,WCell.Tools.Commands,RandomWPCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\WPCommands.cs,Process,The following statement contains a magic number: var minDist = text.NextFloat(5);
Magic Number,WCell.Tools.Commands,RandomWPCommand,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Commands\WPCommands.cs,Process,The following statement contains a magic number: var maxDist = text.NextFloat(10);
Magic Number,WCell.Tools.Domi,WCellEnumWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\WCellEnumWriter.cs,WriteSpellLinesEnum,The following statement contains a magic number: var list = new List<string>(2000);
Magic Number,WCell.Tools.Domi,DistanceConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\WCellEnumWriter.cs,ConvertTo,The following statement contains a magic number: entry.Distance = GetFloat(rawData' 3);
Magic Number,WCell.Tools.Domi,DistanceConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\WCellEnumWriter.cs,ConvertTo,The following statement contains a magic number: entry.Name = GetString(rawData' 6);
Magic Number,WCell.Tools.Domi.Output,QuestOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\QuestOutput.cs,WriteQuests,The following statement contains a magic number: var quests = new List<QuestTemplate>(10000);
Magic Number,WCell.Tools.Domi.Output,GOOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\GOOutput.cs,Write,The following statement contains a magic number: var attrs = new List<string>(2);
Magic Number,WCell.Tools.Domi.Output,NPCOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\NPCOutput.cs,WritePetState,The following statement contains a magic number: WritePerByte(false' 2' "PetState"' typeof (PetState)' typeof (byte));
Magic Number,WCell.Tools.Domi.Output,NPCOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\NPCOutput.cs,WritePerByte,The following statement contains a magic number: uint byteSet = ((bytes0 ? data.Bytes : data.Bytes2) >> (no * 8)) & 0xff;
Magic Number,WCell.Tools.Domi.Output,NPCOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\NPCOutput.cs,WriteArr,The following statement contains a magic number: var strs = Utility.ToJoinedStringArr(col' 10' "' ");
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,GetSpellsByType,The following statement contains a magic number: var SpellsByType = new Dictionary<SpellEffectType' List<Spell>>(200);
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,GetSpellsByType,The following statement contains a magic number: SpellsByType.Add(effect' new List<Spell>(2000));
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteChanneledSpells,The following statement contains a magic number: List<Spell> spells = new List<Spell>(1000);
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteInvisSpells,The following statement contains a magic number: var invisSpells = new List<Spell>(100);
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteInvisSpells,The following statement contains a magic number: var detectSpells = new List<Spell>(100);
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteSpellFocusSpells,The following statement contains a magic number: Dictionary<SpellFocus' Dictionary<string' Spell>> spells =  					new Dictionary<SpellFocus' Dictionary<string' Spell>>(5000);
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteSpells,The following statement contains a magic number: var spells = new Dictionary<string' Spell>(5000);
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteAllFields,The following statement contains a magic number: var testSpell = SpellHandler.ById[100];
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteMissingItemIds,The following statement contains a magic number: var items = new Dictionary<uint' Spell>(500);
Magic Number,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteSpellFamilies,The following statement contains a magic number: var spells = new Dictionary<SpellClassSet' Dictionary<Spell' List<Spell>>>(100);
Magic Number,WCell.Tools.Mokrago,CombatRatingsOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Mokrago\CombatRatingsOutput.cs,WriteTableByClassLevel,The following statement contains a magic number: writer.WriteLine("Level {0}: {1}"' (k)' table[100*i+k-101]);
Magic Number,WCell.Tools.Mokrago,CombatRatingsOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Mokrago\CombatRatingsOutput.cs,WriteTableByClassLevel,The following statement contains a magic number: writer.WriteLine("Level {0}: {1}"' (k)' table[100*i+k-101]);
Magic Number,WCell.Tools.Mokrago,CombatRatingsOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Mokrago\CombatRatingsOutput.cs,WriteTableByClassLevel,The following statement contains a magic number: k < 101
Magic Number,WCell.Tools.Mokrago,CombatRatingsOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Mokrago\CombatRatingsOutput.cs,WriteTableByClassLevel,The following statement contains a magic number: i < 12
Magic Number,WCell.Tools.Mokrago,CombatRatingsOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Mokrago\CombatRatingsOutput.cs,WriteTableByClassLevel,The following statement contains a magic number: k < 101
Magic Number,WCell.Tools.Mokrago,CombatRatingsOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Mokrago\CombatRatingsOutput.cs,WriteTableByClassLevel,The following statement contains a magic number: i < 12
Magic Number,WCell.Tools.Spells,SpellFocusObjectReader,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellFocusObject.DBC.cs,Read,The following statement contains a magic number: var dict = new Dictionary<uint' string>(300);
Magic Number,WCell.Tools.Spells,SpellLineWriter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Spells\SpellLineWriter.cs,AddSpell,The following statement contains a magic number: Maps[(int)clss] = map = new Dictionary<string' HashSet<Spell>>(100);
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,SpellHasMask,The following statement contains a magic number: effect.AffectMask[0] > 0 || effect.AffectMask[1] > 0 || effect.AffectMask[2] > 0
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellsWithEffectMasks,The following statement contains a magic number: Console.WriteLine("{0}: {1} \t {2}{3}{4}"' spell.Id' spell.Name' spell.SpellClassMask[0].ToString("X8")'  				                  spell.SpellClassMask[1].ToString("X8")' spell.SpellClassMask[2].ToString("X8"));
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellsWithEffectMasks,The following statement contains a magic number: Console.WriteLine("{0} - {1}{2}{3}"' effect.EffectType' effect.AffectMask[0].ToString("X8")'  					                  effect.AffectMask[1].ToString("X8")' effect.AffectMask[2].ToString("X8"));
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellsWithFamilyMask,The following statement contains a magic number: var query = from spell in SpellHandler.ById  			            where spell != null  			            where spell.SpellClassMask[0] == u1 && spell.SpellClassMask[1] == u2 && spell.SpellClassMask[2] == u3  			            select spell;
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellsWithFamilyMask,The following statement contains a magic number: Console.WriteLine("{0}: {1} \t {2}{3}{4}"' spell.Id' spell.Name' spell.SpellClassMask[0].ToString("X8")'  				                  spell.SpellClassMask[1].ToString("X8")' spell.SpellClassMask[2].ToString("X8"));
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellsWithFamilyMask,The following statement contains a magic number: Console.WriteLine("{0} - {1}{2}{3}"' effect.EffectType' effect.AffectMask[0].ToString("X8")'  					                  effect.AffectMask[1].ToString("X8")' effect.AffectMask[2].ToString("X8"));
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindFubecasFrickinSpells,The following statement contains a magic number: var spell = SpellHandler.ById[53270];
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindFubecasFrickinSpells,The following statement contains a magic number: FindSpellWithSpellClassMaskAndSpellClassSet(spellMask0[0]' spellMask0[1]' spellMask0[2]' spellSet);
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindFubecasFrickinSpells,The following statement contains a magic number: FindSpellWithSpellClassMaskAndSpellClassSet(spellMask1[0]' spellMask1[1]' spellMask1[2]' spellSet);
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellWithSpellClassMaskAndSpellClassSet,The following statement contains a magic number: var query = from spell in SpellHandler.ById  			            where spell != null  			            where ((spell.SpellClassMask[0] & u1) != 0) || ((spell.SpellClassMask[1] & u2) != 0) || ((spell.SpellClassMask[2] & u3) != 0)                          where spell.SpellClassSet == set  			            select spell;
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellWithSpellClassMaskAndSpellClassSet,The following statement contains a magic number: Console.WriteLine("{0}: {1} \t {2}{3}{4}"' spell.Id' spell.Name' spell.SpellClassMask[0].ToString("X8")'  				                  spell.SpellClassMask[1].ToString("X8")' spell.SpellClassMask[2].ToString("X8"));
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,FindSpellWithSpellClassMaskAndSpellClassSet,The following statement contains a magic number: Console.WriteLine("\t{0} - {1}{2}{3}"' effect.EffectType' effect.AffectMask[0].ToString("X8")'  					                  effect.AffectMask[1].ToString("X8")' effect.AffectMask[2].ToString("X8"));
Magic Number,WCell.Tools.Ralek,SpellStudies,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\SpellStudies.cs,DisplayInfo,The following statement contains a magic number: Console.WriteLine("SpellClassMask: {0:X8}{1:X8}{2:X8}"' spell.SpellClassMask[0]' spell.SpellClassMask[1]'  				                  spell.SpellClassMask[2]);
Magic Number,WCell.Tools.Ralek,Extensions,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\Extensions.cs,Reverse,The following statement contains a magic number: i < length/2
Magic Number,WCell.Tools.Ralek,Extensions,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\Extensions.cs,ReadPackedGUID,The following statement contains a magic number: fullGUID |= ((ulong) binReader.ReadByte() << (i*8));
Magic Number,WCell.Tools.Ralek,Extensions,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\Extensions.cs,ReadPackedGUID,The following statement contains a magic number: i < 8
Magic Number,WCell.Tools,VariablePurifier,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\VariablePurifier.cs,Purify,The following statement contains a magic number: CaptureCollection captures = match.Groups[2].Captures;
Magic Number,WCell.Tools.Ralek.Utility,Stats,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\Utility\CodeTimers.cs,ComputeStats,The following statement contains a magic number: median = this[Count/2];
Magic Number,WCell.Tools.Ralek.Utility,Stats,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\Utility\CodeTimers.cs,ComputeStats,The following statement contains a magic number: Count%2 == 1
Magic Number,WCell.Tools.Ralek.Utility,CodeTimer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\Utility\CodeTimers.cs,GetOverhead,The following statement contains a magic number: i < 5
Magic Number,WCell.Tools.Ralek.Utility,CodeTimer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Ralek\Utility\CodeTimers.cs,GetOverhead,The following statement contains a magic number: overhead = overhead/5;
Duplicate Code,WCell.Tools.Domi.Output,SpellOutput,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.Tools\Domi\Output\SpellOutput.cs,WriteInvisSpells,The method contains a code clone-set at the following line numbers (starting from the method definition): ((27' 46)' (55' 74))
