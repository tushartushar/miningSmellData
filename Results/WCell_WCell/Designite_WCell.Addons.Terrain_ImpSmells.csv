Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WCell.Addons.Terrain,zzQuadTreeNode<T>,C:\repos\WCell_WCell\Addons\WCell.Addons.Terrain\QuadTree.cs,Query,Cyclomatic complexity of the method is 8
Long Statement,WCell.Addons.Terrain.Commands,LoadTileCommand,C:\repos\WCell_WCell\Addons\WCell.Addons.Terrain\Commands\TerrainCommands.cs,Initialize,The length of the statement  "				EnglishDescription = "Forces loading of the given tile. Careful' if the tile does not exist' this will use a lot of resources and consume quite a bit of time. " + " is 162.
Magic Number,WCell.Addons.Terrain.Commands,NavShowCommand,C:\repos\WCell_WCell\Addons\WCell.Addons.Terrain\Commands\NavCommands.cs,Process,The following statement contains a magic number: foreach (var poly in mesh.Polygons)  				{  					Debug.Assert(poly.Indices.Length == 3);  					var v1 = mesh.Vertices[poly.Indices[0]];  					var v2 = mesh.Vertices[poly.Indices[1]];  					var v3 = mesh.Vertices[poly.Indices[2]];    					// only get polygons that are narby  					if (p.GetDistance(ref v1) > radius &&  						p.GetDistance(ref v2) > radius &&  						p.GetDistance(ref v3) > radius) continue;    					var dumm1 = new NavFigurine();  					var dumm2 = new NavFigurine();  					var dumm3 = new NavFigurine();    					dumm1.SetOrientationTowards(ref v2);  					dumm1.ChannelObject = dumm2;  					map.AddObject(dumm1' ref v1);    					dumm2.SetOrientationTowards(ref v3);  					dumm2.ChannelObject = dumm3;  					map.AddObject(dumm2' ref v2);    					dumm3.SetOrientationTowards(ref v1);  					dumm3.ChannelObject = dumm1;  					map.AddObject(dumm3' ref v3);    					figurines.Add(dumm1);  					figurines.Add(dumm2);  					figurines.Add(dumm3);  				}
Magic Number,WCell.Addons.Terrain.Commands,NavShowCommand,C:\repos\WCell_WCell\Addons\WCell.Addons.Terrain\Commands\NavCommands.cs,Process,The following statement contains a magic number: foreach (var poly in mesh.Polygons)  				{  					Debug.Assert(poly.Indices.Length == 3);  					var v1 = mesh.Vertices[poly.Indices[0]];  					var v2 = mesh.Vertices[poly.Indices[1]];  					var v3 = mesh.Vertices[poly.Indices[2]];    					// only get polygons that are narby  					if (p.GetDistance(ref v1) > radius &&  						p.GetDistance(ref v2) > radius &&  						p.GetDistance(ref v3) > radius) continue;    					var dumm1 = new NavFigurine();  					var dumm2 = new NavFigurine();  					var dumm3 = new NavFigurine();    					dumm1.SetOrientationTowards(ref v2);  					dumm1.ChannelObject = dumm2;  					map.AddObject(dumm1' ref v1);    					dumm2.SetOrientationTowards(ref v3);  					dumm2.ChannelObject = dumm3;  					map.AddObject(dumm2' ref v2);    					dumm3.SetOrientationTowards(ref v1);  					dumm3.ChannelObject = dumm1;  					map.AddObject(dumm3' ref v3);    					figurines.Add(dumm1);  					figurines.Add(dumm2);  					figurines.Add(dumm3);  				}
Magic Number,WCell.Addons.Terrain,DebugSpells,C:\repos\WCell_WCell\Addons\WCell.Addons.Terrain\DebugSpells.cs,DisplayPath,The following statement contains a magic number: from.Z += 5;
Magic Number,WCell.Addons.Terrain,DebugSpells,C:\repos\WCell_WCell\Addons\WCell.Addons.Terrain\DebugSpells.cs,DisplayPath,The following statement contains a magic number: to.Z += 5;
