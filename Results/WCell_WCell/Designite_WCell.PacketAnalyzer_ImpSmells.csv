Implementation smell,Namespace,Class,File,Method,Description
Long Method,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The method has 171 lines of code.
Long Method,WCell.PacketAnalysis.Logs,KSnifferLogConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\KSnifferLogConverter.cs,Extract,The method has 126 lines of code.
Complex Method,WCell.PacketAnalysis,ParsedSegment,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\ParsedSegment.cs,RenderTo,Cyclomatic complexity of the method is 9
Complex Method,WCell.PacketAnalysis.Logs,KSnifferLogConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\KSnifferLogConverter.cs,Extract,Cyclomatic complexity of the method is 20
Complex Method,WCell.PacketAnalysis.Updates,MovementBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\MovementBlock.cs,Dump,Cyclomatic complexity of the method is 17
Complex Method,WCell.PacketAnalysis.Updates,MovementBlockHelper,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\MovementBlock.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,WCell.PacketAnalysis.Updates,MovementBlockHelper,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\MovementBlock.cs,ParseLiving,Cyclomatic complexity of the method is 11
Complex Method,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,UpdateBlock,Cyclomatic complexity of the method is 8
Complex Method,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,Dump,Cyclomatic complexity of the method is 9
Long Parameter List,WCell.PacketAnalysis.Updates,ParsedUpdatePacket,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\ParsedUpdatePacket.cs,Dump,The method has 5 parameters. Parameters: timeStamp' packetContent' isSingleBlock' writer' isCompressed
Long Statement,WCell.PacketAnalysis,ListPacketSegmentStructure,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketSegments.cs,Init,The length of the statement  "				throw new Exception("List " + Name + " in Defintion for " + def.PacketIds.ToString("' ") + " has no structure defined."); " is 121.
Long Statement,WCell.PacketAnalysis,ListPacketSegmentStructure,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketSegments.cs,Init,The length of the statement  "						throw new ArgumentException("Length-Segment \"" + LengthSegmentName + "\" for ListSegment " + this + " does not exist."); " is 121.
Long Statement,WCell.PacketAnalysis,ListPacketSegmentStructure,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketSegments.cs,ParseLengthExpr,The length of the statement  "				throw new Exception("Length Expression for List " + this + " does not contain variable replacement (" + LenExprVarName + ")"); " is 126.
Long Statement,WCell.PacketAnalysis,SwitchPacketSegmentStructure,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketSegments.cs,Init,The length of the statement  "					throw new ArgumentException("CompareWith-Segment \"" + ReferenceName + "\" for SwitchSegment " + this + " does not exist."); " is 124.
Long Statement,WCell.PacketAnalysis,SwitchCase,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SwitchCase.cs,Matches,The length of the statement  "				throw new Exception(string.Format("Switch {0} could not match its value '{1}' against parsed value: {2}"' m_switch' m_value' value)' e); " is 136.
Long Statement,WCell.PacketAnalysis.Samples,GOSerializer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Samples\GOSerializer.cs,HandlePacket,The length of the statement  "				"VALUES ({0}' {1}' {2}' {3})"' pac["Entry"].UIntValue' pac["Type"].UIntValue' pac["DisplayId"].UIntValue' pac["Name"].StringValue); " is 131.
Long Statement,WCell.PacketAnalysis.Samples,MixedPASample,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Samples\MixedSample.cs,Main,The length of the statement  "			// Parse all files in the dir "/logs" using the KSniffer-log-format (with all of a packet's content in a single line) and  " is 121.
Long Statement,WCell.PacketAnalysis.Samples,MixedPASample,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Samples\MixedSample.cs,HandleGOQueryPackets,The length of the statement  "				"VALUES ({0}' {1}' {2}' {3})"' pac["Entry"].UIntValue' pac["Type"].UIntValue' pac["DisplayId"].UIntValue' pac["Name"].StringValue); " is 131.
Long Statement,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The length of the statement  "				strVal = string.Format("{0} (#{1}{2}) - {3}/{4}"' skillId' (int)skillId' abandonable ? " /CanAbandon" : ""' current' max); " is 122.
Complex Conditional,WCell.PacketAnalysis.Logs,KSnifferLogConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\KSnifferLogConverter.cs,Extract,The conditional expression  "((line.Length > 5 && line[start = 4] == ':') || (start = line.IndexOf('|')) >= 0) &&  							   (end = line.IndexOf('|'' start += 1)) > 0"  is complex.
Magic Number,WCell.PacketAnalysis,PacketParser,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketParser.cs,ParseCompressedMove,The following statement contains a magic number: RealmServerOpCode opCode = (RealmServerOpCode) (arr[1] | arr[2] << 8);
Magic Number,WCell.PacketAnalysis,PacketParser,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketParser.cs,ParseCompressedMove,The following statement contains a magic number: RealmServerOpCode opCode = (RealmServerOpCode) (arr[1] | arr[2] << 8);
Magic Number,WCell.PacketAnalysis,PacketParser,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketParser.cs,ParseCompressedMove,The following statement contains a magic number: return new DisposableRealmPacketIn(segment' 1' length' length - 3' opCode);
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.UShort] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 2)  				{  					WarnLength(SimpleType.UShort' segment' parser);  					return (ushort)0;  				}  				return parser.Packet.ReadUInt16();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.Short] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 2)  				{  					WarnLength(SimpleType.Short' segment' parser);  					return (short)0;  				}  				return parser.Packet.ReadInt16();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.UInt] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 4)  				{  					WarnLength(SimpleType.UInt' segment' parser);  					return (uint)0;  				}  				return parser.Packet.ReadUInt32();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.Int] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 4)  				{  					WarnLength(SimpleType.Int' segment' parser);  					return 0;  				}  				return parser.Packet.ReadInt32();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.ULong] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 8)  				{  					WarnLength(SimpleType.ULong' segment' parser);  					return 0ul;  				}  				return parser.Packet.ReadUInt64();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.Long] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 8)  				{  					WarnLength(SimpleType.Long' segment' parser);  					return 0L;  				}  				return parser.Packet.ReadInt64();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.Float] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 4)  				{  					WarnLength(SimpleType.Float' segment' parser);  					return 0f;  				}  				return parser.Packet.ReadFloat();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.Vector3] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 12)  				{  					WarnLength(SimpleType.Vector3' segment' parser);  					return new Vector3();  				}  				return new Vector3(  					parser.Packet.ReadFloat()'  					parser.Packet.ReadFloat()'  					parser.Packet.ReadFloat());  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.PackedVector3] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 4)  				{  					WarnLength(SimpleType.PackedVector3' segment' parser);  					return new Vector3();  				}                  return Vector3.FromPacked(parser.Packet.ReadUInt32());              };
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.Vector4] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 16)  				{  					WarnLength(SimpleType.Vector4' segment' parser);  					return new Vector4();  				}  				return new Vector4(  					parser.Packet.ReadFloat()'  					parser.Packet.ReadFloat()'  					parser.Packet.ReadFloat()'  					parser.Packet.ReadFloat());  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.Guid] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 8)  				{  					WarnLength(SimpleType.Guid' segment' parser);  					return EntityId.Zero;  				}  				return new EntityId(parser.Packet.ReadUInt64());  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.PascalStringUShort] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 2)  				{  					WarnLength(SimpleType.PascalStringUShort' segment' parser);  					return "";  				}  				return parser.Packet.ReadPascalStringUShort();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(uint)SimpleType.PascalStringUInt] = (segment' parser) => {  				if (parser.Packet.RemainingLength < 4)  				{  					WarnLength(SimpleType.PascalStringUInt' segment' parser);  					return "";  				}  				return parser.Packet.ReadPascalStringUInt();  			};
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(int) SimpleType.PackedDate] =  		        (segment' parser) =>  		            {  		                if (parser.Packet.RemainingLength < 4)  						{  							WarnLength(SimpleType.PackedDate' segment' parser);  		                    return "";  		                }  		                return  		                    Utility.GetGameTimeToDateTime(  		                        parser.Packet.ReadUInt32()).  		                        ToString();  		            };
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitReaders,The following statement contains a magic number: SimpleReaders[(int) SimpleType.UnixTime] =  		        (segment' parser) =>  		            {  		                if (parser.Packet.RemainingLength < 4)  		                {  		                	WarnLength(SimpleType.UnixTime' segment' parser);  		                    return "";  		                }  		                return Utility.GetDateTimeFromUnixTime(parser.Packet.ReadUInt32()).ToString();  		            };
Magic Number,WCell.PacketAnalysis,SimpleTypes,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\SimpleTypes.cs,InitStringReaders,The following statement contains a magic number: SimpleStringReaders[(uint)SimpleType.Guid] = (str) => {  				ulong val;  				if (str.StartsWith("0x"))  				{  					val = ulong.Parse(str.Substring(2)' System.Globalization.NumberStyles.HexNumber);  				}  				else  				{  					val = ulong.Parse(str);  				}  				return new EntityId(val);  			};
Magic Number,WCell.PacketAnalysis,PacketAnalyzer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketAnalyzer.cs,RegisterDefintion,The following statement contains a magic number: arr[id.RawId * 2] = def;
Magic Number,WCell.PacketAnalysis,PacketAnalyzer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketAnalyzer.cs,RegisterDefintion,The following statement contains a magic number: arr[id.RawId * 2 + 1] = def;
Magic Number,WCell.PacketAnalysis,PacketAnalyzer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketAnalyzer.cs,GetDefinition,The following statement contains a magic number: rawId * 2 >= arr.Length
Magic Number,WCell.PacketAnalysis,PacketAnalyzer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketAnalyzer.cs,GetDefinition,The following statement contains a magic number: return arr[rawId * 2];
Magic Number,WCell.PacketAnalysis,PacketAnalyzer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketAnalyzer.cs,GetDefinition,The following statement contains a magic number: return arr[rawId * 2 + 1];
Magic Number,WCell.PacketAnalysis,PacketAnalyzer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketAnalyzer.cs,LoadDefinitions,The following statement contains a magic number: PacketDefinitions[(int)ServiceType.Authentication] = new PacketDefinition[((uint)AuthServerOpCode.Maximum * 2) + 1];
Magic Number,WCell.PacketAnalysis,PacketAnalyzer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\PacketAnalyzer.cs,LoadDefinitions,The following statement contains a magic number: PacketDefinitions[(int)ServiceType.Realm] = new PacketDefinition[((uint)RealmServerOpCode.Maximum * 2) + 1];
Magic Number,WCell.PacketAnalysis.Logs,KSnifferLogConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\KSnifferLogConverter.cs,Extract,The following statement contains a magic number: packet.PacketId == RealmServerOpCode.SMSG_COMPRESSED_UPDATE_OBJECT && packet.Length < 20
Magic Number,WCell.PacketAnalysis.Logs,WlpConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\WlpConverter.cs,Extract,The following statement contains a magic number: reader.ReadBytes(3);
Magic Number,WCell.PacketAnalysis.Logs,WlpConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\WlpConverter.cs,Extract,The following statement contains a magic number: reader.ReadBytes(2);
Magic Number,WCell.PacketAnalysis.Logs,WlpConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\WlpConverter.cs,Extract,The following statement contains a magic number: reader.ReadBytes(4);
Magic Number,WCell.PacketAnalysis.Logs,WlpConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\WlpConverter.cs,Extract,The following statement contains a magic number: reader.ReadBytes(20);
Magic Number,WCell.PacketAnalysis.Logs,WlpConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\WlpConverter.cs,Extract,The following statement contains a magic number: reader.ReadBytes(64);
Magic Number,WCell.PacketAnalysis.Logs,WlpConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\WlpConverter.cs,Extract,The following statement contains a magic number: var data = reader.ReadBytes(length - (direction == PacketSender.Client ? 4 : 2));
Magic Number,WCell.PacketAnalysis.Logs,WlpConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Logs\WlpConverter.cs,Extract,The following statement contains a magic number: var data = reader.ReadBytes(length - (direction == PacketSender.Client ? 4 : 2));
Magic Number,WCell.PacketAnalysis.Samples,MixedPASample,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Samples\MixedSample.cs,HandleUpdatePackets,The following statement contains a magic number: block.GetUInt(UnitFields.LEVEL) > 80u
Magic Number,WCell.PacketAnalysis.Samples,TrainerInfoExtractor,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Samples\TrainerInfoExtractor.cs,HandleTrainerList,The following statement contains a magic number: var reqSpells = new SpellId[3];
Magic Number,WCell.PacketAnalysis.Samples,TrainerInfoExtractor,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Samples\TrainerInfoExtractor.cs,HandleTrainerList,The following statement contains a magic number: reqSpells[2] = (SpellId)spellSegment["RequiredSpellId3"].UIntValue;
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderer,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderer.cs,Render,The following statement contains a magic number: var fieldNum = index / 4;
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,GetSizeof,The following statement contains a magic number: return 2;
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,RenderTwoInt16,The following statement contains a magic number: byte[] rawField = values.GetBytes(field.Index' 4);
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,RenderTwoInt16,The following statement contains a magic number: var val2 = BitConverter.ToUInt16(rawField' 2);
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,RenderByteArray,The following statement contains a magic number: var bytes = values.GetBytes(field.Index' 4);
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,RenderByteArray,The following statement contains a magic number: string[] s = new string[4];
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,RenderUInt64,The following statement contains a magic number: return 2;
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,RenderGUID,The following statement contains a magic number: return 2;
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_0] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("Race: " + (RaceId)val[0]);  				str.Add("Class: " + (ClassId)val[1]);  				str.Add("Gender: " + (GenderType)val[2]);  				str.Add("PowerType: " + (PowerType)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_0] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("Race: " + (RaceId)val[0]);  				str.Add("Class: " + (ClassId)val[1]);  				str.Add("Gender: " + (GenderType)val[2]);  				str.Add("PowerType: " + (PowerType)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_0] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("Race: " + (RaceId)val[0]);  				str.Add("Class: " + (ClassId)val[1]);  				str.Add("Gender: " + (GenderType)val[2]);  				str.Add("PowerType: " + (PowerType)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_1] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("StandState: " + (StandState)val[0]);  				str.Add("PetTalentPoints: " + val[1]);                  str.Add("StateFlag: " + (StateFlag)val[2]);  				str.Add("UFB_1_4: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_1] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("StandState: " + (StandState)val[0]);  				str.Add("PetTalentPoints: " + val[1]);                  str.Add("StateFlag: " + (StateFlag)val[2]);  				str.Add("UFB_1_4: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_1] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("StandState: " + (StandState)val[0]);  				str.Add("PetTalentPoints: " + val[1]);                  str.Add("StateFlag: " + (StateFlag)val[2]);  				str.Add("UFB_1_4: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("SheathType: " + (SheathType)val[0]);  				str.Add("PVP State: " + (PvPState)val[1]);  				str.Add("PetState: " + (PetState)val[2]);                  str.Add("ShapeShift: " + (ShapeshiftForm)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("SheathType: " + (SheathType)val[0]);  				str.Add("PVP State: " + (PvPState)val[1]);  				str.Add("PetState: " + (PetState)val[2]);                  str.Add("ShapeShift: " + (ShapeshiftForm)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupUnitRenderers,The following statement contains a magic number: CustomRenderers[UnitFields.BYTES_2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>();  				str.Add("SheathType: " + (SheathType)val[0]);  				str.Add("PVP State: " + (PvPState)val[1]);  				str.Add("PetState: " + (PetState)val[2]);                  str.Add("ShapeShift: " + (ShapeshiftForm)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("Skin: " + val[0]);  				str.Add("Face: " + val[1]);  				str.Add("HairStyle: " + val[2]);  				str.Add("HairColor: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("Skin: " + val[0]);  				str.Add("Face: " + val[1]);  				str.Add("HairStyle: " + val[2]);  				str.Add("HairColor: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("Skin: " + val[0]);  				str.Add("Face: " + val[1]);  				str.Add("HairStyle: " + val[2]);  				str.Add("HairColor: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES_2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("FacialHair: " + val[0]);  				str.Add("PB2_2: " + val[1]);  				str.Add("Bankbag Slots: " + val[2]);  				str.Add("RestState: " + (RestState)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES_2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("FacialHair: " + val[0]);  				str.Add("PB2_2: " + val[1]);  				str.Add("Bankbag Slots: " + val[2]);  				str.Add("RestState: " + (RestState)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES_2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("FacialHair: " + val[0]);  				str.Add("PB2_2: " + val[1]);  				str.Add("Bankbag Slots: " + val[2]);  				str.Add("RestState: " + (RestState)val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES_3] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("Gender: " + (GenderType)val[0]);  				str.Add("Drunkeness: " + val[1]);  				str.Add("PB3_3: " + val[2]);  				str.Add("PvPRank: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES_3] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("Gender: " + (GenderType)val[0]);  				str.Add("Drunkeness: " + val[1]);  				str.Add("PB3_3: " + val[2]);  				str.Add("PvPRank: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.BYTES_3] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("Gender: " + (GenderType)val[0]);  				str.Add("Drunkeness: " + val[1]);  				str.Add("PB3_3: " + val[2]);  				str.Add("PvPRank: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.PLAYER_FIELD_BYTES] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("PFB_1: " + val[0]);  				str.Add("PFB_2: " + val[1]);  				str.Add("PFB_3: " + val[2]);  				str.Add("PFB_4: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.PLAYER_FIELD_BYTES] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("PFB_1: " + val[0]);  				str.Add("PFB_2: " + val[1]);  				str.Add("PFB_3: " + val[2]);  				str.Add("PFB_4: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.PLAYER_FIELD_BYTES] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				List<string> str = new List<string>();    				str.Add("PFB_1: " + val[0]);  				str.Add("PFB_2: " + val[1]);  				str.Add("PFB_3: " + val[2]);  				str.Add("PFB_4: " + val[3]);  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.PLAYER_FIELD_BYTES2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>  				          	{  				          		"PFB2_1: " + val[0]'   								"PFB2_2: " + val[1]'   								"PFB2_3: " + val[2]'   								"PFB2_4: " + val[3]  				          	};    				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.PLAYER_FIELD_BYTES2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>  				          	{  				          		"PFB2_1: " + val[0]'   								"PFB2_2: " + val[1]'   								"PFB2_3: " + val[2]'   								"PFB2_4: " + val[3]  				          	};    				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: CustomRenderers[PlayerFields.PLAYER_FIELD_BYTES2] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>  				          	{  				          		"PFB2_1: " + val[0]'   								"PFB2_2: " + val[1]'   								"PFB2_3: " + val[2]'   								"PFB2_4: " + val[3]  				          	};    				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: SetRenderer(PlayerFields.SKILL_INFO_1_1' 384' (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var i = renderer.Index * 4;  				var skillId = (SkillId)value.GetUInt16AtByte(i);  				var abandonable = value.GetUInt16AtByte(i += 2) != 0;  				var current = value.GetUInt16AtByte(i += 2);  				var max = value.GetUInt16AtByte(i);    				strVal = string.Format("{0} (#{1}{2}) - {3}/{4}"' skillId' (int)skillId' abandonable ? " /CanAbandon" : ""' current' max);  				return 2;  			});
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: SetRenderer(PlayerFields.SKILL_INFO_1_1' 384' (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var i = renderer.Index * 4;  				var skillId = (SkillId)value.GetUInt16AtByte(i);  				var abandonable = value.GetUInt16AtByte(i += 2) != 0;  				var current = value.GetUInt16AtByte(i += 2);  				var max = value.GetUInt16AtByte(i);    				strVal = string.Format("{0} (#{1}{2}) - {3}/{4}"' skillId' (int)skillId' abandonable ? " /CanAbandon" : ""' current' max);  				return 2;  			});
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: SetRenderer(PlayerFields.SKILL_INFO_1_1' 384' (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var i = renderer.Index * 4;  				var skillId = (SkillId)value.GetUInt16AtByte(i);  				var abandonable = value.GetUInt16AtByte(i += 2) != 0;  				var current = value.GetUInt16AtByte(i += 2);  				var max = value.GetUInt16AtByte(i);    				strVal = string.Format("{0} (#{1}{2}) - {3}/{4}"' skillId' (int)skillId' abandonable ? " /CanAbandon" : ""' current' max);  				return 2;  			});
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: SetRenderer(PlayerFields.SKILL_INFO_1_1' 384' (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var i = renderer.Index * 4;  				var skillId = (SkillId)value.GetUInt16AtByte(i);  				var abandonable = value.GetUInt16AtByte(i += 2) != 0;  				var current = value.GetUInt16AtByte(i += 2);  				var max = value.GetUInt16AtByte(i);    				strVal = string.Format("{0} (#{1}{2}) - {3}/{4}"' skillId' (int)skillId' abandonable ? " /CanAbandon" : ""' current' max);  				return 2;  			});
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupPlayerRenderers,The following statement contains a magic number: SetRenderer(PlayerFields.SKILL_INFO_1_1' 384' (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var i = renderer.Index * 4;  				var skillId = (SkillId)value.GetUInt16AtByte(i);  				var abandonable = value.GetUInt16AtByte(i += 2) != 0;  				var current = value.GetUInt16AtByte(i += 2);  				var max = value.GetUInt16AtByte(i);    				strVal = string.Format("{0} (#{1}{2}) - {3}/{4}"' skillId' (int)skillId' abandonable ? " /CanAbandon" : ""' current' max);  				return 2;  			});
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupGameObjectRenderers,The following statement contains a magic number: CustomRenderers[GameObjectFields.BYTES_1] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>                            	{                            		"State: " + val[0]'                            		"TypeId: " + (GameObjectType) val[1]'                            		"ArtKit: " + val[2]'                            		"AnimProgress: " + val[3]                            	};  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupGameObjectRenderers,The following statement contains a magic number: CustomRenderers[GameObjectFields.BYTES_1] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>                            	{                            		"State: " + val[0]'                            		"TypeId: " + (GameObjectType) val[1]'                            		"ArtKit: " + val[2]'                            		"AnimProgress: " + val[3]                            	};  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,FieldRenderUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\FieldRenderUtil.cs,SetupGameObjectRenderers,The following statement contains a magic number: CustomRenderers[GameObjectFields.BYTES_1] = (FieldRenderInfo renderer' byte[] value' out string strVal) => {  				var val = value.GetBytes(renderer.Index' 4);  				var str = new List<string>                            	{                            		"State: " + val[0]'                            		"TypeId: " + (GameObjectType) val[1]'                            		"ArtKit: " + val[2]'                            		"AnimProgress: " + val[3]                            	};  				strVal = str.ToString("' ");  				return 1;  			};
Magic Number,WCell.PacketAnalysis.Updates,MovementBlockHelper,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\MovementBlock.cs,Parse,The following statement contains a magic number: block.Update.packet.index -= 4;
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,GetByte,The following statement contains a magic number: var i = (uint)id.RawId * 4;
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,IsSet,The following statement contains a magic number: var i = (uint)id.RawId * 4;
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadUShort,The following statement contains a magic number: x = (ushort)(x + (packet.Bytes[packet.index++] << (j * 8)));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadUIntAmount,The following statement contains a magic number: x = x + (uint)(packet.Bytes[packet.index++] << (j * 8));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadIntAmount,The following statement contains a magic number: x = x + (packet.Bytes[packet.index++] << (j * 8));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadUInt,The following statement contains a magic number: x = x + (uint)(packet.Bytes[packet.index++] << (j * 8));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadInt,The following statement contains a magic number: x = x + (packet.Bytes[packet.index++] << (j * 8));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadUInt,The following statement contains a magic number: x = x + (uint)(packet.Bytes[index++] << (j * 8));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadInt,The following statement contains a magic number: x = x + (packet.Bytes[index++] << (j * 8));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadUInt64,The following statement contains a magic number: x += (ulong)(packet.Bytes[packet.index++] << (i * 8));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadEntityId,The following statement contains a magic number: return new EntityId(ReadBytes(8));
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadValues,The following statement contains a magic number: var values = ReadMask(blockCount' 4' "Values"' (index' bytes) =>  			{  				for (int i = 0; i < 4; i++)  				{  					bytes[index + i] = ReadByte();  				}  				list.Add(index);  			});
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadValues,The following statement contains a magic number: var values = ReadMask(blockCount' 4' "Values"' (index' bytes) =>  			{  				for (int i = 0; i < 4; i++)  				{  					bytes[index + i] = ReadByte();  				}  				list.Add(index);  			});
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ReadMask,The following statement contains a magic number: var fieldCount = 8 * valueSize;
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,Dump,The following statement contains a magic number: next != index + 4
Magic Number,WCell.PacketAnalysis.Updates,UpdateBlock,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateBlock.cs,ToString,The following statement contains a magic number: return index + " " + Type + (Values != null ? " (Values: " + Values.Length / 4 + ")" : "");
Magic Number,WCell.PacketAnalysis.Updates,UpdateFieldsUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateFieldsUtil.cs,Decompress,The following statement contains a magic number: byte[] compdata = new byte[bytes.Length - 4];
Magic Number,WCell.PacketAnalysis.Updates,UpdateFieldsUtil,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateFieldsUtil.cs,Decompress,The following statement contains a magic number: Array.Copy(bytes' 4' compdata' 0' compdata.Length);
Magic Number,WCell.PacketAnalysis.Updates,HexStringConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateFieldsUtil.cs,ToByteArray,The following statement contains a magic number: byte[] bytes = new byte[length / 2];
Magic Number,WCell.PacketAnalysis.Updates,HexStringConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateFieldsUtil.cs,ToByteArray,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hexString.Substring(i' 2)' 16);
Magic Number,WCell.PacketAnalysis.Updates,HexStringConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateFieldsUtil.cs,ToByteArray,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hexString.Substring(i' 2)' 16);
Magic Number,WCell.PacketAnalysis.Updates,HexStringConverter,D:\research\architectureSmells\repos\WCell_WCell\Utilities\WCell.PacketAnalyzer\Updates\UpdateFieldsUtil.cs,ToByteArray,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hexString.Substring(i' 2)' 16);
