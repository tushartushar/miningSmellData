Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Cell.Core,BufferManager,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\BufferManager.cs,CheckOut,The length of the statement  "				log.Error("Checked out segment (Size: {0}' Number: {1}) that is already in use! Queue contains: {2}' Buffer amount: {3}"' " is 121.
Long Statement,Cell.Core,BufferManager,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\BufferManager.cs,CheckIn,The length of the statement  "				log.Error("Checked in segment (Size: {0}' Number: {1}) that is already in use! Queue contains: {2}' Buffer amount: {3}"' " is 120.
Long Statement,Cell.Core,SegmentStream,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\SegmentStream.cs,CheckOpcode,The length of the statement  "			//var opcode = (RealmServerOpCode)(_segment.Buffer.Array[_segment.Offset + 2] | (_segment.Buffer.Array[_segment.Offset + 3] << 8)); " is 131.
Empty Catch Block,Cell.Core,ClientBase,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\ClientBase.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Cell.Core,ServerBase,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\ServerBase.cs,DisconnectClient,The method has an empty catch block.
Empty Catch Block,Cell.Core,ServerBase,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\ServerBase.cs,RemoveAllClients,The method has an empty catch block.
Empty Catch Block,Cell.Core,ServerBase,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\ServerBase.cs,ProcessAccept,The method has an empty catch block.
Empty Catch Block,Cell.Core,ServerBase,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\ServerBase.cs,ProcessUdpReceive,The method has an empty catch block.
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,SetUShortBE,The following statement contains a magic number: arr[index] = (byte)((val & 0xFF00) >> 8);
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetUInt16,The following statement contains a magic number: uint startIndex = field * 4;
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetUInt16,The following statement contains a magic number: startIndex + 2 > data.Length
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetUInt32,The following statement contains a magic number: uint startIndex = field * 4;
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetUInt32,The following statement contains a magic number: startIndex + 4 > data.Length
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetInt32,The following statement contains a magic number: uint startIndex = field * 4;
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetInt32,The following statement contains a magic number: startIndex + 4 > data.Length
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetFloat,The following statement contains a magic number: uint startIndex = field * 4;
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetFloat,The following statement contains a magic number: startIndex + 4 > data.Length
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetUInt64,The following statement contains a magic number: uint startIndex = startingField * 4;
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetUInt64,The following statement contains a magic number: startIndex + 8 > data.Length
Magic Number,Cell.Core,ByteArrHelper,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\Extensions.cs,GetBytes,The following statement contains a magic number: uint startIndex = startingField * 4;
Magic Number,Cell.Core,ServerBase,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\ServerBase.cs,Stop,The following statement contains a magic number: _tcpListen.Close(60);
Magic Number,Cell.Core,SocketHelpers,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\SocketHelpers.cs,SocketHelpers,The following statement contains a magic number: ObjectPoolMgr.SetMinimumSize<SocketAsyncEventArgs>(100);
Missing Default,Cell.Core,SegmentStream,D:\research\architectureSmells\repos\WCell_WCell\Core\Cell.Core\SegmentStream.cs,Seek,The following switch statement is missing a default case: switch (origin)  			{  				case SeekOrigin.Begin:  					m_Position = (int)offset;  					break;  				case SeekOrigin.Current:  					m_Position += (int)offset;  					break;  				case SeekOrigin.End:  					m_Position = _segment.Offset + _segment.Length - (int)offset;  					break;  			}
