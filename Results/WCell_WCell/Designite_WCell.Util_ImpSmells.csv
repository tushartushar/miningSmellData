Implementation smell,Namespace,Class,File,Method,Description
Long Method,WCell.Util.Data,DataHolderDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataHolderDefinition.cs,GetDataFields,The method has 159 lines of code.
Long Method,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,FinishLoading,The method has 118 lines of code.
Long Method,WCell.Util.DynamicAccess,AccessorMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\DynamicAccess\AccessorMgr.cs,AddToModule,The method has 100 lines of code.
Long Method,WCell.Util.DynamicAccess,AccessorMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\DynamicAccess\AccessorMgr.cs,AddToModule,The method has 119 lines of code.
Complex Method,WCell.Util,ReflectionUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtils.cs,SatisfiesGenericConstraints,Cyclomatic complexity of the method is 8
Complex Method,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,AddTypesToTypeMap,Cyclomatic complexity of the method is 8
Complex Method,WCell.Util.Graphics,RectInt32,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\RectInt32.cs,IntersectsWith,Cyclomatic complexity of the method is 9
Complex Method,WCell.Util.Graphics,Rect,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Rect.cs,IntersectsWith,Cyclomatic complexity of the method is 9
Complex Method,WCell.Util.Conversion,ToIntConverter,C:\repos\WCell_WCell\Utilities\WCell.Util\Conversion\ToUIntConverter.cs,Convert,Cyclomatic complexity of the method is 9
Complex Method,WCell.Util.Conversion,ToUIntConverter,C:\repos\WCell_WCell\Utilities\WCell.Util\Conversion\ToUIntConverter.cs,Convert,Cyclomatic complexity of the method is 12
Complex Method,WCell.Util.Data,DataHolderDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataHolderDefinition.cs,GetDataFields,Cyclomatic complexity of the method is 18
Complex Method,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,FinishLoading,Cyclomatic complexity of the method is 17
Complex Method,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,CreateDataHolderTableMappings,Cyclomatic complexity of the method is 9
Complex Method,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,RegisterDefintion,Cyclomatic complexity of the method is 9
Complex Method,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,GetMembers,Cyclomatic complexity of the method is 12
Complex Method,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,CallMethod,Cyclomatic complexity of the method is 9
Complex Method,WCell.Util.Strings,StringNode<V>,C:\repos\WCell_WCell\Utilities\WCell.Util\Strings\StringNode.cs,ReadXml,Cyclomatic complexity of the method is 11
Complex Method,WCell.Util.Threading.TaskParallel,ParallelLinqExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\ParallelLinqExtensions.cs,AsParallel,Cyclomatic complexity of the method is 8
Complex Method,WCell.Util.Toolshed,ToolMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\Toolshed\ToolMgr.cs,AddStaticMethodsOfAsm,Cyclomatic complexity of the method is 11
Long Parameter List,WCell.Util,StringParser,C:\repos\WCell_WCell\Utilities\WCell.Util\StringParser.cs,Eval,The method has 5 parameters. Parameters: valType' val' expr' error' startsWithOperator
Long Parameter List,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,MoveMemory,The method has 5 parameters. Parameters: src' srcIndex' dest' destIndex' len
Long Parameter List,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,MoveMemory,The method has 5 parameters. Parameters: src' srcIndex' dest' destIndex' len
Long Parameter List,WCell.Util.Code,CodeFileWriter,C:\repos\WCell_WCell\Utilities\WCell.Util\Code\CodeFileWriter.cs,CodeFileWriter,The method has 6 parameters. Parameters: fileName' namespce' className' typeNamePrefix' typeNameSuffix' usedNamespaces
Long Parameter List,WCell.Util.Code,CodeFileWriter,C:\repos\WCell_WCell\Utilities\WCell.Util\Code\CodeFileWriter.cs,WriteMethod,The method has 5 parameters. Parameters: visibility' returnType' name' args' bodyWriter
Long Parameter List,WCell.Util.Code,CodeFileWriter,C:\repos\WCell_WCell\Utilities\WCell.Util\Code\CodeFileWriter.cs,WriteAnonymousProperty,The method has 5 parameters. Parameters: visibility' returnType' name' get' set
Long Parameter List,WCell.Util.Code,CodeFileWriter,C:\repos\WCell_WCell\Utilities\WCell.Util\Code\CodeFileWriter.cs,WriteField,The method has 5 parameters. Parameters: visibility' returnType' name' isReadOnly' isStatic
Long Parameter List,WCell.Util.Code,CodeFileWriter,C:\repos\WCell_WCell\Utilities\WCell.Util\Code\CodeFileWriter.cs,Array,The method has 5 parameters. Parameters: type' name' dimensions' seperator' valueWriter
Long Parameter List,WCell.Util.Graphics,BoundingBox,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\BoundingBox.cs,BoundingBox,The method has 6 parameters. Parameters: minX' minY' minZ' maxX' maxY' maxZ
Long Parameter List,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Matrix,The method has 16 parameters. Parameters: m11' m12' m13' m14' m21' m22' m23' m24' m31' m32' m33' m34' m41' m42' m43' m44
Long Parameter List,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,CreateOrthographic,The method has 5 parameters. Parameters: width' height' zNearPlane' zFarPlane' result
Long Parameter List,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,CreateOrthographicOffCenter,The method has 6 parameters. Parameters: left' right' bottom' top' zNearPlane' zFarPlane
Long Parameter List,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,CreateOrthographicOffCenter,The method has 7 parameters. Parameters: left' right' bottom' top' zNearPlane' zFarPlane' result
Long Parameter List,WCell.Util.Data,DataField,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataFields.cs,DataField,The method has 5 parameters. Parameters: dataHolder' name' accessor' mappedMember' parent
Long Parameter List,WCell.Util.Data,FlatSimpleDataField,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataFields.cs,FlatSimpleDataField,The method has 5 parameters. Parameters: dataHolder' name' accessor' mappedMember' parent
Long Parameter List,WCell.Util.Data,NestedDataField,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataFields.cs,NestedDataField,The method has 6 parameters. Parameters: dataHolder' name' accessor' mappedMember' producer' parent
Long Parameter List,WCell.Util.Data,NestedSimpleDataField,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataFields.cs,NestedSimpleDataField,The method has 6 parameters. Parameters: dataHolder' name' accessor' mappedMember' producer' parent
Long Parameter List,WCell.Util.Data,ArrayDataField,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataFields.cs,ArrayDataField,The method has 7 parameters. Parameters: dataHolder' name' accessor' mappedMember' parent' length' arrProducer
Long Parameter List,WCell.Util.Data,FlatArrayDataField,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataFields.cs,FlatArrayDataField,The method has 7 parameters. Parameters: dataHolder' name' accessor' mappedMember' length' arrProducer' parent
Long Parameter List,WCell.Util.Data,NestedArrayDataField,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataFields.cs,NestedArrayDataField,The method has 8 parameters. Parameters: dataHolder' name' accessor' mappedMember' producer' arrayProducer' length' parent
Long Parameter List,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,AddTables,The method has 5 parameters. Parameters: allDefs' def' dataHolderToTable' dataHolders' tables
Long Parameter List,WCell.Util.DB,LightDBMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBMgr.cs,AddMapping,The method has 6 parameters. Parameters: defs' defaultTables' fieldDef' mappedFields' accessor' member
Long Parameter List,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,GetMembers,The method has 5 parameters. Parameters: user' obj' accessName' type' memberHolder
Long Parameter List,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,GetProp,The method has 5 parameters. Parameters: user' obj' name' type' propHolder
Long Parameter List,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,SetPropValue,The method has 5 parameters. Parameters: user' obj' name' value' type
Long Parameter List,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,ModPropValue,The method has 7 parameters. Parameters: user' obj' name' type' delta' oper' newValue
Long Parameter List,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,GetPropValue,The method has 5 parameters. Parameters: user' obj' accessName' type' value
Long Parameter List,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,CallMethod,The method has 5 parameters. Parameters: user' obj' accessName' args' result
Long Parameter List,WCell.Util.NLog,LogUtil,C:\repos\WCell_WCell\Utilities\WCell.Util\NLog\LogUtil.cs,LogException,The method has 5 parameters. Parameters: logger' e' addSystemInfo' msg' format
Long Parameter List,WCell.Util.Threading,Message4<T1;T2;T3;T4>,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\Messages.cs,Message4,The method has 5 parameters. Parameters: callback' param1' param2' param3' param4
Long Parameter List,WCell.Util.Threading.TaskParallel,LinqToTasks,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\LinqToTasks.cs,Join,The method has 5 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector
Long Parameter List,WCell.Util.Threading.TaskParallel,LinqToTasks,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\LinqToTasks.cs,Join,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' comparer
Long Parameter List,WCell.Util.Threading.TaskParallel,LinqToTasks,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\LinqToTasks.cs,GroupJoin,The method has 5 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector
Long Parameter List,WCell.Util.Threading.TaskParallel,LinqToTasks,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\LinqToTasks.cs,GroupJoin,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' comparer
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,Iterate,The method has 6 parameters. Parameters: factory' source' state' cancellationToken' creationOptions' scheduler
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,Iterate,The method has 5 parameters. Parameters: factory' source' cancellationToken' creationOptions' scheduler
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The method has 6 parameters. Parameters: factory' millisecondsDelay' action' cancellationToken' creationOptions' scheduler
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The method has 5 parameters. Parameters: factory' millisecondsDelay' action' state' creationOptions
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The method has 5 parameters. Parameters: factory' millisecondsDelay' action' state' cancellationToken
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The method has 7 parameters. Parameters: factory' millisecondsDelay' action' state' cancellationToken' creationOptions' scheduler
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The method has 6 parameters. Parameters: factory' millisecondsDelay' function' cancellationToken' creationOptions' scheduler
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The method has 5 parameters. Parameters: factory' millisecondsDelay' function' state' cancellationToken
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The method has 5 parameters. Parameters: factory' millisecondsDelay' function' state' creationOptions
Long Parameter List,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The method has 7 parameters. Parameters: factory' millisecondsDelay' function' state' cancellationToken' creationOptions' scheduler
Long Parameter List,WCell.Util.Variables,VariableConfiguration<V>,C:\repos\WCell_WCell\Utilities\WCell.Util\Variables\VariableConfiguration.cs,CreateDefinition,The method has 5 parameters. Parameters: name' member' serialized' readOnly' fileOnly
Long Parameter List,WCell.Util.Variables,VariableConfiguration<V>,C:\repos\WCell_WCell\Utilities\WCell.Util\Variables\VariableConfiguration.cs,Add,The method has 5 parameters. Parameters: name' member' serialized' readOnly' fileOnly
Long Parameter List,WCell.Util.Variables,TypeVariableDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\Variables\TypeVariableDefinition.cs,TypeVariableDefinition,The method has 5 parameters. Parameters: name' obj' member' serialized' readOnly
Long Identifier,WCell.Util.Variables,VariableConfiguration<V>,C:\repos\WCell_WCell\Utilities\WCell.Util\Variables\VariableConfiguration.cs,,The length of the parameter VariableDefinintionInitializor is 30.
Long Statement,WCell.Util.Graphics,RectInt32,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\RectInt32.cs,Equals,The length of the statement  "            return (((rect1.X.Equals(rect2.X) && rect1.Y.Equals(rect2.Y)) && rect1.Width.Equals(rect2.Width)) && rect1.Height.Equals(rect2.Height)); " is 136.
Long Statement,WCell.Util.Graphics,Rect,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Rect.cs,Equals,The length of the statement  "            return (((rect1.X.Equals(rect2.X) && rect1.Y.Equals(rect2.Y)) && rect1.Width.Equals(rect2.Width)) && rect1.Height.Equals(rect2.Height)); " is 136.
Long Statement,WCell.Util.Graphics,BoundingBox,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\BoundingBox.cs,Contains,The length of the statement  "            if (((((this.Min.X + radius) <= sphere.Center.X) && (sphere.Center.X <= (this.Max.X - radius))) && (((this.Max.X - this.Min.X) > radius) && ((this.Min.Y + radius) <= sphere.Center.Y))) && (((sphere.Center.Y <= (this.Max.Y - radius)) && ((this.Max.Y - this.Min.Y) > radius)) && ((((this.Min.Z + radius) <= sphere.Center.Z) && (sphere.Center.Z <= (this.Max.Z - radius))) && ((this.Max.X - this.Min.X) > radius)))) " is 411.
Long Statement,WCell.Util.Graphics,BoundingSphere,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\BoundingSphere.cs,Contains,The length of the statement  "            return (Vector3.DistanceSquared(point' Center) >= (Radius*Radius)) ? ContainmentType.Disjoint : ContainmentType.Contains; " is 121.
Long Statement,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Unpack,The length of the statement  "                num3 = (uint)((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17)) | ((value & 0x3ff) << 13)); " is 121.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,ToString,The length of the statement  "            return ("{ " + string.Format(currentCulture' "{{M11:{0} M12:{1} M13:{2} M14:{3}}} "' new object[] { this.M11.ToString(currentCulture)' this.M12.ToString(currentCulture)' this.M13.ToString(currentCulture)' this.M14.ToString(currentCulture) }) + string.Format(currentCulture' "{{M21:{0} M22:{1} M23:{2} M24:{3}}} "' new object[] { this.M21.ToString(currentCulture)' this.M22.ToString(currentCulture)' this.M23.ToString(currentCulture)' this.M24.ToString(currentCulture) }) + string.Format(currentCulture' "{{M31:{0} M32:{1} M33:{2} M34:{3}}} "' new object[] { this.M31.ToString(currentCulture)' this.M32.ToString(currentCulture)' this.M33.ToString(currentCulture)' this.M34.ToString(currentCulture) }) + string.Format(currentCulture' "{{M41:{0} M42:{1} M43:{2} M44:{3}}} "' new object[] { this.M41.ToString(currentCulture)' this.M42.ToString(currentCulture)' this.M43.ToString(currentCulture)' this.M44.ToString(currentCulture) }) + "}"); " is 936.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Equals,The length of the statement  "            return ((((((this.M11 == other.M11) && (this.M22 == other.M22)) && ((this.M33 == other.M33) && (this.M44 == other.M44))) && (((this.M12 == other.M12) && (this.M13 == other.M13)) && ((this.M14 == other.M14) && (this.M21 == other.M21)))) && ((((this.M23 == other.M23) && (this.M24 == other.M24)) && ((this.M31 == other.M31) && (this.M32 == other.M32))) && (((this.M34 == other.M34) && (this.M41 == other.M41)) && (this.M42 == other.M42)))) && (this.M43 == other.M43)); " is 466.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,GetHashCode,The length of the statement  "            return (((((((((((((((this.M11.GetHashCode() + this.M12.GetHashCode()) + this.M13.GetHashCode()) + this.M14.GetHashCode()) + this.M21.GetHashCode()) + this.M22.GetHashCode()) + this.M23.GetHashCode()) + this.M24.GetHashCode()) + this.M31.GetHashCode()) + this.M32.GetHashCode()) + this.M33.GetHashCode()) + this.M34.GetHashCode()) + this.M41.GetHashCode()) + this.M42.GetHashCode()) + this.M43.GetHashCode()) + this.M44.GetHashCode()); " is 435.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Determinant,The length of the statement  "            return ((((num22 * (((num11 * num18) - (num10 * num17)) + (num9 * num16))) - (num21 * (((num12 * num18) - (num10 * num15)) + (num9 * num14)))) + (num20 * (((num12 * num17) - (num11 * num15)) + (num9 * num13)))) - (num19 * (((num12 * num16) - (num11 * num14)) + (num10 * num13)))); " is 280.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M11 = (((matrix1.M11 * matrix2.M11) + (matrix1.M12 * matrix2.M21)) + (matrix1.M13 * matrix2.M31)) + (matrix1.M14 * matrix2.M41); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M12 = (((matrix1.M11 * matrix2.M12) + (matrix1.M12 * matrix2.M22)) + (matrix1.M13 * matrix2.M32)) + (matrix1.M14 * matrix2.M42); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M13 = (((matrix1.M11 * matrix2.M13) + (matrix1.M12 * matrix2.M23)) + (matrix1.M13 * matrix2.M33)) + (matrix1.M14 * matrix2.M43); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M14 = (((matrix1.M11 * matrix2.M14) + (matrix1.M12 * matrix2.M24)) + (matrix1.M13 * matrix2.M34)) + (matrix1.M14 * matrix2.M44); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M21 = (((matrix1.M21 * matrix2.M11) + (matrix1.M22 * matrix2.M21)) + (matrix1.M23 * matrix2.M31)) + (matrix1.M24 * matrix2.M41); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M22 = (((matrix1.M21 * matrix2.M12) + (matrix1.M22 * matrix2.M22)) + (matrix1.M23 * matrix2.M32)) + (matrix1.M24 * matrix2.M42); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M23 = (((matrix1.M21 * matrix2.M13) + (matrix1.M22 * matrix2.M23)) + (matrix1.M23 * matrix2.M33)) + (matrix1.M24 * matrix2.M43); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M24 = (((matrix1.M21 * matrix2.M14) + (matrix1.M22 * matrix2.M24)) + (matrix1.M23 * matrix2.M34)) + (matrix1.M24 * matrix2.M44); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M31 = (((matrix1.M31 * matrix2.M11) + (matrix1.M32 * matrix2.M21)) + (matrix1.M33 * matrix2.M31)) + (matrix1.M34 * matrix2.M41); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M32 = (((matrix1.M31 * matrix2.M12) + (matrix1.M32 * matrix2.M22)) + (matrix1.M33 * matrix2.M32)) + (matrix1.M34 * matrix2.M42); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M33 = (((matrix1.M31 * matrix2.M13) + (matrix1.M32 * matrix2.M23)) + (matrix1.M33 * matrix2.M33)) + (matrix1.M34 * matrix2.M43); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M34 = (((matrix1.M31 * matrix2.M14) + (matrix1.M32 * matrix2.M24)) + (matrix1.M33 * matrix2.M34)) + (matrix1.M34 * matrix2.M44); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M41 = (((matrix1.M41 * matrix2.M11) + (matrix1.M42 * matrix2.M21)) + (matrix1.M43 * matrix2.M31)) + (matrix1.M44 * matrix2.M41); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M42 = (((matrix1.M41 * matrix2.M12) + (matrix1.M42 * matrix2.M22)) + (matrix1.M43 * matrix2.M32)) + (matrix1.M44 * matrix2.M42); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M43 = (((matrix1.M41 * matrix2.M13) + (matrix1.M42 * matrix2.M23)) + (matrix1.M43 * matrix2.M33)) + (matrix1.M44 * matrix2.M43); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            matrix.M44 = (((matrix1.M41 * matrix2.M14) + (matrix1.M42 * matrix2.M24)) + (matrix1.M43 * matrix2.M34)) + (matrix1.M44 * matrix2.M44); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num16 = (((matrix1.M11 * matrix2.M11) + (matrix1.M12 * matrix2.M21)) + (matrix1.M13 * matrix2.M31)) + (matrix1.M14 * matrix2.M41); " is 136.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num15 = (((matrix1.M11 * matrix2.M12) + (matrix1.M12 * matrix2.M22)) + (matrix1.M13 * matrix2.M32)) + (matrix1.M14 * matrix2.M42); " is 136.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num14 = (((matrix1.M11 * matrix2.M13) + (matrix1.M12 * matrix2.M23)) + (matrix1.M13 * matrix2.M33)) + (matrix1.M14 * matrix2.M43); " is 136.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num13 = (((matrix1.M11 * matrix2.M14) + (matrix1.M12 * matrix2.M24)) + (matrix1.M13 * matrix2.M34)) + (matrix1.M14 * matrix2.M44); " is 136.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num12 = (((matrix1.M21 * matrix2.M11) + (matrix1.M22 * matrix2.M21)) + (matrix1.M23 * matrix2.M31)) + (matrix1.M24 * matrix2.M41); " is 136.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num11 = (((matrix1.M21 * matrix2.M12) + (matrix1.M22 * matrix2.M22)) + (matrix1.M23 * matrix2.M32)) + (matrix1.M24 * matrix2.M42); " is 136.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num10 = (((matrix1.M21 * matrix2.M13) + (matrix1.M22 * matrix2.M23)) + (matrix1.M23 * matrix2.M33)) + (matrix1.M24 * matrix2.M43); " is 136.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num9 = (((matrix1.M21 * matrix2.M14) + (matrix1.M22 * matrix2.M24)) + (matrix1.M23 * matrix2.M34)) + (matrix1.M24 * matrix2.M44); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num8 = (((matrix1.M31 * matrix2.M11) + (matrix1.M32 * matrix2.M21)) + (matrix1.M33 * matrix2.M31)) + (matrix1.M34 * matrix2.M41); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num7 = (((matrix1.M31 * matrix2.M12) + (matrix1.M32 * matrix2.M22)) + (matrix1.M33 * matrix2.M32)) + (matrix1.M34 * matrix2.M42); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num6 = (((matrix1.M31 * matrix2.M13) + (matrix1.M32 * matrix2.M23)) + (matrix1.M33 * matrix2.M33)) + (matrix1.M34 * matrix2.M43); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num5 = (((matrix1.M31 * matrix2.M14) + (matrix1.M32 * matrix2.M24)) + (matrix1.M33 * matrix2.M34)) + (matrix1.M34 * matrix2.M44); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num4 = (((matrix1.M41 * matrix2.M11) + (matrix1.M42 * matrix2.M21)) + (matrix1.M43 * matrix2.M31)) + (matrix1.M44 * matrix2.M41); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num3 = (((matrix1.M41 * matrix2.M12) + (matrix1.M42 * matrix2.M22)) + (matrix1.M43 * matrix2.M32)) + (matrix1.M44 * matrix2.M42); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num2 = (((matrix1.M41 * matrix2.M13) + (matrix1.M42 * matrix2.M23)) + (matrix1.M43 * matrix2.M33)) + (matrix1.M44 * matrix2.M43); " is 135.
Long Statement,WCell.Util.Graphics,Matrix,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Matrix.cs,Multiply,The length of the statement  "            float num = (((matrix1.M41 * matrix2.M14) + (matrix1.M42 * matrix2.M24)) + (matrix1.M43 * matrix2.M34)) + (matrix1.M44 * matrix2.M44); " is 134.
Long Statement,WCell.Util.Graphics,Plane,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Plane.cs,Equals,The length of the statement  "            return ((((this.Normal.X == other.Normal.X) && (this.Normal.Y == other.Normal.Y)) && (this.Normal.Z == other.Normal.Z)) && (this.D == other.D)); " is 144.
Long Statement,WCell.Util.Graphics,Plane,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Plane.cs,ToString,The length of the statement  "            return string.Format(currentCulture' "{{Normal:{0} D:{1}}}"' new object[] { this.Normal.ToString()' this.D.ToString(currentCulture) }); " is 135.
Long Statement,WCell.Util.Graphics,Plane,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Plane.cs,Normalize,The length of the statement  "            float num2 = ((value.Normal.X * value.Normal.X) + (value.Normal.Y * value.Normal.Y)) + (value.Normal.Z * value.Normal.Z); " is 121.
Long Statement,WCell.Util.Graphics,Plane,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Plane.cs,Normalize,The length of the statement  "            float num2 = ((value.Normal.X * value.Normal.X) + (value.Normal.Y * value.Normal.Y)) + (value.Normal.Z * value.Normal.Z); " is 121.
Long Statement,WCell.Util.Graphics,Plane,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Plane.cs,Intersects,The length of the statement  "            float num2 = ((sphere.Center.X * this.Normal.X) + (sphere.Center.Y * this.Normal.Y)) + (sphere.Center.Z * this.Normal.Z); " is 121.
Long Statement,WCell.Util.Graphics,Plane,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Plane.cs,Intersects,The length of the statement  "            float num2 = ((sphere.Center.X * this.Normal.X) + (sphere.Center.Y * this.Normal.Y)) + (sphere.Center.Z * this.Normal.Z); " is 121.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,ToString,The length of the statement  "            return string.Format(currentCulture' "{{X:{0} Y:{1} Z:{2} W:{3}}}"' new object[] { this.X.ToString(currentCulture)' this.Y.ToString(currentCulture)' this.Z.ToString(currentCulture)' this.W.ToString(currentCulture) }); " is 217.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Normalize,The length of the statement  "            float num2 = (((quaternion.X * quaternion.X) + (quaternion.Y * quaternion.Y)) + (quaternion.Z * quaternion.Z)) + (quaternion.W * quaternion.W); " is 143.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Normalize,The length of the statement  "            float num2 = (((quaternion.X * quaternion.X) + (quaternion.Y * quaternion.Y)) + (quaternion.Z * quaternion.Z)) + (quaternion.W * quaternion.W); " is 143.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Inverse,The length of the statement  "            float num2 = (((quaternion.X * quaternion.X) + (quaternion.Y * quaternion.Y)) + (quaternion.Z * quaternion.Z)) + (quaternion.W * quaternion.W); " is 143.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Inverse,The length of the statement  "            float num2 = (((quaternion.X * quaternion.X) + (quaternion.Y * quaternion.Y)) + (quaternion.Z * quaternion.Z)) + (quaternion.W * quaternion.W); " is 143.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Dot,The length of the statement  "            return ((((quaternion1.X * quaternion2.X) + (quaternion1.Y * quaternion2.Y)) + (quaternion1.Z * quaternion2.Z)) + (quaternion1.W * quaternion2.W)); " is 147.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Dot,The length of the statement  "            result = (((quaternion1.X * quaternion2.X) + (quaternion1.Y * quaternion2.Y)) + (quaternion1.Z * quaternion2.Z)) + (quaternion1.W * quaternion2.W); " is 147.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Slerp,The length of the statement  "            float num4 = (((quaternion1.X * quaternion2.X) + (quaternion1.Y * quaternion2.Y)) + (quaternion1.Z * quaternion2.Z)) + (quaternion1.W * quaternion2.W); " is 151.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Slerp,The length of the statement  "            float num4 = (((quaternion1.X * quaternion2.X) + (quaternion1.Y * quaternion2.Y)) + (quaternion1.Z * quaternion2.Z)) + (quaternion1.W * quaternion2.W); " is 151.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Lerp,The length of the statement  "            float num5 = (((quaternion1.X * quaternion2.X) + (quaternion1.Y * quaternion2.Y)) + (quaternion1.Z * quaternion2.Z)) + (quaternion1.W * quaternion2.W); " is 151.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Lerp,The length of the statement  "            float num4 = (((quaternion.X * quaternion.X) + (quaternion.Y * quaternion.Y)) + (quaternion.Z * quaternion.Z)) + (quaternion.W * quaternion.W); " is 143.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Lerp,The length of the statement  "            float num5 = (((quaternion1.X * quaternion2.X) + (quaternion1.Y * quaternion2.Y)) + (quaternion1.Z * quaternion2.Z)) + (quaternion1.W * quaternion2.W); " is 151.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Divide,The length of the statement  "            float num14 = (((quaternion2.X * quaternion2.X) + (quaternion2.Y * quaternion2.Y)) + (quaternion2.Z * quaternion2.Z)) + (quaternion2.W * quaternion2.W); " is 152.
Long Statement,WCell.Util.Graphics,Quaternion,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Quaternion.cs,Divide,The length of the statement  "            float num14 = (((quaternion2.X * quaternion2.X) + (quaternion2.Y * quaternion2.Y)) + (quaternion2.Z * quaternion2.Z)) + (quaternion2.W * quaternion2.W); " is 152.
Long Statement,WCell.Util.Graphics,Ray,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Ray.cs,ToString,The length of the statement  "            return string.Format(CultureInfo.CurrentCulture' "{{Position:{0} Direction:{1}}}"' new object[] { this.Position.ToString()' this.Direction.ToString() }); " is 153.
Long Statement,WCell.Util.Graphics,Ray,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Ray.cs,Intersects,The length of the statement  "			float num2 = ((plane.Normal.X * this.Direction.X) + (plane.Normal.Y * this.Direction.Y)) + (plane.Normal.Z * this.Direction.Z); " is 127.
Long Statement,WCell.Util.Graphics,Ray,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Ray.cs,Intersects,The length of the statement  "			float num3 = ((plane.Normal.X * this.Position.X) + (plane.Normal.Y * this.Position.Y)) + (plane.Normal.Z * this.Position.Z); " is 124.
Long Statement,WCell.Util.Graphics,Ray,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Ray.cs,Intersects,The length of the statement  "            float num2 = ((plane.Normal.X * this.Direction.X) + (plane.Normal.Y * this.Direction.Y)) + (plane.Normal.Z * this.Direction.Z); " is 127.
Long Statement,WCell.Util.Graphics,Ray,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Ray.cs,Intersects,The length of the statement  "                float num3 = ((plane.Normal.X * this.Position.X) + (plane.Normal.Y * this.Position.Y)) + (plane.Normal.Z * this.Position.Z); " is 124.
Long Statement,WCell.Util.Commands,BaseCommand<C>,C:\repos\WCell_WCell\Utilities\WCell.Util\Commands\BaseCommand.cs,GetSubCommands,The length of the statement  "			var cmds = m_subCommandSet.Where(comd => comd.Aliases.Where(alias => alias.IndexOf(str' StringComparison.InvariantCultureIgnoreCase) > -1).Count() > 0); " is 152.
Long Statement,WCell.Util.Commands,CommandMgr<C>,C:\repos\WCell_WCell\Utilities\WCell.Util\Commands\CommandMgr.cs,Add,The length of the statement  "					log.Warn("Overriding alias \"{0}\" because it was used by more than 1 Command: \"{1}\" and \"{2}\""' alias' commandsByAlias[alias]' cmd); " is 137.
Long Statement,WCell.Util.Commands,CommandMgr<C>,C:\repos\WCell_WCell\Utilities\WCell.Util\Commands\CommandMgr.cs,DisplayCmd,The length of the statement  "			trigger.Reply(string.Format("{0}{1}"' cmd.CreateUsage(trigger)' detail ? " (" + cmd.GetDescription(trigger) + ")" : "")); " is 121.
Long Statement,WCell.Util.Commands,CallCommand,C:\repos\WCell_WCell\Utilities\WCell.Util\Commands\CommandMgr.cs,Initialize,The length of the statement  "				EnglishDescription = "Calls any static method or custom function with the given arguments. Either use the name or the index of the function."; " is 142.
Long Statement,WCell.Util.Commands,HelpCommand,C:\repos\WCell_WCell\Utilities\WCell.Util\Commands\CommandMgr.cs,Initialize,The length of the statement  "				EnglishDescription = "Shows an overview over all Commands or -if specified- the help for a specific Command (and its subcommands)."; " is 132.
Long Statement,WCell.Util.Data,FlatArrayDataField,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataFields.cs,Copy,The length of the statement  "			return new FlatArrayDataField(m_DataHolderDefinition' m_name' m_accessor' m_mappedMember' m_length' m_arrProducer' parent); " is 123.
Long Statement,WCell.Util.Data,DataHolderDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataHolderDefinition.cs,CreateHolder,The length of the statement  "					"Could not create DataHolder \"{0}\" because Value \"{1}\" did not have a Producer assigned (Make sure that the Types match)"' " is 126.
Long Statement,WCell.Util.Data,DataHolderDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataHolderDefinition.cs,GetDataFields,The length of the statement  "				var persistentAttribute = dbAttrs.Where(attribute => attribute is PersistentAttribute).FirstOrDefault() as PersistentAttribute; " is 127.
Long Statement,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,EnsureTable,The length of the statement  "					"Invalid DataHolder-definition refers to undefined Table \"{0}\" (use the <Table> node to define it in the Table.xml file): " + name' name); " is 140.
Long Statement,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,LoadTableDefinitions,The length of the statement  "				if (tableDef.Name == null) throw new ArgumentNullException("tableDef.Name"' "Did you mis-type the Name attribute of the table with MainDataHolder = " + tableDef.MainDataHolder + " ?"); " is 184.
Long Statement,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,FinishLoading,The length of the statement  "						throw new DataHolderException("Table \"{0}\" referenced PrimaryColumn(s) ({1}) but did not define a MainDataHolder explicitely."' " is 129.
Long Statement,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,FinishLoading,The length of the statement  "															  "You must explicitely define the TypeName attribute inside the PrimaryColumn node' if it is only an additional table for a DataHolder!"); " is 137.
Long Statement,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,FinishLoading,The length of the statement  "					throw new DataHolderException(ex' "Unable to setup Table \"{0}\" (MainDataHolder: \"{1}\")"' table' table.MainDataHolder); " is 122.
Long Statement,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,InitVars,The length of the statement  "					throw new DataHolderException("Table \"{0}\" defined invalid Variable {1}. Name does not refer to an actual property within DataHolder {2}."' " is 141.
Long Statement,WCell.Util.DB,LightDBDefinitionSet,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBDefinitionSet.cs,RegisterDefintion,The length of the statement  "					throw new DataHolderException(e' "Failed to parse DataHolder-definition \"" + dataRawDef + "\" from {0}"' cfg.FileName); " is 120.
Long Statement,WCell.Util.DB,TableDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\TableDefinition.cs,SetMainDataHolder,The length of the statement  "				//throw new DataHolderException("Table was set as DefaultTable for more than one DataHolder: \"" + dataDef + "\" and \"" + MainDataHolder + "\""); " is 146.
Long Statement,WCell.Util.DB.Xml,FlatArrayFieldDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\Xml\ArrayFieldDefinitions.cs,GetColumns,The length of the statement  "				throw new DataHolderException("Array-field \"{0}\" had no Pattern NOR an explicit set of Columns - Make sure either of them are set and valid."' this); " is 151.
Long Statement,WCell.Util.DB.Xml,FlatArrayFieldDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\Xml\ArrayFieldDefinitions.cs,GetColumns,The length of the statement  "				throw new DataHolderException("Array-field \"{0}\" defined Pattern AND an explicit set of Columns - Make sure to only specify one."' this); " is 139.
Long Statement,WCell.Util.DB.Xml,FlatArrayFieldDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\Xml\ArrayFieldDefinitions.cs,GetColumns,The length of the statement  "			//    throw new DataHolderException("Array-field \"{0}\" had an invalid amount of Columns ({1}) - Required: {2}"' this' ExpliciteColumns.Length' length); " is 153.
Long Statement,WCell.Util.DB.Xml,DataFieldDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\Xml\DataFieldDefinition.cs,EnsureName,The length of the statement  "				throw new DataHolderException("DataHolder-definition contained empty field-definitions without Name - Name is required."); " is 122.
Long Statement,WCell.Util.DynamicAccess,AccessorMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\DynamicAccess\AccessorMgr.cs,NextTypeName,The length of the statement  "			s = s.Replace('.'' '_').Replace(" "' "_").Replace('''' '_').Replace("`"' "_").Replace("["' "_").Replace("]"' "_").Replace("="' "_"); " is 132.
Long Statement,WCell.Util.DynamicAccess,MethodExcecutable,C:\repos\WCell_WCell\Utilities\WCell.Util\DynamicAccess\MethodExcecutable.cs,ToString,The length of the statement  "			return string.Format("Method {0}.{1}({2})"' m_method.DeclaringType.Name' m_name' Method.GetParameters().ToString("' ")); " is 120.
Long Statement,WCell.Util.Lang,Localizer<Locale;Key>,C:\repos\WCell_WCell\Utilities\WCell.Util\Lang\Localizer.cs,VerifyIntegrity,The length of the statement  "				throw new InvalidDataException("Could not find file for BaseLocale: " + Translation<Locale' Key>.GetFile(Folder' BaseLocale)); " is 126.
Long Statement,WCell.Util.Lang,Localizer<Locale;Key>,C:\repos\WCell_WCell\Utilities\WCell.Util\Lang\Localizer.cs,VerifyIntegrity,The length of the statement  "				throw new InvalidDataException("Could not find file for DefaultLocale: " + Translation<Locale' Key>.GetFile(Folder' DefaultLocale)); " is 132.
Long Statement,WCell.Util.Threading.TaskParallel,TaskCompletionSourceExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskCompletionSourceExtensions.cs,SetFromTask,The length of the statement  "                case TaskStatus.RanToCompletion: resultSetter.SetResult(task is Task<TResult> ? ((Task<TResult>)task).Result : default(TResult)); break; " is 136.
Long Statement,WCell.Util.Threading.TaskParallel,TaskCompletionSourceExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskCompletionSourceExtensions.cs,TrySetFromTask,The length of the statement  "                case TaskStatus.RanToCompletion: return resultSetter.TrySetResult(task is Task<TResult> ? ((Task<TResult>)task).Result : default(TResult)); " is 139.
Long Statement,WCell.Util.Threading.TaskParallel,TaskExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskExtensions.cs,ContinueWith,The length of the statement  "            return task.ContinueWith(continuationAction' factory.CancellationToken' factory.ContinuationOptions' factory.Scheduler); " is 120.
Long Statement,WCell.Util.Threading.TaskParallel,TaskExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskExtensions.cs,ContinueWith,The length of the statement  "            return task.ContinueWith(continuationFunction' factory.CancellationToken' factory.ContinuationOptions' factory.Scheduler); " is 122.
Long Statement,WCell.Util.Threading.TaskParallel,TaskExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskExtensions.cs,ContinueWith,The length of the statement  "            return task.ContinueWith(continuationAction' factory.CancellationToken' factory.ContinuationOptions' factory.Scheduler); " is 120.
Long Statement,WCell.Util.Threading.TaskParallel,TaskExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskExtensions.cs,ContinueWith,The length of the statement  "            return task.ContinueWith(continuationFunction' factory.CancellationToken' factory.ContinuationOptions' factory.Scheduler); " is 122.
Long Statement,WCell.Util.Threading.TaskParallel,TaskExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskExtensions.cs,WithTimeout,The length of the statement  "            var timer = new Timer(state => ((TaskCompletionSource<object>)state).TrySetCanceled()' result' timeout' TimeSpan.FromMilliseconds(-1)); " is 135.
Long Statement,WCell.Util.Threading.TaskParallel,TaskExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskExtensions.cs,WithTimeout,The length of the statement  "            var timer = new Timer(state => ((TaskCompletionSource<TResult>)state).TrySetCanceled()' result' timeout' TimeSpan.FromMilliseconds(-1)); " is 136.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,Iterate,The length of the statement  "            return Iterate(factory' source' state' factory.CancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 121.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,Iterate,The length of the statement  "            trs.Task.ContinueWith(_ => enumerator.Dispose()' CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously' TaskScheduler.Default); " is 142.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,Iterate,The length of the statement  "                            Task.Factory.StartNew(() => recursiveBody(null)' CancellationToken.None' TaskCreationOptions.None' (TaskScheduler)nextItem).IgnoreExceptions(); " is 143.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,Iterate,The length of the statement  "            factory.StartNew(() => recursiveBody(null)' CancellationToken.None' TaskCreationOptions.None' scheduler).IgnoreExceptions(); " is 124.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,Iterate,The length of the statement  "            return Iterate(factory' source' null' factory.CancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 120.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' action' factory.CancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 141.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' action' factory.CancellationToken' creationOptions' factory.GetTargetScheduler()); " is 133.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' action' cancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 133.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' action' state' factory.CancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 148.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' action' state' factory.CancellationToken' creationOptions' factory.GetTargetScheduler()); " is 140.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' action' state' cancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 140.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' function' factory.CancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 143.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' function' factory.CancellationToken' creationOptions' factory.GetTargetScheduler()); " is 135.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' function' cancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 135.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' function' state' factory.CancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 150.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' function' state' cancellationToken' factory.CreationOptions' factory.GetTargetScheduler()); " is 142.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            return StartNewDelayed(factory' millisecondsDelay' function' state' factory.CancellationToken' creationOptions' factory.GetTargetScheduler()); " is 142.
Long Statement,WCell.Util.Threading.TaskParallel,TaskFactoryExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskFactoryExtensions.cs,StartNewDelayed,The length of the statement  "            }' cancellationToken' ContinuationOptionsFromCreationOptions(creationOptions) | TaskContinuationOptions.ExecuteSynchronously' scheduler); " is 137.
Long Statement,WCell.Util.Toolshed,ToolMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\Toolshed\ToolMgr.cs,AddStaticMethodsOfAsm,The length of the statement  "							"- Make sure to only give methods with simple parameters the ToolAttribute. You can exclude them with the NoToolAttribute."' " is 124.
Long Statement,WCell.Util.Toolshed,ToolMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\Toolshed\ToolMgr.cs,EnsureUniqueName,The length of the statement  "				throw new ToolException("Tried to add two Executables with same name (\"" + name + "\") to ToolMgr. - Make sure to use unique names."); " is 135.
Long Statement,WCell.Util.Variables,VariableConfiguration<V>,C:\repos\WCell_WCell\Utilities\WCell.Util\Variables\VariableConfiguration.cs,CreateDefinition,The length of the statement  "			var def = new V { Name = name' Member = member' Serialized = serialized' IsReadOnly = readOnly' IsFileOnly = fileOnly }; " is 120.
Long Statement,WCell.Util.Variables,VariableConfiguration<V>,C:\repos\WCell_WCell\Utilities\WCell.Util\Variables\VariableConfiguration.cs,AddVariablesOfAsm,The length of the statement  "				LogUtil.ErrorException(e' "Could not initialize assembly \"{0}\". You can probably fix this issue by making sure that the target platform of the assembly and all it's dependencies are equal."' asm.FullName); " is 207.
Long Statement,WCell.Util.Variables,VariableConfiguration<V>,C:\repos\WCell_WCell\Utilities\WCell.Util\Variables\VariableConfiguration.cs,AddVariablesOfAsm,The length of the statement  "				var varClassAttr = type.GetCustomAttributes(typeof(VariableClassAttribute)' true).FirstOrDefault() as VariableClassAttribute; " is 125.
Complex Conditional,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,AddTypesToTypeMap,The conditional expression  "!asm.FullName.StartsWith("System.") && !asm.FullName.StartsWith("Microsoft.")  				&& !asm.FullName.StartsWith("NHibernate")  				&& !asm.FullName.StartsWith("Castle")  				&& !asm.FullName.StartsWith("msvc")  				&& !asm.FullName.StartsWith("NLog")  				&& !asm.FullName.StartsWith("mscorlib")"  is complex.
Complex Conditional,WCell.Util.Graphics,BoundingBox,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\BoundingBox.cs,Intersects,The conditional expression  "(((Min.X <= box.Min.X) && (box.Max.X <= Max.X))   			     && ((Min.Y <= box.Min.Y) && (box.Max.Y <= Max.Y))  			     && ((Min.Z <= box.Min.Z) && (box.Max.Z <= Max.Z)))"  is complex.
Complex Conditional,WCell.Util.Graphics,BoundingBox,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\BoundingBox.cs,Intersects,The conditional expression  "((((Min.X + radius) <= sphere.Center.X) &&   			      (sphere.Center.X <= (Max.X - radius))) &&   			     (((Max.X - Min.X) > radius) && ((Min.Y + radius) <= sphere.Center.Y))) &&   			    (((sphere.Center.Y <= (Max.Y - radius)) && ((Max.Y - Min.Y) > radius)) &&   			     ((((Min.Z + radius) <= sphere.Center.Z) && (sphere.Center.Z <= (Max.Z - radius))) &&   			      (Max.X - Min.X) > radius))"  is complex.
Complex Conditional,WCell.Util.Graphics,BoundingBox,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\BoundingBox.cs,Contains,The conditional expression  "((((this.Min.X + radius) <= sphere.Center.X) && (sphere.Center.X <= (this.Max.X - radius))) && (((this.Max.X - this.Min.X) > radius) && ((this.Min.Y + radius) <= sphere.Center.Y))) && (((sphere.Center.Y <= (this.Max.Y - radius)) && ((this.Max.Y - this.Min.Y) > radius)) && ((((this.Min.Z + radius) <= sphere.Center.Z) && (sphere.Center.Z <= (this.Max.Z - radius))) && ((this.Max.X - this.Min.X) > radius)))"  is complex.
Complex Conditional,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,GetMembers,The conditional expression  "members == null || members.Length == 0 || (user != null && !CanRead(member' user))"  is complex.
Complex Conditional,WCell.Util.Strings,StringStream,C:\repos\WCell_WCell\Utilities\WCell.Util\Strings\StringStream.cs,NextTimeSpan,The conditional expression  "seconds > 0 || minutes > 0 || hours > 0 || days > 0"  is complex.
Complex Conditional,WCell.Util.Variables,VariableConfiguration<V>,C:\repos\WCell_WCell\Utilities\WCell.Util\Variables\VariableConfiguration.cs,InitMembers,The conditional expression  "member.IsFieldOrProp() && (!readOnly || varAttr != null) &&  					((memberType = member.GetVariableType()).IsSimpleType() ||  					readOnly ||  					memberType.IsArray ||  					memberType.GetInterface(TypeVariableDefinition.GenericListType.Name) != null ||  					memberType.GetInterface(typeof(IXmlSerializable).Name) != null)"  is complex.
Empty Catch Block,WCell.Util,EnumUtil,C:\repos\WCell_WCell\Utilities\WCell.Util\EnumUtil.cs,TryParse,The method has an empty catch block.
Magic Number,WCell.Util,ArrayUtil,C:\repos\WCell_WCell\Utilities\WCell.Util\ArrayExtensions.cs,Reverse,The following statement contains a magic number: for (int i = 0; i < arr.Length / 2; i++)  			{  				var bottom = arr[i];  				var top = arr[len - i];    				arr[i] = top;  				arr[len - i] = bottom;  			}
Magic Number,WCell.Util,EmailAddressParser,C:\repos\WCell_WCell\Utilities\WCell.Util\EmailAddressParser.cs,EmailAddressParser,The following statement contains a magic number: if (Account.Length > 64 || Domain.Length > 255)  			{  				return;  			}
Magic Number,WCell.Util,EmailAddressParser,C:\repos\WCell_WCell\Utilities\WCell.Util\EmailAddressParser.cs,EmailAddressParser,The following statement contains a magic number: if (Account.Length > 64 || Domain.Length > 255)  			{  				return;  			}
Magic Number,WCell.Util,EmailAddressParser,C:\repos\WCell_WCell\Utilities\WCell.Util\EmailAddressParser.cs,ParseAddress,The following statement contains a magic number: if (m.Success && m.Groups.Count >= 2)  			{  				//first group is the account  				account = m.Groups[1].Value;    				//second group is the domain  				domain = m.Groups[2].Value;    				//indicate success  				return true;  			}
Magic Number,WCell.Util,EmailAddressParser,C:\repos\WCell_WCell\Utilities\WCell.Util\EmailAddressParser.cs,ParseAddress,The following statement contains a magic number: if (m.Success && m.Groups.Count >= 2)  			{  				//first group is the account  				account = m.Groups[1].Value;    				//second group is the domain  				domain = m.Groups[2].Value;    				//indicate success  				return true;  			}
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetUInt16,The following statement contains a magic number: uint startIndex = field * 4;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetUInt16,The following statement contains a magic number: if (startIndex + 2 > data.Length)                  return ushort.MaxValue;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetUInt32,The following statement contains a magic number: uint startIndex = field * 4;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetUInt32,The following statement contains a magic number: if (startIndex + 4 > data.Length)                  return uint.MaxValue;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetInt32,The following statement contains a magic number: uint startIndex = field * 4;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetInt32,The following statement contains a magic number: if (startIndex + 4 > data.Length)                  return int.MaxValue;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetFloat,The following statement contains a magic number: uint startIndex = field * 4;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetFloat,The following statement contains a magic number: if (startIndex + 4 > data.Length)                  return float.NaN;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetUInt64,The following statement contains a magic number: uint startIndex = startingField * 4;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetUInt64,The following statement contains a magic number: if (startIndex + 8 > data.Length)                  return ulong.MaxValue;
Magic Number,WCell.Util,CollectionExtensions,C:\repos\WCell_WCell\Utilities\WCell.Util\CollectionExtensions.cs,GetBytes,The following statement contains a magic number: uint startIndex = startingField * 4;
Magic Number,WCell.Util,MathUtil,C:\repos\WCell_WCell\Utilities\WCell.Util\MathUtil.cs,Divide,The following statement contains a magic number: return (nominator + (divisor / 2)) / divisor;
Magic Number,WCell.Util,StringUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\StringUtils.cs,GetReadableList,The following statement contains a magic number: list = list.Insert(lastSplitPos + 2' "and ");
Magic Number,WCell.Util,StringUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\StringUtils.cs,ToReadableIPAddress,The following statement contains a magic number: if (inputArray.Length != 4)              {                  return "not an IP address";              }
Magic Number,WCell.Util,StringUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\StringUtils.cs,ToReadableIPAddress,The following statement contains a magic number: retString.Append(inputArray[2].ToString()).Append('.');
Magic Number,WCell.Util,StringUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\StringUtils.cs,ToReadableIPAddress,The following statement contains a magic number: retString.Append(inputArray[3].ToString());
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,AddTypesToTypeMap,The following statement contains a magic number: if (!asm.FullName.StartsWith("System.") && !asm.FullName.StartsWith("Microsoft.")  				&& !asm.FullName.StartsWith("NHibernate")  				&& !asm.FullName.StartsWith("Castle")  				&& !asm.FullName.StartsWith("msvc")  				&& !asm.FullName.StartsWith("NLog")  				&& !asm.FullName.StartsWith("mscorlib"))  			{  				foreach (var type in asm.GetTypes())  				{  					if (!type.FullName.StartsWith("System.") && !type.FullName.StartsWith("Microsoft."))  					{  						if (type.IsValueType)  						{  							TypeMap[type.FullName] = type;  							if (type.IsEnum && !type.IsNested)  							{  								var values = Enum.GetValues(type);  								//if (values.Length >= 100)  								{  									var dict = new Dictionary<string' object>(values.Length + 100'  																			  StringComparer.InvariantCultureIgnoreCase);  									var names = Enum.GetNames(type);  									for (var i = 0; i < names.Length; i++)  									{  										dict[names[i]] = values.GetValue(i);  									}  									EnumValueMap[type] = dict;  								}  							}  						}  					}  				}  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetDateTimeFromUnixTime,The following statement contains a magic number: return new DateTime(1970' 1' 1' 0' 0' 0' 0).AddSeconds(unixTime);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetDateTimeToGameTime,The following statement contains a magic number: uint dayOfWeek = ((uint)n.DayOfWeek == 0 ? 6 : ((uint)n.DayOfWeek) - 1);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetDateTimeToGameTime,The following statement contains a magic number: gameTime |= (((uint)n.Hour << 6) & 0x7C0);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetDateTimeToGameTime,The following statement contains a magic number: gameTime |= ((dayOfWeek << 11) & 0x3800);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetDateTimeToGameTime,The following statement contains a magic number: gameTime |= (((uint)(n.Day - 1) << 14) & 0xFC000);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetDateTimeToGameTime,The following statement contains a magic number: gameTime |= (((uint)(n.Month - 1) << 20) & 0xF00000);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetDateTimeToGameTime,The following statement contains a magic number: gameTime |= (((uint)(n.Year - 2000) << 24) & 0x1F000000);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetDateTimeToGameTime,The following statement contains a magic number: gameTime |= (((uint)(n.Year - 2000) << 24) & 0x1F000000);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetGameTimeToDateTime,The following statement contains a magic number: int hour = (int)((packedDate >> 6) & 0x1F);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetGameTimeToDateTime,The following statement contains a magic number: int day = (int)((packedDate >> 14) & 0x3F);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetGameTimeToDateTime,The following statement contains a magic number: int month = (int)((packedDate >> 20) & 0xF);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetGameTimeToDateTime,The following statement contains a magic number: int year = (int)((packedDate >> 24) & 0x1F);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetGameTimeToDateTime,The following statement contains a magic number: return new DateTime(year + 2000' month + 1' day + 1' hour' minute' 0);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,HeadsOrTails,The following statement contains a magic number: return Random(2) == 0;
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,Random,The following statement contains a magic number: return (int)(((holdrand = holdrand * 214013L + 2531011L) >> 16) & 0x7fff);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,RandomUInt,The following statement contains a magic number: return (uint)(((holdrand = holdrand * 214013L + 2531011L) >> 16) & 0x7fff);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,RandomFloat,The following statement contains a magic number: return (((holdrand = holdrand * 214013L + 2531011L) >> 16) & 0x7fff) / (float)0x7fff;
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetSetIndices,The following statement contains a magic number: for (uint i = 0; i < 32; i++)  			{  				if ((flags & 1 << (int)i) != 0)  				{  					indices.Add(i);  				}  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetSetIndices,The following statement contains a magic number: var indices = new List<T>(5);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,GetSetIndices,The following statement contains a magic number: for (uint i = 0; i < 32; i++)  			{  				if ((flags & 1 << (int)i) != 0)  				{  					if (typeof(T).IsEnum)  					{  						indices.Add((T)Enum.Parse(typeof(T)' i.ToString()));  					}  					else  					{  						indices.Add((T)Convert.ChangeType(i' typeof(T)));  					}  				}  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,FormatMoney,The following statement contains a magic number: if (money >= 10000)  			{  				str += (money / 10000) + "g ";  				money = money % 10000;  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,FormatMoney,The following statement contains a magic number: if (money >= 10000)  			{  				str += (money / 10000) + "g ";  				money = money % 10000;  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,FormatMoney,The following statement contains a magic number: if (money >= 10000)  			{  				str += (money / 10000) + "g ";  				money = money % 10000;  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,FormatMoney,The following statement contains a magic number: if (money >= 100)  			{  				str += (money / 100) + "s ";  				money = money % 100;  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,FormatMoney,The following statement contains a magic number: if (money >= 100)  			{  				str += (money / 100) + "s ";  				money = money % 100;  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,FormatMoney,The following statement contains a magic number: if (money >= 100)  			{  				str += (money / 100) + "s ";  				money = money % 100;  			}
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,MakeLong,The following statement contains a magic number: return (uint)low | ((long)high << 32);
Magic Number,WCell.Util,Utility,C:\repos\WCell_WCell\Utilities\WCell.Util\Utility.cs,UnpackLong,The following statement contains a magic number: high = (int)(val >> 32);
Magic Number,WCell.Util.Code,CodeFileWriter,C:\repos\WCell_WCell\Utilities\WCell.Util\Code\CodeFileWriter.cs,Array,The following statement contains a magic number: Array(type' name' 2' seperator' () =>{  			                                	foreach (var subArr in arr)  			                                	{  			                                		NewArray(type' subArr);  			                                	}  			                                });
Magic Number,WCell.Util.Graphics,RectInt32,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\RectInt32.cs,IntersectsWith,The following statement contains a magic number: if (Math.Abs(dx) > 0.000001)              {                  var a = (p2.Y - p1.Y)/dx;                  var b = p1.Y - a*p1.X;                  minY = a*minX + b;                  maxY = a*maxX + b;              }
Magic Number,WCell.Util.Graphics,Point2D,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Point2D.cs,GetHashCode,The following statement contains a magic number: unchecked  			{  				return (X * 397) ^ Y;  			}
Magic Number,WCell.Util.Graphics,Point,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Point.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (x.GetHashCode()*397) ^ y.GetHashCode();              }
Magic Number,WCell.Util.Graphics,Rect,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Rect.cs,IntersectsWith,The following statement contains a magic number: if (Math.Abs(dx) > 0.000001)              {                  var a = (p2.Y - p1.Y)/dx;                  var b = p1.Y - a*p1.X;                  minY = a*minX + b;                  maxY = a*maxX + b;              }
Magic Number,WCell.Util.Graphics,Size,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Size.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (width.GetHashCode()*397) ^ height.GetHashCode();              }
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Pack,The following statement contains a magic number: uint num3 = (uint)((num5 & -2147483648) >> 0x10);
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Pack,The following statement contains a magic number: if (num < 0x38800000)              {                  uint num6 = (num & 0x7fffff) | 0x800000;                  int num4 = 0x71 - ((int)(num >> 0x17));                  num = (num4 > 0x1f) ? 0 : (num6 >> num4);                  return (ushort)(num3 | (((num + 0xfff) + ((num >> 13) & 1)) >> 13));              }
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Pack,The following statement contains a magic number: if (num < 0x38800000)              {                  uint num6 = (num & 0x7fffff) | 0x800000;                  int num4 = 0x71 - ((int)(num >> 0x17));                  num = (num4 > 0x1f) ? 0 : (num6 >> num4);                  return (ushort)(num3 | (((num + 0xfff) + ((num >> 13) & 1)) >> 13));              }
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Pack,The following statement contains a magic number: return (ushort)(num3 | ((((num + -939524096) + 0xfff) + ((num >> 13) & 1)) >> 13));
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Pack,The following statement contains a magic number: return (ushort)(num3 | ((((num + -939524096) + 0xfff) + ((num >> 13) & 1)) >> 13));
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Pack,The following statement contains a magic number: return (ushort)(num3 | ((((num + -939524096) + 0xfff) + ((num >> 13) & 1)) >> 13));
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0)              {                  if ((value & 0x3ff) != 0)                  {                      uint num2 = 0xfffffff2;                      uint num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0)                      {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = (((((uint)value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  }                  else                  {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              }              else              {                  num3 = (uint)((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17)) | ((value & 0x3ff) << 13));              }
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0)              {                  if ((value & 0x3ff) != 0)                  {                      uint num2 = 0xfffffff2;                      uint num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0)                      {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = (((((uint)value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  }                  else                  {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              }              else              {                  num3 = (uint)((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17)) | ((value & 0x3ff) << 13));              }
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0)              {                  if ((value & 0x3ff) != 0)                  {                      uint num2 = 0xfffffff2;                      uint num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0)                      {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = (((((uint)value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  }                  else                  {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              }              else              {                  num3 = (uint)((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17)) | ((value & 0x3ff) << 13));              }
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0)              {                  if ((value & 0x3ff) != 0)                  {                      uint num2 = 0xfffffff2;                      uint num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0)                      {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = (((((uint)value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  }                  else                  {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              }              else              {                  num3 = (uint)((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17)) | ((value & 0x3ff) << 13));              }
Magic Number,WCell.Util.Graphics,HalfUtils,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\HalfUtils.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0)              {                  if ((value & 0x3ff) != 0)                  {                      uint num2 = 0xfffffff2;                      uint num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0)                      {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = (((((uint)value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  }                  else                  {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              }              else              {                  num3 = (uint)((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17)) | ((value & 0x3ff) << 13));              }
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,GetAngleTowards,The following statement contains a magic number: if (angle < 0)  			{  				angle += (2 * MathUtil.PI);  			}
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,GetAngleTowards,The following statement contains a magic number: if (angle < 0)  			{  				angle += (2 * MathUtil.PI);  			}
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromPacked,The following statement contains a magic number: vector.Y = (packed >> 11) & 0x7FF;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromPacked,The following statement contains a magic number: vector.Z = (packed >> 21) & 0x3FF;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromDeltaPacked,The following statement contains a magic number: float yPart = (packed >> 11) & 0x7FF;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromDeltaPacked,The following statement contains a magic number: float zPart = (packed >> 21) & 0x3FF;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromDeltaPacked,The following statement contains a magic number: dst.X = (xPart / 4) - (startingVector.X + firstPoint.X) / 2;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromDeltaPacked,The following statement contains a magic number: dst.X = (xPart / 4) - (startingVector.X + firstPoint.X) / 2;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromDeltaPacked,The following statement contains a magic number: dst.Y = (yPart / 4) - (startingVector.Y + firstPoint.Y) / 2;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromDeltaPacked,The following statement contains a magic number: dst.Y = (yPart / 4) - (startingVector.Y + firstPoint.Y) / 2;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromDeltaPacked,The following statement contains a magic number: dst.Z = (zPart / 4) - (startingVector.Z + firstPoint.Z) / 2;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,FromDeltaPacked,The following statement contains a magic number: dst.Z = (zPart / 4) - (startingVector.Z + firstPoint.Z) / 2;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToPacked,The following statement contains a magic number: packed |= ((uint)Y & 0x7FF) << 11;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToPacked,The following statement contains a magic number: packed |= ((uint)Z & 0x3FF) << 22;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToDeltaPacked,The following statement contains a magic number: float xPart = (X * 4) + ((startingVector.X - firstPoint.X) * 2);
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToDeltaPacked,The following statement contains a magic number: float xPart = (X * 4) + ((startingVector.X - firstPoint.X) * 2);
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToDeltaPacked,The following statement contains a magic number: float yPart = (Y * 4) + ((startingVector.Y - firstPoint.Y) * 2);
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToDeltaPacked,The following statement contains a magic number: float yPart = (Y * 4) + ((startingVector.Y - firstPoint.Y) * 2);
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToDeltaPacked,The following statement contains a magic number: float zPart = (Z * 4) + ((startingVector.Z - firstPoint.Z) * 2);
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToDeltaPacked,The following statement contains a magic number: float zPart = (Z * 4) + ((startingVector.Z - firstPoint.Z) * 2);
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToDeltaPacked,The following statement contains a magic number: packed |= ((uint)yPart & 0x7FF) << 11;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,ToDeltaPacked,The following statement contains a magic number: packed |= ((uint)zPart & 0x3FF) << 22;
Magic Number,WCell.Util.Graphics,Vector3,C:\repos\WCell_WCell\Utilities\WCell.Util\Graphics\Vector3.cs,GetHashCode,The following statement contains a magic number: return (int)(Length() * 1000);
Magic Number,WCell.Util.Collections,PriorityQueue<T>,C:\repos\WCell_WCell\Utilities\WCell.Util\Collections\PriorityQueue.cs,PriorityQueue,The following statement contains a magic number: _capacity = 15;
Magic Number,WCell.Util.Collections,PriorityQueue<T>,C:\repos\WCell_WCell\Utilities\WCell.Util\Collections\PriorityQueue.cs,GetLeftChild,The following statement contains a magic number: return (index * 2) + 1;
Magic Number,WCell.Util.Collections,PriorityQueue<T>,C:\repos\WCell_WCell\Utilities\WCell.Util\Collections\PriorityQueue.cs,GetParent,The following statement contains a magic number: return (index - 1) / 2;
Magic Number,WCell.Util.Collections,PriorityQueue<T>,C:\repos\WCell_WCell\Utilities\WCell.Util\Collections\PriorityQueue.cs,GrowHeap,The following statement contains a magic number: _capacity = (_capacity * 2) + 1;
Magic Number,WCell.Util.Data,BinaryContentStream,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\BinaryContentStream.cs,WriteAll,The following statement contains a magic number: writer.BaseStream.Position += 4;
Magic Number,WCell.Util.Data,DataHolderDefinition,C:\repos\WCell_WCell\Utilities\WCell.Util\Data\DataHolderDefinition.cs,CreateIdString,The following statement contains a magic number: var str = new StringBuilder(Fields.Values.Count * 15);
Magic Number,WCell.Util.DB,LightDBMapper,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBMapper.cs,Fetch,The following statement contains a magic number: var actions = new List<Action>(10000);
Magic Number,WCell.Util.DB,LightDBMapper,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBMapper.cs,GetWherePairs,The following statement contains a magic number: var lists = new List<KeyValueListBase>(3);
Magic Number,WCell.Util.DB,LightDBMapper,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBMapper.cs,GetWherePairs,The following statement contains a magic number: var pairs = new List<KeyValuePair<string' object>>(2);
Magic Number,WCell.Util.DB,LightDBMapper,C:\repos\WCell_WCell\Utilities\WCell.Util\DB\LightDBMapper.cs,LoadCache,The following statement contains a magic number: using (var reader = new BinaryReader(  				new FileStream(filename' FileMode.Open' FileAccess.Read)))  			{  				if (!ReadCacheHeader(reader))  				{  					return false;  				}    				var initors = new List<Action>((int)reader.BaseStream.Length / 1000);    				for (var i = 0; i < m_mapping.DataHolderDefinitions.Length; i++)  				{  					var def = m_mapping.DataHolderDefinitions[i];  					var contentStream = new BinaryContentStream(def);  					contentStream.LoadAll(reader' initors);  				}    				if (initors.Count == 0 || reader.BaseStream.Position != reader.BaseStream.Length)  				{  					// empty cache file or invalid cache size -> Consider it a fail  					return false;  				}    				foreach (var initor in initors)  				{  					initor();  				}  			}
Magic Number,WCell.Util.DynamicAccess,AccessorMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\DynamicAccess\AccessorMgr.cs,Test,The following statement contains a magic number: Utility.Measure("Create object"' 2000000' () => {  				var x2 = new X();  			});
Magic Number,WCell.Util.DynamicAccess,AccessorMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\DynamicAccess\AccessorMgr.cs,Test,The following statement contains a magic number: Utility.Measure("Dynamically create object"' 2000000' () => {  				var x2 = (X)producer.Produce();  			});
Magic Number,WCell.Util.DynamicAccess,AccessorMgr,C:\repos\WCell_WCell\Utilities\WCell.Util\DynamicAccess\AccessorMgr.cs,Test,The following statement contains a magic number: Utility.Measure("Create object through reflection"' 2000000' () => {  				var x2 = Activator.CreateInstance<X>();  			});
Magic Number,WCell.Util.ReflectionUtil,MemberAccessor<U>,C:\repos\WCell_WCell\Utilities\WCell.Util\ReflectionUtil\MemberAccessor.cs,GetMembers,The following statement contains a magic number: if (hasNameSpaceDelimiter)  			{  				var parts = accessName.Split(new[] {'#'}' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 2) return null;    				var typeName = parts[0];  				if (typeName.StartsWith("."))  				{  					// save a bit of typing' but it should be more general and less ugly  					typeName = "WCell.RealmServer" + typeName;  				}  				accessName = parts[1];  				propChain = accessName.Split(new[] { '.' }' StringSplitOptions.RemoveEmptyEntries);      				// TODO: Look up type correctly  				foreach (var asm in AppDomain.CurrentDomain.GetAssemblies())  				{  					type = asm.GetType(typeName' false' true);  					if (type != null) break;  				}  				if (type == null)  				{  					return null;  				}  			}  			else  			{  				propChain = accessName.Split(new[] { '.' }' StringSplitOptions.RemoveEmptyEntries);  			}
Magic Number,WCell.Util.Lang,Localizer<Locale;Key>,C:\repos\WCell_WCell\Utilities\WCell.Util\Lang\Localizer.cs,Localizer,The following statement contains a magic number: _MaxLocaleValue = GetMaxEnumValue(typeof(Locale)' 100);
Magic Number,WCell.Util.Lang,Localizer<Locale;Key>,C:\repos\WCell_WCell\Utilities\WCell.Util\Lang\Localizer.cs,Localizer,The following statement contains a magic number: _MaxKeyValue = GetMaxEnumValue(typeof(Key)' 50000);
Magic Number,WCell.Util.Strings,StringStream,C:\repos\WCell_WCell\Utilities\WCell.Util\Strings\StringStream.cs,NextQuotedString,The following statement contains a magic number: var result = new StringBuilder(5);
Magic Number,WCell.Util.Strings,StringStream,C:\repos\WCell_WCell\Utilities\WCell.Util\Strings\StringStream.cs,NextTimeSpan,The following statement contains a magic number: if (mod.Contains("w"))  			{  				days += NextInt(0) * 7;  			}
Magic Number,WCell.Util.Strings,StringStream,C:\repos\WCell_WCell\Utilities\WCell.Util\Strings\StringStream.cs,SkipWhitespace,The following statement contains a magic number: while ((chr = PeekChar()) < 256 && Whitespaces[chr])  			{  				Position++;  			}
Missing Default,WCell.Util.Threading.TaskParallel,TaskObservable<TResult>,C:\repos\WCell_WCell\Utilities\WCell.Util\Threading\TaskParallel\TaskExtensions.cs,Subscribe,The following switch statement is missing a default case: switch (t.Status)                      {                          case TaskStatus.RanToCompletion:                              observer.OnNext(_task.Result);                              observer.OnCompleted();                              break;                            case TaskStatus.Faulted:                              observer.OnError(_task.Exception);                              break;                            case TaskStatus.Canceled:                              observer.OnError(new TaskCanceledException(t));                              break;                      }
