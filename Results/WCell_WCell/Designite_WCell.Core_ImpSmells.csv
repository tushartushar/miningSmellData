Implementation smell,Namespace,Class,File,Method,Description
Long Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The method has 103 lines of code.
Complex Method,WCell.Core.Addons,WCellAddonMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Addons\WCellAddonMgr.cs,RecurseLoadAddons,Cyclomatic complexity of the method is 8
Complex Method,WCell.Core,SelfRunningTaskQueue,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\SelfRunningTaskQueue.cs,QueueUpdateCallback,Cyclomatic complexity of the method is 9
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,Cyclomatic complexity of the method is 12
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,Cyclomatic complexity of the method is 9
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,multiByteDivide,Cyclomatic complexity of the method is 16
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,singleByteDivide,Cyclomatic complexity of the method is 10
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,ModPow,Cyclomatic complexity of the method is 11
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BarrettReduction,Cyclomatic complexity of the method is 13
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,FermatLittleTest,Cyclomatic complexity of the method is 12
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,RabinMillerTest,Cyclomatic complexity of the method is 18
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,SolovayStrassenTest,Cyclomatic complexity of the method is 13
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,Cyclomatic complexity of the method is 18
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,IsProbablePrime,Cyclomatic complexity of the method is 16
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,Jacobi,Cyclomatic complexity of the method is 13
Complex Method,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequenceHelper,Cyclomatic complexity of the method is 11
Long Parameter List,WCell.Core.Cryptography,ARC4,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\ARC4.cs,InternalTransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequenceHelper,The method has 6 parameters. Parameters: P' Q' k' n' constant' s
Long Parameter List,WCell.Core.Initialization,InitializationStep,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Initialization\InitializationStep.cs,InitializationStep,The method has 5 parameters. Parameters: pass' initStepName' isRequired' initContext' initMethod
Long Parameter List,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,DisposableRealmPacketIn,The method has 5 parameters. Parameters: segment' offset' length' contentLength' packetId
Long Parameter List,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,Create,The method has 5 parameters. Parameters: opCode' outPacketContent' contentOffset' contentLength' segment
Long Parameter List,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,CopyTo,The method has 5 parameters. Parameters: bytes' fromOffset' length' target' toOffset
Long Parameter List,WCell.RealmServer,RealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\RealmPacketIn.cs,RealmPacketIn,The method has 5 parameters. Parameters: segment' offset' length' opcode' headerSize
Long Identifier,WCell.Core,WCellConstants,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellConstants.cs,,The length of the parameter DBC_SPELLITEMENCHANTMENTCONDITION is 33.
Long Identifier,WCell.Core,WCellConstants,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellConstants.cs,,The length of the parameter MAX_UNCOMPRESSED_UPDATE_PACKET is 30.
Long Statement,WCell.Core.Addons,WCellAddonContext,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Addons\WCellAddonContext.cs,InitAddon,The length of the statement  "						"please make sure that it and it's dependencies were built against the current build and all it's dependencies are available."' this)' e); " is 138.
Long Statement,WCell.Core.Addons,WCellAddonMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Addons\WCellAddonMgr.cs,LoadAddons,The length of the statement  "			var ignores = ignoreString.Split(new[] { ';' }' StringSplitOptions.RemoveEmptyEntries).TransformArray(s => s.ToLower().Trim().Replace(".dll"' "")); " is 147.
Long Statement,WCell.Core.Addons,WCellAddonMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Addons\WCellAddonMgr.cs,RecurseLoadAddons,The length of the statement  "							LogManager.GetCurrentClassLogger().Warn("The core Assembly \"" + file.FullName + "\" has been found in the Addon folder where it does not belong." + " is 148.
Long Statement,WCell.Core.Addons,WCellAddonMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Addons\WCellAddonMgr.cs,LoadAddon,The length of the statement  "				LogManager.GetCurrentClassLogger().Error("Failed to load Assembly \"{0}\" because it has the wrong format - Make sure that you only load .NET assemblies that are compiled for the correct target platform: {1}"'  " is 209.
Long Statement,WCell.Core.Addons,WCellAddonMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Addons\WCellAddonMgr.cs,RegisterAddon,The length of the statement  "				LogManager.GetCurrentClassLogger().Warn("Addon of Type \"{0}\" did not specify a ShortName."' context.Addon.GetType().FullName); " is 128.
Long Statement,WCell.Core.Addons,WCellAddonMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Addons\WCellAddonMgr.cs,RegisterAddon,The length of the statement  "					LogManager.GetCurrentClassLogger().Warn("The Addon ShortName \"{0}\" contains the word \"Addon\" - The name should be short and not contain unnecessary information."' context.ShortName); " is 186.
Long Statement,WCell.Core.Addons,WCellAddonUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Addons\WCellAddonMgr.cs,GetDefaultDescription,The length of the statement  "			return String.Format("{0} v{1} by {2} ({3})"' addon.Name' addon.GetType().Assembly.GetName().Version' addon.Author' addon.Website); " is 131.
Long Statement,WCell.Core,ServerApp<T>,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\ServerApp.cs,LogSystemInfo,The length of the statement  "			logger(string.Format("Using: {0}"' DatabaseUtil.Dialect != null ? DatabaseUtil.Dialect.GetType().Name : "<not initialized>")); " is 126.
Long Statement,WCell.Core,Statistics,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Statistics.cs,GetStats,The length of the statement  "			statLines.Add(string.Format("+ CPU Usage: {0:0.00}% <-> Memory Usage: {1}"' cpuUsage' WCellUtil.FormatBytes(memUsage))); " is 120.
Long Statement,WCell.Core,Statistics,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Statistics.cs,GetStats,The length of the statement  "			statLines.Add(string.Format("+ Thread Count: {0} - GC Counts: {1}"' thisProcess.Threads.Count' gcCounts.ToString("' "))); " is 121.
Long Statement,WCell.Core.Database,DatabaseConfiguration,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Database\DatabaseConfiguration.cs,GetARConfiguration,The length of the statement  "            if ((dbTypeLowerCase == "mysql" || dbTypeLowerCase == "mysql5") && !connString.ToLower().Contains("convert zero datetime")) " is 123.
Long Statement,WCell.Core.Initialization,InitMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Initialization\InitMgr.cs,AddStepsOfAsm,The length of the statement  "            //s_log.Info(string.Format(Resources.InitStepsLoaded' totalStepCount.ToString()' (totalStepCount == 1 ? "step" : "steps"))); " is 124.
Long Statement,WCell.Core.DBC,DBCReader<TConverter>,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCReader.cs,MapRecords,The length of the statement  "				throw new Exception("Error when reading DBC-file \"" + m_fileName + "\" (Required client version: " + WCellInfo.RequiredVersion + ")"' e); " is 138.
Complex Conditional,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The conditional expression  "(lucas[0].dataLength == 1 && lucas[0].data[0] == 0) ||                  (lucas[1].dataLength == 1 && lucas[1].data[0] == 0)"  is complex.
Virtual Method Call from Constructor,WCell.AuthServer,AuthPacketOut,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\AuthPacketOut.cs,AuthPacketOut,The constructor "AuthPacketOut" calls a virtual method "WriteByte".
Empty Catch Block,WCell.Core,ClientInformation,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\ClientInformation.cs,ClientInformation,The method has an empty catch block.
Empty Catch Block,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,ToString,The method has an empty catch block.
Magic Number,WCell.Core,ClientTypeUtility,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\ClientInformationUtil.cs,Lookup,The following statement contains a magic number: clientInstallationType = clientInstallationType.Substring(0' 4);
Magic Number,WCell.Core,ClientLocaleUtility,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\ClientInformationUtil.cs,Lookup,The following statement contains a magic number: locale = locale.Substring(0' 4);
Magic Number,WCell.Core,CommandUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\CommandUtil.cs,ListCfgValues,The following statement contains a magic number: var vars = new List<IVariableDefinition>(50);
Magic Number,WCell.Core,ServerApp<T>,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\ServerApp.cs,_OnShutdown,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,WCell.Core,Statistics,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Statistics.cs,Change,The following statement contains a magic number: seconds *= 1000;
Magic Number,WCell.Core,AppConfig,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\AppConfig.cs,GetNoneNesting,The following statement contains a magic number: (num1 > 0) &&  					(string.Compare(NullString' 0' val' num1' num2 - (2 * num1)' StringComparison.Ordinal) != 0)
Magic Number,WCell.Core,AppConfig,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\AppConfig.cs,GetValue,The following statement contains a magic number: return cfgVal.Substring(1' cfgVal.Length - 2);
Magic Number,WCell.Core,EntityId,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\EntityId.cs,ReadPacked,The following statement contains a magic number: var rawId = new byte[8];
Magic Number,WCell.Core,ClientInformation,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\ClientInformation.cs,ClientInformation,The following statement contains a magic number: Version = new ClientVersion(packet.ReadBytes(5));
Magic Number,WCell.Core,ClientInformation,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\ClientInformation.cs,ClientInformation,The following statement contains a magic number: TimeZone = BitConverter.ToUInt32(packet.ReadBytes(4)' 0);
Magic Number,WCell.Core,ClientInformation,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\ClientInformation.cs,ClientInformation,The following statement contains a magic number: IPAddress = new XmlIPAddress(packet.ReadBytes(4));
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,ToHex,The following statement contains a magic number: val >= 32 && val <= 127
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,ToHex,The following statement contains a magic number: val >= 32 && val <= 127
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,ToHex,The following statement contains a magic number: j < 16
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num /= 1024.0f;
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num >= 1024f
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num /= 1024.0f;
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num >= 1024f
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num /= 1024.0f;
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num >= 1024f
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num /= 1024.0;
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num >= 1024.0
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num /= 1024.0;
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num >= 1024.0
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num /= 1024.0;
Magic Number,WCell.Core,WCellUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WCellUtil.cs,FormatBytes,The following statement contains a magic number: num >= 1024.0
Magic Number,WCell.Core.Cryptography,ARC4,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\ARC4.cs,ARC4,The following statement contains a magic number: state = new byte[256];
Magic Number,WCell.Core.Cryptography,ARC4,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\ARC4.cs,KeySetup,The following statement contains a magic number: counter < 256
Magic Number,WCell.Core.Cryptography,ARC4,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\ARC4.cs,KeySetup,The following statement contains a magic number: counter < 256
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,WriteServerChallenge,The following statement contains a magic number: packet.WriteBigInt(m_srp.PublicEphemeralValueB' 32);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,WriteServerChallenge,The following statement contains a magic number: packet.WriteBigIntLength(m_srp.Modulus' 32);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: m_srp.PublicEphemeralValueA = packet.ReadBigInteger(32);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: BigInteger proof = packet.ReadBigInteger(20);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: byte[] arr = packet.ReadBytes(20);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: byte[] keyUnkArray = packet.ReadBytes(4);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: byte[] keyUnkSha = packet.ReadBytes(20);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: byte[] pinRandom = packet.ReadBytes(16);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: byte[] pinSha = packet.ReadBytes(20);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: byte[] security2Buf = packet.ReadBytes(20);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: (securityFlags & 2) != 0
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsClientProofValid,The following statement contains a magic number: (securityFlags & 4) != 0
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,WriteServerProof,The following statement contains a magic number: packet.WriteBigInt(m_srp.ServerSessionKeyProof' 20);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,WriteReconnectChallenge,The following statement contains a magic number: ReconnectProof = new byte[16];
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsReconnectProofValid,The following statement contains a magic number: byte[] md5Hash = packet.ReadBytes(16);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsReconnectProofValid,The following statement contains a magic number: byte[] shaHash1 = packet.ReadBytes(20);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsReconnectProofValid,The following statement contains a magic number: byte[] shaHash2 = packet.ReadBytes(20);
Magic Number,WCell.Core.Cryptography,Authenticator,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\Authenticator.cs,IsReconnectProofValid,The following statement contains a magic number: i < 20
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: value >>= 32;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: value >>= 32;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: dataLength = inData.Length >> 2;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: i >= 3
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver)              {                  case 1:                      data[dataLength - 1] = inData[0];                      break;                  case 2:                      data[dataLength - 1] = (uint) ((inData[0] << 8) + inData[1]);                      break;                  case 3:                      data[dataLength - 1] = (uint) ((inData[0] << 16) + (inData[1] << 8) + inData[2]);                      break;              }
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver)              {                  case 1:                      data[dataLength - 1] = inData[0];                      break;                  case 2:                      data[dataLength - 1] = (uint) ((inData[0] << 8) + inData[1]);                      break;                  case 3:                      data[dataLength - 1] = (uint) ((inData[0] << 16) + (inData[1] << 8) + inData[2]);                      break;              }
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver)              {                  case 1:                      data[dataLength - 1] = inData[0];                      break;                  case 2:                      data[dataLength - 1] = (uint) ((inData[0] << 8) + inData[1]);                      break;                  case 3:                      data[dataLength - 1] = (uint) ((inData[0] << 16) + (inData[1] << 8) + inData[2]);                      break;              }
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver)              {                  case 1:                      data[dataLength - 1] = inData[0];                      break;                  case 2:                      data[dataLength - 1] = (uint) ((inData[0] << 8) + inData[1]);                      break;                  case 3:                      data[dataLength - 1] = (uint) ((inData[0] << 16) + (inData[1] << 8) + inData[2]);                      break;              }
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver)              {                  case 1:                      data[dataLength - 1] = inData[0];                      break;                  case 2:                      data[dataLength - 1] = (uint) ((inData[0] << 8) + inData[1]);                      break;                  case 3:                      data[dataLength - 1] = (uint) ((inData[0] << 16) + (inData[1] << 8) + inData[2]);                      break;              }
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver)              {                  case 1:                      data[dataLength - 1] = inData[0];                      break;                  case 2:                      data[dataLength - 1] = (uint) ((inData[0] << 8) + inData[1]);                      break;                  case 3:                      data[dataLength - 1] = (uint) ((inData[0] << 16) + (inData[1] << 8) + inData[2]);                      break;              }
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: dataLength = inLen >> 2;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: data[j] = (uint) ((inData[i - 3] << 24) + (inData[i - 2] << 16) +                                    (inData[i - 1] << 8) + inData[i]);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following statement contains a magic number: i >= 3
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,multiByteDivide,The following statement contains a magic number: ulong secondDivisorByte = bi2.data[bi2.dataLength - 2];
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,multiByteDivide,The following statement contains a magic number: ulong dividend = ((ulong) remainder[pos] << 32) + remainder[pos - 1];
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,multiByteDivide,The following statement contains a magic number: q_hat == 0x100000000 ||                          (q_hat*secondDivisorByte) > ((r_hat << 32) + remainder[pos - 2])
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,multiByteDivide,The following statement contains a magic number: q_hat == 0x100000000 ||                          (q_hat*secondDivisorByte) > ((r_hat << 32) + remainder[pos - 2])
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,singleByteDivide,The following statement contains a magic number: dividend = ((ulong) outRemainder.data[pos + 1] << 32) + outRemainder.data[pos];
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,shiftLeft,The following statement contains a magic number: int shiftAmount = 32;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,shiftLeft,The following statement contains a magic number: carry = val >> 32;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,shiftRight,The following statement contains a magic number: int shiftAmount = 32;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,shiftRight,The following statement contains a magic number: invShift = 32 - shiftAmount;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,ToString,The following statement contains a magic number: return "0x" + ToString(16);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,ToString,The following statement contains a magic number: radix < 2 || radix > 36
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,ToString,The following statement contains a magic number: radix < 2 || radix > 36
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,ModPow,The following statement contains a magic number: index < 32
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BarrettReduction,The following statement contains a magic number: mcarry = (val >> 32);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GenerateRandomBits,The following statement contains a magic number: int dwords = bits >> 5;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GenerateRandomBits,The following statement contains a magic number: mask = 0xFFFFFFFF >> (32 - remBits);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BitCount,The following statement contains a magic number: int bits = 32;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BitCount,The following statement contains a magic number: bits += ((dataLength - 1) << 5);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,FermatLittleTest,The following statement contains a magic number: testBits < 2
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,RabinMillerTest,The following statement contains a magic number: i < 32
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,RabinMillerTest,The following statement contains a magic number: testBits < 2
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,SolovayStrassenTest,The following statement contains a magic number: testBits < 2
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: long D = 5' sign = -1' dCount = 0;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: long Q = (1 - D) >> 2;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: i < 32
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: lucas[1] = (lucas[1] - (lucas[2] << 1))%thisVal;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: lucas[2] = BarrettReduction(lucas[2]*lucas[2]' thisVal' constant);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: lucas[2] = BarrettReduction(lucas[2]*lucas[2]' thisVal' constant);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: lucas[2] = BarrettReduction(lucas[2]*lucas[2]' thisVal' constant);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: lucas[2] += thisVal;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: (lucas[2].data[maxLength - 1] & 0x80000000) != 0
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasStrongTestHelper,The following statement contains a magic number: lucas[2] != temp
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,IsProbablePrime,The following statement contains a magic number: i < 32
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,IsProbablePrime,The following statement contains a magic number: BigInteger a = (BigInteger) 2;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LongValue,The following statement contains a magic number: val |= (long) data[1] << 32;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,Jacobi,The following statement contains a magic number: i < 32
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,Jacobi,The following statement contains a magic number: (e & 0x1) != 0 && ((b.data[0] & 0x7) == 3 || (b.data[0] & 0x7) == 5)
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,Jacobi,The following statement contains a magic number: (e & 0x1) != 0 && ((b.data[0] & 0x7) == 3 || (b.data[0] & 0x7) == 5)
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,Jacobi,The following statement contains a magic number: (b.data[0] & 0x3) == 3 && (a1.data[0] & 0x3) == 3
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,Jacobi,The following statement contains a magic number: (b.data[0] & 0x3) == 3 && (a1.data[0] & 0x3) == 3
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,ModInverse,The following statement contains a magic number: BigInteger[] q = new BigInteger[2];
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GetBytes,The following statement contains a magic number: int numBytes = numBits >> 3;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GetBytesBE,The following statement contains a magic number: int numBytes = numBits >> 3;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GetBytes,The following statement contains a magic number: int realNumBytes = numBits >> 3;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GetBytes,The following statement contains a magic number: i*4 + b >= realNumBytes
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GetBytes,The following statement contains a magic number: result[i*4 + b] = (byte) (data[i] >> (b*8) & 0xff);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GetBytes,The following statement contains a magic number: result[i*4 + b] = (byte) (data[i] >> (b*8) & 0xff);
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,GetBytes,The following statement contains a magic number: b < 4
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,Reverse,The following statement contains a magic number: i < length/2
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,SetBit,The following statement contains a magic number: uint bytePos = bitNum >> 5;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,UnsetBit,The following statement contains a magic number: uint bytePos = bitNum >> 5;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,Sqrt,The following statement contains a magic number: uint bytePos = numBits >> 5;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequence,The following statement contains a magic number: BigInteger[] result = new BigInteger[3];
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequence,The following statement contains a magic number: result[1] = 2%n;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequence,The following statement contains a magic number: result[2] = 1%n;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequence,The following statement contains a magic number: i < 32
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequenceHelper,The following statement contains a magic number: BigInteger[] result = new BigInteger[3];
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequenceHelper,The following statement contains a magic number: BigInteger v = 2%n'                         Q_k = 1%n'                         v1 = P%n'                         u1 = Q_k;
Magic Number,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,LucasSequenceHelper,The following statement contains a magic number: result[2] = Q_k;
Magic Number,WCell.Core.Cryptography,SecureRemotePassword,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\SecureRemotePassword.cs,GenerateCredentialsHash,The following statement contains a magic number: buf.Length > 20
Magic Number,WCell.Core.Database,SqlUtil,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Database\SqlUtil.cs,PrepareInsertBuilder,The following statement contains a magic number: var sb = new StringBuilder(150);
Magic Number,WCell.Core.Initialization,InitMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Initialization\InitMgr.cs,Execute,The following statement contains a magic number: var timeStr = span.Minutes.ToString().PadLeft(2' '0') + ":" + span.Seconds.ToString().PadLeft(2' '0')                                    + "." + span.Milliseconds.ToString().PadLeft(2' '0');
Magic Number,WCell.Core.Initialization,InitMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Initialization\InitMgr.cs,Execute,The following statement contains a magic number: var timeStr = span.Minutes.ToString().PadLeft(2' '0') + ":" + span.Seconds.ToString().PadLeft(2' '0')                                    + "." + span.Milliseconds.ToString().PadLeft(2' '0');
Magic Number,WCell.Core.Initialization,InitMgr,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Initialization\InitMgr.cs,Execute,The following statement contains a magic number: var timeStr = span.Minutes.ToString().PadLeft(2' '0') + ":" + span.Seconds.ToString().PadLeft(2' '0')                                    + "." + span.Milliseconds.ToString().PadLeft(2' '0');
Magic Number,WCell.Core.Network,IOExtensions,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\IOExtensions.cs,WritePackedUInt64,The following statement contains a magic number: i < 8
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,CreateFromOutPacket,The following statement contains a magic number: var opcode = (RealmServerOpCode)(outPacket[index + 2] | (outPacket[index + 3] << 8));
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,CreateFromOutPacket,The following statement contains a magic number: var opcode = (RealmServerOpCode)(outPacket[index + 2] | (outPacket[index + 3] << 8));
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,CreateFromOutPacket,The following statement contains a magic number: var opcode = (RealmServerOpCode)(outPacket[index + 2] | (outPacket[index + 3] << 8));
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,CreateFromOutPacket,The following statement contains a magic number: var segment = BufferManager.GetSegment(totalLength + 2);
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,CreateFromOutPacket,The following statement contains a magic number: var opcode = (RealmServerOpCode)(oldSegment.Buffer.Array[index + 2] | (oldSegment.Buffer.Array[index + 3] << 8));
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,CreateFromOutPacket,The following statement contains a magic number: var opcode = (RealmServerOpCode)(oldSegment.Buffer.Array[index + 2] | (oldSegment.Buffer.Array[index + 3] << 8));
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,CreateFromOutPacket,The following statement contains a magic number: var opcode = (RealmServerOpCode)(oldSegment.Buffer.Array[index + 2] | (oldSegment.Buffer.Array[index + 3] << 8));
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,Create,The following statement contains a magic number: var packetSize = totalLength - (headerSize - 4);
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,Create,The following statement contains a magic number: segment.Buffer.Array[segment.Offset] = (byte)((packetSize >> 16) | 0x80);
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,Create,The following statement contains a magic number: segment.Buffer.Array[segment.Offset + 1] = (byte)(packetSize >> 8);
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,Create,The following statement contains a magic number: segment.Buffer.Array[segment.Offset + 2] = (byte)packetSize;
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,Create,The following statement contains a magic number: segment.Buffer.Array[segment.Offset + 3] = (byte)((int)opCode.RawId);
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,Create,The following statement contains a magic number: segment.Buffer.Array[segment.Offset + 4] = (byte)(((int)opCode.RawId) >> 8);
Magic Number,WCell.Core.Network,DisposableRealmPacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\DisposableRealmPacketIn.cs,Create,The following statement contains a magic number: segment.Buffer.Array[segment.Offset + 4] = (byte)(((int)opCode.RawId) >> 8);
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadUInt16BE,The following statement contains a magic number: return (ushort)((ReadByte() << 8) | ReadByte());
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadFourCC,The following statement contains a magic number: !EnsureData(4)
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadFourCC,The following statement contains a magic number: char[] chrs = ReadChars(4);
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadFourCC,The following statement contains a magic number: var temp = chrs[2];
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadFourCC,The following statement contains a magic number: chrs[2] = chrs[0];
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadFourCC,The following statement contains a magic number: chrs[3] == 0
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadIPAddress,The following statement contains a magic number: !EnsureData(4)
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadIPAddress,The following statement contains a magic number: byte[] data = ReadBytes(4);
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadEntityId,The following statement contains a magic number: EnsureData(8);
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadEntityId,The following statement contains a magic number: return new EntityId(ReadBytes(8));
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadPackedEntityId,The following statement contains a magic number: var guid = new byte[8];
Magic Number,WCell.Core.Network,PacketIn,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketIn.cs,ReadPackedEntityId,The following statement contains a magic number: i < 8
Magic Number,WCell.Core.Network,PacketOut,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PacketOut.cs,Reverse,The following statement contains a magic number: i < length/2
Magic Number,WCell.Core.Network,PrimitiveWriter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\PrimitiveWriter.cs,WriteUShortBE,The following statement contains a magic number: Write((byte)((val & 0xFF00) >> 8));
Magic Number,WCell.Core.Timers,TimerRunner,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Timers\TimerRunner.cs,TimerRunner,The following statement contains a magic number: AddBucket(TimerPriority.OnePointFiveSec' 1.5f);
Magic Number,WCell.Core.Timers,TimerRunner,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Timers\TimerRunner.cs,TimerRunner,The following statement contains a magic number: AddBucket(TimerPriority.FiveSec' 5f);
Magic Number,WCell.Core.Timers,TimerRunner,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Timers\TimerRunner.cs,TimerRunner,The following statement contains a magic number: AddBucket(TimerPriority.TenSec' 10f);
Magic Number,WCell.Core.Timers,TimerRunner,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Timers\TimerRunner.cs,TimerRunner,The following statement contains a magic number: AddBucket(TimerPriority.ThirtySec' 30f);
Magic Number,WCell.Core.Timers,TimerRunner,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Timers\TimerRunner.cs,TimerRunner,The following statement contains a magic number: AddBucket(TimerPriority.OneMin' 60f);
Magic Number,WCell.Core.Timers,TimerRunner,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Timers\TimerRunner.cs,TimerRunner,The following statement contains a magic number: AddBucket(TimerPriority.OneHour' 60 * 60f);
Magic Number,WCell.Core.Timers,TimerRunner,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Timers\TimerRunner.cs,TimerRunner,The following statement contains a magic number: AddBucket(TimerPriority.OneHour' 60 * 60f);
Magic Number,WCell.Core.Timers,TimerEntry,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Timers\TimerEntry.cs,GetHashCode,The following statement contains a magic number: var result = IntervalMillis*397 ^ (Action != null ? Action.GetHashCode() : 0);
Magic Number,WCell.Core.DBC,DBCReader<TConverter>,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCReader.cs,MapRecords,The following statement contains a magic number: binReader.BaseStream.Position = 20;
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,CopyTo,The following statement contains a magic number: length % 4 != 0
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,CopyTo,The following statement contains a magic number: Marshal.Copy(bytes' fromOffset * 4' new IntPtr(handle.AddrOfPinnedObject().ToInt64() + toOffset)' length);
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetUInt32,The following statement contains a magic number: int startIndex = field * 4;
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetUInt32,The following statement contains a magic number: startIndex + 4 > data.Length
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetInt32,The following statement contains a magic number: int startIndex = field * 4;
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetInt32,The following statement contains a magic number: startIndex + 4 > data.Length
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetFloat,The following statement contains a magic number: int startIndex = field * 4;
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetFloat,The following statement contains a magic number: startIndex + 4 > data.Length
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetUInt64,The following statement contains a magic number: int startIndex = startingField * 4;
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetUInt64,The following statement contains a magic number: startIndex + 8 > data.Length
Magic Number,WCell.Core.DBC,DBCRecordConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecordConverter.cs,GetString,The following statement contains a magic number: offset += 17;
Magic Number,WCell.Core.DBC,CharStartOutfitConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecords.cs,ConvertTo,The following statement contains a magic number: outfit.Class = (ClassId)((temp & 0xFF00) >> 8);
Magic Number,WCell.Core.DBC,CharStartOutfitConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecords.cs,ConvertTo,The following statement contains a magic number: outfit.Gender = (GenderType)((temp & 0xFF0000) >> 16);
Magic Number,WCell.Core.DBC,CharStartOutfitConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecords.cs,ConvertTo,The following statement contains a magic number: i < 12
Magic Number,WCell.Core.DBC,CharStartOutfitConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecords.cs,ConvertTo,The following statement contains a magic number: currIndex += 12;
Magic Number,WCell.Core.DBC,CharStartOutfitConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\DBC\DBCRecords.cs,ConvertTo,The following statement contains a magic number: i < 12
Magic Number,WCell.RealmServer,RealmPacketOut,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\RealmPacketOut.cs,RealmPacketOut,The following statement contains a magic number: Position += 2;
Magic Number,WCell.RealmServer,RealmPacketOut,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Network\RealmPacketOut.cs,FinalizeWrite,The following statement contains a magic number: WriteUShortBE((ushort)(BaseStream.Length - 2));
Magic Number,WCell.Core.WDB,WDBReader<TEntry;TConverter>,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WDB\WDBReader.cs,WDBReader,The following statement contains a magic number: binReader.BaseStream.Position < (binReader.BaseStream.Length - 20 - 8)
Magic Number,WCell.Core.WDB,WDBReader<TEntry;TConverter>,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WDB\WDBReader.cs,WDBReader,The following statement contains a magic number: binReader.BaseStream.Position < (binReader.BaseStream.Length - 20 - 8)
Magic Number,WCell.Core.WDB,CreatureCacheConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WDB\WDBRecords.cs,Convert,The following statement contains a magic number: cache.Names = new string[4];
Magic Number,WCell.Core.WDB,CreatureCacheConverter,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\WDB\WDBRecords.cs,Convert,The following statement contains a magic number: cache.QuestItem = new uint[6];
Missing Default,WCell.Core,AppConfig,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\AppConfig.cs,GetValue,The following switch statement is missing a default case: switch (GetNoneNesting(cfgVal))  			{  				case 0:  					return cfgVal;    				case 1:  					return null;  			}
Missing Default,WCell.Core.Cryptography,BigInteger,D:\research\architectureSmells\repos\WCell_WCell\Core\WCell.Core\Cryptography\BigInteger.cs,BigInteger,The following switch statement is missing a default case: switch (leftOver)              {                  case 1:                      data[dataLength - 1] = inData[0];                      break;                  case 2:                      data[dataLength - 1] = (uint) ((inData[0] << 8) + inData[1]);                      break;                  case 3:                      data[dataLength - 1] = (uint) ((inData[0] << 16) + (inData[1] << 8) + inData[2]);                      break;              }
