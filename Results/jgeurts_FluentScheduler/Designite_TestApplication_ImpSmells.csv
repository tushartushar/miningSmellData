Implementation smell,Namespace,Class,File,Method,Description
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,Reentrant,The following statement contains a magic number: Schedule(() =>              {                  L.Log("[reentrant]"' "Sleeping a minute...");                  Thread.Sleep(TimeSpan.FromMinutes(3));              }).WithName("[reentrant]").ToRunNow().AndEvery(1).Minutes();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,Disable,The following statement contains a magic number: Schedule(() =>              {                  JobManager.RemoveJob("[reentrant]");                  JobManager.RemoveJob("[non reentrant]");                  L.Log("[disable]"' "Disabled the reentrant and non reentrant jobs.");              }).WithName("[disable]").ToRunOnceIn(200).Seconds();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,Faulty,The following statement contains a magic number: Schedule(() =>              {                  L.Register("[faulty]"' "I'm going to raise an exception!");                  throw new Exception("I warned you.");              }).WithName("[faulty]").ToRunEvery(20).Minutes();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,Removed,The following statement contains a magic number: Schedule(() =>              {                  L.Register("[removed]"' "SOMETHING WENT WRONG.");              }).WithName("[removed]").ToRunOnceIn(2).Minutes();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,Parameter,The following statement contains a magic number: Schedule(new ParameterJob { Parameter = "Foo" }).WithName("[parameter]").ToRunOnceIn(10).Seconds();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,Disposable,The following statement contains a magic number: Schedule<DisposableJob>().WithName("[disposable]").ToRunOnceIn(10).Seconds();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,FiveHundredMilliseconds,The following statement contains a magic number: Schedule(() => L.Log("[half a second]"' "Half a second has passed."))                  .WithName("[half a second]").ToRunOnceIn(500).Milliseconds();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,FiveMinutes,The following statement contains a magic number: Schedule(() => L.Log("[five minutes]"' "Five minutes has passed."))                  .WithName("[five minutes]").ToRunOnceAt(DateTime.Now.AddMinutes(5)).AndEvery(5).Minutes();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,FiveMinutes,The following statement contains a magic number: Schedule(() => L.Log("[five minutes]"' "Five minutes has passed."))                  .WithName("[five minutes]").ToRunOnceAt(DateTime.Now.AddMinutes(5)).AndEvery(5).Minutes();
Magic Number,FluentScheduler.Tests.TestApplication,MyRegistry,D:\research\architectureSmells\repos\jgeurts_FluentScheduler\TestApplication\MyRegistry.cs,TenMinutes,The following statement contains a magic number: Schedule(() => L.Log("[ten minutes]"' "Ten minutes has passed."))                  .WithName("[ten minutes]").ToRunEvery(10).Minutes();
