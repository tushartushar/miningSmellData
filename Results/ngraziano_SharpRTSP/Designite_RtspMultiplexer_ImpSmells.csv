Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleOneMessage,Cyclomatic complexity of the method is 9
Complex Method,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequest,Cyclomatic complexity of the method is 9
Complex Method,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,UpdateSessionState,Cyclomatic complexity of the method is 13
Long Statement,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleOneMessage,The length of the statement  "                    message.SourcePort != null ? message.SourcePort.RemoteAdress : "UNKNOWN"'destination != null ? destination.RemoteAdress : "UNKNOWN" );" is 134.
Long Statement,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,RewriteUri,The length of the statement  "                throw new ArgumentException(String.Format(CultureInfo.InvariantCulture' "The url {0} do not contain forward part "' originalUri)' "originalUri");" is 145.
Long Statement,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequestSetup,The length of the statement  "            string setupKey = requestSetup.SourcePort.RemoteAdress + "SEQ" + requestSetup.CSeq.ToString(CultureInfo.InvariantCulture);" is 122.
Long Statement,RtspMulticaster,TCPtoUDPForwader,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\TcpToUdpForwader.cs,DoCommandJob,The length of the statement  "                _logger.Debug("Forward Command from multicast  {0}:{1} => TCP interleaved {2}"' this.ForwardHostVideo' ListenCommandPort' ForwardInterleavedCommand);" is 149.
Long Statement,RtspMulticaster,UDPForwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\UdpForwarder.cs,DoCommandJob,The length of the statement  "                _logger.Debug("Forward Command from multicast  {0}:{1} => {2}:{3}"' this.ForwardHostVideo' ListenCommandPort' ForwardHostCommand' ForwardPortCommand);" is 150.
Long Statement,RtspMulticaster,UDPForwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\UdpForwarder.cs,DoCommandJob,The length of the statement  "                _logger.Debug(CultureInfo.InvariantCulture'"Forward Command from {0} => {1}:{2}"' ListenCommandPort' ForwardHostCommand' ForwardPortCommand);" is 141.
Complex Conditional,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,UpdateSessionState,The conditional expression  "message.OriginalRequest == null ||                 (message.Session == null && message.OriginalRequest.Session == null) ||                 message.OriginalRequest.RtspUri == null"  is complex.
Complex Conditional,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,ConfigureTransportAndForwarder,The conditional expression  "(resultForwarder is UDPForwarder && forwarder.ForwardPortCommand == 0)                   || (resultForwarder is TCPtoUDPForwader && (resultForwarder as TCPtoUDPForwader).ForwardInterleavedCommand == 0)"  is complex.
Complex Conditional,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,ConfigureTransportAndForwarder,The conditional expression  "(resultForwarder is UDPForwarder && forwarder.ForwardPortCommand == 0)                   || (resultForwarder is TCPtoUDPForwader && (resultForwarder as TCPtoUDPForwader).ForwardInterleavedCommand == 0)"  is complex.
Empty Catch Block,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,RewriteSDPMessage,The method has an empty catch block.
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,GetNextPort,The following statement contains a magic number: Interlocked.Add(ref _lastOpenPort' 2);
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,Forwarder,The following statement contains a magic number: ForwardVUdpPort.Client.SendBufferSize = 100 * 1024;
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,Forwarder,The following statement contains a magic number: ForwardVUdpPort.Client.SendBufferSize = 100 * 1024;
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,Forwarder,The following statement contains a magic number: ListenCUdpPort.Client.ReceiveBufferSize = 8 * 1024;
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,Forwarder,The following statement contains a magic number: ListenCUdpPort.Client.ReceiveBufferSize = 8 * 1024;
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,InitReceivedFrame,The following statement contains a magic number: int i = (ushort)(aFirstIndex - 10);
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,VideoFrameSended,The following statement contains a magic number: _byteVideoCounter > 1024 * 1024 * 10
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,VideoFrameSended,The following statement contains a magic number: _byteVideoCounter > 1024 * 1024 * 10
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,VideoFrameSended,The following statement contains a magic number: _byteVideoCounter > 1024 * 1024 * 10
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,VideoFrameSended,The following statement contains a magic number: short newRTSPFrameIndex = BitConverter.ToInt16(frame' 2);
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,VideoFrameSended,The following statement contains a magic number: ushort oldIndex = (ushort)(newRTSPFrameIndex - 10);
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,CommandFrameSended,The following statement contains a magic number: length = BitConverter.ToInt16(frame' 2 + packetIndex);
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,CommandFrameSended,The following statement contains a magic number: packetIndex += (length + 1) * 4;
Magic Number,RtspMulticaster,Forwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Fowarder.cs,CommandFrameSended,The following statement contains a magic number: frame.Length > packetIndex + 4
Magic Number,RtspMulticaster,Program,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\Program.cs,Main,The following statement contains a magic number: RtspServer monServeur = new RtspServer(8554);
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleOneMessage,The following statement contains a magic number: theDirectResponse.ReturnCode = 500;
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequest,The following statement contains a magic number: request.RtspUri == null || request.RtspUri.AbsolutePath.Split(new char[] { '/' }' 3).Length < 3
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequest,The following statement contains a magic number: request.RtspUri == null || request.RtspUri.AbsolutePath.Split(new char[] { '/' }' 3).Length < 3
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequestPush,The following statement contains a magic number: switch (request.RequestTyped)             {                 case RtspRequest.RequestType.OPTIONS:                     theDirectResponse = pushManager.HandleOptions(message as RtspRequestOptions);                     break;                 case RtspRequest.RequestType.ANNOUNCE:                     theDirectResponse = pushManager.HandleAnnounce(message as RtspRequestAnnounce);                     break;                 case RtspRequest.RequestType.SETUP:                     theDirectResponse = pushManager.HandleSetup(message as RtspRequestSetup);                     break;                 case RtspRequest.RequestType.RECORD:                     theDirectResponse = pushManager.HandleRecord(message as RtspRequestRecord);                     break;                 case RtspRequest.RequestType.TEARDOWN:                     theDirectResponse = pushManager.HandleTeardown(message as RtspRequestTeardown);                     break;                 default:                     _logger.Warn("Do not know how to handle : {0}"' message.Command);                     theDirectResponse = request.CreateResponse();                     theDirectResponse.ReturnCode = 400;                     break;             }
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequestPull,The following statement contains a magic number: switch (request.RequestTyped)             {                 case RtspRequest.RequestType.OPTIONS:                     theDirectResponse = pushManager.HandleOptions(message as RtspRequestOptions);                     break;                 case RtspRequest.RequestType.DESCRIBE:                     theDirectResponse = pushManager.HandlePullDescribe(message as RtspRequestDescribe);                     break;                 case RtspRequest.RequestType.SETUP:                     theDirectResponse = pushManager.HandlePullSetup(message as RtspRequestSetup);                     break;                 case RtspRequest.RequestType.PLAY:                     theDirectResponse = pushManager.HandlePullPlay(message as RtspRequestPlay);                     break;                 case RtspRequest.RequestType.GET_PARAMETER:                     theDirectResponse = pushManager.HandlePullGetParameter(message as RtspRequestGetParameter);                     break;                 default:                     _logger.Warn("Do not know how to handle : {0}"' message.Command);                     theDirectResponse = request.CreateResponse();                     theDirectResponse.ReturnCode = 400;                     break;             }
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequestWithoutUrl,The following statement contains a magic number: theDirectResponse.ReturnCode = 200;
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,RewriteUri,The following statement contains a magic number: string[] pathPart = originalUri.AbsolutePath.Split(new char[] { '/' }' 3);
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,RewriteUri,The following statement contains a magic number: pathPart.Length < 3
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,RewriteUri,The following statement contains a magic number: destinationPart.Length < 2 || !int.TryParse(destinationPart[1]' out port)
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,RewriteUri,The following statement contains a magic number: url.Path = pathPart[2];
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequestSetup,The following statement contains a magic number: returnValue.ReturnCode = 461;
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,UpdateSessionState,The following statement contains a magic number: message.ReturnCode >= 300 && message.ReturnCode < 400
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,UpdateSessionState,The following statement contains a magic number: message.ReturnCode >= 300 && message.ReturnCode < 400
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,CreateNextMulticastAddress,The following statement contains a magic number: return String.Format(CultureInfo.InvariantCulture' "{0}.{1}.{2}.{3}"'                 (_multicastAddress >> 24) & 0xFF'                 (_multicastAddress >> 16) & 0xFF'                 (_multicastAddress >> 8) & 0xFF'                 (_multicastAddress >> 0) & 0xFF);
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,CreateNextMulticastAddress,The following statement contains a magic number: return String.Format(CultureInfo.InvariantCulture' "{0}.{1}.{2}.{3}"'                 (_multicastAddress >> 24) & 0xFF'                 (_multicastAddress >> 16) & 0xFF'                 (_multicastAddress >> 8) & 0xFF'                 (_multicastAddress >> 0) & 0xFF);
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,CreateNextMulticastAddress,The following statement contains a magic number: return String.Format(CultureInfo.InvariantCulture' "{0}.{1}.{2}.{3}"'                 (_multicastAddress >> 24) & 0xFF'                 (_multicastAddress >> 16) & 0xFF'                 (_multicastAddress >> 8) & 0xFF'                 (_multicastAddress >> 0) & 0xFF);
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,RewriteSDPMessage,The following statement contains a magic number: string[] lineElement = line.Split(new char[] { ':' }' 2);
Magic Number,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,RewriteSDPMessage,The following statement contains a magic number: temp.Port = 8554;
Magic Number,RtspMulticaster,RtspPushManager,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspPushManager.cs,HandleOptions,The following statement contains a magic number: response.ReturnCode = 200;
Magic Number,RtspMulticaster,RtspPushManager,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspPushManager.cs,HandleAnnounce,The following statement contains a magic number: response.ReturnCode = 403;
Magic Number,RtspMulticaster,RtspPushManager,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspPushManager.cs,HandleSetup,The following statement contains a magic number: response.ReturnCode = 404;
Magic Number,RtspMulticaster,RtspPushManager,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspPushManager.cs,HandleSetup,The following statement contains a magic number: response.ReturnCode = 461;
Magic Number,RtspMulticaster,RtspPushManager,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspPushManager.cs,HandleRecord,The following statement contains a magic number: response.ReturnCode = 404;
Magic Number,RtspMulticaster,RtspPushManager,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspPushManager.cs,HandleTeardown,The following statement contains a magic number: response.ReturnCode = 404;
Magic Number,RtspMulticaster,RtspSession,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspSession.cs,TimeoutDetecter,The following statement contains a magic number: _dataReceive.WaitOne(Timeout * 1000)
Magic Number,RtspMulticaster,UDPForwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\UdpForwarder.cs,UDPForwarder,The following statement contains a magic number: _listenVUdpPort.Client.ReceiveBufferSize = 100 * 1024;
Magic Number,RtspMulticaster,UDPForwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\UdpForwarder.cs,UDPForwarder,The following statement contains a magic number: _listenVUdpPort.Client.ReceiveBufferSize = 100 * 1024;
Magic Number,RtspMulticaster,UDPForwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\UdpForwarder.cs,UDPForwarder,The following statement contains a magic number: _forwarCUdpPort.Client.SendBufferSize = 8 * 1024;
Magic Number,RtspMulticaster,UDPForwarder,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\UdpForwarder.cs,UDPForwarder,The following statement contains a magic number: _forwarCUdpPort.Client.SendBufferSize = 8 * 1024;
Missing Default,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,HandleRequest,The following switch statement is missing a default case: switch (request.RequestTyped)                             {                                 // start here to start early                                 //case RtspRequest.RequestType.PLAY:                                   // _activesSession[sessionKey].Start(request.SourcePort.RemoteAdress);                                   //   break;                                 case RtspRequest.RequestType.TEARDOWN:                                     _activesSession[sessionKey].Stop(request.SourcePort.RemoteAdress);                                     if (!_activesSession[sessionKey].IsNeeded)                                         _activesSession.Remove(sessionKey);                                     else                                     {                                         // system still need the server to send data do not send him the message.                                         // reponds to client directly.                                         destination = request.SourcePort;                                         message = request.CreateResponse();                                     }                                     break;                              }
Missing Default,RtspMulticaster,RTSPDispatcher,C:\research\architectureSmells\repos\ngraziano_SharpRTSP\RtspMultiplexer\RtspDispatcher.cs,UpdateSessionState,The following switch statement is missing a default case: switch (message.OriginalRequest.RequestTyped)                     {                         case RtspRequest.RequestType.SETUP:                             if (_activesSession[sessionKey].State == RtspSession.SessionState.Init)                                 _activesSession[sessionKey].State = RtspSession.SessionState.Ready;                             break;                         case RtspRequest.RequestType.PLAY:                             if (_activesSession[sessionKey].State == RtspSession.SessionState.Ready)                                 _activesSession[sessionKey].State = RtspSession.SessionState.Playing;                             break;                         case RtspRequest.RequestType.RECORD:                             if (_activesSession[sessionKey].State == RtspSession.SessionState.Ready)                                 _activesSession[sessionKey].State = RtspSession.SessionState.Recording;                             break;                         case RtspRequest.RequestType.PAUSE:                             if (_activesSession[sessionKey].State == RtspSession.SessionState.Playing ||                                 _activesSession[sessionKey].State == RtspSession.SessionState.Recording)                                 _activesSession[sessionKey].State = RtspSession.SessionState.Ready;                             break;                         case RtspRequest.RequestType.TEARDOWN:                             _activesSession[sessionKey].State = RtspSession.SessionState.Init;                              break;                     }
