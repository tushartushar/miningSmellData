Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,GenerateToken,The method has 7 parameters. Parameters: grantType' scopes' username' code' redirectUri' password' refreshToken
Long Parameter List,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,CreateWebHook,The method has 5 parameters. Parameters: roomId' url' pattern' eventType' name
Long Parameter List,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,CreateWebHook,The method has 5 parameters. Parameters: roomName' url' pattern' eventType' name
Long Parameter List,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,SendNotification,The method has 5 parameters. Parameters: roomId' message' backgroundColor' notify' messageFormat
Long Parameter List,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,SendNotification,The method has 5 parameters. Parameters: roomName' message' backgroundColor' notify' messageFormat
Long Parameter List,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewRoomHistory,The method has 6 parameters. Parameters: roomName' date' timezone' startIndex' maxResults' reverse
Long Parameter List,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewRecentRoomHistory,The method has 5 parameters. Parameters: roomName' notBefore' timezone' startIndex' maxResults
Long Parameter List,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewPrivateChatHistory,The method has 6 parameters. Parameters: user' date' timezone' startIndex' maxResults' reverse
Long Parameter List,HipchatApiV2,IHipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\IHipchatClient.cs,GenerateToken,The method has 7 parameters. Parameters: grantType' scopes' username' code' redirectUri' password' refreshToken
Long Parameter List,HipchatApiV2,IHipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\IHipchatClient.cs,CreateWebHook,The method has 5 parameters. Parameters: roomId' url' pattern' eventType' name
Long Parameter List,HipchatApiV2,IHipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\IHipchatClient.cs,CreateWebHook,The method has 5 parameters. Parameters: roomName' url' pattern' eventType' name
Long Parameter List,HipchatApiV2,IHipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\IHipchatClient.cs,SendNotification,The method has 5 parameters. Parameters: roomId' message' backgroundColor' notify' messageFormat
Long Parameter List,HipchatApiV2,IHipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\IHipchatClient.cs,SendNotification,The method has 5 parameters. Parameters: roomName' message' backgroundColor' notify' messageFormat
Long Parameter List,HipchatApiV2,IHipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\IHipchatClient.cs,ViewRoomHistory,The method has 6 parameters. Parameters: roomName' date' timezone' startIndex' maxResults' reverse
Long Parameter List,HipchatApiV2,IHipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\IHipchatClient.cs,ViewRecentRoomHistory,The method has 5 parameters. Parameters: roomName' notBefore' timezone' startIndex' maxResults
Long Statement,HipchatApiV2,ExceptionHelpers,C:\repos\KyleGobel_Hipchat-CS\src\Api\ExceptionHelpers.cs,GeneralExceptionHelper,The length of the statement  "            return new HipchatGeneralException("An unhandled exception was thrown in '{0}'.  See inner exception for details.".Fmt(methodName)' exception); " is 143.
Long Statement,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,SendNotification,The length of the statement  "            return SendNotification(roomId.ToString(CultureInfo.InvariantCulture)' message' backgroundColor' notify' messageFormat); " is 120.
Long Statement,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,UpdateUser,The length of the statement  "                    throw new ArgumentOutOfRangeException("idOrEmail"' "Valid id' email address' or mention name (beginning with an '@') of the user required."); " is 141.
Empty Catch Block,HipchatApiV2,ExceptionHelpers,C:\repos\KyleGobel_Hipchat-CS\src\Api\ExceptionHelpers.cs,WebExceptionHelper,The method has an empty catch block.
Empty Catch Block,HipchatApiV2,ExceptionHelpers,C:\repos\KyleGobel_Hipchat-CS\src\Api\ExceptionHelpers.cs,GeneralExceptionHelper,The method has an empty catch block.
Magic Number,HipchatApiV2,ExceptionHelpers,C:\repos\KyleGobel_Hipchat-CS\src\Api\ExceptionHelpers.cs,WebExceptionHelper,The following statement contains a magic number: if (!errorMessage.IsEmpty())              {                  switch (exception.GetStatusCode())                  {                      case 404:                          if (errorMessage.Contains("Room not found"))                              return new HipchatRoomNotFoundException(errorMessage' exception);                          break;                  }                  return new HipchatWebException("\nMessage: '{0}'\nType: '{1}'".Fmt(errorMessage' errorType)' exception);               }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,GetRoom,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (roomName.IsEmpty() || roomName.Length > 100)                      throw new ArgumentOutOfRangeException(roomName' "Valid Lengths of roomName is 1 to 100 characters.");                  try                  {                      return HipchatEndpoints.GetRoomEndpointFormat.Fmt(roomName)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatGetRoomResponse>();                  }                  catch (WebException exception)                  {                      throw ExceptionHelpers.WebExceptionHelper(exception' "view_group");                  }                  catch (Exception exception)                  {                      throw ExceptionHelpers.GeneralExceptionHelper(exception' "GetRoom");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,PrivateMessageUser,The following statement contains a magic number: if (idOrEmailOrMention.IsEmpty() || idOrEmailOrMention.Length > 10000)                  throw new ArgumentOutOfRangeException("idOrEmailOrMention"' "Valid length range: 1 - 10000.");
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,CreateRoom,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (request.Name.IsEmpty() || request.Name.Length > 50)                      throw new ArgumentOutOfRangeException("request"' "Name of room must be between 1 and 50 characters.");                  try                  {                      return HipchatEndpoints.CreateRoomEndpoint                          .AddHipchatAuthentication(_authToken)                          .PostJsonToUrl(request)                          .FromJson<HipchatCreateRoomResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "manage_rooms");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "CreateRoom");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,SendNotification,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (request.Message.IsEmpty() || request.Message.Length > 10000)                      throw new ArgumentOutOfRangeException("request"'                          "message length must be between 0 and 10k characters");                    var result = false;                  try                  {                      HipchatEndpoints.SendNotificationEndpointFormat                          .Fmt(roomName)                          .AddHipchatAuthentication(_authToken)                          .PostJsonToUrl(request' null' x =>                          {                              if (x.StatusCode == HttpStatusCode.NoContent)                                  result = true;                          });                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "send_notification");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "SendNotification");                  }                  return result;              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,DeleteRoom,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (roomName.IsEmpty() || roomName.Length > 100)                      throw new ArgumentOutOfRangeException("roomName"' "Valid roomName length is 1-100.");                  var result = false;                  try                  {                      HipchatEndpoints.DeleteRoomEndpointFormat.Fmt(roomName)                          .AddHipchatAuthentication(_authToken)                          .DeleteFromUrl(responseFilter: x =>                          {                              if (x.StatusCode == HttpStatusCode.NoContent)                                  result = true;                          });                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "manage_rooms");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "DeleteRoom");                  }                  return result;              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,GetAllRooms,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.GetAllRoomsEndpoint                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddQueryParam("include-private"' includePrivate)                          .AddQueryParam("include-archived"' includeArchived)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatGetAllRoomsResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "GetAllRooms");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,GetAllRooms,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.GetAllRoomsEndpoint                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddQueryParam("include-private"' includePrivate)                          .AddQueryParam("include-archived"' includeArchived)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatGetAllRoomsResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "GetAllRooms");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewRoomHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (roomName.IsEmpty() || roomName.Length > 100)                      throw new ArgumentOutOfRangeException("roomName"' "Valid roomName length is 1-100.");                  if (date.IsEmpty())                      throw new ArgumentOutOfRangeException("date"' "Valid date should be passed.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                   if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewRoomHistoryEndpoint.Fmt(roomName)                          .AddQueryParam("date"' date)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddQueryParam("reverse"' reverse)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewRoomHistory");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewRoomHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (roomName.IsEmpty() || roomName.Length > 100)                      throw new ArgumentOutOfRangeException("roomName"' "Valid roomName length is 1-100.");                  if (date.IsEmpty())                      throw new ArgumentOutOfRangeException("date"' "Valid date should be passed.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                   if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewRoomHistoryEndpoint.Fmt(roomName)                          .AddQueryParam("date"' date)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddQueryParam("reverse"' reverse)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewRoomHistory");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewRoomHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (roomName.IsEmpty() || roomName.Length > 100)                      throw new ArgumentOutOfRangeException("roomName"' "Valid roomName length is 1-100.");                  if (date.IsEmpty())                      throw new ArgumentOutOfRangeException("date"' "Valid date should be passed.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                   if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewRoomHistoryEndpoint.Fmt(roomName)                          .AddQueryParam("date"' date)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddQueryParam("reverse"' reverse)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewRoomHistory");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewRecentRoomHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (roomName.IsEmpty() || roomName.Length > 100)                      throw new ArgumentOutOfRangeException("roomName"' "Valid roomName length is 1-100.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                   if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewRecentRoomHistoryEndpoint.Fmt(roomName)                          .AddQueryParam("not-before"' notBefore)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_messages");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewRecentRoomHistory");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewRecentRoomHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (roomName.IsEmpty() || roomName.Length > 100)                      throw new ArgumentOutOfRangeException("roomName"' "Valid roomName length is 1-100.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                   if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewRecentRoomHistoryEndpoint.Fmt(roomName)                          .AddQueryParam("not-before"' notBefore)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_messages");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewRecentRoomHistory");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewRecentRoomHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (roomName.IsEmpty() || roomName.Length > 100)                      throw new ArgumentOutOfRangeException("roomName"' "Valid roomName length is 1-100.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                   if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewRecentRoomHistoryEndpoint.Fmt(roomName)                          .AddQueryParam("not-before"' notBefore)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_messages");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewRecentRoomHistory");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,SetTopic,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (topic == null || topic.Length > 250)                      throw new ArgumentOutOfRangeException("topic"' "Valid length is 0 - 250 characters");                    var result = false;                  try                  {                      HipchatEndpoints.SetTopicEnpdointFormat                          .Fmt(roomName)                          .AddHipchatAuthentication(_authToken)                          .PutJsonToUrl(new {topic}' responseFilter: resp =>                          {                              if (resp.StatusCode == HttpStatusCode.NoContent)                                  result = true;                          });                    }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "admin_room");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "SetTopic");                  }                  return result;              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,CreateUser,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (string.IsNullOrEmpty(request.Name) || request.Name.Length > 50)                  {                      throw new ArgumentOutOfRangeException("name"' "Valid length range: 1 - 50.");                  }                    try                  {                      return HipchatEndpoints.CreateUserEndpointFormat                          .AddHipchatAuthentication(_authToken)                          .PostJsonToUrl(request)                          .FromJson<HipchatCreateUserResponse>();                  }                   catch (Exception exception)                   {                      Console.WriteLine(exception.Message);                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "admin_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "CreateUser");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,UpdateUser,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  var result = false;                  if (string.IsNullOrEmpty(idOrEmail))                  {                      throw new ArgumentOutOfRangeException("idOrEmail"' "Valid id' email address' or mention name (beginning with an '@') of the user required.");                  }                  if (string.IsNullOrEmpty(request.Name) || request.Name.Length > 50)                  {                      throw new ArgumentOutOfRangeException("name"' "Valid length range: 1 - 50.");                  }                  if (string.IsNullOrEmpty(request.Email))                  {                      throw new ArgumentOutOfRangeException("email"' "Valid email of the user required.");                  }                    try                  {                      HipchatEndpoints.UpdateUserEndpointFormat                      .Fmt(idOrEmail)                      .AddHipchatAuthentication(_authToken)                      .PutJsonToUrl(data:request' responseFilter: resp =>                      {                          if (resp.StatusCode == HttpStatusCode.NoContent)                              result = true;                      });                  }                  catch (Exception exception)                  {                      Console.WriteLine(exception.Message);                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "admin_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "UpdateUser");                  }                    return result;              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewPrivateChatHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (user.IsEmpty() || user.Length > 100)                      throw new ArgumentOutOfRangeException("user"' "Valid roomName length is 1-100.");                  if (date.IsEmpty())                      throw new ArgumentOutOfRangeException("date"' "Valid date should be passed.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                  if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewPrivateChatHistoryEndpoint.Fmt(user)                          .AddQueryParam("date"' date)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddQueryParam("reverse"' reverse)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewPrivateChatHistory");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewPrivateChatHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (user.IsEmpty() || user.Length > 100)                      throw new ArgumentOutOfRangeException("user"' "Valid roomName length is 1-100.");                  if (date.IsEmpty())                      throw new ArgumentOutOfRangeException("date"' "Valid date should be passed.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                  if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewPrivateChatHistoryEndpoint.Fmt(user)                          .AddQueryParam("date"' date)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddQueryParam("reverse"' reverse)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewPrivateChatHistory");                  }              }
Magic Number,HipchatApiV2,HipchatClient,C:\repos\KyleGobel_Hipchat-CS\src\Api\HipchatClient.cs,ViewPrivateChatHistory,The following statement contains a magic number: using (JsonSerializerConfigScope())              {                  if (user.IsEmpty() || user.Length > 100)                      throw new ArgumentOutOfRangeException("user"' "Valid roomName length is 1-100.");                  if (date.IsEmpty())                      throw new ArgumentOutOfRangeException("date"' "Valid date should be passed.");                  if (timezone.IsEmpty())                      throw new ArgumentOutOfRangeException("timezone"' "Valid timezone should be passed.");                  if (startIndex > 100)                      throw new ArgumentOutOfRangeException("startIndex"' "startIndex must be between 0 and 100");                  if (maxResults > 1000)                      throw new ArgumentOutOfRangeException("maxResults"' "maxResults must be between 0 and 1000");                    try                  {                      return HipchatEndpoints.ViewPrivateChatHistoryEndpoint.Fmt(user)                          .AddQueryParam("date"' date)                          .AddQueryParam("timezone"' timezone)                          .AddQueryParam("start-index"' startIndex)                          .AddQueryParam("max-results"' maxResults)                          .AddQueryParam("reverse"' reverse)                          .AddHipchatAuthentication(_authToken)                          .GetJsonFromUrl()                          .FromJson<HipchatViewRoomHistoryResponse>();                  }                  catch (Exception exception)                  {                      if (exception is WebException)                          throw ExceptionHelpers.WebExceptionHelper(exception as WebException' "view_group");                        throw ExceptionHelpers.GeneralExceptionHelper(exception' "ViewPrivateChatHistory");                  }              }
Missing Default,HipchatApiV2,ExceptionHelpers,C:\repos\KyleGobel_Hipchat-CS\src\Api\ExceptionHelpers.cs,WebExceptionHelper,The following switch statement is missing a default case: switch (exception.GetStatusCode())                  {                      case 404:                          if (errorMessage.Contains("Room not found"))                              return new HipchatRoomNotFoundException(errorMessage' exception);                          break;                  }
