Implementation smell,Namespace,Class,File,Method,Description
Long Statement,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The length of the statement  "		Console.WriteLine ("-o <output-json>     - Target path for the output json. If not specified' compile_commands.json will be created in the same location as the .vcxproj"); " is 171.
Long Statement,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The length of the statement  "		Console.WriteLine ("-c <configuration>   - Configuration name' e.g. 'Debug'. Currently only needed if intermediates do not exist. If not specified' msbuild will use the default"); " is 179.
Long Statement,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The length of the statement  "		Console.WriteLine ("-p <platform>        - Platform name' e.g. 'Win32'. Currently only needed if intermediates do not exist. If not specified' msbuild will use the default"); " is 174.
Long Statement,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The length of the statement  "	string target = argDict.ContainsKey ("o") ? argDict ["o"] : (fixPath (Path.Combine (g_projDir' "compile_commands.json"))); " is 122.
Long Statement,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The length of the statement  "		vs.Build (proj' argDict.ContainsKey ("p") ? argDict ["p"] : null' argDict.ContainsKey ("c") ? argDict ["c"] : null' intermediate); " is 130.
Long Statement,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The length of the statement  "			vs.Rebuild (proj' argDict.ContainsKey ("p") ? argDict ["p"] : null' argDict.ContainsKey ("c") ? argDict ["c"] : null' intermediate); " is 132.
Long Statement,vc2clangdb,VisualStudio,C:\repos\davidzaadstra_vc2clangdb\VisualStudio.cs,Find,The length of the statement  "		string registryKeyString = String.Format (@"SOFTWARE\{0}\Microsoft\{1}\{2}.0{3}\Setup\VS"' Environment.Is64BitProcess ? @"Wow6432Node" : ""' express ? "WDExpress" : "VisualStudio"' majorVersion' express ? "" : "_Config"); " is 221.
Long Statement,vc2clangdb,VisualStudio,C:\repos\davidzaadstra_vc2clangdb\VisualStudio.cs,Find,The length of the statement  "		// TODO: I haven't done any testing' but I guess that LocalMachine vs CurrentUser depends on whether the user chose "Install for this user" or "Install for all users" during installation? " is 187.
Long Statement,vc2clangdb,VisualStudio,C:\repos\davidzaadstra_vc2clangdb\VisualStudio.cs,Find,The length of the statement  "		using (RegistryKey localMachineKey = (express ? Registry.LocalMachine : Registry.CurrentUser).OpenSubKey (registryKeyString)) { " is 127.
Long Statement,vc2clangdb,VisualStudio,C:\repos\davidzaadstra_vc2clangdb\VisualStudio.cs,Rebuild,The length of the statement  "	Console.WriteLine (RunMSBuild (projectPath' "/target:Rebuild" + BuildPropString (platform' configuration' intermediateDir))); " is 125.
Magic Number,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,handleOption,The following statement contains a magic number: if (clOption.StartsWith ("D"))  	return "-" + clOption;  else if (clOption.StartsWith ("I"))  	// make sure that the path is not enclosed with "". VS is ok with that' but clang is not.  	return "-I" + fixPath (clOption.Substring (1).Trim ().Trim (new char[] {  		'"'  	}));  else if (clOption.StartsWith ("Yu")) {  	// Visual Studio magically knows where the pch include is' but clang doesn't' so let's help by searching  	var pchName = clOption.Substring (2).Trim ().Trim (new char[] {  		'"'  	});  	string[] pchLocation = Directory.GetFiles (g_projDir' pchName' SearchOption.AllDirectories);  	string locationToUse = null;  	if (pchLocation.Length == 0)  		Console.WriteLine ("WARNING: pch file '" + pchName + "' doesn't exist!");  	else {  		if (pchLocation.Length > 1) {  			Console.WriteLine ("WARNING: more than one instance of pch '" + pchName + "' was found!");  			foreach (string location in pchLocation) {  				string locationWithoutFilename = Path.GetDirectoryName (location);  				if (locationWithoutFilename == g_projDir) {  					locationToUse = locationWithoutFilename;  					Console.WriteLine ("Assuming default location.");  				}  			}  		}  		if (locationToUse == null)  			locationToUse = Path.GetDirectoryName (pchLocation [0]);  		return "-I" + fixPath (locationToUse);  	}  }  
Magic Number,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,handleOption,The following statement contains a magic number: if (clOption.StartsWith ("I"))  	// make sure that the path is not enclosed with "". VS is ok with that' but clang is not.  	return "-I" + fixPath (clOption.Substring (1).Trim ().Trim (new char[] {  		'"'  	}));  else if (clOption.StartsWith ("Yu")) {  	// Visual Studio magically knows where the pch include is' but clang doesn't' so let's help by searching  	var pchName = clOption.Substring (2).Trim ().Trim (new char[] {  		'"'  	});  	string[] pchLocation = Directory.GetFiles (g_projDir' pchName' SearchOption.AllDirectories);  	string locationToUse = null;  	if (pchLocation.Length == 0)  		Console.WriteLine ("WARNING: pch file '" + pchName + "' doesn't exist!");  	else {  		if (pchLocation.Length > 1) {  			Console.WriteLine ("WARNING: more than one instance of pch '" + pchName + "' was found!");  			foreach (string location in pchLocation) {  				string locationWithoutFilename = Path.GetDirectoryName (location);  				if (locationWithoutFilename == g_projDir) {  					locationToUse = locationWithoutFilename;  					Console.WriteLine ("Assuming default location.");  				}  			}  		}  		if (locationToUse == null)  			locationToUse = Path.GetDirectoryName (pchLocation [0]);  		return "-I" + fixPath (locationToUse);  	}  }  
Magic Number,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,handleOption,The following statement contains a magic number: if (clOption.StartsWith ("Yu")) {  	// Visual Studio magically knows where the pch include is' but clang doesn't' so let's help by searching  	var pchName = clOption.Substring (2).Trim ().Trim (new char[] {  		'"'  	});  	string[] pchLocation = Directory.GetFiles (g_projDir' pchName' SearchOption.AllDirectories);  	string locationToUse = null;  	if (pchLocation.Length == 0)  		Console.WriteLine ("WARNING: pch file '" + pchName + "' doesn't exist!");  	else {  		if (pchLocation.Length > 1) {  			Console.WriteLine ("WARNING: more than one instance of pch '" + pchName + "' was found!");  			foreach (string location in pchLocation) {  				string locationWithoutFilename = Path.GetDirectoryName (location);  				if (locationWithoutFilename == g_projDir) {  					locationToUse = locationWithoutFilename;  					Console.WriteLine ("Assuming default location.");  				}  			}  		}  		if (locationToUse == null)  			locationToUse = Path.GetDirectoryName (pchLocation [0]);  		return "-I" + fixPath (locationToUse);  	}  }  
Magic Number,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The following statement contains a magic number: if (!File.Exists (tlogPath) || File.GetLastWriteTimeUtc (tlogPath) < File.GetLastWriteTimeUtc (proj)) {  	var vs = VisualStudio.Find (12);  	// TODO: extract version from vcxproj  	vs.Build (proj' argDict.ContainsKey ("p") ? argDict ["p"] : null' argDict.ContainsKey ("c") ? argDict ["c"] : null' intermediate);  	if (!File.Exists (tlogPath))  		vs.Rebuild (proj' argDict.ContainsKey ("p") ? argDict ["p"] : null' argDict.ContainsKey ("c") ? argDict ["c"] : null' intermediate);  }  
Magic Number,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < lines.Length / 2; ++i' ++lineIndex) {  	string filename = lines [lineIndex++].Substring (1);  	string clangCommandline = transformCommandLine (lines [lineIndex]' filename' globalIncludes);  	compilationDatabase += "\n\t{\n\t\t";  	compilationDatabase += "\"directory\": \"" + g_projDir + "\"'\n\t\t";  	compilationDatabase += "\"command\": \"" + clangCommandline + "\"'\n\t\t";  	// TODO: relative filename  	compilationDatabase += "\"file\": \"" + fixPath (filename) + "\"\n\t}";  	if (lines.Length - lineIndex > 2)  		compilationDatabase += "'";  }  
Magic Number,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < lines.Length / 2; ++i' ++lineIndex) {  	string filename = lines [lineIndex++].Substring (1);  	string clangCommandline = transformCommandLine (lines [lineIndex]' filename' globalIncludes);  	compilationDatabase += "\n\t{\n\t\t";  	compilationDatabase += "\"directory\": \"" + g_projDir + "\"'\n\t\t";  	compilationDatabase += "\"command\": \"" + clangCommandline + "\"'\n\t\t";  	// TODO: relative filename  	compilationDatabase += "\"file\": \"" + fixPath (filename) + "\"\n\t}";  	if (lines.Length - lineIndex > 2)  		compilationDatabase += "'";  }  
Magic Number,vc2clangdb,Program,C:\repos\davidzaadstra_vc2clangdb\Program.cs,Main,The following statement contains a magic number: if (lines.Length - lineIndex > 2)  	compilationDatabase += "'";  
