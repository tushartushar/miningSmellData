Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Dnx.TestHost.Client,TestHostWrapper,D:\research\architectureSmells\repos\aspnet_DNX\src\Microsoft.Dnx.TestHost.Client.Sources\TestHostWrapper.cs,StartAsync,Cyclomatic complexity of the method is 8
Long Statement,Microsoft.Dnx.TestHost.Client,TestHostWrapper,D:\research\architectureSmells\repos\aspnet_DNX\src\Microsoft.Dnx.TestHost.Client.Sources\TestHostWrapper.cs,ListTestsAsync,The length of the statement  "            var listener = Task.Run(() => StartCommandAndWaitForResponse("TestDiscovery.Start"' payload' "TestDiscovery.Response")); " is 120.
Long Statement,Microsoft.Dnx.TestHost.Client,TestHostWrapper,D:\research\architectureSmells\repos\aspnet_DNX\src\Microsoft.Dnx.TestHost.Client.Sources\TestHostWrapper.cs,RunTestsAsync,The length of the statement  "            var listener = Task.Run(() => StartCommandAndWaitForResponse("TestExecution.Start"' payload' "TestExecution.Response")); " is 120.
Long Statement,Microsoft.Dnx.TestHost.UI,MainWindow,D:\research\architectureSmells\repos\aspnet_DNX\tools\Microsoft.Dnx.TestHost.UI\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Microsoft.Dnx.TestHost.UI;component/mainwindow.xaml"' System.UriKind.Relative); " is 125.
Empty Catch Block,Microsoft.Dnx.TestHost.Client,TestHostWrapper,D:\research\architectureSmells\repos\aspnet_DNX\src\Microsoft.Dnx.TestHost.Client.Sources\TestHostWrapper.cs,StartCommandAndWaitForResponse,The method has an empty catch block.
Empty Catch Block,Microsoft.Dnx.TestHost.Client,TestHostWrapper,D:\research\architectureSmells\repos\aspnet_DNX\src\Microsoft.Dnx.TestHost.Client.Sources\TestHostWrapper.cs,StartCommandAndWaitForResponse,The method has an empty catch block.
Magic Number,Microsoft.Dnx.TestHost.Client,TestHostWrapper,D:\research\architectureSmells\repos\aspnet_DNX\src\Microsoft.Dnx.TestHost.Client.Sources\TestHostWrapper.cs,StartAsync,The following statement contains a magic number: i < 50
Magic Number,Microsoft.Dnx.TestHost.UI,MainWindow,D:\research\architectureSmells\repos\aspnet_DNX\tools\Microsoft.Dnx.TestHost.UI\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this._debug = ((System.Windows.Controls.CheckBox)(target));              return;              case 2:              this._messageBuffer = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this._consoleBuffer = ((System.Windows.Controls.TextBox)(target));              return;              }
Magic Number,Microsoft.Dnx.TestHost.UI,MainWindow,D:\research\architectureSmells\repos\aspnet_DNX\tools\Microsoft.Dnx.TestHost.UI\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this._debug = ((System.Windows.Controls.CheckBox)(target));              return;              case 2:              this._messageBuffer = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this._consoleBuffer = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,Microsoft.Dnx.TestHost.UI,MainWindow,D:\research\architectureSmells\repos\aspnet_DNX\tools\Microsoft.Dnx.TestHost.UI\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this._debug = ((System.Windows.Controls.CheckBox)(target));              return;              case 2:              this._messageBuffer = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this._consoleBuffer = ((System.Windows.Controls.TextBox)(target));              return;              }
