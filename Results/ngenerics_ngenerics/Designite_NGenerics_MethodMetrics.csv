Method,LOC,CC,PC
GraphAlgorithms:DijkstrasAlgorithm,51,7,2
GraphAlgorithms:PrimsAlgorithm,46,7,2
GraphAlgorithms:KruskalsAlgorithm,69,7,1
GraphAlgorithms:BuildGraphPrim,28,4,2
GraphAlgorithms:BuildGraphDijkstra,29,4,3
MathAlgorithms:GreatestCommonDivisor,9,2,2
MathAlgorithms:LeastCommonMultiple,12,2,2
MathAlgorithms:Fibonacci,13,3,1
MathAlgorithms:GenerateFibonacciSequence,9,2,1
MathAlgorithms:Hypotenuse,5,1,2
VertexInfo<T>:VertexInfo,5,1,3
AssociationKeyComparer<TKey;TValue>:AssociationKeyComparer,3,1,0
AssociationKeyComparer<TKey;TValue>:AssociationKeyComparer,3,1,1
AssociationKeyComparer<TKey;TValue>:Compare,3,1,2
AssociationKeyComparer<TKey;TValue>:Compare,3,1,2
ComparisonComparer<T>:ComparisonComparer,4,1,1
ComparisonComparer<T>:Compare,3,1,2
ReverseComparisonComparer<T>:ReverseComparisonComparer,4,1,1
ReverseComparisonComparer<T>:Compare,3,1,2
EdgeWeightComparer<T>:Compare,3,1,2
KeyValuePairComparer<TKey;TValue>:KeyValuePairComparer,3,1,0
KeyValuePairComparer<TKey;TValue>:KeyValuePairComparer,7,2,1
KeyValuePairComparer<TKey;TValue>:KeyValuePairComparer,6,2,1
KeyValuePairComparer<TKey;TValue>:Compare,3,1,2
KeyValuePairComparer<TKey;TValue>:Compare,3,1,2
ReverseComparer<T>:ReverseComparer,3,1,0
ReverseComparer<T>:ReverseComparer,4,1,1
ReverseComparer<T>:Compare,3,1,2
Association<TKey;TValue>:Association,3,1,0
Association<TKey;TValue>:Association,4,1,2
Association<TKey;TValue>:Association,4,1,1
Association<TKey;TValue>:ToKeyValuePair,3,1,0
Association<TKey;TValue>:ToString,3,1,0
Association<TKey;TValue>:Equals,16,4,1
Association<TKey;TValue>:GetHashCode,3,1,0
AutoKeyDictionary<TKey;TItem>:AutoKeyDictionary,2,1,1
AutoKeyDictionary<TKey;TItem>:AutoKeyDictionary,2,1,2
AutoKeyDictionary<TKey;TItem>:AutoKeyDictionary,5,1,2
AutoKeyDictionary<TKey;TItem>:AutoKeyDictionary,5,1,3
AutoKeyDictionary<TKey;TItem>:AutoKeyDictionary,4,1,2
AutoKeyDictionary<TKey;TItem>:TryAdd,10,2,1
AutoKeyDictionary<TKey;TItem>:TryRemove,10,2,1
AutoKeyDictionary<TKey;TItem>:Add,4,1,1
AutoKeyDictionary<TKey;TItem>:Clear,3,1,0
AutoKeyDictionary<TKey;TItem>:Contains,5,1,1
AutoKeyDictionary<TKey;TItem>:CopyTo,3,1,2
AutoKeyDictionary<TKey;TItem>:Remove,5,1,1
AutoKeyDictionary<TKey;TItem>:GetEnumerator,3,1,0
AutoKeyDictionary<TKey;TItem>:GetEnumerator,3,1,0
AutoKeyDictionary<TKey;TItem>:InternalAdd,4,1,1
AutoKeyDictionary<TKey;TItem>:ContainsKey,3,1,1
AutoKeyDictionary<TKey;TItem>:RemoveKey,3,1,1
AutoKeyDictionary<TKey;TItem>:InternalRemove,3,1,1
AutoKeyDictionary<TKey;TItem>:InternalRemove,5,1,1
AutoKeyDictionary<TKey;TItem>:TryGetValue,3,1,2
AutoKeyDictionary<TKey;TItem>:OnDeserialization,3,1,1
AutoKeyDictionary<TKey;TItem>:GetObjectData,3,1,2
Bag<T>:Bag,3,1,0
Bag<T>:Bag,3,1,1
Bag<T>:Bag,5,1,1
Bag<T>:Bag,5,1,2
Bag<T>:Bag,12,2,1
Bag<T>:RemoveAll,9,2,1
Bag<T>:Remove,17,3,2
Bag<T>:RemoveItem,12,2,3
Bag<T>:Add,9,2,2
Bag<T>:AddItem,12,2,2
Bag<T>:GetCountEnumerator,3,1,0
Bag<T>:Union,3,1,1
Bag<T>:Subtract,3,1,1
Bag<T>:Intersection,3,1,1
Bag<T>:IntersectionInternal,20,1,1
Bag<T>:UnionInternal,17,2,1
Bag<T>:SubtractInternal,25,1,1
Bag<T>:CopyTo,21,4,2
Bag<T>:Add,3,1,1
Bag<T>:Remove,10,2,1
Bag<T>:Contains,3,1,1
Bag<T>:GetEnumerator,6,2,0
Bag<T>:GetEnumerator,6,2,0
Bag<T>:Clear,3,1,0
Bag<T>:ClearItems,4,1,0
Bag<T>:GetEnumerator,3,1,0
Bag<T>:Intersection,3,1,1
Bag<T>:Subtract,3,1,1
Bag<T>:Union,3,1,1
Bag<T>:Equals,27,6,1
CaseInsensitiveString:CaseInsensitiveString,3,1,0
CaseInsensitiveString:CaseInsensitiveString,4,1,1
CaseInsensitiveString:CaseInsensitiveString,4,1,2
CaseInsensitiveString:GetLastAfter,9,2,1
CaseInsensitiveString:WriteXml,3,1,1
CaseInsensitiveString:ReadXml,3,1,1
CaseInsensitiveString:GetEnumerator,3,1,0
CaseInsensitiveString:EqualsHelper,3,1,2
CaseInsensitiveString:GetObjectData,4,1,2
CaseInsensitiveString:GetSchema,3,1,0
CaseInsensitiveString:Clone,3,1,0
CaseInsensitiveString:CompareTo,3,1,1
CaseInsensitiveString:CompareTo,3,1,1
CaseInsensitiveString:ToString,3,1,1
CaseInsensitiveString:GetTypeCode,3,1,0
CaseInsensitiveString:ToBoolean,3,1,1
CaseInsensitiveString:ToChar,3,1,1
CaseInsensitiveString:ToSByte,3,1,1
CaseInsensitiveString:ToByte,3,1,1
CaseInsensitiveString:ToInt16,3,1,1
CaseInsensitiveString:ToUInt16,3,1,1
CaseInsensitiveString:ToInt32,3,1,1
CaseInsensitiveString:ToUInt32,3,1,1
CaseInsensitiveString:ToInt64,3,1,1
CaseInsensitiveString:ToUInt64,3,1,1
CaseInsensitiveString:ToSingle,3,1,1
CaseInsensitiveString:ToDouble,3,1,1
CaseInsensitiveString:ToDecimal,3,1,1
CaseInsensitiveString:ToDateTime,3,1,1
CaseInsensitiveString:ToType,3,1,2
CaseInsensitiveString:GetEnumerator,3,1,0
CaseInsensitiveString:GetEnumerator,3,1,0
CaseInsensitiveString:Equals,3,1,1
CaseInsensitiveString:Equals,3,1,1
CaseInsensitiveString:Equals,8,2,1
CaseInsensitiveString:ToCharArray,3,1,0
CaseInsensitiveString:ToCharArray,3,1,2
CaseInsensitiveString:GetHashCode,3,1,0
CaseInsensitiveString:Split,3,1,1
CaseInsensitiveString:Split,3,1,2
CaseInsensitiveString:Split,3,1,2
CaseInsensitiveString:Split,3,1,3
CaseInsensitiveString:Split,3,1,2
CaseInsensitiveString:Split,3,1,3
CaseInsensitiveString:StringArrayTo,8,2,1
CaseInsensitiveString:Substring,3,1,1
CaseInsensitiveString:Substring,3,1,2
CaseInsensitiveString:Trim,3,1,1
CaseInsensitiveString:TrimStart,3,1,1
CaseInsensitiveString:TrimEnd,3,1,1
CaseInsensitiveString:IsNormalized,3,1,0
CaseInsensitiveString:IsNormalized,3,1,1
CaseInsensitiveString:Normalize,3,1,0
CaseInsensitiveString:Normalize,3,1,1
CaseInsensitiveString:Contains,3,1,1
CaseInsensitiveString:EndsWith,3,1,1
CaseInsensitiveString:EndsWith,3,1,2
CaseInsensitiveString:EndsWith,3,1,3
CaseInsensitiveString:IndexOf,3,1,1
CaseInsensitiveString:IndexOf,3,1,2
CaseInsensitiveString:IndexOf,3,1,3
CaseInsensitiveString:IndexOfAny,3,1,1
CaseInsensitiveString:IndexOfAny,3,1,2
CaseInsensitiveString:IndexOfAny,3,1,3
CaseInsensitiveString:IndexOf,3,1,1
CaseInsensitiveString:IndexOf,3,1,2
CaseInsensitiveString:IndexOf,3,1,3
CaseInsensitiveString:LastIndexOf,3,1,1
CaseInsensitiveString:LastIndexOf,3,1,2
CaseInsensitiveString:LastIndexOf,3,1,3
CaseInsensitiveString:LastIndexOfAny,3,1,1
CaseInsensitiveString:LastIndexOfAny,3,1,2
CaseInsensitiveString:LastIndexOfAny,3,1,3
CaseInsensitiveString:LastIndexOf,3,1,1
CaseInsensitiveString:LastIndexOf,3,1,2
CaseInsensitiveString:LastIndexOf,3,1,3
CaseInsensitiveString:LastIndexOf,3,1,2
CaseInsensitiveString:LastIndexOf,3,1,3
CaseInsensitiveString:LastIndexOf,3,1,4
CaseInsensitiveString:PadLeft,3,1,1
CaseInsensitiveString:PadLeft,3,1,2
CaseInsensitiveString:PadRight,3,1,1
CaseInsensitiveString:PadRight,3,1,2
CaseInsensitiveString:StartsWith,3,1,1
CaseInsensitiveString:StartsWith,3,1,2
CaseInsensitiveString:StartsWith,3,1,3
CaseInsensitiveString:ToLower,3,1,0
CaseInsensitiveString:ToLower,3,1,1
CaseInsensitiveString:ToLowerInvariant,3,1,0
CaseInsensitiveString:ToUpperInvariant,3,1,0
CaseInsensitiveString:ToUpper,3,1,0
CaseInsensitiveString:ToUpper,3,1,1
CaseInsensitiveString:ToString,3,1,0
CaseInsensitiveString:Trim,3,1,0
CaseInsensitiveString:Insert,3,1,2
CaseInsensitiveString:Replace,4,1,2
CaseInsensitiveString:Replace,20,3,2
CaseInsensitiveString:Remove,3,1,2
CaseInsensitiveString:Remove,3,1,1
CaseInsensitiveString:RemoveEnd,8,2,1
Curve<TKey;TValue>:Curve,4,1,0
Curve<TKey;TValue>:Curve,4,1,1
Curve<TKey;TValue>:Curve,4,1,1
Curve<TKey;TValue>:Curve,4,1,2
Curve<TKey;TValue>:Curve,6,2,1
Curve<TKey;TValue>:Curve,6,2,1
Curve<TKey;TValue>:GetValue,8,2,1
Curve<TKey;TValue>:Remove,31,2,1
Curve<TKey;TValue>:CopyTo,3,1,2
Curve<TKey;TValue>:Add,3,1,1
Curve<TKey;TValue>:Contains,3,1,1
Curve<TKey;TValue>:IndexOf,3,1,1
Curve<TKey;TValue>:Insert,3,1,2
Curve<TKey;TValue>:RemoveAt,3,1,1
Curve<TKey;TValue>:CopyTo,3,1,2
Curve<TKey;TValue>:Add,3,1,1
Curve<TKey;TValue>:AddSetItem,17,3,1
Curve<TKey;TValue>:Remove,3,1,1
Curve<TKey;TValue>:Contains,3,1,1
Curve<TKey;TValue>:Contains,3,1,2
Curve<TKey;TValue>:GetEnumerator,3,1,0
Curve<TKey;TValue>:Clear,3,1,0
Curve<TKey;TValue>:GetEnumerator,3,1,0
Curve<TKey;TValue>:IndexOf,3,1,1
Curve<TKey;TValue>:Insert,3,1,2
Curve<TKey;TValue>:GetKeyForItem,3,1,1
Curve<TKey;TValue>:ContainsKey,3,1,1
Curve<TKey;TValue>:Add,3,1,2
Curve<TKey;TValue>:Remove,10,2,1
Curve<TKey;TValue>:TryGetValue,14,2,2
Curve<TKey;TValue>:GetDefaultAssociationForKey,3,1,1
Curve<TKey;TValue>:IndexOf,3,1,1
DictionaryBase<TKey;TValue>:DictionaryBase,3,1,0
DictionaryBase<TKey;TValue>:DictionaryBase,3,1,1
DictionaryBase<TKey;TValue>:DictionaryBase,3,1,1
DictionaryBase<TKey;TValue>:DictionaryBase,3,1,1
DictionaryBase<TKey;TValue>:DictionaryBase,3,1,2
DictionaryBase<TKey;TValue>:DictionaryBase,3,1,2
DictionaryBase<TKey;TValue>:DictionaryBase,4,1,2
DictionaryBase<TKey;TValue>:GetEnumerator,3,1,0
DictionaryBase<TKey;TValue>:AddItem,3,1,2
DictionaryBase<TKey;TValue>:SetItem,3,1,2
DictionaryBase<TKey;TValue>:RemoveItem,3,1,1
DictionaryBase<TKey;TValue>:ClearItems,3,1,0
DictionaryBase<TKey;TValue>:VerifyKey,7,2,1
DictionaryBase<TKey;TValue>:VerifyValueType,9,3,1
DictionaryBase<TKey;TValue>:ContainsKey,3,1,1
DictionaryBase<TKey;TValue>:Add,3,1,2
DictionaryBase<TKey;TValue>:Remove,3,1,1
DictionaryBase<TKey;TValue>:TryGetValue,3,1,2
DictionaryBase<TKey;TValue>:Add,3,1,1
DictionaryBase<TKey;TValue>:Clear,3,1,0
DictionaryBase<TKey;TValue>:Contains,3,1,1
DictionaryBase<TKey;TValue>:CopyTo,3,1,2
DictionaryBase<TKey;TValue>:Remove,12,3,1
DictionaryBase<TKey;TValue>:GetEnumerator,3,1,0
DictionaryBase<TKey;TValue>:GetEnumerator,3,1,0
DictionaryBase<TKey;TValue>:Add,5,1,2
DictionaryBase<TKey;TValue>:Contains,3,1,1
DictionaryBase<TKey;TValue>:GetEnumerator,3,1,0
DictionaryBase<TKey;TValue>:Remove,4,1,1
DictionaryBase<TKey;TValue>:CopyTo,3,1,2
DictionaryBase<TKey;TValue>:GetObjectData,3,1,2
DictionaryBase<TKey;TValue>:OnDeserialization,3,1,1
ListBase<T>:ListBase,3,1,0
ListBase<T>:ListBase,3,1,1
ListBase<T>:ListBase,3,1,1
ListBase<T>:Add,3,1,1
ListBase<T>:InsertItem,3,1,2
ListBase<T>:AddRange,3,1,1
ListBase<T>:AddRangeItems,3,1,1
ListBase<T>:AsReadOnly,3,1,0
ListBase<T>:BinarySearch,3,1,1
ListBase<T>:BinarySearch,3,1,2
ListBase<T>:BinarySearch,3,1,4
ListBase<T>:Clear,3,1,0
ListBase<T>:ClearItems,3,1,0
ListBase<T>:Contains,3,1,1
ListBase<T>:ConvertAll,3,1,1
ListBase<T>:CopyTo,3,1,1
ListBase<T>:CopyTo,3,1,2
ListBase<T>:CopyTo,3,1,4
ListBase<T>:ForEach,3,1,1
ListBase<T>:GetEnumerator,3,1,0
ListBase<T>:GetRange,3,1,2
ListBase<T>:IndexOf,3,1,1
ListBase<T>:IndexOf,3,1,2
ListBase<T>:IndexOf,3,1,3
ListBase<T>:Insert,3,1,2
ListBase<T>:InsertRange,3,1,2
ListBase<T>:InsertRangeItems,3,1,2
ListBase<T>:LastIndexOf,3,1,1
ListBase<T>:LastIndexOf,3,1,2
ListBase<T>:LastIndexOf,3,1,3
ListBase<T>:Remove,9,2,1
ListBase<T>:RemoveItem,3,1,2
ListBase<T>:RemoveAll,19,3,1
ListBase<T>:RemoveAt,4,1,1
ListBase<T>:RemoveRange,3,1,2
ListBase<T>:RemoveRangeItems,3,1,2
ListBase<T>:Reverse,3,1,0
ListBase<T>:Reverse,3,1,2
ListBase<T>:SetItem,3,1,2
ListBase<T>:Sort,3,1,0
ListBase<T>:Sort,3,1,1
ListBase<T>:Sort,3,1,1
ListBase<T>:Sort,3,1,3
ListBase<T>:CopyTo,3,1,2
ListBase<T>:GetEnumerator,3,1,0
ListBase<T>:Add,5,1,1
ListBase<T>:Contains,3,1,1
ListBase<T>:IndexOf,7,2,1
ListBase<T>:Insert,4,1,2
ListBase<T>:Remove,6,2,1
ListBase<T>:ToArray,3,1,0
ListBase<T>:TrimExcess,3,1,0
ListBase<T>:VerifyValueType,6,2,1
ListBase<T>:IsCompatibleObject,3,1,1
Edge<T>:Edge,2,1,3
Edge<T>:Edge,9,1,4
Edge<T>:GetPartnerVertex,12,3,1
Graph<T>:Graph,5,1,1
Graph<T>:Add,3,1,1
Graph<T>:Contains,3,1,1
Graph<T>:CopyTo,15,3,2
Graph<T>:Remove,3,1,1
Graph<T>:GetEnumerator,8,2,0
Graph<T>:Clear,4,1,0
Graph<T>:DepthFirstTraversal,6,1,2
Graph<T>:IsCyclic,7,1,0
Graph<T>:TopologicalSort,5,1,0
Graph<T>:TopologicalSortTraversal,7,2,1
Graph<T>:BreadthFirstTraversal,23,4,2
Graph<T>:RemoveVertex,15,3,1
Graph<T>:RemoveVertex,11,3,1
Graph<T>:ContainsVertex,3,1,1
Graph<T>:ContainsVertex,10,3,1
Graph<T>:RemoveEdge,12,2,1
Graph<T>:RemoveEdge,28,4,2
Graph<T>:AddEdge,19,4,1
Graph<T>:AddVertex,11,2,1
Graph<T>:AddVertex,5,1,1
Graph<T>:AddEdge,5,1,2
Graph<T>:AddEdge,5,1,3
Graph<T>:IsWeaklyConnected,9,2,0
Graph<T>:IsStronglyConnected,23,5,0
Graph<T>:ContainsEdge,27,4,2
Graph<T>:ContainsEdge,3,1,2
Graph<T>:ContainsEdge,3,1,1
Graph<T>:GetEdge,3,1,2
Graph<T>:GetEdge,18,5,2
Graph<T>:GetVertex,10,3,1
Graph<T>:FindVertices,13,3,1
Graph<T>:FindCycles,3,1,0
Graph<T>:FindCycles,15,3,1
Graph<T>:TopologicalSortTraversalInternal,55,9,1
Graph<T>:DepthFirstTraversal,25,4,3
Graph<T>:AddEdgeToVertices,12,2,1
Graph<T>:CheckEdgeNotNull,10,1,1
Graph<T>:GetAnyVertex,10,2,0
Graph<T>:TarjansStronglyConnectedComponentsAlgorithm,33,5,7
Graph<T>:GetEnumerator,3,1,0
HashList<TKey;TValue>:HashList,2,1,0
HashList<TKey;TValue>:HashList,2,1,1
HashList<TKey;TValue>:HashList,2,1,1
HashList<TKey;TValue>:HashList,2,1,1
HashList<TKey;TValue>:HashList,2,1,2
HashList<TKey;TValue>:HashList,2,1,2
HashList<TKey;TValue>:GetValueEnumerator,18,4,0
HashList<TKey;TValue>:Add,3,1,2
HashList<TKey;TValue>:AddItem,9,2,1
HashList<TKey;TValue>:Add,3,1,2
HashList<TKey;TValue>:AddItem,12,2,2
HashList<TKey;TValue>:RemoveValue,3,1,1
HashList<TKey;TValue>:RemoveValueItem,12,3,1
HashList<TKey;TValue>:RemoveAll,3,1,1
HashList<TKey;TValue>:RemoveAllItems,18,5,1
HashList<TKey;TValue>:Remove,3,1,2
HashList<TKey;TValue>:RemoveItem,4,1,2
Heap<T>:Heap,1,1,1
Heap<T>:Heap,1,1,2
Heap<T>:Heap,1,1,2
Heap<T>:Heap,1,1,3
Heap<T>:Heap,10,2,2
Heap<T>:Heap,10,2,3
Heap<T>:RemoveRoot,12,2,0
Heap<T>:RemoveRootItem,27,5,1
Heap<T>:Contains,3,1,1
Heap<T>:CopyTo,13,3,2
Heap<T>:Add,3,1,1
Heap<T>:AddItem,11,2,1
Heap<T>:Remove,3,1,1
Heap<T>:GetEnumerator,6,2,0
Heap<T>:Clear,3,1,0
Heap<T>:ClearItems,3,1,0
Heap<T>:GetEnumerator,3,1,0
IBag:Add,0,1,2
IBag:Subtract,0,1,1
IBag:Intersection,0,1,1
IBag:Remove,0,1,2
IBag:Union,0,1,1
IBag:GetCountEnumerator,0,1,0
IHeap:Add,0,1,1
IHeap:RemoveRoot,0,1,0
IMatrix:GetSubMatrix,0,1,4
IMatrix:InterchangeRows,0,1,2
IMatrix:InterchangeColumns,0,1,2
IMatrix:GetRow,0,1,1
IMatrix:GetColumn,0,1,1
IMatrix:AddRows,0,1,1
IMatrix:AddRow,0,1,0
IMatrix:AddRow,0,1,1
IMatrix:AddColumns,0,1,1
IMatrix:AddColumn,0,1,0
IMatrix:AddColumn,0,1,1
IMatrix:DeleteRow,0,1,1
IMatrix:DeleteColumn,0,1,1
IMatrix:Resize,0,1,2
ISet:Subtract,0,1,1
ISet:Intersection,0,1,1
ISet:Inverse,0,1,0
ISet:IsProperSubsetOf,0,1,1
ISet:IsProperSupersetOf,0,1,1
ISet:IsSubsetOf,0,1,1
ISet:IsSupersetOf,0,1,1
ISet:Union,0,1,1
ObjectMatrix<T>:ObjectMatrix,15,3,2
ObjectMatrix<T>:ObjectMatrix,9,1,3
ObjectMatrix<T>:ObjectMatrix,9,3,3
ObjectMatrix<T>:GetSubMatrix,3,1,4
ObjectMatrix<T>:Add,3,1,1
ObjectMatrix<T>:Clear,3,1,0
ObjectMatrix<T>:Contains,10,3,1
ObjectMatrix<T>:CopyTo,11,2,2
ObjectMatrix<T>:Remove,3,1,1
ObjectMatrix<T>:GetEnumerator,6,2,0
ObjectMatrix<T>:GetEnumerator,3,1,0
ObjectMatrix<T>:ValidateIsSquare,6,2,0
ObjectMatrix<T>:ToArray,11,3,0
ObjectMatrix<T>:GetSubMatrix,36,8,4
ObjectMatrix<T>:InterchangeRows,25,5,2
ObjectMatrix<T>:InterchangeColumns,25,5,2
ObjectMatrix<T>:GetRow,15,3,1
ObjectMatrix<T>:GetColumn,15,3,1
ObjectMatrix<T>:AddRows,16,2,1
ObjectMatrix<T>:AddRow,3,1,0
ObjectMatrix<T>:AddColumn,15,3,1
ObjectMatrix<T>:AddColumns,14,2,1
ObjectMatrix<T>:AddColumn,3,1,0
ObjectMatrix<T>:AddRow,15,3,1
ObjectMatrix<T>:Resize,29,5,2
ObjectMatrix<T>:DeleteRow,20,3,1
ObjectMatrix<T>:DeleteColumn,28,6,1
ObjectMatrix<T>:ToString,12,3,0
ObjectMatrix<T>:GetValue,3,1,2
ObjectMatrix<T>:SetValue,3,1,3
ObjectMatrix<T>:GetOffset,9,1,2
ObjectMatrix<T>:CheckIndexValid,10,3,2
ObjectMatrix<T>:CopyData,26,3,2
PascalSet:PascalSet,1,1,1
PascalSet:PascalSet,1,1,2
PascalSet:PascalSet,7,2,3
PascalSet:PascalSet,15,3,2
PascalSet:PascalSet,19,3,3
PascalSet:Union,7,1,1
PascalSet:Subtract,8,1,1
PascalSet:Intersection,7,1,1
PascalSet:Inverse,3,1,0
PascalSet:IsSubsetOf,17,4,1
PascalSet:IsProperSubsetOf,8,1,1
PascalSet:IsSupersetOf,18,4,1
PascalSet:IsProperSupersetOf,9,1,1
PascalSet:GetOffSet,3,1,1
PascalSet:IsUniverseTheSame,5,1,1
PascalSet:CheckIfUniverseTheSame,6,2,1
PascalSet:IsIndexValid,3,1,1
PascalSet:CheckValidIndex,6,2,1
PascalSet:Add,10,2,1
PascalSet:AddItem,4,1,2
PascalSet:Remove,12,2,1
PascalSet:RemoveItem,4,1,2
PascalSet:Contains,6,1,1
PascalSet:Clear,3,1,0
PascalSet:ClearItems,4,1,0
PascalSet:CopyTo,13,3,2
PascalSet:GetEnumerator,9,3,0
PascalSet:GetEnumerator,3,1,0
PascalSet:Subtract,3,1,1
PascalSet:Intersection,3,1,1
PascalSet:Inverse,3,1,0
PascalSet:IsProperSubsetOf,3,1,1
PascalSet:IsProperSupersetOf,3,1,1
PascalSet:IsSubsetOf,3,1,1
PascalSet:IsSupersetOf,3,1,1
PascalSet:Union,3,1,1
PascalSet:Equals,15,4,1
SkipList<TKey;TValue>:SkipList,1,1,0
SkipList<TKey;TValue>:SkipList,1,1,1
SkipList<TKey;TValue>:SkipList,1,1,1
SkipList<TKey;TValue>:SkipList,1,1,3
SkipList<TKey;TValue>:SkipList,24,4,3
SkipList<TKey;TValue>:Add,3,1,1
SkipList<TKey;TValue>:Clear,3,1,0
SkipList<TKey;TValue>:ClearItems,8,2,0
SkipList<TKey;TValue>:Contains,4,1,1
SkipList<TKey;TValue>:CopyTo,13,3,2
SkipList<TKey;TValue>:Remove,3,1,1
SkipList<TKey;TValue>:Add,3,1,2
SkipList<TKey;TValue>:AddItem,32,5,2
SkipList<TKey;TValue>:ContainsKey,3,1,1
SkipList<TKey;TValue>:Remove,3,1,1
SkipList<TKey;TValue>:RemoveItem,24,4,1
SkipList<TKey;TValue>:TryGetValue,11,2,2
SkipList<TKey;TValue>:GetEnumerator,9,2,0
SkipList<TKey;TValue>:GetEnumerator,3,1,0
SkipList<TKey;TValue>:Find,30,6,1
SkipList<TKey;TValue>:PickRandomLevel,8,2,0
SkipList<TKey;TValue>:FindRightMostNodes,20,4,1
SkipListNode<TKey;TValue>:SkipListNode,1,1,0
SkipListNode<TKey;TValue>:SkipListNode,4,1,2
SortedList<T>:SortedList,4,1,0
SortedList<T>:SortedList,4,1,1
SortedList<T>:SortedList,4,1,1
SortedList<T>:SortedList,4,1,2
SortedList<T>:SortedList,8,2,1
SortedList<T>:Remove,3,1,1
SortedList<T>:RemoveAt,3,1,1
SortedList<T>:CopyTo,14,3,2
SortedList<T>:Add,3,1,1
SortedList<T>:AddItem,14,3,1
SortedList<T>:Remove,3,1,1
SortedList<T>:Contains,3,1,1
SortedList<T>:CopyTo,3,1,2
SortedList<T>:GetEnumerator,3,1,0
SortedList<T>:AddRange,7,2,1
SortedList<T>:Add,3,1,1
SortedList<T>:Contains,3,1,1
SortedList<T>:Clear,3,1,0
SortedList<T>:IndexOf,3,1,1
SortedList<T>:Insert,3,1,2
SortedList<T>:GetEnumerator,3,1,0
SortedList<T>:IndexOf,3,1,1
SortedList<T>:Insert,3,1,2
Vertex<T>:Vertex,6,1,1
Vertex<T>:Vertex,6,1,2
Vertex<T>:HasEmanatingEdgeTo,21,4,1
Vertex<T>:HasIncidentEdgeWith,11,3,1
Vertex<T>:GetEmanatingEdgeTo,21,4,1
Vertex<T>:GetIncidentEdgeWith,11,3,1
Vertex<T>:RemoveEdge,6,1,1
Vertex<T>:AddEdge,17,3,1
Vertex<T>:RemoveEdgeFromVertex,17,3,1
CholeskyDecomposition:CholeskyDecomposition,5,1,1
CholeskyDecomposition:Decompose,34,6,1
CholeskyDecomposition:QuickDecompose,32,6,1
CholeskyDecomposition:QuickSolveLinearEquation,36,6,2
CholeskyDecomposition:Solve,35,7,1
ComplexNumber:ComplexNumber,4,1,2
ComplexNumber:Equals,3,1,1
ComplexNumber:Multiply,3,1,1
ComplexNumber:Multiply,3,1,1
ComplexNumber:Divide,3,1,1
ComplexNumber:Divide,3,1,1
ComplexNumber:Add,3,1,1
ComplexNumber:Subtract,3,1,1
ComplexNumber:ToMatrix,12,1,0
ComplexNumber:Equals,3,1,1
ComplexNumber:Clone,3,1,0
ComplexNumber:ToString,3,1,0
ComplexNumber:Equals,8,2,1
ComplexNumber:GetHashCode,3,1,0
ComplexNumber:MultiplyInternal,7,1,2
ComplexNumber:MultiplyInternal,3,1,2
ComplexNumber:DivideInternal,3,1,2
ComplexNumber:DivideInternal,9,1,2
ComplexNumber:AddInternal,3,1,2
ComplexNumber:SubtractInternal,3,1,2
IDecomposition:Solve,0,1,1
IDecomposition:Decompose,0,1,1
IMathematicalMatrix:Inverse,0,1,0
IMathematicalMatrix:Determinant,0,1,0
IMathematicalMatrix:Negate,0,1,0
IMathematicalMatrix:Subtract,0,1,1
IMathematicalMatrix:Add,0,1,1
IMathematicalMatrix:Multiply,0,1,1
IMathematicalMatrix:Multiply,0,1,1
IMathematicalMatrix:MultiplyRow,0,1,2
IMathematicalMatrix:MultiplyColumn,0,1,2
IMathematicalMatrix:Transpose,0,1,0
IMathematicalMatrix:Minor,0,1,2
IMathematicalMatrix:Adjoint,0,1,0
IMathematicalMatrix:Concatenate,0,1,1
IVector:AbsoluteMaximum,0,1,0
IVector:AbsoluteMaximumIndex,0,1,0
IVector:AbsoluteMinimum,0,1,0
IVector:AbsoluteMinimumIndex,0,1,0
IVector:Add,0,1,1
IVector:Add,0,1,1
IVector:Clear,0,1,0
IVector:CrossProduct,0,1,1
IVector:Decrement,0,1,0
IVector:DotProduct,0,1,1
IVector:Sum,0,1,0
IVector:Product,0,1,0
IVector:Increment,0,1,0
IVector:Magnitude,0,1,0
IVector:Divide,0,1,1
IVector:Divide,0,1,1
IVector:Negate,0,1,0
IVector:Normalize,0,1,0
IVector:Maximum,0,1,0
IVector:MaximumIndex,0,1,0
IVector:Minimum,0,1,0
IVector:MinimumIndex,0,1,0
IVector:Multiply,0,1,1
IVector:Multiply,0,1,1
IVector:Subtract,0,1,1
IVector:Subtract,0,1,1
IVector:SetValues,0,1,1
IVector:Swap,0,1,1
IVector:ToArray,0,1,0
IVector:ToMatrix,0,1,0
LUDecomposition:LUDecomposition,5,1,1
LUDecomposition:Determinant,8,2,0
LUDecomposition:Rank,8,3,0
LUDecomposition:SolveInternal,32,8,1
LUDecomposition:Decompose,58,12,1
LUDecomposition:GetLowerTriangularFactor,22,4,0
LUDecomposition:GetUpperTriangularFactor,18,4,0
LUDecomposition:Solve,9,2,1
Matrix:Matrix,3,1,2
Matrix:Matrix,3,1,3
Matrix:Matrix,3,1,3
Matrix:GetSubMatrix,3,1,4
Matrix:Multiply,24,5,1
Matrix:Multiply,3,1,1
Matrix:Add,3,1,1
Matrix:Negate,3,1,0
Matrix:Inverse,3,1,0
Matrix:Minor,3,1,2
Matrix:Adjoint,3,1,0
Matrix:Concatenate,3,1,1
Matrix:Subtract,18,4,1
Matrix:Transpose,3,1,0
Matrix:Minor,35,7,2
Matrix:Determinant,3,1,0
Matrix:Rank,3,1,0
Matrix:LinearSolve,6,1,2
Matrix:Adjoint,16,3,0
Matrix:Multiply,24,5,1
Matrix:Multiply,11,3,1
Matrix:Add,3,1,1
Matrix:Negate,3,1,0
Matrix:Subtract,18,4,1
Matrix:Transpose,11,3,0
Matrix:Inverse,3,1,0
Matrix:Diagonal,9,2,3
Matrix:IdentityMatrix,3,1,2
Matrix:Solve,15,2,1
Matrix:MultiplyRow,12,3,2
Matrix:MultiplyColumn,12,3,2
Matrix:Concatenate,3,1,1
Matrix:Clone,3,1,0
Matrix:ChangeSignColumn,12,3,1
Matrix:ChangeSignRow,12,3,1
Matrix:ValidateEqualRows,5,2,2
Matrix:ValidateIsSymmetric,5,2,0
Matrix:GetSubMatrix,11,3,3
Matrix:AddInternal,19,4,2
Matrix:ConcatenateInternal,29,5,2
Matrix:Add,3,1,1
Matrix:Remove,3,1,1
Matrix:GetSubMatrix,5,1,4
Matrix:Clone,3,1,0
Matrix:Equals,25,7,1
Matrix:Equals,25,7,2
QRDecomposition:QRDecomposition,4,1,1
QRDecomposition:Decompose,42,9,1
QRDecomposition:Solve,44,10,1
Vector2D:Vector2D,2,1,0
Vector2D:Vector2D,4,1,2
Vector2D:AbsoluteMaximum,5,1,0
Vector2D:AbsoluteMaximumIndex,5,1,0
Vector2D:AbsoluteMinimum,5,1,0
Vector2D:AbsoluteMinimumIndex,5,1,0
Vector2D:Add,3,1,1
Vector2D:Add,4,1,1
Vector2D:AddInternal,4,1,2
Vector2D:AddInternal,4,1,2
Vector2D:AddSafe,4,1,1
Vector2D:Clear,4,1,0
Vector2D:CloneInternal,3,1,0
Vector2D:CrossProduct,6,1,1
Vector2D:CrossProduct,4,1,1
Vector2D:CrossProductSafe,8,2,1
Vector2D:DeepClone,3,1,0
Vector2D:Decrement,3,1,0
Vector2D:Divide,3,1,1
Vector2D:Divide,4,1,1
Vector2D:DivideInternal,6,1,2
Vector2D:DivideSafe,6,1,1
Vector2D:DotProduct,4,1,1
Vector2D:DotProductSafe,3,1,1
Vector2D:FromMatrixInternal,11,3,1
Vector2D:GetEnumerator,4,1,0
Vector2D:Increment,3,1,0
Vector2D:Magnitude,4,1,0
Vector2D:Maximum,3,1,0
Vector2D:MaximumIndex,3,1,0
Vector2D:Minimum,3,1,0
Vector2D:MinimumIndex,3,1,0
Vector2D:Multiply,3,1,1
Vector2D:Multiply,4,1,1
Vector2D:MultiplyInternal,4,1,2
Vector2D:MultiplyInternal,8,1,2
Vector2D:MultiplySafe,8,1,1
Vector2D:Negate,4,1,0
Vector2D:Normalize,5,1,0
Vector2D:SetValuesSafe,4,1,1
Vector2D:Product,3,1,0
Vector2D:Subtract,3,1,1
Vector2D:Subtract,4,1,1
Vector2D:SubtractSafe,4,1,1
Vector2D:SubtractInternal,4,1,2
Vector2D:Sum,3,1,0
Vector2D:SwapSafe,8,1,1
Vector2D:Swap,9,1,1
Vector2D:ToArray,3,1,0
Vector2D:ToMatrix,3,1,0
Vector2D:ToMatrixInternal,3,1,1
Vector3D:Vector3D,2,1,0
Vector3D:Vector3D,5,1,3
Vector3D:AbsoluteMaximum,6,1,0
Vector3D:AbsoluteMaximumIndex,18,4,0
Vector3D:AbsoluteMinimum,6,1,0
Vector3D:AbsoluteMinimumIndex,18,4,0
Vector3D:Add,3,1,1
Vector3D:Add,4,1,1
Vector3D:AddInternal,5,1,2
Vector3D:AddInternal,5,1,2
Vector3D:AddSafe,5,1,1
Vector3D:Clear,5,1,0
Vector3D:CloneInternal,3,1,0
Vector3D:CrossProduct,6,1,1
Vector3D:CrossProduct,6,1,1
Vector3D:CrossProductSafe,11,2,1
Vector3D:Decrement,3,1,0
Vector3D:DeepClone,3,1,0
Vector3D:Divide,3,1,1
Vector3D:Divide,4,1,1
Vector3D:DivideInternal,11,1,2
Vector3D:DivideSafe,11,1,1
Vector3D:DotProduct,4,1,1
Vector3D:DotProductSafe,3,1,1
Vector3D:FromMatrixInternal,20,4,1
Vector3D:GetEnumerator,5,1,0
Vector3D:Increment,3,1,0
Vector3D:Magnitude,4,1,0
Vector3D:Maximum,3,1,0
Vector3D:MaximumIndex,8,2,0
Vector3D:Minimum,3,1,0
Vector3D:MinimumIndex,7,2,0
Vector3D:Multiply,3,1,1
Vector3D:Multiply,4,1,1
Vector3D:MultiplyInternal,5,1,2
Vector3D:MultiplyInternal,13,1,2
Vector3D:MultiplySafe,13,1,1
Vector3D:Negate,5,1,0
Vector3D:Normalize,6,1,0
Vector3D:Product,3,1,0
Vector3D:SubtractSafe,5,1,1
Vector3D:Sum,3,1,0
Vector3D:SetValuesSafe,5,1,1
Vector3D:Subtract,3,1,1
Vector3D:Subtract,4,1,1
Vector3D:SubtractInternal,5,1,2
Vector3D:Swap,12,1,1
Vector3D:SwapSafe,11,1,1
Vector3D:ToArray,3,1,0
Vector3D:ToMatrix,3,1,0
Vector3D:ToMatrixInternal,3,1,1
VectorBase<T>:VectorBase,3,1,1
VectorBase<T>:Add,5,1,1
VectorBase<T>:AddSafe,0,1,1
VectorBase<T>:Add,0,1,1
VectorBase<T>:CheckDimensionsEqual,6,2,2
VectorBase<T>:Clear,6,2,0
VectorBase<T>:DeepClone,0,1,0
VectorBase<T>:Clone,3,1,0
VectorBase<T>:CrossProduct,12,3,1
VectorBase<T>:CrossProductSafe,0,1,1
VectorBase<T>:Increment,0,1,0
VectorBase<T>:Magnitude,0,1,0
VectorBase<T>:Product,0,1,0
VectorBase<T>:Sum,0,1,0
VectorBase<T>:Decrement,0,1,0
VectorBase<T>:Divide,5,1,1
VectorBase<T>:DivideSafe,0,1,1
VectorBase<T>:Divide,0,1,1
VectorBase<T>:DotProduct,5,1,1
VectorBase<T>:DotProductSafe,0,1,1
VectorBase<T>:Equals,9,2,1
VectorBase<T>:Equals,3,1,1
VectorBase<T>:EqualsInternal,14,4,1
VectorBase<T>:GetHashCode,8,2,0
VectorBase<T>:GetEnumerator,3,1,0
VectorBase<T>:AbsoluteMaximum,0,1,0
VectorBase<T>:AbsoluteMaximumIndex,0,1,0
VectorBase<T>:AbsoluteMinimum,0,1,0
VectorBase<T>:AbsoluteMinimumIndex,0,1,0
VectorBase<T>:Maximum,4,1,0
VectorBase<T>:MaximumIndex,0,1,0
VectorBase<T>:Minimum,3,1,0
VectorBase<T>:MinimumIndex,0,1,0
VectorBase<T>:Multiply,5,1,1
VectorBase<T>:MultiplySafe,0,1,1
VectorBase<T>:Multiply,0,1,1
VectorBase<T>:Negate,0,1,0
VectorBase<T>:Normalize,0,1,0
VectorBase<T>:SetValues,8,2,1
VectorBase<T>:SetValuesSafe,6,2,1
VectorBase<T>:Subtract,5,1,1
VectorBase<T>:SubtractSafe,0,1,1
VectorBase<T>:Subtract,0,1,1
VectorBase<T>:Swap,5,1,1
VectorBase<T>:SwapSafe,8,2,1
VectorBase<T>:ToArray,0,1,0
VectorBase<T>:GetEnumerator,6,2,0
VectorBase<T>:ToString,12,2,0
VectorBase<T>:ToMatrix,0,1,0
VectorN:VectorN,7,2,1
VectorN:AbsoluteMaximum,4,1,0
VectorN:AbsoluteMaximumIndex,14,3,0
VectorN:AbsoluteMinimum,4,1,0
VectorN:AbsoluteMinimumIndex,14,3,0
VectorN:AddInternal,6,2,2
VectorN:AddInternal,6,2,2
VectorN:AddSafe,4,1,1
VectorN:Add,3,1,1
VectorN:CrossProductSafe,35,3,1
VectorN:Decrement,3,1,0
VectorN:DeepClone,3,1,0
VectorN:DivideSafe,3,1,1
VectorN:Divide,3,1,1
VectorN:DivideInternal,6,2,2
VectorN:DotProductSafe,8,2,1
VectorN:FromMatrixInternal,12,3,1
VectorN:GetUnitVector,8,2,1
VectorN:GetZeroVector,3,1,1
VectorN:Increment,3,1,0
VectorN:Magnitude,9,2,0
VectorN:MaximumIndex,14,3,0
VectorN:MinimumIndex,14,3,0
VectorN:MultiplySafe,3,1,1
VectorN:Multiply,3,1,1
VectorN:MultiplyInternal,11,3,2
VectorN:MultiplyInternal,6,2,2
VectorN:Negate,6,2,0
VectorN:Normalize,7,2,0
VectorN:Product,8,2,0
VectorN:Sum,8,2,0
VectorN:SubtractSafe,3,1,1
VectorN:Subtract,3,1,1
VectorN:SubtractInternal,6,2,2
VectorN:Swap,7,1,1
VectorN:ToArray,3,1,0
VectorN:ToMatrix,3,1,0
VectorN:ToMatrixInternal,8,2,1
ClassicPriorityQueue<T>:ClassicPriorityQueue,3,1,1
CircularQueue<T>:CircularQueue,9,2,1
CircularQueue<T>:Enqueue,3,1,1
CircularQueue<T>:EnqueueItem,7,2,1
CircularQueue<T>:Dequeue,7,2,0
CircularQueue<T>:DequeueItem,5,1,0
CircularQueue<T>:Peek,8,2,0
CircularQueue<T>:Add,3,1,1
CircularQueue<T>:Clear,3,1,0
CircularQueue<T>:ClearItems,3,1,0
CircularQueue<T>:Contains,3,1,1
CircularQueue<T>:CopyTo,9,2,2
CircularQueue<T>:Remove,3,1,1
CircularQueue<T>:RemoveItem,3,1,1
CircularQueue<T>:GetEnumerator,3,1,0
CircularQueue<T>:GetEnumerator,3,1,0
Deque<T>:Deque,3,1,0
Deque<T>:Deque,3,1,1
Deque<T>:EnqueueHead,3,1,1
Deque<T>:EnqueueHeadItem,3,1,1
Deque<T>:DequeueHead,10,2,0
Deque<T>:DequeueHeadItem,5,1,0
Deque<T>:EnqueueTail,3,1,1
Deque<T>:EnqueueTailItem,3,1,1
Deque<T>:DequeueTail,11,2,0
Deque<T>:DequeueTailItem,5,1,0
Deque<T>:Contains,3,1,1
Deque<T>:CopyTo,3,1,2
Deque<T>:Clear,3,1,0
Deque<T>:ClearItems,3,1,0
Deque<T>:Add,3,1,1
Deque<T>:Remove,3,1,1
Deque<T>:GetEnumerator,3,1,0
Deque<T>:GetEnumerator,3,1,0
IDeque:DequeueHead,0,1,0
IDeque:DequeueTail,0,1,0
IDeque:EnqueueHead,0,1,1
IDeque:EnqueueTail,0,1,1
IQueue:Enqueue,0,1,1
IQueue:Dequeue,0,1,0
IQueue:Peek,0,1,0
PriorityQueue<TValue;TPriority>:PriorityQueue,2,1,1
PriorityQueue<TValue;TPriority>:PriorityQueue,7,2,2
PriorityQueue<TValue;TPriority>:PriorityQueue,2,1,2
PriorityQueue<TValue;TPriority>:Enqueue,3,1,1
PriorityQueue<TValue;TPriority>:Enqueue,3,1,2
PriorityQueue<TValue;TPriority>:Dequeue,4,1,0
PriorityQueue<TValue;TPriority>:Peek,5,1,0
PriorityQueue<TValue;TPriority>:Peek,6,1,1
PriorityQueue<TValue;TPriority>:GetEnumerator,3,1,0
PriorityQueue<TValue;TPriority>:GetEnumerator,3,1,0
PriorityQueue<TValue;TPriority>:Contains,3,1,1
PriorityQueue<TValue;TPriority>:CopyTo,18,4,2
PriorityQueue<TValue;TPriority>:Add,3,1,1
PriorityQueue<TValue;TPriority>:Add,3,1,2
PriorityQueue<TValue;TPriority>:Remove,4,1,1
PriorityQueue<TValue;TPriority>:GetKeyEnumerator,3,1,0
PriorityQueue<TValue;TPriority>:Clear,3,1,0
PriorityQueue<TValue;TPriority>:Dequeue,3,1,1
PriorityQueue<TValue;TPriority>:DequeueItem,13,2,1
PriorityQueue<TValue;TPriority>:Remove,3,1,2
PriorityQueue<TValue;TPriority>:RemoveItem,8,2,2
PriorityQueue<TValue;TPriority>:RemovePriorityGroup,3,1,1
PriorityQueue<TValue;TPriority>:RemoveItems,11,2,1
PriorityQueue<TValue;TPriority>:GetPriorityGroup,4,1,1
PriorityQueue<TValue;TPriority>:AddPriorityGroup,6,1,2
PriorityQueue<TValue;TPriority>:AddPriorityGroupItem,15,3,2
PriorityQueue<TValue;TPriority>:AddItem,14,2,2
PriorityQueue<TValue;TPriority>:ClearItems,4,1,0
PriorityQueue<TValue;TPriority>:CheckTreeNotEmpty,6,2,0
PriorityQueue<TValue;TPriority>:GetNextItem,6,1,0
SimpleMonitor:Dispose,4,1,0
SimpleMonitor:Enter,3,1,0
Guard:ArgumentNotNullOrEmptyString,7,2,2
Guard:ArgumentNotNull,6,2,2
Swapper:Swap,5,1,3
BinarySearchTreeBase<T>:BinarySearchTreeBase,3,1,0
BinarySearchTreeBase<T>:BinarySearchTreeBase,4,1,1
BinarySearchTreeBase<T>:BinarySearchTreeBase,4,1,1
BinarySearchTreeBase<T>:FindNode,17,4,1
BinarySearchTreeBase<T>:FindNode,17,4,2
BinarySearchTreeBase<T>:RemoveItem,0,1,1
BinarySearchTreeBase<T>:AddItem,0,1,1
BinarySearchTreeBase<T>:FindMaximumNode,6,1,0
BinarySearchTreeBase<T>:FindMinimumNode,6,1,0
BinarySearchTreeBase<T>:FindMaximumNode,11,2,1
BinarySearchTreeBase<T>:FindMinimumNode,11,2,1
BinarySearchTreeBase<T>:VisitNode,11,2,2
BinarySearchTreeBase<T>:ValidateEmpty,6,2,0
BinarySearchTreeBase<T>:DepthFirstTraversal,4,1,1
BinarySearchTreeBase<T>:GetOrderedEnumerator,13,3,0
BinarySearchTreeBase<T>:Remove,8,2,1
BinarySearchTreeBase<T>:Clear,3,1,0
BinarySearchTreeBase<T>:ClearItems,4,1,0
BinarySearchTreeBase<T>:GetEnumerator,3,1,0
BinarySearchTreeBase<T>:GetEnumerator,20,5,0
BinarySearchTreeBase<T>:Add,4,1,1
BinarySearchTreeBase<T>:Contains,4,1,1
BinarySearchTreeBase<T>:CopyTo,13,3,2
BinarySearchTreeBase<TKey;TValue>:BinarySearchTreeBase,2,1,0
BinarySearchTreeBase<TKey;TValue>:BinarySearchTreeBase,2,1,1
BinarySearchTreeBase<TKey;TValue>:BinarySearchTreeBase,2,1,1
BinarySearchTreeBase<TKey;TValue>:FindNode,3,1,1
BinarySearchTreeBase<TKey;TValue>:ManipulateKeys,20,5,1
BinarySearchTreeBase<TKey;TValue>:Remove,3,1,1
BinarySearchTreeBase<TKey;TValue>:Add,3,1,2
BinarySearchTreeBase<TKey;TValue>:ContainsKey,3,1,1
BinarySearchTreeBase<TKey;TValue>:TryGetValue,10,2,2
BinarySearchTreeBase<TKey;TValue>:Contains,4,1,1
BinarySearchTree<TKey;TValue>:BinarySearchTree,2,1,0
BinarySearchTree<TKey;TValue>:BinarySearchTree,2,1,1
BinarySearchTree<TKey;TValue>:BinarySearchTree,2,1,1
BinarySearchTree<TKey;TValue>:FindNode,25,4,2
BinarySearchTree<TKey;TValue>:FindMaximumNode,14,2,2
BinarySearchTree<TKey;TValue>:AddItem,42,2,1
BinarySearchTree<TKey;TValue>:RemoveItem,36,4,1
BinaryTree<T>:BinaryTree,1,1,1
BinaryTree<T>:BinaryTree,1,1,3
BinaryTree<T>:BinaryTree,2,1,3
BinaryTree<T>:BinaryTree,20,4,4
BinaryTree<T>:Contains,10,3,1
BinaryTree<T>:CopyTo,13,3,2
BinaryTree<T>:Add,3,1,1
BinaryTree<T>:Remove,19,5,1
BinaryTree<T>:Remove,19,5,1
BinaryTree<T>:GetEnumerator,17,4,0
BinaryTree<T>:Clear,12,3,0
BinaryTree<T>:Add,3,1,1
BinaryTree<T>:GetChild,3,1,1
BinaryTree<T>:Remove,3,1,1
BinaryTree<T>:FindNode,3,1,1
BinaryTree<T>:FindNode,25,6,1
BinaryTree<T>:GetChild,11,2,1
BinaryTree<T>:DepthFirstTraversal,22,4,1
BinaryTree<T>:BreadthFirstTraversal,22,5,1
BinaryTree<T>:RemoveLeft,7,2,0
BinaryTree<T>:RemoveRight,7,2,0
BinaryTree<T>:Add,4,1,1
BinaryTree<T>:AddItem,24,3,1
BinaryTree<T>:FindMaximumChildHeight,13,3,0
BinaryTree<T>:GetEnumerator,3,1,0
BinaryTree<T>:ToString,3,1,0
GeneralTree<T>:GeneralTree,6,1,1
GeneralTree<T>:Contains,10,3,1
GeneralTree<T>:CopyTo,11,3,2
GeneralTree<T>:GetEnumerator,16,4,0
GeneralTree<T>:Clear,3,1,0
GeneralTree<T>:Add,4,1,1
GeneralTree<T>:Add,5,1,1
GeneralTree<T>:InsertItem,11,3,2
GeneralTree<T>:Remove,3,1,1
GeneralTree<T>:RemoveItem,13,3,1
GeneralTree<T>:Add,3,1,1
GeneralTree<T>:GetChild,3,1,1
GeneralTree<T>:Remove,3,1,1
GeneralTree<T>:FindNode,3,1,1
GeneralTree<T>:FindNode,16,4,1
GeneralTree<T>:GetChild,3,1,1
GeneralTree<T>:GetPath,3,1,0
GeneralTree<T>:GetPath,7,2,1
GeneralTree<T>:DepthFirstTraversal,16,4,1
GeneralTree<T>:BreadthFirstTraversal,17,4,1
GeneralTree<T>:Add,3,1,1
GeneralTree<T>:Remove,9,2,1
GeneralTree<T>:RemoveAt,3,1,1
GeneralTree<T>:RemoveItem,4,1,2
GeneralTree<T>:SortAllDescendants,11,2,2
GeneralTree<T>:SortAllDescendants,11,2,2
GeneralTree<T>:SortAllDescendants,10,2,2
GeneralTree<T>:GetPath,13,3,2
GeneralTree<T>:FindMaximumChildHeight,12,3,0
GeneralTree<T>:GetEnumerator,3,1,0
GeneralTree<T>:Sort,3,1,1
GeneralTree<T>:Sort,7,1,2
GeneralTree<T>:Sort,7,1,2
GeneralTree<T>:Sort,6,1,2
GeneralTree<T>:ToString,3,1,0
ISearchTree:DepthFirstTraversal,0,1,1
ISearchTree:GetOrderedEnumerator,0,1,0
ITree:Add,0,1,1
ITree:GetChild,0,1,1
ITree:Remove,0,1,1
ITree:FindNode,0,1,1
RedBlackTree<T>:RedBlackTree,3,1,0
RedBlackTree<T>:RedBlackTree,3,1,1
RedBlackTree<T>:RedBlackTree,3,1,1
RedBlackTree<T>:AddItem,11,2,1
RedBlackTree<T>:RemoveItem,57,9,1
RedBlackTree<T>:IsRed,3,1,1
RedBlackTree<T>:IsBlack,3,1,1
RedBlackTree<T>:InsertNode,24,2,2
RedBlackTree<T>:SingleRotation,8,1,2
RedBlackTree<T>:DoubleRotation,4,1,2
RedBlackTree<TKey;TValue>:RedBlackTree,3,1,0
RedBlackTree<TKey;TValue>:RedBlackTree,3,1,1
RedBlackTree<TKey;TValue>:RedBlackTree,3,1,1
RedBlackTree<TKey;TValue>:FindNode,3,1,1
RedBlackTree<TKey;TValue>:Contains,7,2,2
RedBlackTree<TKey;TValue>:Remove,3,1,1
RedBlackTree<TKey;TValue>:Add,7,2,2
RedBlackTree<TKey;TValue>:ContainsKey,3,1,1
RedBlackTree<TKey;TValue>:TryGetValue,11,2,2
RedBlackTree<TKey;TValue>:Contains,3,1,1
RedBlackTreeList<TKey;TValue>:RedBlackTreeList,3,1,0
RedBlackTreeList<TKey;TValue>:RedBlackTreeList,3,1,1
RedBlackTreeList<TKey;TValue>:RedBlackTreeList,3,1,1
RedBlackTreeList<TKey;TValue>:ContainsValue,3,1,1
RedBlackTreeList<TKey;TValue>:GetValueEnumerator,24,6,0
RedBlackTreeList<TKey;TValue>:GetKeyEnumerator,24,6,0
RedBlackTreeList<TKey;TValue>:Remove,19,1,2
RedBlackTreeList<TKey;TValue>:TraverseItems,29,6,1
RedBlackTreeNode<T>:RedBlackTreeNode,3,1,1
SplayTree<TKey;TValue>:SplayTree,2,1,0
SplayTree<TKey;TValue>:SplayTree,2,1,1
SplayTree<TKey;TValue>:SplayTree,2,1,1
SplayTree<TKey;TValue>:FindNode,8,2,1
SplayTree<TKey;TValue>:AddItem,29,2,1
SplayTree<TKey;TValue>:Splay,61,6,1
SplayTree<TKey;TValue>:RemoveItem,24,4,1
DoubleExtensions:IsSimilarTo,3,1,2
DoubleExtensions:IsSimilarTo,3,1,3
EnumerableExtensions:ForEach,9,2,2
EnumerableExtensions:ConcatToString,3,1,2
EnumerableExtensions:ConcatToString,14,3,3
ListExtensions:GetRange,21,5,3
ListExtensions:AddRange,5,1,2
ListExtensions:FindIndex,5,1,2
ListExtensions:FindIndex,5,1,3
ListExtensions:FindIndex,21,5,4
ListExtensions:FindLastIndex,5,1,2
ListExtensions:FindLastIndex,5,1,3
ListExtensions:FindLastIndex,28,6,4
ListExtensions:ForEach,8,2,2
ListExtensions:InsertRange,12,3,3
ListExtensions:RemoveAll,20,3,2
ListExtensions:Sort,5,1,1
ListExtensions:Sort,5,1,2
ListExtensions:Sort,6,1,2
ListExtensions:Sort,6,1,2
ListExtensions:Sort,6,1,3
ListExtensions:Sort,3,1,2
ListExtensions:Sort,11,1,3
ObjectExtensions:ConvertTo,5,1,1
ObjectExtensions:Serialize,9,1,1
ObjectExtensions:Deserialize,7,1,1
ObjectExtensions:DeepCopy,9,1,1
ObjectExtensions:ToList,3,1,1
ObjectExtensions:ToIList,3,1,1
ConverterExtensions:ConvertAll,3,1,2
ConverterExtensions:ConvertAll,3,1,2
ConverterExtensions:ConvertAll,3,1,2
ConverterExtensions:Convert,3,1,2
ConverterExtensions:Convert,3,1,2
ConverterExtensions:Convert,3,1,2
ConverterExtensions:ConvertInternal,5,1,2
IBidirectionalConverter:Convert,0,1,1
IBidirectionalConverter:Convert,0,1,1
IConverter:Convert,0,1,1
AbstractSpecification<T>:IsSatisfiedBy,0,1,1
AbstractSpecification<T>:And,3,1,1
AbstractSpecification<T>:Or,3,1,1
AbstractSpecification<T>:Xor,3,1,1
AbstractSpecification<T>:Not,3,1,0
AbstractSpecification<T>:And,3,1,1
AbstractSpecification<T>:Or,3,1,1
AbstractSpecification<T>:Xor,3,1,1
AbstractSpecification<T>:Not,3,1,0
AbstractSpecification<T>:And,3,1,1
AbstractSpecification<T>:Or,3,1,1
AbstractSpecification<T>:Xor,3,1,1
AbstractSpecification<T>:OrInternal,3,1,2
AbstractSpecification<T>:AndInternal,3,1,2
AbstractSpecification<T>:XorInternal,3,1,2
AbstractSpecification<T>:NotInternal,3,1,1
AndSpecification<T>:AndSpecification,1,1,2
AndSpecification<T>:IsSatisfiedBy,3,1,1
CompositeSpecification<T>:CompositeSpecification,8,1,2
ISpecification:IsSatisfiedBy,0,1,1
ISpecification:And,0,1,1
ISpecification:Or,0,1,1
ISpecification:Xor,0,1,1
ISpecification:Not,0,1,0
NotSpecification<T>:NotSpecification,6,1,1
NotSpecification<T>:IsSatisfiedBy,3,1,1
OrSpecification<T>:OrSpecification,1,1,2
OrSpecification<T>:IsSatisfiedBy,3,1,1
PredicateSpecification<T>:PredicateSpecification,6,1,1
PredicateSpecification<T>:IsSatisfiedBy,3,1,1
XorSpecification<T>:XorSpecification,1,1,2
XorSpecification<T>:IsSatisfiedBy,3,1,1
ListExtensions:Sort,4,1,2
ListExtensions:Sort,4,1,3
ListExtensions:Sort,4,1,3
ListExtensions:Sort,4,1,3
BubbleSorter<T>:SortItems,12,4,2
BucketSorter:BucketSorter,2,1,1
BucketSorter:BucketSorter,2,1,0
BucketSorter:Sort,44,8,2
CocktailSorter<T>:SortItems,29,6,2
CombSorter<T>:SortItems,24,6,2
ComparisonSorter<T>:Sort,11,2,2
ComparisonSorter<T>:Sort,7,1,2
ComparisonSorter<T>:Sort,15,2,3
ComparisonSorter<T>:Sort,14,2,2
ComparisonSorter<T>:SortItems,0,1,2
ComparisonSorter<T>:Swap,3,1,3
GnomeSorter<T>:SortItems,18,3,2
HeapSorter<T>:SortItems,12,3,2
IComparisonSorter:Sort,0,1,2
IComparisonSorter:Sort,0,1,2
InsertionSorter<T>:SortItems,3,1,2
InsertionSorter<T>:Insert,9,2,4
InsertionSorter<T>:Sort,12,3,4
ISortable:Sort,0,1,1
ISortable:Sort,0,1,2
ISortable:Sort,0,1,2
ISortable:Sort,0,1,2
ISorter:Sort,0,1,1
ISorter:Sort,0,1,2
MergeSorter<T>:SortItems,3,1,2
MergeSorter<T>:MergeSort,26,4,4
OddEvenTransportSorter<T>:SortItems,19,6,2
QuickSorter<T>:SortItems,3,1,2
QuickSorter<T>:QuickSort,9,2,4
QuickSorter<T>:GetPivot,27,6,4
RadixSorter:Sort,50,8,2
SelectionSorter<T>:SortItems,16,4,2
ShakerSorter<T>:SortItems,31,6,2
ShellSorter<T>:SortItems,33,1,2
Sorter<T>:Sort,3,1,1
Sorter<T>:Sort,0,1,2
Sorter<T>:ValidateSortOrder,6,2,1
AsyncCompletedEventArgs<TState>:AsyncCompletedEventArgs,5,1,3
AsyncCompletedEventArgs<TState>:RaiseExceptionIfNecessary,10,3,0
BackgroundWorker<TInput;TOutput;TProgress>:BackgroundWorker,5,1,0
BackgroundWorker<TInput;TOutput;TProgress>:CancelAsync,7,2,0
BackgroundWorker<TInput;TOutput;TProgress>:ReportProgress,3,1,1
BackgroundWorker<TInput;TOutput;TProgress>:ReportProgress,15,3,2
BackgroundWorker<TInput;TOutput;TProgress>:SleepWhileBusy,6,2,0
BackgroundWorker<TInput;TOutput;TProgress>:ExecuteOnCallingThread,10,2,2
BackgroundWorker<TInput;TOutput;TProgress>:RunWorkerAsync,3,1,0
BackgroundWorker<TInput;TOutput;TProgress>:RunWorkerAsync,10,2,1
BackgroundWorker<TInput;TOutput;TProgress>:OnDoWork,7,2,1
BackgroundWorker<TInput;TOutput;TProgress>:OnProgressChanged,6,2,1
BackgroundWorker<TInput;TOutput;TProgress>:OnRunWorkerCompleted,10,3,1
BackgroundWorker<TInput;TOutput;TProgress>:AsyncOperationCompleted,5,1,1
BackgroundWorker<TInput;TOutput;TProgress>:WorkerThreadStart,24,2,1
DoWorkEventArgs<TArgument;TResult>:DoWorkEventArgs,3,1,1
ProgressChangedEventArgs<TState>:ProgressChangedEventArgs,4,1,2
RunWorkerCompletedEventArgs<TState>:RunWorkerCompletedEventArgs,2,1,3
ComparableFindingVisitor<T>:ComparableFindingVisitor,3,1,1
ComparableFindingVisitor<T>:Visit,6,2,1
ActionVisitor<T>:ActionVisitor,6,1,1
ActionVisitor<T>:Visit,3,1,1
CountingVisitor<T>:Visit,3,1,1
CountingVisitor<T>:ResetCount,3,1,0
DummyVisitor<T>:Visit,3,1,1
GeneralVisitor<T>:GeneralVisitor,6,1,1
GeneralVisitor<T>:Visit,3,1,1
InOrderVisitor<T>:InOrderVisitor,1,1,1
InOrderVisitor<T>:VisitPostOrder,3,1,1
InOrderVisitor<T>:VisitPreOrder,3,1,1
IVisitor:Visit,0,1,1
KeyTrackingVisitor<TKey;TValue>:KeyTrackingVisitor,3,1,0
KeyTrackingVisitor<TKey;TValue>:Visit,3,1,1
OrderedVisitor<T>:OrderedVisitor,4,1,1
OrderedVisitor<T>:VisitPreOrder,3,1,1
OrderedVisitor<T>:VisitPostOrder,3,1,1
OrderedVisitor<T>:VisitInOrder,3,1,1
OrderedVisitor<T>:Visit,3,1,1
PostOrderVisitor<T>:PostOrderVisitor,1,1,1
PostOrderVisitor<T>:VisitInOrder,3,1,1
PostOrderVisitor<T>:VisitPreOrder,3,1,1
PreOrderVisitor<T>:PreOrderVisitor,1,1,1
PreOrderVisitor<T>:VisitInOrder,3,1,1
PreOrderVisitor<T>:VisitPostOrder,3,1,1
SumVisitor:Visit,3,1,1
TrackingVisitor<T>:TrackingVisitor,3,1,0
TrackingVisitor<T>:Visit,3,1,1
ValueTrackingVisitor<TKey;TValue>:ValueTrackingVisitor,3,1,0
ValueTrackingVisitor<TKey;TValue>:Visit,3,1,1
VisitorExtensions:AcceptVisitor,12,3,2
