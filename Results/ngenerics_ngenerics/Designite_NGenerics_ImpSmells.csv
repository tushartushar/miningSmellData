Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NGenerics.DataStructures.General,Graph<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Graph.cs,TopologicalSortTraversalInternal,Cyclomatic complexity of the method is 9
Complex Method,NGenerics.DataStructures.General,ObjectMatrix<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\ObjectMatrix.cs,GetSubMatrix,Cyclomatic complexity of the method is 8
Complex Method,NGenerics.DataStructures.Mathematical,LUDecomposition,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\LUDecomposition.cs,SolveInternal,Cyclomatic complexity of the method is 8
Complex Method,NGenerics.DataStructures.Mathematical,LUDecomposition,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\LUDecomposition.cs,Decompose,Cyclomatic complexity of the method is 12
Complex Method,NGenerics.DataStructures.Mathematical,QRDecomposition,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\QRDecomposition.cs,Decompose,Cyclomatic complexity of the method is 9
Complex Method,NGenerics.DataStructures.Mathematical,QRDecomposition,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\QRDecomposition.cs,Solve,Cyclomatic complexity of the method is 10
Complex Method,NGenerics.DataStructures.Trees,RedBlackTree<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Trees\RedBlackTree.cs,RemoveItem,Cyclomatic complexity of the method is 9
Complex Method,NGenerics.Sorting,BucketSorter,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\BucketSorter.cs,Sort,Cyclomatic complexity of the method is 8
Complex Method,NGenerics.Sorting,RadixSorter,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\RadixSorter.cs,Sort,Cyclomatic complexity of the method is 8
Long Parameter List,NGenerics.DataStructures.General,Graph<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Graph.cs,TarjansStronglyConnectedComponentsAlgorithm,The method has 7 parameters. Parameters: excludeSinlgeItems' vertex' indices' lowlinks' connected' stack' index
Long Identifier,NGenerics,Constants,C:\repos\ngenerics_ngenerics\Source\NGenerics\Constants.cs,,The length of the parameter NotEnoughSpaceInTheTargetArray is 30.
Long Statement,NGenerics.DataStructures.General,Association<TKey;TValue>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Association.cs,GetHashCode,The length of the statement  "            return (Equals(Key' default(TKey)) ? 0 : Key.GetHashCode()) + (Equals(Value' default(TValue)) ? 0 : Value.GetHashCode()) * 37; " is 126.
Long Statement,NGenerics.DataStructures.General,DictionaryBase<TKey;TValue>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\DictionaryBase.cs,VerifyValueType,The length of the statement  "                    throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "Value is of type {0}."' typeof (TValue))' "value"); " is 124.
Long Statement,NGenerics.DataStructures.General,Graph<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Graph.cs,IsStronglyConnected,The length of the statement  "                throw new InvalidOperationException("This operation is only valid on a directed graph. For undirected graphs' rather test for weak connectedness."); " is 148.
Long Statement,NGenerics.DataStructures.General,ObjectMatrix<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\ObjectMatrix.cs,GetSubMatrix,The length of the statement  "                throw new ArgumentOutOfRangeException("rowStart"' "More rows or columns have been specified than is present in the matrix."); " is 125.
Long Statement,NGenerics.DataStructures.General,SkipList<TKey;TValue>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\SkipList.cs,PickRandomLevel,The length of the statement  "            while ((rand.NextDouble() < probabilityToUse) && (randomLevel <= CurrentListLevel + 1) && (randomLevel < maximumLevelToUse)) " is 124.
Long Statement,NGenerics.DataStructures.Trees,RedBlackTree<TKey;TValue>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Trees\RedBlackTreeDictionary.cs,FindNode,The length of the statement  "			return base.FindNode(new KeyValuePair<TKey' TValue>(key' default(TValue))) as RedBlackTreeNode<KeyValuePair<TKey' TValue>>; " is 123.
Complex Conditional,NGenerics.DataStructures.General,Graph<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Graph.cs,RemoveEdge,The conditional expression  "((edge.FromVertex == from) && (edge.ToVertex == to)) ||                          ((edge.FromVertex == to) && (edge.ToVertex == from))"  is complex.
Complex Conditional,NGenerics.DataStructures.General,Graph<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Graph.cs,ContainsEdge,The conditional expression  "((edge.FromVertex.Data.Equals(fromValue) &&                          (edge.ToVertex.Data.Equals(toValue)))) ||                          ((edge.FromVertex.Data.Equals(toValue) &&                          (edge.ToVertex.Data.Equals(fromValue))))"  is complex.
Magic Number,NGenerics.DataStructures.General,Association<TKey;TValue>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Association.cs,GetHashCode,The following statement contains a magic number: return (Equals(Key' default(TKey)) ? 0 : Key.GetHashCode()) + (Equals(Value' default(TValue)) ? 0 : Value.GetHashCode()) * 37;
Magic Number,NGenerics.DataStructures.General,Heap<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Heap.cs,RemoveRootItem,The following statement contains a magic number: if (Count > 0)              {                  // Re-heapify the binary tree to conform to the heap property                   var counter = 1;                    while ((counter * 2) < (data.Count))                  {                      var child = counter * 2;                        if (((child + 1) < (data.Count)) &&                          (comparerToUse.Compare(data[child + 1]' data[child]) < 0))                      {                          child++;                      }                        if (comparerToUse.Compare(last' data[child]) <= 0)                      {                          break;                      }                        data[counter] = data[child];                      counter = child;                  }                    data[counter] = last;              }
Magic Number,NGenerics.DataStructures.General,Heap<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Heap.cs,RemoveRootItem,The following statement contains a magic number: if (Count > 0)              {                  // Re-heapify the binary tree to conform to the heap property                   var counter = 1;                    while ((counter * 2) < (data.Count))                  {                      var child = counter * 2;                        if (((child + 1) < (data.Count)) &&                          (comparerToUse.Compare(data[child + 1]' data[child]) < 0))                      {                          child++;                      }                        if (comparerToUse.Compare(last' data[child]) <= 0)                      {                          break;                      }                        data[counter] = data[child];                      counter = child;                  }                    data[counter] = last;              }
Magic Number,NGenerics.DataStructures.General,Heap<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Heap.cs,AddItem,The following statement contains a magic number: while ((counter > 1) && (comparerToUse.Compare(data[counter / 2]' item) > 0))  			{  				data[counter] = data[counter / 2];  				counter = counter / 2;  			}
Magic Number,NGenerics.DataStructures.General,Heap<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Heap.cs,AddItem,The following statement contains a magic number: while ((counter > 1) && (comparerToUse.Compare(data[counter / 2]' item) > 0))  			{  				data[counter] = data[counter / 2];  				counter = counter / 2;  			}
Magic Number,NGenerics.DataStructures.General,Heap<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\Heap.cs,AddItem,The following statement contains a magic number: while ((counter > 1) && (comparerToUse.Compare(data[counter / 2]' item) > 0))  			{  				data[counter] = data[counter / 2];  				counter = counter / 2;  			}
Magic Number,NGenerics.DataStructures.General,ObjectMatrix<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\ObjectMatrix.cs,ToString,The following statement contains a magic number: var sb = new StringBuilder(noOfRows*noOfColumns*2);
Magic Number,NGenerics.DataStructures.General,SkipList<TKey;TValue>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\SkipList.cs,SkipList,The following statement contains a magic number: if ((probability > 0.9) || (probability < 0.1))              {                  throw new ArgumentOutOfRangeException("probability"' "The probability must be between 0.1 and 0.9");              }
Magic Number,NGenerics.DataStructures.General,SkipList<TKey;TValue>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\General\SkipList.cs,SkipList,The following statement contains a magic number: if ((probability > 0.9) || (probability < 0.1))              {                  throw new ArgumentOutOfRangeException("probability"' "The probability must be between 0.1 and 0.9");              }
Magic Number,NGenerics.DataStructures.Mathematical,ComplexNumber,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\ComplexNumber.cs,ToMatrix,The following statement contains a magic number: var matrix = new Matrix(2' 2);
Magic Number,NGenerics.DataStructures.Mathematical,ComplexNumber,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\ComplexNumber.cs,ToMatrix,The following statement contains a magic number: var matrix = new Matrix(2' 2);
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,CrossProductSafe,The following statement contains a magic number: if (vector.DimensionCount == 2)  		    {  		        return new Vector3D(0' 0' X * vector[1] - Y * vector[1]);  		    }
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,CrossProductSafe,The following statement contains a magic number: return new Vector3D(Y * vector[2]' -X * vector[2]' X * vector[1] - Y * vector[0]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,CrossProductSafe,The following statement contains a magic number: return new Vector3D(Y * vector[2]' -X * vector[2]' X * vector[1] - Y * vector[0]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,FromMatrixInternal,The following statement contains a magic number: if (matrix.Rows > 2)              {                  throw new InvalidCastException("matrix must at most 2 rows");              }
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,MultiplyInternal,The following statement contains a magic number: var matrix = new Matrix(2' 2);
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,MultiplyInternal,The following statement contains a magic number: var matrix = new Matrix(2' 2);
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,MultiplySafe,The following statement contains a magic number: var matrix = new Matrix(2' 2);
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,MultiplySafe,The following statement contains a magic number: var matrix = new Matrix(2' 2);
Magic Number,NGenerics.DataStructures.Mathematical,Vector2D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector2D.cs,ToMatrixInternal,The following statement contains a magic number: return new Matrix(2' 1' new[] { vector.X' vector.Y});
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,AbsoluteMaximumIndex,The following statement contains a magic number: if (absX > absY)              {              	if (absX > absZ)                  {                      return 0;                  }              	return 2;              }
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,AbsoluteMaximumIndex,The following statement contains a magic number: return 2;
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,AbsoluteMinimumIndex,The following statement contains a magic number: if (absX < absY)              {              	if (absX < absZ)                  {                      return 0;                  }              	return 2;              }
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,AbsoluteMinimumIndex,The following statement contains a magic number: return 2;
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,AddSafe,The following statement contains a magic number: Z += vector[2];
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,CrossProductSafe,The following statement contains a magic number: if (vector.DimensionCount == 2)  		    {  		        return new Vector3D(-Z * vector[1]'  		                            Z * vector[0]'  		                            X * vector[1] - Y * vector[0]);  		    }
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,CrossProductSafe,The following statement contains a magic number: return new Vector3D(Y * vector[2] - Z * vector[1]'  			                    Z * vector[0] - X * vector[2]'  			                    X * vector[1] - Y * vector[0]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,CrossProductSafe,The following statement contains a magic number: return new Vector3D(Y * vector[2] - Z * vector[1]'  			                    Z * vector[0] - X * vector[2]'  			                    X * vector[1] - Y * vector[0]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,DivideSafe,The following statement contains a magic number: X /= vector[2];
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,DivideSafe,The following statement contains a magic number: Y /= vector[2];
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,DivideSafe,The following statement contains a magic number: Z /= vector[2];
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,DotProductSafe,The following statement contains a magic number: return (X * vector[0]) + (Y * vector[1]) + (Z * vector[2]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,FromMatrixInternal,The following statement contains a magic number: if (matrix.Rows > 3)              {                  throw new InvalidCastException("matrix must at most 3 rows");              }
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,FromMatrixInternal,The following statement contains a magic number: switch (matrix.Rows)              {                  case 1:                      return new Vector3D(matrix[0' 0]' 0' 0);                  case 2:                      return new Vector3D(matrix[0' 0]' matrix[1' 0]' 0);                  default:                      return new Vector3D(matrix[0' 0]' matrix[1' 0]' matrix[2' 0]);              }
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,FromMatrixInternal,The following statement contains a magic number: switch (matrix.Rows)              {                  case 1:                      return new Vector3D(matrix[0' 0]' 0' 0);                  case 2:                      return new Vector3D(matrix[0' 0]' matrix[1' 0]' 0);                  default:                      return new Vector3D(matrix[0' 0]' matrix[1' 0]' matrix[2' 0]);              }
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MaximumIndex,The following statement contains a magic number: if (X > Y)              {                  return X > Z ? 0 : 2;              }
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MaximumIndex,The following statement contains a magic number: return Y > Z ? 1 : 2;
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MinimumIndex,The following statement contains a magic number: if (X < Y)              {                  return X < Z ? 0 : 2;              }
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MinimumIndex,The following statement contains a magic number: return Y < Z ? 1 : 2;
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplyInternal,The following statement contains a magic number: var matrix = new Matrix(3' 3);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplyInternal,The following statement contains a magic number: var matrix = new Matrix(3' 3);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplyInternal,The following statement contains a magic number: matrix.SetValue(0' 2' left.X * right.Z);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplyInternal,The following statement contains a magic number: matrix.SetValue(1' 2' left.Y * right.Z);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplyInternal,The following statement contains a magic number: matrix.SetValue(2' 0' left.Z * right.X);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplyInternal,The following statement contains a magic number: matrix.SetValue(2' 1' left.Z * right.Y);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplyInternal,The following statement contains a magic number: matrix.SetValue(2' 2' left.Z * right.Z);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplyInternal,The following statement contains a magic number: matrix.SetValue(2' 2' left.Z * right.Z);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: var matrix = new Matrix(3' 3);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: var matrix = new Matrix(3' 3);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(0' 2' X * vector[2]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(0' 2' X * vector[2]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(1' 2' Y * vector[2]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(1' 2' Y * vector[2]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(2' 0' Z * vector[0]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(2' 1' Z * vector[1]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(2' 2' Z * vector[2]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(2' 2' Z * vector[2]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,MultiplySafe,The following statement contains a magic number: matrix.SetValue(2' 2' Z * vector[2]);
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,SubtractSafe,The following statement contains a magic number: Z -= vector[2];
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,SetValuesSafe,The following statement contains a magic number: Z = values[2];
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,SwapSafe,The following statement contains a magic number: Z = other[2];
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,SwapSafe,The following statement contains a magic number: other[2] = tempZ;
Magic Number,NGenerics.DataStructures.Mathematical,Vector3D,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\Vector3D.cs,ToMatrixInternal,The following statement contains a magic number: return new Matrix(3' 1' new[] { vector.X' vector.Y' vector.Z });
Magic Number,NGenerics.DataStructures.Mathematical,VectorBase<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\VectorBase.cs,CrossProduct,The following statement contains a magic number: if ((vector.DimensionCount != 2) && (vector.DimensionCount != 3))              {                  throw new ArgumentException("DimensionCount must be 2 or 3 to calculate the cross product."' "vector");              }
Magic Number,NGenerics.DataStructures.Mathematical,VectorBase<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\VectorBase.cs,CrossProduct,The following statement contains a magic number: if ((vector.DimensionCount != 2) && (vector.DimensionCount != 3))              {                  throw new ArgumentException("DimensionCount must be 2 or 3 to calculate the cross product."' "vector");              }
Magic Number,NGenerics.DataStructures.Mathematical,VectorBase<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\VectorBase.cs,CrossProduct,The following statement contains a magic number: if ((DimensionCount != 2) && (DimensionCount != 3))              {                  throw new InvalidOperationException("DimensionCount must be 2 or 3 to calculate the cross product.");              }
Magic Number,NGenerics.DataStructures.Mathematical,VectorBase<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\VectorBase.cs,CrossProduct,The following statement contains a magic number: if ((DimensionCount != 2) && (DimensionCount != 3))              {                  throw new InvalidOperationException("DimensionCount must be 2 or 3 to calculate the cross product.");              }
Magic Number,NGenerics.DataStructures.Mathematical,VectorN,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\VectorN.cs,CrossProductSafe,The following statement contains a magic number: if (DimensionCount == 3)              {                  x1 = this[0];                  y1 = this[1];                  z1 = this[2];              }              else               {                  x1 = this[0];                  y1 = this[1];                  z1 = 0;              }
Magic Number,NGenerics.DataStructures.Mathematical,VectorN,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\VectorN.cs,CrossProductSafe,The following statement contains a magic number: if (DimensionCount == 3)              {                  x1 = this[0];                  y1 = this[1];                  z1 = this[2];              }              else               {                  x1 = this[0];                  y1 = this[1];                  z1 = 0;              }
Magic Number,NGenerics.DataStructures.Mathematical,VectorN,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\VectorN.cs,CrossProductSafe,The following statement contains a magic number: if (vector.DimensionCount == 3)              {                  x2 = vector[0];                  y2 = vector[1];                  z2 = vector[2];              }              else               {                  x2 = vector[0];                  y2 = vector[1];                  z2 = 0;              }
Magic Number,NGenerics.DataStructures.Mathematical,VectorN,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Mathematical\VectorN.cs,CrossProductSafe,The following statement contains a magic number: if (vector.DimensionCount == 3)              {                  x2 = vector[0];                  y2 = vector[1];                  z2 = vector[2];              }              else               {                  x2 = vector[0];                  y2 = vector[1];                  z2 = 0;              }
Magic Number,NGenerics.DataStructures.Trees,BinarySearchTree<TKey;TValue>,C:\repos\ngenerics_ngenerics\Source\NGenerics\DataStructures\Trees\BinarySearchTree.cs,RemoveItem,The following statement contains a magic number: if (currentNode.Degree == 2)  		    {  		        // Find the element with the largest key in the left sub-tree					                  BinaryTree<KeyValuePair<TKey' TValue>> searchParent;  		        var searchNode = FindMaximumNode(currentNode.Left' out searchParent);    		        parentNode = searchParent ?? currentNode;    		        currentNode.Data = searchNode.Data;  		        currentNode = searchNode;  		    }
Magic Number,NGenerics.Sorting,CombSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\CombSorter.cs,SortItems,The following statement contains a magic number: while (gap != 1)  			{  				if (gap > 1)  				{  					gap = (int)(gap / 1.3);    					if ((gap == 10) || (gap == 9))  					{  						gap = 11;  					}  				}    				var i = 0;    				while ((i + gap) != list.Count)  				{                      if (comparer.Compare(list[i]' list[i + gap]) > 0)                      {                          Swap(list' i' i + gap);                      }  				    i++;  				}  			}
Magic Number,NGenerics.Sorting,CombSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\CombSorter.cs,SortItems,The following statement contains a magic number: while (gap != 1)  			{  				if (gap > 1)  				{  					gap = (int)(gap / 1.3);    					if ((gap == 10) || (gap == 9))  					{  						gap = 11;  					}  				}    				var i = 0;    				while ((i + gap) != list.Count)  				{                      if (comparer.Compare(list[i]' list[i + gap]) > 0)                      {                          Swap(list' i' i + gap);                      }  				    i++;  				}  			}
Magic Number,NGenerics.Sorting,CombSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\CombSorter.cs,SortItems,The following statement contains a magic number: while (gap != 1)  			{  				if (gap > 1)  				{  					gap = (int)(gap / 1.3);    					if ((gap == 10) || (gap == 9))  					{  						gap = 11;  					}  				}    				var i = 0;    				while ((i + gap) != list.Count)  				{                      if (comparer.Compare(list[i]' list[i + gap]) > 0)                      {                          Swap(list' i' i + gap);                      }  				    i++;  				}  			}
Magic Number,NGenerics.Sorting,CombSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\CombSorter.cs,SortItems,The following statement contains a magic number: while (gap != 1)  			{  				if (gap > 1)  				{  					gap = (int)(gap / 1.3);    					if ((gap == 10) || (gap == 9))  					{  						gap = 11;  					}  				}    				var i = 0;    				while ((i + gap) != list.Count)  				{                      if (comparer.Compare(list[i]' list[i + gap]) > 0)                      {                          Swap(list' i' i + gap);                      }  				    i++;  				}  			}
Magic Number,NGenerics.Sorting,MergeSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\MergeSorter.cs,MergeSort,The following statement contains a magic number: if (leftBoundary < rightBoundary)  			{  				var middle = (leftBoundary + rightBoundary) / 2;    				MergeSort(leftBoundary' middle' list' comparer);  				MergeSort(middle + 1' rightBoundary' list' comparer);    				while ((middle + 1 <= rightBoundary) && (leftBoundary <= middle))  				{  					if (comparer.Compare(list[leftBoundary]' list[middle + 1]) < 0)  					{  						leftBoundary++;  					}  					else  					{  						var currentItem = list[middle + 1];    						for (var i = middle; i >= leftBoundary; i--)  						{  							list[i + 1] = list[i];  						}    						list[leftBoundary] = currentItem;  						leftBoundary++;  						middle++;  					}  				}  			}
Magic Number,NGenerics.Sorting,OddEvenTransportSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\OddEvenTransportSorter.cs,SortItems,The following statement contains a magic number: for (var i = 0; i < list.Count / 2; ++i)  			{  				for (var j = 0; j + 1 < list.Count; j += 2)  				{  					if (comparer.Compare(list[j]' list[j + 1]) > 0)  					{  						Swap(list' j' j + 1);  					}  				}    				for (var j = 1; j + 1 < list.Count; j += 2)  				{  					if (comparer.Compare(list[j]' list[j + 1]) > 0)  					{  						Swap(list' j' j + 1);  					}  				}  			}
Magic Number,NGenerics.Sorting,OddEvenTransportSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\OddEvenTransportSorter.cs,SortItems,The following statement contains a magic number: for (var i = 0; i < list.Count / 2; ++i)  			{  				for (var j = 0; j + 1 < list.Count; j += 2)  				{  					if (comparer.Compare(list[j]' list[j + 1]) > 0)  					{  						Swap(list' j' j + 1);  					}  				}    				for (var j = 1; j + 1 < list.Count; j += 2)  				{  					if (comparer.Compare(list[j]' list[j + 1]) > 0)  					{  						Swap(list' j' j + 1);  					}  				}  			}
Magic Number,NGenerics.Sorting,OddEvenTransportSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\OddEvenTransportSorter.cs,SortItems,The following statement contains a magic number: for (var i = 0; i < list.Count / 2; ++i)  			{  				for (var j = 0; j + 1 < list.Count; j += 2)  				{  					if (comparer.Compare(list[j]' list[j + 1]) > 0)  					{  						Swap(list' j' j + 1);  					}  				}    				for (var j = 1; j + 1 < list.Count; j += 2)  				{  					if (comparer.Compare(list[j]' list[j + 1]) > 0)  					{  						Swap(list' j' j + 1);  					}  				}  			}
Magic Number,NGenerics.Sorting,QuickSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\QuickSorter.cs,GetPivot,The following statement contains a magic number: var middle = (leftBoundary + rightBoundary) / 2;
Magic Number,NGenerics.Sorting,ShellSorter<T>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Sorting\ShellSorter.cs,SortItems,The following statement contains a magic number: do  			{  				delta = 1 + (delta / 3);    				for (var i = 0; i < delta; i++)  				{  					var counter = delta + i;    					// Insertion sort the segments  					while (counter < list.Count)  					{  						var start = counter;  						var tmp = list[start];  					  						while (start != i)  						{  							if (comparer.Compare(list[start - delta]' tmp) > 0)  							{  								list[start] = list[start - delta];  								start -= delta;  							}  							else  							{  								break;  							}  						}    						list[start] = tmp;  						counter += delta;  					}  				}  			}  			while (delta > 1);
Magic Number,NGenerics.Threading,BackgroundWorker<TInput;TOutput;TProgress>,C:\repos\ngenerics_ngenerics\Source\NGenerics\Threading\BackgroundWorker.cs,SleepWhileBusy,The following statement contains a magic number: while (IsBusy)              {                  Thread.Sleep(10);              }
