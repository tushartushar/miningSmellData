Implementation smell,Namespace,Class,File,Method,Description
Long Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanRegex,The method has 195 lines of code.
Long Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanCharClass,The method has 113 lines of code.
Complex Method,Cyjb.Compilers,NonTerminal<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\NonTerminal`1.cs,BuildProductions,Cyclomatic complexity of the method is 10
Complex Method,Cyjb.Compilers.Lexers,CharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\CharClass.cs,GetCharClass,Cyclomatic complexity of the method is 8
Complex Method,Cyjb.Compilers.Lexers,CharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\CharClass.cs,GetCharClassSet,Cyclomatic complexity of the method is 10
Complex Method,Cyjb.Compilers.Lexers,Dfa,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\Dfa.cs,MapGroup,Cyclomatic complexity of the method is 10
Complex Method,Cyjb.Compilers.Lexers,Dfa,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\Dfa.cs,MergeState,Cyclomatic complexity of the method is 12
Complex Method,Cyjb.Compilers.Lexers,FixedTrailingReader<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\FixedTrailingReader`1.cs,InternalReadToken,Cyclomatic complexity of the method is 8
Complex Method,Cyjb.Compilers.Lexers,LexerRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\LexerRule`1.cs,FillTrailing,Cyclomatic complexity of the method is 8
Complex Method,Cyjb.Compilers.Lexers,LexerRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\LexerRule`1.cs,BuildNfa,Cyclomatic complexity of the method is 9
Complex Method,Cyjb.Compilers.Lexers,TokenReaderBase<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\TokenReaderBase`1.cs,InternalReadToken,Cyclomatic complexity of the method is 12
Complex Method,Cyjb.Compilers.Lexers,RejectableTrailingReader<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\RejectableTrailingReader`1.cs,InternalReadToken,Cyclomatic complexity of the method is 13
Complex Method,Cyjb.Compilers.Parsers,LRItem<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\LRItem`1.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,Cyjb.Compilers.Parsers,LRItemCollection<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\LRItemCollection`1.cs,Equals,Cyclomatic complexity of the method is 9
Complex Method,Cyjb.Compilers.Parsers,ParserRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\ParserRule`1.cs,SpreadForward,Cyclomatic complexity of the method is 10
Complex Method,Cyjb.Compilers.Parsers,ParserRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\ParserRule`1.cs,LR1Closure,Cyclomatic complexity of the method is 9
Complex Method,Cyjb.Compilers.Parsers,ParserRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\ParserRule`1.cs,BuildLRTable,Cyclomatic complexity of the method is 12
Complex Method,Cyjb.Compilers.Parsers,ParserRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\ParserRule`1.cs,ResolveActions,Cyclomatic complexity of the method is 16
Complex Method,Cyjb.Compilers.RegularExpressions,CharClassExp,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\CharClassExp.cs,ToString,Cyclomatic complexity of the method is 13
Complex Method,Cyjb.Compilers.RegularExpressions,RegexCharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexCharClass.cs,GetDescription,Cyclomatic complexity of the method is 15
Complex Method,Cyjb.Compilers.RegularExpressions,RegexCharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexCharClass.cs,AddUppercaseRange,Cyclomatic complexity of the method is 11
Complex Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanRegex,Cyclomatic complexity of the method is 34
Complex Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanCharClass,Cyclomatic complexity of the method is 18
Complex Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanRepeat,Cyclomatic complexity of the method is 11
Complex Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanBlank,Cyclomatic complexity of the method is 18
Complex Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanBackslash,Cyclomatic complexity of the method is 9
Complex Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanBackslash,Cyclomatic complexity of the method is 11
Complex Method,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanCharEscape,Cyclomatic complexity of the method is 14
Complex Method,Cyjb.Compilers.RegularExpressions,RepeatExp,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RepeatExp.cs,ToString,Cyclomatic complexity of the method is 9
Long Parameter List,Cyjb.Compilers,Production<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\Production`1.cs,Production,The method has 5 parameters. Parameters: index' head' body' action' prec
Long Statement,Cyjb.Compilers,CompilerCommonExceptions,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\CompilerExceptionHelper.cs,ParsingException,The length of the statement  "			return new SourceException(ExceptionResources.GetString("ParsingException"' pattern' message)' new SourceRange(start' end)); " is 124.
Complex Conditional,Cyjb.Compilers.RegularExpressions,RegexCharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexCharClass.cs,AddCharClass,The conditional expression  "RccGetCanonical.Value(this.charClass) && thisRangeCount > 0 && ccRangeCount > 0 && 				RccSRGetFirst.Value(RccGetRangeAt.Value(cc.charClass' 0)) <= 					RccSRGetLast.Value(RccGetRangeAt.Value(this' thisRangeCount - 1))"  is complex.
Complex Conditional,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,StartScanRegex,The conditional expression  "reader.Read() == '<' && reader.Read() == '<' &&  				reader.Read() == 'E' && reader.Read() == 'O' && reader.Read() == 'F' &&  				reader.Read() == '>' && reader.Read() == '>' && EndOfPattern"  is complex.
Complex Conditional,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanCharClass,The conditional expression  "ich == '-' && reader.Peek() == '[' && !escapedChar && !firstChar"  is complex.
Complex Conditional,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanNormalChars,The conditional expression  "!EndOfPattern &&  					(!IsStopperX(ich = reader.Peek()) || (ich == '{' && !IsTrueQuantifier() && !IsRegexName()))"  is complex.
Complex Conditional,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanNormalChars,The conditional expression  "!EndOfPattern &&  					(!IsSpecial(ich = reader.Peek()) || (ich == '{' && !IsTrueQuantifier() && !IsRegexName()))"  is complex.
Magic Number,Cyjb.Compilers.Lexers,LexerRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\LexerRule`1.cs,FillDfa,The following statement contains a magic number: int headCnt = this.contextCount * 2;
Magic Number,Cyjb.Compilers.Lexers,LexerRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\LexerRule`1.cs,BuildNfa,The following statement contains a magic number: nfa[context.Index * 2 + 1].Add(nfa.HeadState);
Magic Number,Cyjb.Compilers.Lexers,LexerRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\LexerRule`1.cs,SortStates,The following statement contains a magic number: int headCnt = this.contextCount * 2;
Magic Number,Cyjb.Compilers.Lexers,LexerContext,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\LexerContext.cs,GetHashCode,The following statement contains a magic number: return 5425641 ^ this.index ^ this.contextType.GetHashCode() ^ this.label.GetHashCode();
Magic Number,Cyjb.Compilers.Lexers,TokenReaderBase<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\TokenReaderBase`1.cs,InternalReadToken,The following statement contains a magic number: state *= 2;
Magic Number,Cyjb.Compilers.Parsers,LRItem<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\LRItem`1.cs,ToString,The following statement contains a magic number: text.Length -= 2;
Magic Number,Cyjb.Compilers.Parsers,LRItem<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\LRItem`1.cs,GetHashCode,The following statement contains a magic number: return production.GetHashCode() ^ (index << 16);
Magic Number,Cyjb.Compilers.Parsers,ParseAction,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\ParseAction.cs,GetHashCode,The following statement contains a magic number: return actionType.GetHashCode() ^ (index << 5);
Magic Number,Cyjb.Compilers.Parsers,ProductionData,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\ProductionData`1.cs,GetHashCode,The following statement contains a magic number: int hashCode = head ^ (bodySize << 5);
Magic Number,Cyjb.Compilers.RegularExpressions,RegexCharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexCharClass.cs,GetDescription,The following statement contains a magic number: index += 2;
Magic Number,Cyjb.Compilers.RegularExpressions,RegexCharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexCharClass.cs,CategoryDescription,The following statement contains a magic number: sch == 100
Magic Number,Cyjb.Compilers.RegularExpressions,RegexCharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexCharClass.cs,AddUppercaseRange,The following statement contains a magic number: iMid = (i + iMax) / 2;
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanCharEscape,The following statement contains a magic number: switch (ich)  			{  				case 'x':  					return ScanHex(2);  				case 'u':  					return ScanHex(4);  				case 'a':  					return '\u0007';  				case 'b':  					return '\b';  				case 'e':  					return '\u001B';  				case 'f':  					return '\f';  				case 'n':  					return '\n';  				case 'r':  					return '\r';  				case 't':  					return '\t';  				case 'v':  					return '\u000B';  				case 'c':  					return ScanControl();  				default:  					char ch = (char)ich;  					if (!UseOptionEcma && RegexCharClass.IsWordChar(ch))  					{  						ThrowUnrecognizedEscape(ch);  					}  					return ch;  			}
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanCharEscape,The following statement contains a magic number: switch (ich)  			{  				case 'x':  					return ScanHex(2);  				case 'u':  					return ScanHex(4);  				case 'a':  					return '\u0007';  				case 'b':  					return '\b';  				case 'e':  					return '\u001B';  				case 'f':  					return '\f';  				case 'n':  					return '\n';  				case 'r':  					return '\r';  				case 't':  					return '\t';  				case 'v':  					return '\u000B';  				case 'c':  					return ScanControl();  				default:  					char ch = (char)ich;  					if (!UseOptionEcma && RegexCharClass.IsWordChar(ch))  					{  						ThrowUnrecognizedEscape(ch);  					}  					return ch;  			}
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanOctal,The following statement contains a magic number: int c = 3;
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanOctal,The following statement contains a magic number: i *= 8;
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanOctal,The following statement contains a magic number: c > 0 && (uint)(d = (reader.Peek() - '0')) <= 7
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanDecimal,The following statement contains a magic number: i *= 10;
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanDecimal,The following statement contains a magic number: (uint)(d = (char)(reader.Peek() - '0')) <= 9
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,HexDigit,The following statement contains a magic number: (uint)(d = ch - '0') <= 9
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,HexDigit,The following statement contains a magic number: (uint)(d = ch - 'a') <= 5
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,HexDigit,The following statement contains a magic number: (uint)(d = ch - 'A') <= 5
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,IsTrueQuantifier,The following statement contains a magic number: ich == -1 || reader.Index == startIdx + 2
Magic Number,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,IsRegexName,The following statement contains a magic number: return (ich == '}' && cnt > 2);
Duplicate Code,Cyjb.Compilers.RegularExpressions,RegexParser,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexParser.cs,ScanBlank,The method contains a code clone-set at the following line numbers (starting from the method definition): ((9' 28)' (38' 57))
Missing Default,Cyjb.Compilers.Lexers,LexerRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\LexerRule`1.cs,GetReader,The following switch statement is missing a default case: switch (this.trailingType) 			{ 				case TrailingType.None: 					return new SimpleReader<T>(this' source); 				case TrailingType.Fixed: 					return new FixedTrailingReader<T>(this' source); 				case TrailingType.Variable: 					return new RejectableTrailingReader<T>(this' source); 			}
Missing Default,Cyjb.Compilers.Lexers,LexerRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Lexers\LexerRule`1.cs,GetRejectableReader,The following switch statement is missing a default case: switch (this.trailingType) 			{ 				case TrailingType.None: 					return new RejectableReader<T>(this' source); 				case TrailingType.Fixed: 				case TrailingType.Variable: 					return new RejectableTrailingReader<T>(this' source); 			}
Missing Default,Cyjb.Compilers.Parsers,LRParser<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\LRParser`1.cs,Parse,The following switch statement is missing a default case: switch (action.ActionType)  				{  					case ParseActionType.Shift:  						Shift(token' action.Index);  						goto ReduceByUnique;  					case ParseActionType.Reduce:  						Reduce(action.Index);  						break;  					case ParseActionType.Accept:  						stateStack.Pop();  						result = tokenStack.Pop();  						return;  					case ParseActionType.Error:  						ReportError(state' token);  						// ErrorRecovery(state' token.Id);  						return;  				}
Missing Default,Cyjb.Compilers.Parsers,LRParser<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\LRParser`1.cs,Parse,The following switch statement is missing a default case: switch (action.ActionType)  				{  					case ParseActionType.Reduce:  						Reduce(action.Index);  						break;  					case ParseActionType.Error:  						return;  				}
Missing Default,Cyjb.Compilers.Parsers,ParserRule<T>,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\Parsers\ParserRule`1.cs,FindUniqueReduction,The following switch statement is missing a default case: switch (actions[i].ActionType)  				{  					case ParseActionType.Accept:  					case ParseActionType.Shift:  						return ParseAction.Error;  					case ParseActionType.Reduce:  						if (action.ActionType == ParseActionType.Error)  						{  							action = actions[i];  						}  						else if (action.Index != actions[i].Index)  						{  							return ParseAction.Error;  						}  						break;  				}
Missing Default,Cyjb.Compilers.RegularExpressions,RegexCharClass,D:\research\architectureSmells\repos\CYJB_Cyjb.Compilers\Cyjb.Compilers\RegularExpressions\RegexCharClass.cs,AddUppercaseRange,The following switch statement is missing a default case: switch (uc.Operator) 				{ 					case UppercaseSet: 						chMinT = (char)uc.Data; 						chMaxT = (char)uc.Data; 						break; 					case UppercaseAdd: 						chMinT += (char)uc.Data; 						chMaxT += (char)uc.Data; 						break; 					case UppercaseBor: 						chMinT |= (char)1; 						chMaxT |= (char)1; 						break; 					case UppercaseBad: 						chMinT += (char)(chMinT & 1); 						chMaxT += (char)(chMaxT & 1); 						break; 				}
