Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MathNet.Filtering.DataSources,StableNoiseSource,C:\repos\mathnet_mathnet-neodym\src\Filtering\DataSources\StableNoiseSource.cs,StableNoiseSource,The method has 5 parameters.
Long Parameter List,MathNet.Filtering.DataSources,SignalGenerator,C:\repos\mathnet_mathnet-neodym\src\Filtering\DataSources\SignalGenerator.cs,Sine,The method has 5 parameters.
Long Parameter List,MathNet.Filtering.DataSources,SinusoidalSource,C:\repos\mathnet_mathnet-neodym\src\Filtering\DataSources\SinusoidalSource.cs,SinusoidalSource,The method has 6 parameters.
Long Parameter List,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateBandpass,The method has 5 parameters.
Long Parameter List,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateBandstop,The method has 5 parameters.
Long Parameter List,MathNet.Filtering.IIR,IirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\IIR\IirCoefficients.cs,BuildCoefficients,The method has 5 parameters.
Long Parameter List,MathNet.Filtering.IIR,IirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\IIR\IirCoefficients.cs,BetaGamma,The method has 7 parameters.
Long Parameter List,MathNet.Filtering.Windows,Window,C:\repos\mathnet_mathnet-neodym\src\Filtering\Windows\Window.cs,SlidingWindow,The method has 5 parameters.
Long Parameter List,MathNet.Filtering.Windows,Window,C:\repos\mathnet_mathnet-neodym\src\Filtering\Windows\Window.cs,PermanentSlidingWindow,The method has 5 parameters.
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateLowpass,The following statement contains a magic number: return CreateLowpass (mode' sampleRate' cutoffRate' mode == ImpulseResponse.Finite ? 64 : 4);  
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateLowpass,The following statement contains a magic number: return CreateLowpass (mode' sampleRate' cutoffRate' mode == ImpulseResponse.Finite ? 64 : 4);  
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateHighpass,The following statement contains a magic number: return CreateHighpass (mode' sampleRate' cutoffRate' mode == ImpulseResponse.Finite ? 64 : 4);  
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateHighpass,The following statement contains a magic number: return CreateHighpass (mode' sampleRate' cutoffRate' mode == ImpulseResponse.Finite ? 64 : 4);  
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateBandpass,The following statement contains a magic number: return CreateBandpass (mode' sampleRate' cutoffLowRate' cutoffHighRate' mode == ImpulseResponse.Finite ? 64 : 4);  
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateBandpass,The following statement contains a magic number: return CreateBandpass (mode' sampleRate' cutoffLowRate' cutoffHighRate' mode == ImpulseResponse.Finite ? 64 : 4);  
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateBandstop,The following statement contains a magic number: return CreateBandstop (mode' sampleRate' cutoffLowRate' cutoffHighRate' mode == ImpulseResponse.Finite ? 64 : 4);  
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateBandstop,The following statement contains a magic number: return CreateBandstop (mode' sampleRate' cutoffLowRate' cutoffHighRate' mode == ImpulseResponse.Finite ? 64 : 4);  
Magic Number,MathNet.Filtering,OnlineFilter,C:\repos\mathnet_mathnet-neodym\src\Filtering\OnlineFilter.cs,CreateDenoise,The following statement contains a magic number: return CreateDenoise (7);  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,LowPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = samplingRate / 2 - cutoff;  	double df = (cutoff * TRANSWINDRATIO > 2) ? cutoff * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,LowPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = samplingRate / 2 - cutoff;  	double df = (cutoff * TRANSWINDRATIO > 2) ? cutoff * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,LowPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = samplingRate / 2 - cutoff;  	double df = (cutoff * TRANSWINDRATIO > 2) ? cutoff * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,LowPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = samplingRate / 2 - cutoff;  	double df = (cutoff * TRANSWINDRATIO > 2) ? cutoff * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,LowPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = samplingRate / 2 - cutoff;  	double df = (cutoff * TRANSWINDRATIO > 2) ? cutoff * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,LowPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = samplingRate / 2 - cutoff;  	double df = (cutoff * TRANSWINDRATIO > 2) ? cutoff * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,LowPass,The following statement contains a magic number: halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,LowPass,The following statement contains a magic number: halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,HighPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = cutoff;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,HighPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = cutoff;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,HighPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = cutoff;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,HighPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = cutoff;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,HighPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = cutoff;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,HighPass,The following statement contains a magic number: halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,HighPass,The following statement contains a magic number: halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffLow < samplingRate / 2 - cutoffHigh) ? cutoffLow : samplingRate / 2 - cutoffHigh;  	double df = (cutoffLow * TRANSWINDRATIO > 2) ? cutoffLow * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffLow < samplingRate / 2 - cutoffHigh) ? cutoffLow : samplingRate / 2 - cutoffHigh;  	double df = (cutoffLow * TRANSWINDRATIO > 2) ? cutoffLow * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffLow < samplingRate / 2 - cutoffHigh) ? cutoffLow : samplingRate / 2 - cutoffHigh;  	double df = (cutoffLow * TRANSWINDRATIO > 2) ? cutoffLow * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffLow < samplingRate / 2 - cutoffHigh) ? cutoffLow : samplingRate / 2 - cutoffHigh;  	double df = (cutoffLow * TRANSWINDRATIO > 2) ? cutoffLow * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffLow < samplingRate / 2 - cutoffHigh) ? cutoffLow : samplingRate / 2 - cutoffHigh;  	double df = (cutoffLow * TRANSWINDRATIO > 2) ? cutoffLow * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffLow < samplingRate / 2 - cutoffHigh) ? cutoffLow : samplingRate / 2 - cutoffHigh;  	double df = (cutoffLow * TRANSWINDRATIO > 2) ? cutoffLow * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffLow < samplingRate / 2 - cutoffHigh) ? cutoffLow : samplingRate / 2 - cutoffHigh;  	double df = (cutoffLow * TRANSWINDRATIO > 2) ? cutoffLow * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandPass,The following statement contains a magic number: halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandStop,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffHigh - cutoffLow) / 2;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandStop,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffHigh - cutoffLow) / 2;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandStop,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffHigh - cutoffLow) / 2;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandStop,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffHigh - cutoffLow) / 2;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandStop,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffHigh - cutoffLow) / 2;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandStop,The following statement contains a magic number: if (halforder == 0) {  	const double TRANSWINDRATIO = 0.25;  	double maxDf = (cutoffHigh - cutoffLow) / 2;  	double df = (maxDf * TRANSWINDRATIO > 2) ? maxDf * TRANSWINDRATIO : 2;  	df = (df < maxDf) ? df : maxDf;  	halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  }  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandStop,The following statement contains a magic number: halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  
Magic Number,MathNet.Filtering.FIR,FirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\FIR\FirCoefficients.cs,BandStop,The following statement contains a magic number: halforder = (int)Math.Ceiling (3.3 / (df / samplingRate) / 2);  
Magic Number,MathNet.Filtering.IIR,IirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\IIR\IirCoefficients.cs,LowPass,The following statement contains a magic number: return BuildCoefficients (beta' gamma' (0.5d + beta - gamma) * 0.25d' // alpha  2' // mu  1);  
Magic Number,MathNet.Filtering.IIR,IirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\IIR\IirCoefficients.cs,HighPass,The following statement contains a magic number: return BuildCoefficients (beta' gamma' (0.5d + beta + gamma) * 0.25d' // alpha  -2' // mu  1);  
Magic Number,MathNet.Filtering.IIR,IirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\IIR\IirCoefficients.cs,BandStop,The following statement contains a magic number: return BuildCoefficients (beta' gamma' (0.5d + beta) * 0.5d' // alpha  -2 * Math.Cos (theta)' // mu  1);  
Magic Number,MathNet.Filtering.IIR,IirCoefficients,C:\repos\mathnet_mathnet-neodym\src\Filtering\IIR\IirCoefficients.cs,BetaGamma,The following statement contains a magic number: theta = 2 * Math.PI * cutoff / sampling;  
Magic Number,MathNet.Filtering.Windows,Window,C:\repos\mathnet_mathnet-neodym\src\Filtering\Windows\Window.cs,FilterWindow,The following statement contains a magic number: return source.SlidingWindow (size' 1' 2 * size' false);  
Magic Number,MathNet.Filtering.Windows,Window,C:\repos\mathnet_mathnet-neodym\src\Filtering\Windows\Window.cs,PermanentFilterWindow,The following statement contains a magic number: return source.PermanentSlidingWindow (size' 1' 2 * size' false);  
