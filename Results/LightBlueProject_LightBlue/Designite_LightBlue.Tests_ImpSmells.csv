Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,LightBlue.Tests.Standalone,FileLockExtensionsTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\FileLockExtensionsTests.cs,CallsActionWhenSharingViolationOccurs,The length of the parameter whenSharingViolationOccursCalled is 32.
Long Statement,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerTests.cs,WillUseCorrectContainerPathWhenGivenBasePathAndContainerNameAsync,The length of the statement  "            await new StandaloneAzureBlobContainer(BasePath' ContainerName).CreateIfNotExistsAsync(BlobContainerPublicAccessType.Off); " is 122.
Empty Catch Block,LightBlue.Tests.Standalone,StandaloneAzureTestsBase,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\StandaloneAzureTestsBase.cs,Dispose,The method has an empty catch block.
Empty Catch Block,LightBlue.Tests.Standalone,StandaloneAzureTestsBase,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\StandaloneAzureTestsBase.cs,Dispose,The method has an empty catch block.
Magic Number,LightBlue.Tests.Standalone,StandaloneAzureTestsBase,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\StandaloneAzureTestsBase.cs,Dispose,The following statement contains a magic number: tries++ < 2
Magic Number,LightBlue.Tests.Standalone,FileLockExtensionsTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\FileLockExtensionsTests.cs,WaitsForASpecifiedPeriod,The following statement contains a magic number: const int maximumRetryAttempts = 4;
Magic Number,LightBlue.Tests.Standalone,FileLockExtensionsTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\FileLockExtensionsTests.cs,WaitsForASpecifiedPeriod,The following statement contains a magic number: var waitTime = TimeSpan.FromMilliseconds(250);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,AllowsSnapshotsOnlyInFlatMode,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => container.ListBlobsSegmentedAsync(                  ""'                  BlobListing.Hierarchical'                  blobListingDetails'                  500'                  null));
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillGetExpectedNumberOfResultsForFlatListing,The following statement contains a magic number: Assert.Equal(10' results.Results.Count());
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillGetExpectedNumberOfResultsForHierarchicalListing,The following statement contains a magic number: Assert.Equal(15' results.Results.Count());
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,HierarchicalListingWillContainExpectedNumberOfDirectories,The following statement contains a magic number: Assert.Equal(10' results.Results.OfType<IAzureBlobDirectory>().Count());
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillHaveExpectedNumberOfItemsWithFlatListingAndPrefix,The following statement contains a magic number: Assert.Equal(2' results.Results.Count());
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillHaveExpectedNumberOfItemsWithHierarchicalListingAndPrefix,The following statement contains a magic number: Assert.Equal(6' results.Results.Count());
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillHaveExpectedNumberOfFilesWhenContinuingWithFlatListing,The following statement contains a magic number: var token = (await _container.ListBlobsSegmentedAsync(                  ""'                  BlobListing.Flat'                  BlobListingDetails.None'                  4'                  null)).ContinuationToken;
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillHaveExpectedNumberOfFilesWhenContinuingWithFlatListing,The following statement contains a magic number: Assert.Equal(6' results.Results.Count());
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillHaveExpectedFilesWhenContinuingWithFlatListing,The following statement contains a magic number: var token = (await _container.ListBlobsSegmentedAsync(                  ""'                  BlobListing.Flat'                  BlobListingDetails.None'                  3'                  null)).ContinuationToken;
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillHaveExpectedNumberOfItemsWhenContinuingWithHierarchicalListing,The following statement contains a magic number: var token = (await _container.ListBlobsSegmentedAsync(                  ""'                  BlobListing.Hierarchical'                  BlobListingDetails.None'                  9'                  null)).ContinuationToken;
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobContainerListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobContainerListTests.cs,WillHaveExpectedNumberOfItemsWhenContinuingWithHierarchicalListing,The following statement contains a magic number: Assert.Equal(6' results.Results.Count());
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobDirectoryListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobDirectoryListTests.cs,CanLimitItemsInHierarchicalListing,The following statement contains a magic number: var result = await _directory.ListBlobsSegmentedAsync(                  BlobListing.Hierarchical'                  BlobListingDetails.None'                  2'                  null);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobDirectoryListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobDirectoryListTests.cs,CanLimitItemsInFlatListing,The following statement contains a magic number: var result = await _directory.ListBlobsSegmentedAsync(                  BlobListing.Hierarchical'                  BlobListingDetails.None'                  2'                  null);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobDirectoryListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobDirectoryListTests.cs,CanPageItemsInHierarchicalListing,The following statement contains a magic number: var token = (await _directory.ListBlobsSegmentedAsync(                      BlobListing.Hierarchical'                      BlobListingDetails.None'                      2'                      null))                  .ContinuationToken;
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobDirectoryListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobDirectoryListTests.cs,CanPageItemsInHierarchicalListing,The following statement contains a magic number: var result = await _directory.ListBlobsSegmentedAsync(                  BlobListing.Hierarchical'                  BlobListingDetails.None'                  2'                  token);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobDirectoryListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobDirectoryListTests.cs,CanPageItemsInFlatListing,The following statement contains a magic number: var token = (await _directory.ListBlobsSegmentedAsync(                      BlobListing.Hierarchical'                      BlobListingDetails.None'                      2'                      null))                  .ContinuationToken;
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlobDirectoryListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlobDirectoryListTests.cs,CanPageItemsInFlatListing,The following statement contains a magic number: var result = await _directory.ListBlobsSegmentedAsync(                  BlobListing.Hierarchical'                  BlobListingDetails.None'                  2'                  token);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobCopyByUriTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobCopyByUriTests.cs,WillCopyMetadataFromSourceWherePresent,The following statement contains a magic number: new              {                  Metadata = new Dictionary<string' string>                  {                      {"thing"' "something"}                  }'                  Properties = new                  {                      ContentType = "whatever"'                      Length = (long) 12                  }              }.ToExpectedObject().ShouldMatch(destinationBlob);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobCopyTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobCopyTests.cs,WillCopyMetadataFromSourceWherePresent,The following statement contains a magic number: new              {                  Metadata = new Dictionary<string' string>                  {                      {"thing"' "something"}                  }'                  Properties = new                  {                      ContentType = "whatever"'                      Length = (long) 12                  }              }.ToExpectedObject().ShouldMatch(destinationBlob);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobPropertiesTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobPropertiesTests.cs,CanPersistAndRetrieveProperties,The following statement contains a magic number: new              {                  Properties = new                  {                      ContentType = "something"'                      Length = (long) 12                  }              }.ToExpectedObject().ShouldMatch(loadedBlob);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobPropertiesTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobPropertiesTests.cs,DefaultsToOctetStreamWhenLoadingPropertiesWhenPreviouslyUnset,The following statement contains a magic number: new              {                  Properties = new                  {                      ContentType = "application/octet-stream"'                      Length = (long) 12                  }              }.ToExpectedObject().ShouldMatch(blob);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobPropertiesTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobPropertiesTests.cs,CanPersistAndRetrievePropertiesAsync,The following statement contains a magic number: new              {                  Properties = new                  {                      ContentType = "something"'                      Length = (long) 12                  }              }.ToExpectedObject().ShouldMatch(loadedBlob);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobPropertiesTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobPropertiesTests.cs,DefaultsToOctetStreamWhenLoadingPropertiesWhenPreviouslyUnsetAsync,The following statement contains a magic number: new              {                  Properties = new                  {                      ContentType = "application/octet-stream"'                      Length = (long) 12                  }              }.ToExpectedObject().ShouldMatch(blob);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobPropertiesTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobPropertiesTests.cs,CanPersistPropertiesAsync,The following statement contains a magic number: new              {                  Properties = new                  {                      ContentType = "something"'                      Length = (long) 12                  }              }.ToExpectedObject().ShouldMatch(loadedBlob);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobPropertiesTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobPropertiesTests.cs,FetchingAttributesOverwritesAnyUnsavedPropertyValues,The following statement contains a magic number: new              {                  Properties = new                  {                      ContentType = "something"'                      Length = (long)12                  }              }.ToExpectedObject().ShouldMatch(loadedBlob);
Magic Number,LightBlue.Tests.Standalone.BlobStorage,StandaloneAzureBlockBlobTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\BlobStorage\StandaloneAzureBlockBlobTests.cs,GenerateSourceContent,The following statement contains a magic number: count < 2048
Magic Number,LightBlue.Tests.Standalone.QueueStorage,StandaloneAzureQueueStorageClientListTests,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\QueueStorage\StandaloneAzureQueueStorageClientListTests.cs,WillListMultipleQueues,The following statement contains a magic number: Assert.Equal(3' _client.ListQueues().Count());
Missing Default,LightBlue.Tests.Standalone,StandaloneAzureTestsBase,D:\research\architectureSmells\repos\LightBlueProject_LightBlue\LightBlue.Tests\Standalone\StandaloneAzureTestsBase.cs,StandaloneAzureTestsBase,The following switch statement is missing a default case: switch (directoryType)              {                  case DirectoryType.Account:                      BasePath = accountDirectory;                      break;                  case DirectoryType.BlobStorage:                      BasePath = blobDirectory;                      break;                  case DirectoryType.Container:                      var containerDirectory = Path.Combine(blobDirectory' "container");                      Directory.CreateDirectory(Path.Combine(containerDirectory' MetadataDirectory));                      BasePath = containerDirectory;                      break;                  case DirectoryType.QueueStorage:                      BasePath = queuesDirectory;                      break;                  case DirectoryType.Queue:                      var queueDirectory = Path.Combine(queuesDirectory' "queue");                      Directory.CreateDirectory(Path.Combine(queueDirectory' MetadataDirectory));                      BasePath = queueDirectory;                      break;              }
