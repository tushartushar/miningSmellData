Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ElasticLinq.IntegrationTest,BreakOnInvalidQueryConnection,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\BreakOnInvalidQueryConnection.cs,BreakOnInvalidQueryConnection,The method has 6 parameters. Parameters: endpoint' userName' password' timeout' index' options
Long Statement,ElasticLinq.IntegrationTest,Data,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\Data.cs,LoadMemoryFromElastic,The length of the statement  "                    $"Tests expect {expectedDataCount} entries but {memory.Count} loaded from Elasticsearch index '{elasticContext.Connection.Index}' at {((ElasticConnection) elasticContext.Connection).Endpoint}"); " is 194.
Magic Number,ElasticLinq.IntegrationTest,CountTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\CountTests.cs,CountTests,The following statement contains a magic number: MidPoint = MemoryJobs.OrderBy(o => o.Id).Skip(MemoryJobs.Count / 2).First().Id;
Magic Number,ElasticLinq.IntegrationTest,CountTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\CountTests.cs,WhereCount,The following statement contains a magic number: var midPoint = MemoryJobs.OrderBy(o => o.Id).Skip(MemoryJobs.Count / 2).First().Id;
Magic Number,ElasticLinq.IntegrationTest,CountTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\CountTests.cs,WhereLongCount,The following statement contains a magic number: var midPoint = MemoryJobs.OrderBy(o => o.Id).Skip(MemoryJobs.Count / 2).First().Id;
Magic Number,ElasticLinq.IntegrationTest,Data,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\Data.cs,LoadMemoryFromElastic,The following statement contains a magic number: const int expectedDataCount = 200;
Magic Number,ElasticLinq.IntegrationTest,FieldMappingTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\FieldMappingTests.cs,ToList_Materializes_Complete_Objects,The following statement contains a magic number: Assert.Equal(100' results.Count);
Magic Number,ElasticLinq.IntegrationTest,FieldMappingTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\FieldMappingTests.cs,Select_Specific_Fields_Materializes_Correctly,The following statement contains a magic number: Assert.Equal(100' results.Count);
Magic Number,ElasticLinq.IntegrationTest,FieldMappingTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\FieldMappingTests.cs,Where_Selects_By_Correct_Field_Name,The following statement contains a magic number: var results = context.Query<WebUser>().Where(w => w.Id == 2).ToList();
Magic Number,ElasticLinq.IntegrationTest,AsyncTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\AsyncTests.cs,ToListAsyncReturnsCorrectResults,The following statement contains a magic number: var memory = DataAssert.Data.Memory<WebUser>().Where(w => w.Id > 80).OrderBy(w => w.Id).ToList();
Magic Number,ElasticLinq.IntegrationTest,AsyncTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\AsyncTests.cs,ToListAsyncReturnsCorrectResults,The following statement contains a magic number: var elastic = await DataAssert.Data.Elastic<WebUser>().Where(w => w.Id > 80).OrderBy(w => w.Id).ToListAsync();
Magic Number,ElasticLinq.IntegrationTest,AsyncTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\AsyncTests.cs,ToDictionaryAsyncReturnsCorrectResults,The following statement contains a magic number: var memory = DataAssert.Data.Memory<WebUser>().Where(w => w.Id > 75).ToDictionary(k => k.Id);
Magic Number,ElasticLinq.IntegrationTest,AsyncTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\AsyncTests.cs,ToDictionaryAsyncReturnsCorrectResults,The following statement contains a magic number: var elastic = await DataAssert.Data.Elastic<WebUser>().Where(w => w.Id > 75).ToDictionaryAsync(k => k.Id);
Magic Number,ElasticLinq.IntegrationTest,AsyncTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\AsyncTests.cs,FirstAsyncReturnsCorrectResult,The following statement contains a magic number: var memory = DataAssert.Data.Memory<WebUser>().Where(w => w.Id > 80).First();
Magic Number,ElasticLinq.IntegrationTest,AsyncTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\AsyncTests.cs,FirstAsyncReturnsCorrectResult,The following statement contains a magic number: var elastic = await DataAssert.Data.Elastic<WebUser>().Where(w => w.Id > 80).FirstAsync();
Magic Number,ElasticLinq.IntegrationTest,AsyncTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\AsyncTests.cs,FirstOrDefaultAsyncWithPredicateReturnsCorrectResult,The following statement contains a magic number: var memory = DataAssert.Data.Memory<WebUser>().FirstOrDefault(w => w.Id == 34);
Magic Number,ElasticLinq.IntegrationTest,AsyncTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\AsyncTests.cs,FirstOrDefaultAsyncWithPredicateReturnsCorrectResult,The following statement contains a magic number: var elastic = await DataAssert.Data.Elastic<WebUser>().FirstOrDefaultAsync(w => w.Id == 34);
Magic Number,ElasticLinq.IntegrationTest.Models,JobLocation,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\Models\JobLocation.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,ElasticLinq.IntegrationTest.Models,JobLocation,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\Models\JobLocation.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + City.GetHashCode();
Magic Number,ElasticLinq.IntegrationTest.Models,LastAccess,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\Models\LastAccess.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,ElasticLinq.IntegrationTest.WhereTests,PredicateWhereTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\WhereTests\PredicateWhereTests.cs,CanUseSingleWherePredicate,The following statement contains a magic number: Assert.Equal(2' results.Count());
Magic Number,ElasticLinq.IntegrationTest.WhereTests,PredicateWhereTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\WhereTests\PredicateWhereTests.cs,CanCombineMultipleWherePredicatesWithOrInvoke,The following statement contains a magic number: var results = webUsers.Where(Or.Combine(WilsonsIdUnder20()' w => w.Id < 5));
Magic Number,ElasticLinq.IntegrationTest.WhereTests,PredicateWhereTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\WhereTests\PredicateWhereTests.cs,CanCombineMultipleWherePredicatesWithOrInvoke,The following statement contains a magic number: Assert.Equal(5' results.Count());
Magic Number,ElasticLinq.IntegrationTest.WhereTests,PredicateWhereTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\WhereTests\PredicateWhereTests.cs,WilsonsIdUnder20,The following statement contains a magic number: return w => w.Surname == "Wilson" && w.Id < 20;
Magic Number,ElasticLinq.IntegrationTest.WhereTests,PredicateWhereTests,D:\research\architectureSmells\repos\CenturyLinkCloud_ElasticLINQ\Source\ElasticLINQ.IntegrationTest\WhereTests\PredicateWhereTests.cs,IdUnder5,The following statement contains a magic number: return w => w.Id < 5;
