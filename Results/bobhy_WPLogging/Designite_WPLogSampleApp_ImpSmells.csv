Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WPLogSampleApp,PivotPage1,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\PivotPage1.xaml.cs,Pivot_SelectionChanged,Cyclomatic complexity of the method is 8
Complex Method,WPLogSampleApp,PivotPage1,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\PivotPage1.xaml.cs,Throw_Click,Cyclomatic complexity of the method is 11
Complex Method,WPLogSampleApp,IsoUtils,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,GetFileSizes,Cyclomatic complexity of the method is 8
Long Statement,WPLogSampleApp,PivotPage1,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\PivotPage1.xaml.cs,doViewRefresh,The length of the statement  "	foreach (string s in new FileEnumerable<string> (Path.Combine (WPLog.Settings ().LogFolder' WPLog.LogFileNamePrefix + "*" + WPLog.LogFileType))) " is 144.
Long Statement,WPLogSampleApp,PivotPage1,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\PivotPage1.xaml.cs,doSettingsRefresh,The length of the statement  "	List<IsoUtils.FileInfo> fi = IsoUtils.GetFileSizes (Path.Combine (WPLog.Settings ().LogFolder' WPLog.LogFileNamePrefix + "*.*")' out totalFileSize); " is 148.
Long Statement,WPLogSampleApp,FileEnumerable,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,MoveNext,The length of the statement  "		// if we've already signalled end of collection or if this.Dispose() was called after last Reset()' subsequent calls to MoveNext() must continue to do so. " is 154.
Empty Catch Block,WPLogSampleApp,FileEnumerable,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,NextFile,The method has an empty catch block.
Empty Catch Block,WPLogSampleApp,IsoUtils,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,GetFileSizes,The method has an empty catch block.
Empty Catch Block,WPLogSampleApp,IsoUtils,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,DeleteFiles,The method has an empty catch block.
Magic Number,WPLogSampleApp,FileEnumerable,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,MoveNext,The following statement contains a magic number: do {  	// if already at end of collection' signal end of collection.  	// if we've already signalled end of collection or if this.Dispose() was called after last Reset()' subsequent calls to MoveNext() must continue to do so.  	// latter condition means caller is trying to start a new iteration with a stale iterator (didn't call Reset()).  	if (_currentFileIndex >= _fileList.Length || _currentStream == null)  		return false;  	Debug.Assert (_currentStream != null' "not at end of collection but no next file??");  	// read a line from current file  	while ((dataByte = (byte)_currentStream.ReadByte ()) != '\n' && dataByte != 255) {  		Buffer.SetByte (readBuf' readCount' dataByte);  		readCount++;  	}  	// stringify if anything read  	_currentLine = (readCount > 0) ? _utf8.GetString (readBuf' 0' readCount) : "";  	// advance to next file if EOF on current file  	if (dataByte == 255)  		NextFile ();  }  while (readCount == 0 && dataByte == 255);  
Magic Number,WPLogSampleApp,FileEnumerable,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,MoveNext,The following statement contains a magic number: do {  	// if already at end of collection' signal end of collection.  	// if we've already signalled end of collection or if this.Dispose() was called after last Reset()' subsequent calls to MoveNext() must continue to do so.  	// latter condition means caller is trying to start a new iteration with a stale iterator (didn't call Reset()).  	if (_currentFileIndex >= _fileList.Length || _currentStream == null)  		return false;  	Debug.Assert (_currentStream != null' "not at end of collection but no next file??");  	// read a line from current file  	while ((dataByte = (byte)_currentStream.ReadByte ()) != '\n' && dataByte != 255) {  		Buffer.SetByte (readBuf' readCount' dataByte);  		readCount++;  	}  	// stringify if anything read  	_currentLine = (readCount > 0) ? _utf8.GetString (readBuf' 0' readCount) : "";  	// advance to next file if EOF on current file  	if (dataByte == 255)  		NextFile ();  }  while (readCount == 0 && dataByte == 255);  
Magic Number,WPLogSampleApp,FileEnumerable,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,MoveNext,The following statement contains a magic number: do {  	// if already at end of collection' signal end of collection.  	// if we've already signalled end of collection or if this.Dispose() was called after last Reset()' subsequent calls to MoveNext() must continue to do so.  	// latter condition means caller is trying to start a new iteration with a stale iterator (didn't call Reset()).  	if (_currentFileIndex >= _fileList.Length || _currentStream == null)  		return false;  	Debug.Assert (_currentStream != null' "not at end of collection but no next file??");  	// read a line from current file  	while ((dataByte = (byte)_currentStream.ReadByte ()) != '\n' && dataByte != 255) {  		Buffer.SetByte (readBuf' readCount' dataByte);  		readCount++;  	}  	// stringify if anything read  	_currentLine = (readCount > 0) ? _utf8.GetString (readBuf' 0' readCount) : "";  	// advance to next file if EOF on current file  	if (dataByte == 255)  		NextFile ();  }  while (readCount == 0 && dataByte == 255);  
Magic Number,WPLogSampleApp,FileEnumerable,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,MoveNext,The following statement contains a magic number: while ((dataByte = (byte)_currentStream.ReadByte ()) != '\n' && dataByte != 255) {  	Buffer.SetByte (readBuf' readCount' dataByte);  	readCount++;  }  
Magic Number,WPLogSampleApp,FileEnumerable,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\utils.cs,MoveNext,The following statement contains a magic number: if (dataByte == 255)  	NextFile ();  
Missing Default,WPLogSampleApp,PivotPage1,C:\repos\bobhy_WPLogging\WPLoggingSampleApp\PivotPage1.xaml.cs,Pivot_SelectionChanged,The following switch statement is missing a default case: switch (((PivotItem)ThePivot.SelectedItem).Name) {  case "LogThisPI":  	break;  case "SettingsPI":  	doSettingsRefresh ();  	break;  case "ViewPI":  	doViewRefresh ();  	break;  }  
