Implementation smell,Namespace,Class,File,Method,Description
Long Method,TrifleJS,Program,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Program.cs,Main,The method has 141 lines of code.
Complex Method,TrifleJS.API.Modules,WebServer,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebServer.cs,ProcessConnections,Cyclomatic complexity of the method is 8
Complex Method,TrifleJS.API.Modules,Stream,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\FileSystem.cs,Stream,Cyclomatic complexity of the method is 9
Complex Method,TrifleJS.API.Modules,System,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\System.cs,GetVersion,Cyclomatic complexity of the method is 14
Complex Method,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,_sendEvent,Cyclomatic complexity of the method is 16
Complex Method,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCookies,Cyclomatic complexity of the method is 12
Complex Method,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,Cyclomatic complexity of the method is 10
Complex Method,TrifleJS,Extensions,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Extensions.cs,GetElementFromSelector,Cyclomatic complexity of the method is 8
Complex Method,TrifleJS,Program,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Program.cs,Main,Cyclomatic complexity of the method is 28
Long Parameter List,TrifleJS.API.Modules,ChildProcess,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\ChildProcess.cs,_spawn,The method has 6 parameters. Parameters: cmd' args' opts' exitCallbackId' stdOutCallbackId' stdErrCallbackId
Long Parameter List,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,BeforeNavigate2,The method has 7 parameters. Parameters: pDisp' URL' Flags' TargetFrameName' PostData' Headers' Cancel
Long Parameter List,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,FindFirstUrlCacheGroup,The method has 6 parameters. Parameters: dwFlags' dwFilter' lpSearchCondition' dwSearchCondition' lpGroupId' lpReserved
Long Parameter List,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,FindFirstUrlCacheEntryEx,The method has 9 parameters. Parameters: lpszUrlSearchPattern' dwFlags' dwFilter' GroupId' lpFirstCacheEntryInfo' lpdwFirstCacheEntryInfoBufferSize' lpReserved' pcbReserved2' lpReserved3
Long Parameter List,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,FindNextUrlCacheEntryEx,The method has 6 parameters. Parameters: hEnumHandle' lpNextCacheEntryInfo' lpdwNextCacheEntryInfoBufferSize' lpReserved' pcbReserved2' lpReserved3
Long Parameter List,TrifleJS.Native,IDocHostShowUI,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\COM.cs,ShowMessage,The method has 7 parameters. Parameters: hwnd' lpstrText' lpstrCaption' dwType' lpstrHelpFile' dwHelpContext' lpResult
Long Parameter List,TrifleJS.Native,IDocHostShowUI,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\COM.cs,ShowHelp,The method has 6 parameters. Parameters: hwnd' pszHelpFile' uCommand' dwData' ptMouse' pDispatchObjectHit
Long Parameter List,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,InternetGetCookieEx,The method has 6 parameters. Parameters: url' cookieName' cookieData' size' dwFlags' lpReserved
Long Parameter List,TrifleJS.Native,IViewObject,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,Draw,The method has 10 parameters. Parameters: dwAspect' lindex' pvAspect' ptd' hdcTargetDev' hdcDraw' lprcBounds' lprcWBounds' pfnContinue' dwContinue
Long Parameter List,TrifleJS.Native,ShowMessageEventArgs,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\SkipDialogBrowser.cs,ShowMessageEventArgs,The method has 5 parameters. Parameters: text' caption' type' helpFile' helpContext
Long Parameter List,TrifleJS.Native,SkipDialogBrowserSite,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\SkipDialogBrowser.cs,ShowMessage,The method has 7 parameters. Parameters: hwnd' lpstrText' lpstrCaption' dwType' lpstrHelpFile' dwHelpContext' lpResult
Long Parameter List,TrifleJS.Native,SkipDialogBrowserSite,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\SkipDialogBrowser.cs,ShowHelp,The method has 6 parameters. Parameters: hwnd' pszHelpFile' uCommand' dwData' ptMouse' pDispatchObjectHit
Long Parameter List,TrifleJS.Native.Deprecated,ShowMessageEventArgs,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Deprecated\EnhancedBrowser.cs,ShowMessageEventArgs,The method has 5 parameters. Parameters: text' caption' type' helpFile' helpContext
Long Parameter List,TrifleJS.Native.Deprecated,EnhancedWebBrowserSite,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Deprecated\EnhancedBrowser.cs,ShowMessage,The method has 7 parameters. Parameters: hwnd' lpstrText' lpstrCaption' dwType' lpstrHelpFile' dwHelpContext' lpResult
Long Parameter List,TrifleJS.Native.Deprecated,EnhancedWebBrowserSite,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Deprecated\EnhancedBrowser.cs,ShowHelp,The method has 6 parameters. Parameters: hwnd' pszHelpFile' uCommand' dwData' ptMouse' pDispatchObjectHit
Long Parameter List,TrifleJS.Native.Deprecated,IOleObject,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Deprecated\EnhancedBrowser.cs,DoVerb,The method has 6 parameters. Parameters: iVerb' lpmsg' pActiveSite' lindex' hwndParent' lprcPosRect
Long Parameter List,TrifleJS.Native.Deprecated,IDocHostShowUI,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Deprecated\EnhancedBrowser.cs,ShowMessage,The method has 7 parameters. Parameters: hwnd' lpstrText' lpstrCaption' dwType' lpstrHelpFile' dwHelpContext' lpResult
Long Parameter List,TrifleJS.Native.Deprecated,IDocHostShowUI,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Deprecated\EnhancedBrowser.cs,ShowHelp,The method has 6 parameters. Parameters: hwnd' pszHelpFile' uCommand' dwData' ptMouse' pDispatchObjectHit
Long Parameter List,TrifleJS.Test.SSL,HttpApi,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,HttpSetServiceConfiguration,The method has 5 parameters. Parameters: serviceIntPtr' configId' pConfigInformation' configInformationLength' pOverlapped
Long Parameter List,TrifleJS.Test.SSL,HttpApi,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,HttpDeleteServiceConfiguration,The method has 5 parameters. Parameters: serviceIntPtr' configId' pConfigInformation' configInformationLength' pOverlapped
Long Parameter List,TrifleJS.Test.SSL,HttpApi,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,HttpQueryServiceConfiguration,The method has 8 parameters. Parameters: serviceIntPtr' configId' pInputConfigInfo' inputConfigInfoLength' pOutputConfigInfo' outputConfigInfoLength' pReturnLength' pOverlapped
Long Identifier,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,FindFirstUrlCacheEntry,The length of the parameter lpdwFirstCacheEntryInfoBufferSize is 33.
Long Identifier,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,FindNextUrlCacheEntry,The length of the parameter lpdwNextCacheEntryInfoBufferSize is 32.
Long Identifier,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,FindFirstUrlCacheEntryEx,The length of the parameter lpdwFirstCacheEntryInfoBufferSize is 33.
Long Identifier,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,FindNextUrlCacheEntryEx,The length of the parameter lpdwNextCacheEntryInfoBufferSize is 32.
Long Identifier,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,,The length of the parameter CACHEGROUP_FLAG_FLUSHURL_ONDELETE is 33.
Long Identifier,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,,The length of the parameter INTERNET_OPTION_END_BROWSER_SESSION is 35.
Long Identifier,TrifleJS.Test.SSL,HttpApi,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,,The length of the parameter HTTP_SERVICE_CONFIG_SSL_FLAG_NEGOTIATE_CLIENT_CERT is 50.
Long Identifier,TrifleJS.Test.SSL,HttpApi,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,,The length of the parameter HTTP_SERVICE_CONFIG_SSL_FLAG_NO_RAW_FILTER is 42.
Long Identifier,TrifleJS.Test.SSL,HTTP_SERVICE_CONFIG_SSL_PARAM,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,,The length of the parameter DefaultRevocationFreshnessTime is 30.
Long Identifier,TrifleJS.Test.SSL,HTTP_SERVICE_CONFIG_SSL_PARAM,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,,The length of the parameter DefaultRevocationUrlRetrievalTimeout is 36.
Long Statement,TrifleJS.API,Phantom,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Phantom.cs,_fireEvent,The length of the statement  "                    return Program.Context.Run(String.Format("phantom.fireEvent('{0}''{1})"' nickname' Utils.Serialize(args))' "phantom.fireEvent()"); " is 130.
Long Statement,TrifleJS.API.Modules,System,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\System.cs,GetArchitecture,The length of the statement  "            if (ModuleContainsFunction("kernel32.dll"' "IsWow64Process") && IsWow64Process(GetCurrentProcess()' out isWow64) && isWow64) " is 124.
Long Statement,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,_evaluate,The length of the statement  "                string script = String.Format("function {0}() {{ return JSON.stringify(({1})({2})); }}"' guid' function' String.Join("'"' input)); " is 130.
Long Statement,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,DocumentCompleted,The length of the statement  "                // @see http://stackoverflow.com/questions/18368778/getting-html-body-content-in-winforms-webbrowser-after-body-onload-event-execute/18370524#18370524 " is 150.
Long Statement,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,BeforeNavigate2,The length of the statement  "                // @see https://github.com/ariya/phantomjs/wiki/API-Reference-WebPage/e17c0dd8a89831251efc9d79b887fae7d0f73f2c#onnavigationrequested " is 132.
Long Statement,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCookies,The length of the statement  "            INTERNET_CACHE_ENTRY_INFOA internetCacheEntryInfoa = (INTERNET_CACHE_ENTRY_INFOA)Marshal.PtrToStructure(num4' typeof(INTERNET_CACHE_ENTRY_INFOA)); " is 146.
Long Statement,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCookies,The length of the statement  "            if (WININETCACHEENTRYTYPE.COOKIE_CACHE_ENTRY == (internetCacheEntryInfoa.CacheEntryType & WININETCACHEENTRYTYPE.COOKIE_CACHE_ENTRY)) " is 132.
Long Statement,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCache,The length of the statement  "                IntPtr firstUrlCacheEntryEx1 = FindFirstUrlCacheEntryEx((string)null' 0' WININETCACHEENTRYTYPE.ALL' 0L' IntPtr.Zero' ref num1' IntPtr.Zero' IntPtr.Zero' IntPtr.Zero); " is 166.
Long Statement,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCache,The length of the statement  "                IntPtr firstUrlCacheEntryEx2 = FindFirstUrlCacheEntryEx((string)null' 0' WININETCACHEENTRYTYPE.ALL' 0L' num4' ref num1' IntPtr.Zero' IntPtr.Zero' IntPtr.Zero); " is 159.
Long Statement,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCache,The length of the statement  "                    INTERNET_CACHE_ENTRY_INFOA internetCacheEntryInfoa = (INTERNET_CACHE_ENTRY_INFOA)Marshal.PtrToStructure(num4' typeof(INTERNET_CACHE_ENTRY_INFOA)); " is 146.
Long Statement,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCache,The length of the statement  "                    if (WININETCACHEENTRYTYPE.COOKIE_CACHE_ENTRY != (internetCacheEntryInfoa.CacheEntryType & WININETCACHEENTRYTYPE.COOKIE_CACHE_ENTRY)) " is 132.
Long Statement,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCache,The length of the statement  "                    nextUrlCacheEntryEx = FindNextUrlCacheEntryEx(firstUrlCacheEntryEx2' num4' ref num1' IntPtr.Zero' IntPtr.Zero' IntPtr.Zero); " is 124.
Long Statement,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCache,The length of the statement  "                            nextUrlCacheEntryEx = FindNextUrlCacheEntryEx(firstUrlCacheEntryEx2' num4' ref num1' IntPtr.Zero' IntPtr.Zero' IntPtr.Zero); " is 124.
Long Statement,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The length of the statement  "                Console.Error.WriteLine(String.Format("Unrecognized IE Version \"{0}\". Choose from \"IE7\"' \"IE8\"' \"IE9\"' \"IE10\" or \"IE11\"."' ieVersion)); " is 147.
Long Statement,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,GetImage,The length of the statement  "                    viewObject.Draw(1' -1' IntPtr.Zero' IntPtr.Zero' IntPtr.Zero' deviceContextHandle' ref rectangle' IntPtr.Zero' IntPtr.Zero' 0); " is 127.
Long Statement,TrifleJS,Program,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Program.cs,Help,The length of the statement  "            //Console.WriteLine("  --ignore-ssl-errors=[true|false]  Ignores SSL errors (cert expired' invalid etc). Defaults to 'false'."); " is 128.
Long Statement,TrifleJS,Proxy,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Proxy.cs,Set,The length of the statement  "                Utils.TryWriteRegistryKey(defaultIESettingsPath' "ProxyServer"' GetParsedServerInfo()' Microsoft.Win32.RegistryValueKind.String); " is 129.
Long Statement,TrifleJS,Backup,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Proxy.cs,Restore,The length of the statement  "                    Utils.TryWriteRegistryKey(defaultIESettingsPath' "MigrateProxy"' MigrateProxy' Microsoft.Win32.RegistryValueKind.DWord); " is 120.
Long Statement,TrifleJS,Backup,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Proxy.cs,Restore,The length of the statement  "                    Utils.TryWriteRegistryKey(defaultIESettingsPath' "ProxyOverride"' ProxyOverride' Microsoft.Win32.RegistryValueKind.String); " is 123.
Long Statement,TrifleJS,Utils,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Utils.cs,COMToArray,The length of the statement  "            int? length = (int?)(comObject.GetType()).InvokeMember("length"' System.Reflection.BindingFlags.GetProperty' null' comObject' null); " is 132.
Long Statement,TrifleJS.Test.SSL,CertEnroll,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\CertEnroll.cs,Register,The length of the statement  "            if (HttpApi.IsSslRegistered(port)) throw new Exception(String.Format("Port {0} already has SSL certificate for TrifleJS!")); " is 124.
Empty Catch Block,TrifleJS.API,CookieExtensions,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\CookieJar.cs,Save,The method has an empty catch block.
Empty Catch Block,TrifleJS.API,Console,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Console.cs,color,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,Context,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\ChildProcess.cs,kill,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,WebServer,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebServer.cs,ProcessConnections,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,WebServer,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebServer.cs,Remove,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,Response,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebServer.cs,write,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,Response,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebServer.cs,setEncoding,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,FileSystem,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\FileSystem.cs,isReadable,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,FileSystem,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\FileSystem.cs,isWritable,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,BeforeNavigate2,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,_sendEvent,The method has an empty catch block.
Empty Catch Block,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,addCookie,The method has an empty catch block.
Empty Catch Block,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,TryParse,The method has an empty catch block.
Empty Catch Block,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,ResolveLink,The method has an empty catch block.
Empty Catch Block,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,CreateLink,The method has an empty catch block.
Empty Catch Block,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,ResetBrowserSession,The method has an empty catch block.
Empty Catch Block,TrifleJS,Extensions,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Extensions.cs,Get,The method has an empty catch block.
Empty Catch Block,TrifleJS,Extensions,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Extensions.cs,GetElementFromPoint,The method has an empty catch block.
Empty Catch Block,TrifleJS,Utils,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Utils.cs,TryReadRegistryKey,The method has an empty catch block.
Empty Catch Block,TrifleJS.Test.SSL,CertEnroll,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\CertEnroll.cs,Generate,The method has an empty catch block.
Empty Catch Block,TrifleJS.Test.SSL,HttpApi,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,IsSslRegistered,The method has an empty catch block.
Magic Number,TrifleJS.API.Modules,WebServer,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebServer.cs,_listen,The following statement contains a magic number: Trifle.Wait(10);
Magic Number,TrifleJS.API.Modules,Response,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebServer.cs,write,The following statement contains a magic number: text.Length % 4 == 0
Magic Number,TrifleJS.API.Modules,Response,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebServer.cs,closeGracefully,The following statement contains a magic number: this.response.StatusCode = 200;
Magic Number,TrifleJS.API.Modules,FileSystem,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\FileSystem.cs,isWritable,The following statement contains a magic number: string file = new FileInfo(path + separator + Guid.NewGuid().ToString().Substring(0' 6)).FullName;
Magic Number,TrifleJS.API.Modules,FileSystem,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\FileSystem.cs,read,The following statement contains a magic number: i < 512 && i < content.Length
Magic Number,TrifleJS.API.Modules,System,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\System.cs,GetArchitecture,The following statement contains a magic number: IntPtr.Size == 8
Magic Number,TrifleJS.API.Modules,System,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\System.cs,GetVersion,The following statement contains a magic number: switch (vs.Minor)                  {                      case 0:                          return "95";                      case 10:                          return "98";                      case 90:                          return "me";                      default:                          break;                  }
Magic Number,TrifleJS.API.Modules,System,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\System.cs,GetVersion,The following statement contains a magic number: switch (vs.Minor)                  {                      case 0:                          return "95";                      case 10:                          return "98";                      case 90:                          return "me";                      default:                          break;                  }
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,WebPage,The following statement contains a magic number: this.browser.Size = new Size(400' 300);
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,WebPage,The following statement contains a magic number: this.browser.Size = new Size(400' 300);
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,BeforeNavigate2,The following statement contains a magic number: switch ((int)Flags) {                           case 64:                              type = "LinkClicked";                              break;                          case 256:                              type = "Other";                              break;                          case 320:                              if (type != "Reload")                                  type = "BackOrForward";                              break;                          default:                              if (PostData != null)                                  type = "FormSubmitted";                              break;                      }
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,BeforeNavigate2,The following statement contains a magic number: switch ((int)Flags) {                           case 64:                              type = "LinkClicked";                              break;                          case 256:                              type = "Other";                              break;                          case 320:                              if (type != "Reload")                                  type = "BackOrForward";                              break;                          default:                              if (PostData != null)                                  type = "FormSubmitted";                              break;                      }
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,BeforeNavigate2,The following statement contains a magic number: switch ((int)Flags) {                           case 64:                              type = "LinkClicked";                              break;                          case 256:                              type = "Other";                              break;                          case 320:                              if (type != "Reload")                                  type = "BackOrForward";                              break;                          default:                              if (PostData != null)                                  type = "FormSubmitted";                              break;                      }
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,goBack,The following statement contains a magic number: Trifle.Wait(50);
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,goForward,The following statement contains a magic number: Trifle.Wait(50);
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,go,The following statement contains a magic number: Trifle.Wait(50);
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,reload,The following statement contains a magic number: Trifle.Wait(50);
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,stop,The following statement contains a magic number: Trifle.Wait(50);
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,_sendEvent,The following statement contains a magic number: switch (type)                  {                      // Mouse events                      case "click":                      case "mousedown":                      case "mouseup":                      case "mousemove":                      case "mousedoubleclick":                          if (args != null)                          {                              switch (args.Length)                              {                                  case 1:                                      // Invoke mouse event by CSS selector (first match)                                      foreach (HtmlElement result in browser.Document.GetElementFromSelector(args[0] as string)) {                                          element = result;                                          break;                                      }                                      break;                                  case 2:                                      // Invoke mouse event using X/Y coordinates                                      element = browser.Document.GetElementFromPoint(args[0]' args[1]);                                      break;                              }                              // Nothing found?                              // Use document body                              if (element == null) element = browser.Document.Body;                              // Invoke mouse event                              element.InvokeMember(type);                          }                          // Clear the event queue                          Program.DoEvents();                          break;                      // Single Key events                      // @see https://msdn.microsoft.com/en-us/library/system.windows.forms.sendkeys.send.aspx                      case "keydown":                      case "keyup":                          if (!browser.Focused) Native.Methods.SetForegroundWindow(browser.Handle);                          if (args != null && args.Length > 0)                          {                              string keys = args[0] as string;                              if (!String.IsNullOrEmpty(keys))                                  SendKeys.Send(keys.Substring(0' 1));                              else                                   // Assume keycode                                  SendKeys.Send(FindKey(args[0]));                          }                          // Clear the event queue                          Program.DoEvents();                          break;                      // Multiple Key events                      case "keypress":                          if (args != null && args.Length > 0) {                              if (args.Length > 4) {                                  modifier = args[4];                              }                              string keys = args[0] as string;                              if (!String.IsNullOrEmpty(keys))                              {                                  // Loop through individual key events                                  foreach (char c in keys)                                  {                                      _sendEvent("keydown"' new object[] { c' modifier });                                      _sendEvent("keyup"' new object[] { c' modifier });                                  }                              }                              else                              {                                  // Or try using a charcode                                  try                                  {                                      string key = FindKey(args[0]);                                      if (!String.IsNullOrEmpty(key))                                      {                                          _sendEvent("keydown"' new object[] { key' modifier });                                          _sendEvent("keyup"' new object[] { key' modifier });                                      }                                  }                                  catch { }                              }                          }                          break;                  }
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,_sendEvent,The following statement contains a magic number: switch (type)                  {                      // Mouse events                      case "click":                      case "mousedown":                      case "mouseup":                      case "mousemove":                      case "mousedoubleclick":                          if (args != null)                          {                              switch (args.Length)                              {                                  case 1:                                      // Invoke mouse event by CSS selector (first match)                                      foreach (HtmlElement result in browser.Document.GetElementFromSelector(args[0] as string)) {                                          element = result;                                          break;                                      }                                      break;                                  case 2:                                      // Invoke mouse event using X/Y coordinates                                      element = browser.Document.GetElementFromPoint(args[0]' args[1]);                                      break;                              }                              // Nothing found?                              // Use document body                              if (element == null) element = browser.Document.Body;                              // Invoke mouse event                              element.InvokeMember(type);                          }                          // Clear the event queue                          Program.DoEvents();                          break;                      // Single Key events                      // @see https://msdn.microsoft.com/en-us/library/system.windows.forms.sendkeys.send.aspx                      case "keydown":                      case "keyup":                          if (!browser.Focused) Native.Methods.SetForegroundWindow(browser.Handle);                          if (args != null && args.Length > 0)                          {                              string keys = args[0] as string;                              if (!String.IsNullOrEmpty(keys))                                  SendKeys.Send(keys.Substring(0' 1));                              else                                   // Assume keycode                                  SendKeys.Send(FindKey(args[0]));                          }                          // Clear the event queue                          Program.DoEvents();                          break;                      // Multiple Key events                      case "keypress":                          if (args != null && args.Length > 0) {                              if (args.Length > 4) {                                  modifier = args[4];                              }                              string keys = args[0] as string;                              if (!String.IsNullOrEmpty(keys))                              {                                  // Loop through individual key events                                  foreach (char c in keys)                                  {                                      _sendEvent("keydown"' new object[] { c' modifier });                                      _sendEvent("keyup"' new object[] { c' modifier });                                  }                              }                              else                              {                                  // Or try using a charcode                                  try                                  {                                      string key = FindKey(args[0]);                                      if (!String.IsNullOrEmpty(key))                                      {                                          _sendEvent("keydown"' new object[] { key' modifier });                                          _sendEvent("keyup"' new object[] { key' modifier });                                      }                                  }                                  catch { }                              }                          }                          break;                  }
Magic Number,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,_sendEvent,The following statement contains a magic number: switch (type)                  {                      // Mouse events                      case "click":                      case "mousedown":                      case "mouseup":                      case "mousemove":                      case "mousedoubleclick":                          if (args != null)                          {                              switch (args.Length)                              {                                  case 1:                                      // Invoke mouse event by CSS selector (first match)                                      foreach (HtmlElement result in browser.Document.GetElementFromSelector(args[0] as string)) {                                          element = result;                                          break;                                      }                                      break;                                  case 2:                                      // Invoke mouse event using X/Y coordinates                                      element = browser.Document.GetElementFromPoint(args[0]' args[1]);                                      break;                              }                              // Nothing found?                              // Use document body                              if (element == null) element = browser.Document.Body;                              // Invoke mouse event                              element.InvokeMember(type);                          }                          // Clear the event queue                          Program.DoEvents();                          break;                      // Single Key events                      // @see https://msdn.microsoft.com/en-us/library/system.windows.forms.sendkeys.send.aspx                      case "keydown":                      case "keyup":                          if (!browser.Focused) Native.Methods.SetForegroundWindow(browser.Handle);                          if (args != null && args.Length > 0)                          {                              string keys = args[0] as string;                              if (!String.IsNullOrEmpty(keys))                                  SendKeys.Send(keys.Substring(0' 1));                              else                                   // Assume keycode                                  SendKeys.Send(FindKey(args[0]));                          }                          // Clear the event queue                          Program.DoEvents();                          break;                      // Multiple Key events                      case "keypress":                          if (args != null && args.Length > 0) {                              if (args.Length > 4) {                                  modifier = args[4];                              }                              string keys = args[0] as string;                              if (!String.IsNullOrEmpty(keys))                              {                                  // Loop through individual key events                                  foreach (char c in keys)                                  {                                      _sendEvent("keydown"' new object[] { c' modifier });                                      _sendEvent("keyup"' new object[] { c' modifier });                                  }                              }                              else                              {                                  // Or try using a charcode                                  try                                  {                                      string key = FindKey(args[0]);                                      if (!String.IsNullOrEmpty(key))                                      {                                          _sendEvent("keydown"' new object[] { key' modifier });                                          _sendEvent("keyup"' new object[] { key' modifier });                                      }                                  }                                  catch { }                              }                          }                          break;                  }
Magic Number,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCookies,The following statement contains a magic number: Environment.OSVersion.Version.Major > 5
Magic Number,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCookies,The following statement contains a magic number: FindFirstUrlCacheEntry("cookie:"' IntPtr.Zero' ref num1) == IntPtr.Zero && 259 == Marshal.GetLastWin32Error()
Magic Number,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCookies,The following statement contains a magic number: nextUrlCacheEntry || 259 != Marshal.GetLastWin32Error()
Magic Number,TrifleJS.Native,CacheHelper,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\CacheHelper.cs,ClearCache,The following statement contains a magic number: Environment.OSVersion.Version.Major > 5
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Browser,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Browser.cs,Emulate,The following statement contains a magic number: switch (ieVersion.ToUpper())                  {                      case "EDGE12":                          dWord = 12001; // http://stackoverflow.com/questions/31773359/add-new-microsoft-edge-to-web-browser-control                          break;                      case "IE11":                          dWord = 11001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10":                          dWord = 10001; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE10_STANDARDS":                          dWord = 10000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE9":                          dWord = 9999; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE9_STANDARDS":                          dWord = 9000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE8":                          dWord = 8888; // "Forced" (ie IGNORE_DOCTYPE mode)                          break;                      case "IE8_STANDARDS":                          dWord = 8000; // Default - Enables Auto-downgrade (aka. Doctype "Standards")                          break;                      case "IE7":                          dWord = 7000;                           break;                      default:                          throw new Exception("Incorrect IE version: " + ieVersion);                  }
Magic Number,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,GetUriCookieContainer,The following statement contains a magic number: int datasize = 8192 * 16;
Magic Number,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,GetUriCookieContainer,The following statement contains a magic number: int datasize = 8192 * 16;
Magic Number,TrifleJS,Extensions,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Extensions.cs,ToUnixTimestamp,The following statement contains a magic number: TimeSpan span = (date - new DateTime(1970' 1' 1' 0' 0' 0' 0).ToLocalTime());
Magic Number,TrifleJS,Extensions,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Extensions.cs,ToUnixTimestamp,The following statement contains a magic number: date >= new DateTime(1970' 1' 1' 0' 0' 0' 0)
Magic Number,TrifleJS,Program,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Program.cs,UnitTest,The following statement contains a magic number: Test.SSL.CertEnroll.GenerateAndRegister(8043);
Magic Number,TrifleJS,Program,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Program.cs,UnitTest,The following statement contains a magic number: !Test.SSL.HttpApi.IsSslRegistered(8043)
Magic Number,TrifleJS,Program,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Program.cs,Render,The following statement contains a magic number: browser.Size = new Size(1024' 700);
Magic Number,TrifleJS,Program,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Program.cs,Render,The following statement contains a magic number: browser.Size = new Size(1024' 700);
Magic Number,TrifleJS,Utils,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Utils.cs,NewUid,The following statement contains a magic number: return Guid.NewGuid().ToString().Substring(0' 8);
Magic Number,TrifleJS.Test.SSL,CertEnroll,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\CertEnroll.cs,CreateSelfSignedCertificate,The following statement contains a magic number: privateKey.Length = 2048;
Magic Number,TrifleJS.Test.SSL,HttpApi,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,ReadSockaddrStructure,The following statement contains a magic number: switch (addressFamily)              {                  case AddressFamily.InterNetwork:                      // IP v4 address                      sockAddrSructureSize = 16;                      ipEndPointAny = new IPEndPoint(IPAddress.Any' 0);                      break;                  case AddressFamily.InterNetworkV6:                      // IP v6 address                      sockAddrSructureSize = 28;                      ipEndPointAny = new IPEndPoint(IPAddress.IPv6Any' 0);                      break;                  default:                      throw new ArgumentOutOfRangeException("pSockaddrStructure"' "Unknown address family");              }
Magic Number,TrifleJS.Test.SSL,HttpApi,D:\research\architectureSmells\repos1\sdesalas_trifleJS\test\ssl\HttpApi.cs,ReadSockaddrStructure,The following statement contains a magic number: switch (addressFamily)              {                  case AddressFamily.InterNetwork:                      // IP v4 address                      sockAddrSructureSize = 16;                      ipEndPointAny = new IPEndPoint(IPAddress.Any' 0);                      break;                  case AddressFamily.InterNetworkV6:                      // IP v6 address                      sockAddrSructureSize = 28;                      ipEndPointAny = new IPEndPoint(IPAddress.IPv6Any' 0);                      break;                  default:                      throw new ArgumentOutOfRangeException("pSockaddrStructure"' "Unknown address family");              }
Missing Default,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,_sendEvent,The following switch statement is missing a default case: switch (type)                  {                      // Mouse events                      case "click":                      case "mousedown":                      case "mouseup":                      case "mousemove":                      case "mousedoubleclick":                          if (args != null)                          {                              switch (args.Length)                              {                                  case 1:                                      // Invoke mouse event by CSS selector (first match)                                      foreach (HtmlElement result in browser.Document.GetElementFromSelector(args[0] as string)) {                                          element = result;                                          break;                                      }                                      break;                                  case 2:                                      // Invoke mouse event using X/Y coordinates                                      element = browser.Document.GetElementFromPoint(args[0]' args[1]);                                      break;                              }                              // Nothing found?                              // Use document body                              if (element == null) element = browser.Document.Body;                              // Invoke mouse event                              element.InvokeMember(type);                          }                          // Clear the event queue                          Program.DoEvents();                          break;                      // Single Key events                      // @see https://msdn.microsoft.com/en-us/library/system.windows.forms.sendkeys.send.aspx                      case "keydown":                      case "keyup":                          if (!browser.Focused) Native.Methods.SetForegroundWindow(browser.Handle);                          if (args != null && args.Length > 0)                          {                              string keys = args[0] as string;                              if (!String.IsNullOrEmpty(keys))                                  SendKeys.Send(keys.Substring(0' 1));                              else                                   // Assume keycode                                  SendKeys.Send(FindKey(args[0]));                          }                          // Clear the event queue                          Program.DoEvents();                          break;                      // Multiple Key events                      case "keypress":                          if (args != null && args.Length > 0) {                              if (args.Length > 4) {                                  modifier = args[4];                              }                              string keys = args[0] as string;                              if (!String.IsNullOrEmpty(keys))                              {                                  // Loop through individual key events                                  foreach (char c in keys)                                  {                                      _sendEvent("keydown"' new object[] { c' modifier });                                      _sendEvent("keyup"' new object[] { c' modifier });                                  }                              }                              else                              {                                  // Or try using a charcode                                  try                                  {                                      string key = FindKey(args[0]);                                      if (!String.IsNullOrEmpty(key))                                      {                                          _sendEvent("keydown"' new object[] { key' modifier });                                          _sendEvent("keyup"' new object[] { key' modifier });                                      }                                  }                                  catch { }                              }                          }                          break;                  }
Missing Default,TrifleJS.API.Modules,WebPage,D:\research\architectureSmells\repos1\sdesalas_trifleJS\API\Modules\WebPage.cs,_sendEvent,The following switch statement is missing a default case: switch (args.Length)                              {                                  case 1:                                      // Invoke mouse event by CSS selector (first match)                                      foreach (HtmlElement result in browser.Document.GetElementFromSelector(args[0] as string)) {                                          element = result;                                          break;                                      }                                      break;                                  case 2:                                      // Invoke mouse event using X/Y coordinates                                      element = browser.Document.GetElementFromPoint(args[0]' args[1]);                                      break;                              }
Missing Default,TrifleJS.Native,Methods,D:\research\architectureSmells\repos1\sdesalas_trifleJS\Native\Methods.cs,MsiProductInstalled,The following switch statement is missing a default case: switch (state) {                  case INSTALLSTATE.INSTALLSTATE_DEFAULT:                  case INSTALLSTATE.INSTALLSTATE_LOCAL:                  case INSTALLSTATE.INSTALLSTATE_SOURCE:                      return true;              }
