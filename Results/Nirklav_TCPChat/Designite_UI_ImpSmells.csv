Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,Cyclomatic complexity of the method is 11
Complex Method,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,Cyclomatic complexity of the method is 8
Long Parameter List,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The method has 7 parameters. Parameters: messageId' messageTime' senderId' receiverId' message' isPrivate' room
Long Statement,UI.Dialogs,AboutProgramDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\AboutProgramDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TCPChat;component/dialogs/aboutprogramdialog.xaml"' System.UriKind.Relative); " is 123.
Long Statement,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click); " is 124.
Long Statement,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click); " is 122.
Long Statement,UI.Dialogs,CreateRoomDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TCPChat;component/dialogs/createroomdialog.xaml"' System.UriKind.Relative); " is 121.
Long Statement,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TCPChat;component/dialogs/generatecertificatedialog.xaml"' System.UriKind.Relative); " is 130.
Long Statement,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click); " is 124.
Long Statement,UI.Dialogs,UsersOperationDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\UsersOperationDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TCPChat;component/dialogs/usersoperationdialog.xaml"' System.UriKind.Relative); " is 125.
Long Statement,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click); " is 124.
Long Statement,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click); " is 122.
Long Statement,UI.View,ServerCertificateConfirmDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerCertificateConfirmDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TCPChat;component/dialogs/servercertificateconfirmdialog.xaml"' System.UriKind.Relative); " is 135.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Empty Catch Block,UI.ViewModel,MainViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,UI.ViewModel,MainViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,WindowClosed,The method has an empty catch block.
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,GetRandomColor,The following statement contains a magic number: var r = colorRandom.Next(30' 170);
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,GetRandomColor,The following statement contains a magic number: var r = colorRandom.Next(30' 170);
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,GetRandomColor,The following statement contains a magic number: var g = colorRandom.Next(30' 170);
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,GetRandomColor,The following statement contains a magic number: var g = colorRandom.Next(30' 170);
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,GetRandomColor,The following statement contains a magic number: var b = colorRandom.Next(30' 170);
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,GetRandomColor,The following statement contains a magic number: var b = colorRandom.Next(30' 170);
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,CreateRoomDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RoomNameTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.VoiceRoomCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:                            #line 53 "..\..\..\Dialogs\CreateRoomDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:                            #line 59 "..\..\..\Dialogs\CreateRoomDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,CreateRoomDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RoomNameTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.VoiceRoomCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:                            #line 53 "..\..\..\Dialogs\CreateRoomDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:                            #line 59 "..\..\..\Dialogs\CreateRoomDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,CreateRoomDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RoomNameTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.VoiceRoomCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:                            #line 53 "..\..\..\Dialogs\CreateRoomDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:                            #line 59 "..\..\..\Dialogs\CreateRoomDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Create_Click,The following statement contains a magic number: var to = DateTime.UtcNow.AddYears(4);
Magic Number,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SubjectLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.SubjectField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 4:              this.CheckPasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 6:                            #line 87 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 7:                            #line 100 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Create_Click);                            #line default              #line hidden              return;              case 8:                            #line 107 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SubjectLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.SubjectField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 4:              this.CheckPasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 6:                            #line 87 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 7:                            #line 100 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Create_Click);                            #line default              #line hidden              return;              case 8:                            #line 107 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SubjectLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.SubjectField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 4:              this.CheckPasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 6:                            #line 87 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 7:                            #line 100 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Create_Click);                            #line default              #line hidden              return;              case 8:                            #line 107 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SubjectLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.SubjectField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 4:              this.CheckPasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 6:                            #line 87 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 7:                            #line 100 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Create_Click);                            #line default              #line hidden              return;              case 8:                            #line 107 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SubjectLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.SubjectField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 4:              this.CheckPasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 6:                            #line 87 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 7:                            #line 100 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Create_Click);                            #line default              #line hidden              return;              case 8:                            #line 107 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SubjectLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.SubjectField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 4:              this.CheckPasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 6:                            #line 87 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 7:                            #line 100 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Create_Click);                            #line default              #line hidden              return;              case 8:                            #line 107 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SubjectLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.SubjectField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 4:              this.CheckPasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 6:                            #line 87 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 7:                            #line 100 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Create_Click);                            #line default              #line hidden              return;              case 8:                            #line 107 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,UsersOperationDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\UsersOperationDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.UserList = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.OkBtn = ((System.Windows.Controls.Button)(target));                            #line 49 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.OkBtn.Click += new System.Windows.RoutedEventHandler(this.OkBtn_Click);                            #line default              #line hidden              return;              case 3:              this.CancelBtn = ((System.Windows.Controls.Button)(target));                            #line 56 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.CancelBtn.Click += new System.Windows.RoutedEventHandler(this.CancelBtn_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,UsersOperationDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\UsersOperationDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.UserList = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.OkBtn = ((System.Windows.Controls.Button)(target));                            #line 49 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.OkBtn.Click += new System.Windows.RoutedEventHandler(this.OkBtn_Click);                            #line default              #line hidden              return;              case 3:              this.CancelBtn = ((System.Windows.Controls.Button)(target));                            #line 56 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.CancelBtn.Click += new System.Windows.RoutedEventHandler(this.CancelBtn_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 64 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 4:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:                            #line 89 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 6:                            #line 102 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 7:                            #line 109 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 64 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 4:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:                            #line 89 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 6:                            #line 102 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 7:                            #line 109 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 64 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 4:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:                            #line 89 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 6:                            #line 102 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 7:                            #line 109 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 64 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 4:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:                            #line 89 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 6:                            #line 102 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 7:                            #line 109 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 64 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 4:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:                            #line 89 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 6:                            #line 102 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 7:                            #line 109 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 64 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 4:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:                            #line 89 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 6:                            #line 102 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 7:                            #line 109 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Infrastructure,Settings,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings       {         Locale = "en-US"'          Nick = "User"'         NickColor = Color.FromArgb(170' 50' 50)'         RandomColor = true'          FormSize = new Size(380' 470)'         Alerts = true'          ServerAddress = "93.170.186.160:10021"'         TrustedCertificatesPath = "TrustedCertificates"'          ServerStartAddress = "0.0.0.0:10021"'         ServerStartP2PPort = 10022'          RecorderKey = Keys.E'         Frequency = 44100'         Bits = 16       };
Magic Number,UI.Infrastructure,Settings,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings       {         Locale = "en-US"'          Nick = "User"'         NickColor = Color.FromArgb(170' 50' 50)'         RandomColor = true'          FormSize = new Size(380' 470)'         Alerts = true'          ServerAddress = "93.170.186.160:10021"'         TrustedCertificatesPath = "TrustedCertificates"'          ServerStartAddress = "0.0.0.0:10021"'         ServerStartP2PPort = 10022'          RecorderKey = Keys.E'         Frequency = 44100'         Bits = 16       };
Magic Number,UI.Infrastructure,Settings,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings       {         Locale = "en-US"'          Nick = "User"'         NickColor = Color.FromArgb(170' 50' 50)'         RandomColor = true'          FormSize = new Size(380' 470)'         Alerts = true'          ServerAddress = "93.170.186.160:10021"'         TrustedCertificatesPath = "TrustedCertificates"'          ServerStartAddress = "0.0.0.0:10021"'         ServerStartP2PPort = 10022'          RecorderKey = Keys.E'         Frequency = 44100'         Bits = 16       };
Magic Number,UI.Infrastructure,Settings,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings       {         Locale = "en-US"'          Nick = "User"'         NickColor = Color.FromArgb(170' 50' 50)'         RandomColor = true'          FormSize = new Size(380' 470)'         Alerts = true'          ServerAddress = "93.170.186.160:10021"'         TrustedCertificatesPath = "TrustedCertificates"'          ServerStartAddress = "0.0.0.0:10021"'         ServerStartP2PPort = 10022'          RecorderKey = Keys.E'         Frequency = 44100'         Bits = 16       };
Magic Number,UI.Infrastructure,Settings,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings       {         Locale = "en-US"'          Nick = "User"'         NickColor = Color.FromArgb(170' 50' 50)'         RandomColor = true'          FormSize = new Size(380' 470)'         Alerts = true'          ServerAddress = "93.170.186.160:10021"'         TrustedCertificatesPath = "TrustedCertificates"'          ServerStartAddress = "0.0.0.0:10021"'         ServerStartP2PPort = 10022'          RecorderKey = Keys.E'         Frequency = 44100'         Bits = 16       };
Magic Number,UI.Infrastructure,Settings,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings       {         Locale = "en-US"'          Nick = "User"'         NickColor = Color.FromArgb(170' 50' 50)'         RandomColor = true'          FormSize = new Size(380' 470)'         Alerts = true'          ServerAddress = "93.170.186.160:10021"'         TrustedCertificatesPath = "TrustedCertificates"'          ServerStartAddress = "0.0.0.0:10021"'         ServerStartP2PPort = 10022'          RecorderKey = Keys.E'         Frequency = 44100'         Bits = 16       };
Magic Number,UI.Infrastructure,Settings,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings       {         Locale = "en-US"'          Nick = "User"'         NickColor = Color.FromArgb(170' 50' 50)'         RandomColor = true'          FormSize = new Size(380' 470)'         Alerts = true'          ServerAddress = "93.170.186.160:10021"'         TrustedCertificatesPath = "TrustedCertificates"'          ServerStartAddress = "0.0.0.0:10021"'         ServerStartP2PPort = 10022'          RecorderKey = Keys.E'         Frequency = 44100'         Bits = 16       };
Magic Number,UI.Infrastructure,Settings,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings       {         Locale = "en-US"'          Nick = "User"'         NickColor = Color.FromArgb(170' 50' 50)'         RandomColor = true'          FormSize = new Size(380' 470)'         Alerts = true'          ServerAddress = "93.170.186.160:10021"'         TrustedCertificatesPath = "TrustedCertificates"'          ServerStartAddress = "0.0.0.0:10021"'         ServerStartP2PPort = 10022'          RecorderKey = Keys.E'         Frequency = 44100'         Bits = 16       };
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: return Color.FromArgb(255' 170' 50' 50);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: return Color.FromArgb(255' 170' 50' 50);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: return Color.FromArgb(255' 170' 50' 50);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: return Color.FromArgb(255' 170' 50' 50);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: byte b = System.Convert.ToByte(values[2]);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,ConvertBack,The following statement contains a magic number: object[] result = new object[3];
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,ConvertBack,The following statement contains a magic number: result[2] = color.B;
Magic Number,UI.ViewModel,AudioTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: file.Size < 1024
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: size = file.Size / 1024;
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: file.Size >= 1024 && file.Size < 1024 * 1024
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: file.Size >= 1024 && file.Size < 1024 * 1024
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: file.Size >= 1024 && file.Size < 1024 * 1024
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: size = file.Size / (1024 * 1024);
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: size = file.Size / (1024 * 1024);
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: file.Size >= 1024 * 1024
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: file.Size >= 1024 * 1024
Magic Number,UI.ViewModel,MessageViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,ClientDownloadProgress,The following statement contains a magic number: e.Progress < 100
Magic Number,UI.View,ServerCertificateConfirmDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerCertificateConfirmDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 53 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Show_Click);                            #line default              #line hidden              return;              case 2:                            #line 63 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Save_Click);                            #line default              #line hidden              return;              case 3:                            #line 75 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:                            #line 82 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.View,ServerCertificateConfirmDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerCertificateConfirmDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 53 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Show_Click);                            #line default              #line hidden              return;              case 2:                            #line 63 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Save_Click);                            #line default              #line hidden              return;              case 3:                            #line 75 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:                            #line 82 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.View,ServerCertificateConfirmDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerCertificateConfirmDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 53 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Show_Click);                            #line default              #line hidden              return;              case 2:                            #line 63 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Save_Click);                            #line default              #line hidden              return;              case 3:                            #line 75 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:                            #line 82 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.View,MainWindow,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
Magic Number,UI.View,MainWindow,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
Magic Number,UI.View,MainWindow,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
Magic Number,UI.View,MainWindow,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
Missing Default,UI.Dialogs,AboutProgramDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\AboutProgramDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 56 "..\..\..\Dialogs\AboutProgramDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Ok_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,ConnectDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:                            #line 80 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 5:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 6:                            #line 105 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 7:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 9:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 10:                            #line 178 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 11:                            #line 187 "..\..\..\Dialogs\ConnectDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,CreateRoomDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.RoomNameTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.VoiceRoomCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:                            #line 53 "..\..\..\Dialogs\CreateRoomDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:                            #line 59 "..\..\..\Dialogs\CreateRoomDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,GenerateCertificateDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\GenerateCertificateDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.SubjectLabel = ((System.Windows.Controls.Label)(target));              return;              case 2:              this.SubjectField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 4:              this.CheckPasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 6:                            #line 87 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 7:                            #line 100 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Create_Click);                            #line default              #line hidden              return;              case 8:                            #line 107 "..\..\..\Dialogs\GenerateCertificateDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,PostedFilesView,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\View\PostedFilesView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 57 "..\..\..\View\PostedFilesView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Ok_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,UsersOperationDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\UsersOperationDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UserList = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.OkBtn = ((System.Windows.Controls.Button)(target));                            #line 49 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.OkBtn.Click += new System.Windows.RoutedEventHandler(this.OkBtn_Click);                            #line default              #line hidden              return;              case 3:              this.CancelBtn = ((System.Windows.Controls.Button)(target));                            #line 56 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.CancelBtn.Click += new System.Windows.RoutedEventHandler(this.CancelBtn_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,ServerDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ServerAddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.CertificateField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 64 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectCertificatePath_Click);                            #line default              #line hidden              return;              case 4:              this.PasswordField = ((System.Windows.Controls.PasswordBox)(target));              return;              case 5:                            #line 89 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateCertificate_Click);                            #line default              #line hidden              return;              case 6:                            #line 102 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 7:                            #line 109 "..\..\..\Dialogs\ServerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Infrastructure,LocalizerStorage,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Infrastructure\LocalizerStorage.cs,LoadXml,The following switch statement is missing a default case: switch (reader.NodeType)           {             case XmlNodeType.Element:               if (reader.AttributeCount != 2)                 throw new InvalidDataException("xml file malformed");                var key = reader.GetAttribute("key");               var value = reader.GetAttribute("value");               result.Add(key' value);               break;           }
Missing Default,UI.ViewModel,PluginSettingTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\PluginSettingTabViewModel.cs,Load,The following switch statement is missing a default case: switch (SelectedPlugin.Kind)       {         case PluginKindId.Server:           ServerModel.Plugins.LoadPlugin(SelectedPlugin.Name);           break;         case PluginKindId.Client:           ClientModel.Plugins.LoadPlugin(SelectedPlugin.Name);           break;       }
Missing Default,UI.ViewModel,PluginSettingTabViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\PluginSettingTabViewModel.cs,Unload,The following switch statement is missing a default case: switch (SelectedPlugin.Kind)       {         case PluginKindId.Server:           ServerModel.Plugins.UnloadPlugin(SelectedPlugin.Name);           break;         case PluginKindId.Client:           ClientModel.Plugins.UnloadPlugin(SelectedPlugin.Name);           break;       }
Missing Default,UI.ViewModel,MainViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,ClientReceiveMessage,The following switch statement is missing a default case: switch (e.Type)       {         case MessageType.Private:           SelectedRoom.AddPrivateMessage(e.Sender' ClientModel.Client.Id' e.Message);           break;          case MessageType.System:           SelectedRoom.AddSystemMessage(Localizer.Instance.Localize(e.SystemMessage' e.SystemMessageFormat));           break;       }
Missing Default,UI.ViewModel,MainViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,ClientAsyncError,The following switch statement is missing a default case: switch (modelException.Code)         {           case ErrorCode.ApiNotSupported:             ClientModel.Reset();             SelectedRoom.AddSystemMessage(Localizer.Instance.Localize(APINotSupportedKey' modelException.Message));             return;         }
Missing Default,UI.ViewModel,RoomViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\RoomViewModel.cs,ClientReceiveMessage,The following switch statement is missing a default case: switch (e.Type)       {         case MessageType.Common:           AddMessage(e.MessageId' e.Time' e.Sender' e.Message);           break;          case MessageType.File:           AddFileMessage(e.Time' e.Sender' e.FileId);           break;       }
Missing Default,UI.ViewModel,UserViewModel,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\ViewModel\UserViewModel.cs,GetCheckStatus,The following switch statement is missing a default case: switch (certificateStatus)       {         case CertificateStatus.Trusted:           var commonName = user.Certificate.GetNameInfo(X509NameType.SimpleName' false);           var prefix = GenerateCertificateDialog.TcpChatNickPrefix;            var certificateNick = commonName.StartsWith(prefix)             ? commonName.Substring(prefix.Length)             : commonName;            return certificateNick.Equals(_userId.Nick)             ? UserCheckStatus.Checked             : UserCheckStatus.CheckedNotMatch;          case CertificateStatus.SelfSigned:         case CertificateStatus.Untrusted:         case CertificateStatus.Unknown:           return UserCheckStatus.NotChecked;       }
Missing Default,UI.View,ServerCertificateConfirmDialog,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\Dialogs\ServerCertificateConfirmDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 53 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Show_Click);                            #line default              #line hidden              return;              case 2:                            #line 63 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Save_Click);                            #line default              #line hidden              return;              case 3:                            #line 75 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:                            #line 82 "..\..\..\Dialogs\ServerCertificateConfirmDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.View,SettingsView,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\View\SettingsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MainWindow = ((UI.View.SettingsView)(target));              return;              }
Missing Default,UI.View,MainWindow,C:\research\architectureSmells\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
