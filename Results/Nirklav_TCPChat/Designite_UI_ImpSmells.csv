Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The method has 7 parameters. Parameters: messageId' messageTime' senderNick' receiverNick' message' isPrivate' room
Long Statement,UI.Dialogs,AboutProgramDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\AboutProgramDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TCPChat;component/dialogs/aboutprogramdialog.xaml"' System.UriKind.Relative); " is 123.
Long Statement,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Accept_Click,The length of the statement  "      if (string.IsNullOrEmpty(NickField.Text) || string.IsNullOrEmpty(PortField.Text) || string.IsNullOrEmpty(AddressField.Text)) " is 124.
Long Statement,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Accept_Click,The length of the statement  "      Settings.Current.NickColor = Color.FromArgb((int)RedColorSlider.Value' (int)GreenColorSlider.Value' (int)BlueColorSlider.Value); " is 128.
Long Statement,UI.Dialogs,CreateRoomDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TCPChat;component/dialogs/createroomdialog.xaml"' System.UriKind.Relative); " is 121.
Long Statement,UI.Dialogs,UsersOperationDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\UsersOperationDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TCPChat;component/dialogs/usersoperationdialog.xaml"' System.UriKind.Relative); " is 125.
Long Statement,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Accept_Click,The length of the statement  "      Settings.Current.NickColor = Color.FromArgb((int)RedColorSlider.Value' (int)GreenColorSlider.Value' (int)BlueColorSlider.Value); " is 128.
Long Statement,UI.ViewModel,MainViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,InitializeClient,The length of the statement  "        ClientModel.Recorder.SetOptions(Settings.Current.InputAudioDevice' new AudioQuality(1' Settings.Current.Bits' Settings.Current.Frequency)); " is 139.
Long Statement,UI.ViewModel,RoomViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\RoomViewModel.cs,AddPrivateMessage,The length of the statement  "      AddMessage(new MessageViewModel(Room.SpecificMessageId' DateTime.UtcNow' senderNick' receiverNick' message' true' this)); " is 121.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\Nirklav_TCPChat\UI\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Empty Catch Block,UI.ViewModel,MainViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,UI.ViewModel,MainViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,WindowClosed,The method has an empty catch block.
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,ConnectDialog,The following statement contains a magic number: RedColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.R;
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,ConnectDialog,The following statement contains a magic number: RedColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.R;
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,ConnectDialog,The following statement contains a magic number: GreenColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.G;
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,ConnectDialog,The following statement contains a magic number: GreenColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.G;
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,ConnectDialog,The following statement contains a magic number: BlueColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.B;
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,ConnectDialog,The following statement contains a magic number: BlueColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.B;
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 5:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 136 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 8:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 146 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 5:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 136 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 8:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 146 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 5:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 136 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 8:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 146 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 5:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 136 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 8:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 146 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 5:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 136 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 8:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 146 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 5:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 136 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 8:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 146 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 5:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 136 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 8:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 146 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,CreateRoomDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RoomNameTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.VoiceRoomCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 52 "..\..\..\Dialogs\CreateRoomDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 59 "..\..\..\Dialogs\CreateRoomDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,CreateRoomDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RoomNameTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.VoiceRoomCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 52 "..\..\..\Dialogs\CreateRoomDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 59 "..\..\..\Dialogs\CreateRoomDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,CreateRoomDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RoomNameTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.VoiceRoomCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 52 "..\..\..\Dialogs\CreateRoomDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 59 "..\..\..\Dialogs\CreateRoomDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,UsersOperationDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\UsersOperationDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.UserList = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.OkBtn = ((System.Windows.Controls.Button)(target));                            #line 49 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.OkBtn.Click += new System.Windows.RoutedEventHandler(this.OkBtn_Click);                            #line default              #line hidden              return;              case 3:              this.CancelBtn = ((System.Windows.Controls.Button)(target));                            #line 56 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.CancelBtn.Click += new System.Windows.RoutedEventHandler(this.CancelBtn_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,UsersOperationDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\UsersOperationDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.UserList = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.OkBtn = ((System.Windows.Controls.Button)(target));                            #line 49 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.OkBtn.Click += new System.Windows.RoutedEventHandler(this.OkBtn_Click);                            #line default              #line hidden              return;              case 3:              this.CancelBtn = ((System.Windows.Controls.Button)(target));                            #line 56 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.CancelBtn.Click += new System.Windows.RoutedEventHandler(this.CancelBtn_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,ServerDialog,The following statement contains a magic number: RedColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.R;
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,ServerDialog,The following statement contains a magic number: RedColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.R;
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,ServerDialog,The following statement contains a magic number: GreenColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.G;
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,ServerDialog,The following statement contains a magic number: GreenColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.G;
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,ServerDialog,The following statement contains a magic number: BlueColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.B;
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,ServerDialog,The following statement contains a magic number: BlueColorSlider.Value = Settings.Current.RandomColor ? colorRandom.Next(30' 170) : Settings.Current.NickColor.B;
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Magic Number,UI.ViewModel,AudioTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,AudioTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\AudioTabViewModel.cs,AudioTabViewModel,The following statement contains a magic number: InputConfigs = new[]        {          new AudioQuality(1' 8' 22050)'          new AudioQuality(1' 16' 22050)'          new AudioQuality(1' 8' 44100)'          new AudioQuality(1' 16' 44100)        };
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,MessageViewModel,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId);            if (file.Size < 1024)          {            sizeDim = Localizer.Instance.Localize(ByteStrKey);            size = file.Size;          }            if (file.Size >= 1024 && file.Size < 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(KByteStrKey);            size = file.Size / 1024;          }            if (file.Size >= 1024 * 1024)          {            sizeDim = Localizer.Instance.Localize(MByteStrKey);            size = file.Size / (1024 * 1024);          }            Text = file.Name + string.Format(SizeFormat' size' sizeDim);        }
Magic Number,UI.ViewModel,MessageViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MessageViewModel.cs,ClientDownloadProgress,The following statement contains a magic number: using (var client = ClientModel.Get())        {          var file = GetFile(client' fileId.Value);          if (file != null)          {            if (e.Progress < 100)              Progress = e.Progress;            else            {              Progress = 0;              parentRoom.AddSystemMessage(Localizer.Instance.Localize(FileDownloadedKey' file.Name));            }          }        }
Magic Number,UI.Infrastructure,LocalizerStorage,C:\repos\Nirklav_TCPChat\UI\Infrastructure\LocalizerStorage.cs,LoadXml,The following statement contains a magic number: using (var file = File.OpenRead(filePath))        using (var reader = XmlReader.Create(file))        {          reader.MoveToContent(); // To Localization tag            while (reader.Read())          {            switch (reader.NodeType)            {              case XmlNodeType.Element:                if (reader.AttributeCount != 2)                  throw new InvalidDataException("xml file malformed");                  var key = reader.GetAttribute("key");                var value = reader.GetAttribute("value");                result.Add(key' value);                break;            }          }        }
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,Settings,C:\repos\Nirklav_TCPChat\UI\Infrastructure\Settings.cs,GetDefault,The following statement contains a magic number: return new Settings        {          Locale = "en-US"'            Nick = "User"'          NickColor = Color.FromArgb(170' 50' 50)'          RandomColor = true'            FormSize = new Size(380' 470)'          Alerts = true'          Address = "127.0.0.1"'          Port = 10021'          ServicePort = 10022'          StateOfIPv6Protocol = false'            RecorderKey = Keys.E'          Frequency = 44100'          Bits = 16        };
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: if (values.Any(v => v.GetType().FullName == "MS.Internal.NamedObject"))          return Color.FromArgb(255' 170' 50' 50);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: if (values.Any(v => v.GetType().FullName == "MS.Internal.NamedObject"))          return Color.FromArgb(255' 170' 50' 50);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: if (values.Any(v => v.GetType().FullName == "MS.Internal.NamedObject"))          return Color.FromArgb(255' 170' 50' 50);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: if (values.Any(v => v.GetType().FullName == "MS.Internal.NamedObject"))          return Color.FromArgb(255' 170' 50' 50);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,Convert,The following statement contains a magic number: byte b = System.Convert.ToByte(values[2]);
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,ConvertBack,The following statement contains a magic number: object[] result = new object[3];
Magic Number,UI.Infrastructure,RgbToColorConverter,C:\repos\Nirklav_TCPChat\UI\Infrastructure\RgbToColorConverter.cs,ConvertBack,The following statement contains a magic number: result[2] = color.B;
Magic Number,UI.View,MainWindow,C:\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
Magic Number,UI.View,MainWindow,C:\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
Magic Number,UI.View,MainWindow,C:\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
Magic Number,UI.View,MainWindow,C:\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
Missing Default,UI.Dialogs,AboutProgramDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\AboutProgramDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 56 "..\..\..\Dialogs\AboutProgramDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Ok_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,ConnectDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ConnectDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AddressField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 5:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 136 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 8:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 146 "..\..\..\Dialogs\ConnectDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,CreateRoomDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\CreateRoomDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.RoomNameTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.VoiceRoomCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 52 "..\..\..\Dialogs\CreateRoomDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 4:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 59 "..\..\..\Dialogs\CreateRoomDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,PostedFilesView,C:\repos\Nirklav_TCPChat\UI\View\PostedFilesView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 57 "..\..\..\View\PostedFilesView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Ok_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,UsersOperationDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\UsersOperationDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UserList = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.OkBtn = ((System.Windows.Controls.Button)(target));                            #line 49 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.OkBtn.Click += new System.Windows.RoutedEventHandler(this.OkBtn_Click);                            #line default              #line hidden              return;              case 3:              this.CancelBtn = ((System.Windows.Controls.Button)(target));                            #line 56 "..\..\..\Dialogs\UsersOperationDialog.xaml"              this.CancelBtn.Click += new System.Windows.RoutedEventHandler(this.CancelBtn_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.Dialogs,ServerDialog,C:\repos\Nirklav_TCPChat\UI\Dialogs\ServerDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.NickField = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.PortField = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.UsingIPv6RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.UsingIPv4RadBtn = ((System.Windows.Controls.RadioButton)(target));              return;              case 5:              this.RedColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 6:              this.GreenColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 7:              this.BlueColorSlider = ((System.Windows.Controls.Slider)(target));              return;              case 8:              this.Accept = ((System.Windows.Controls.Button)(target));                            #line 138 "..\..\..\Dialogs\ServerDialog.xaml"              this.Accept.Click += new System.Windows.RoutedEventHandler(this.Accept_Click);                            #line default              #line hidden              return;              case 9:              this.Cancel = ((System.Windows.Controls.Button)(target));                            #line 145 "..\..\..\Dialogs\ServerDialog.xaml"              this.Cancel.Click += new System.Windows.RoutedEventHandler(this.Cancel_Click);                            #line default              #line hidden              return;              }
Missing Default,UI.ViewModel,PluginSettingTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\PluginSettingTabViewModel.cs,Load,The following switch statement is missing a default case: switch (SelectedPlugin.Kind)        {          case PluginKindId.Server:            ServerModel.Plugins.LoadPlugin(SelectedPlugin.Name);            break;          case PluginKindId.Client:            ClientModel.Plugins.LoadPlugin(SelectedPlugin.Name);            break;        }
Missing Default,UI.ViewModel,PluginSettingTabViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\PluginSettingTabViewModel.cs,Unload,The following switch statement is missing a default case: switch (SelectedPlugin.Kind)        {          case PluginKindId.Server:            ServerModel.Plugins.UnloadPlugin(SelectedPlugin.Name);            break;          case PluginKindId.Client:            ClientModel.Plugins.UnloadPlugin(SelectedPlugin.Name);            break;        }
Missing Default,UI.ViewModel,MainViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,ClientReceiveMessage,The following switch statement is missing a default case: switch (e.Type)        {          case MessageType.Private:            SelectedRoom.AddPrivateMessage(e.Sender' ClientModel.Client.Id' e.Message);            break;            case MessageType.System:            SelectedRoom.AddSystemMessage(Localizer.Instance.Localize(e.SystemMessage' e.SystemMessageFormat));            break;        }
Missing Default,UI.ViewModel,MainViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\MainViewModel.cs,ClientAsyncError,The following switch statement is missing a default case: switch (modelException.Code)          {            case ErrorCode.ApiNotSupported:              ClientModel.Reset();              SelectedRoom.AddSystemMessage(Localizer.Instance.Localize(APINotSupportedKey' modelException.Message));              return;          }
Missing Default,UI.ViewModel,RoomViewModel,C:\repos\Nirklav_TCPChat\UI\ViewModel\RoomViewModel.cs,ClientReceiveMessage,The following switch statement is missing a default case: switch (e.Type)        {          case MessageType.Common:            AddMessage(e.MessageId' e.Time' e.Sender' e.Message);            break;            case MessageType.File:            AddFileMessage(e.Time' e.Sender' e.FileId);            break;        }
Missing Default,UI.Infrastructure,LocalizerStorage,C:\repos\Nirklav_TCPChat\UI\Infrastructure\LocalizerStorage.cs,LoadXml,The following switch statement is missing a default case: switch (reader.NodeType)            {              case XmlNodeType.Element:                if (reader.AttributeCount != 2)                  throw new InvalidDataException("xml file malformed");                  var key = reader.GetAttribute("key");                var value = reader.GetAttribute("value");                result.Add(key' value);                break;            }
Missing Default,UI.View,SettingsView,C:\repos\Nirklav_TCPChat\UI\View\SettingsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MainWindow = ((UI.View.SettingsView)(target));              return;              }
Missing Default,UI.View,MainWindow,C:\repos\Nirklav_TCPChat\UI\View\MainView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.mainWindow = ((UI.View.MainWindow)(target));              return;              case 2:              this.ChatToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 3:              this.EnableServer = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.Connect = ((System.Windows.Controls.Button)(target));              return;              case 5:              this.ChatRooms = ((System.Windows.Controls.TabControl)(target));              return;              }
