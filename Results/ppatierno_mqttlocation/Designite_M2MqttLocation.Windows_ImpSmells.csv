Implementation smell,Namespace,Class,File,Method,Description
Long Statement,M2MqttLocation.Services,GeoServiceBase,C:\repos\ppatierno_mqttlocation\M2MqttLocation\M2MqttLocation.Shared\Services\GeoServiceBase.cs,Start,The length of the statement  "	if ((geoLocator.LocationStatus != PositionStatus.NotAvailable) && (geoLocator.LocationStatus != PositionStatus.Disabled)) { " is 123.
Long Statement,M2MqttLocation.Services,HttpGeoService,C:\repos\ppatierno_mqttlocation\M2MqttLocation\M2MqttLocation.Shared\Services\HttpGeoService.cs,PublishLocation,The length of the statement  "	string location = String.Format (PUBLISH_LOCATION_JSON_FORMAT' position.Coordinate.Latitude' position.Coordinate.Longitude); " is 124.
Long Statement,M2MqttLocation.Services,HttpGeoService,C:\repos\ppatierno_mqttlocation\M2MqttLocation\M2MqttLocation.Shared\Services\HttpGeoService.cs,PublishGeofence,The length of the statement  "	string geofence = String.Format (PUBLISH_GEOFENCE_JSON_FORMAT' position.Coordinate.Latitude' position.Coordinate.Longitude' (state == GeofenceState.Entered)); " is 158.
Long Statement,M2MqttLocation.Services,MqttGeoService,C:\repos\ppatierno_mqttlocation\M2MqttLocation\M2MqttLocation.Shared\Services\MqttGeoService.cs,PublishLocation,The length of the statement  "	string location = String.Format (PUBLISH_LOCATION_JSON_FORMAT' position.Coordinate.Latitude' position.Coordinate.Longitude); " is 124.
Long Statement,M2MqttLocation.Services,MqttGeoService,C:\repos\ppatierno_mqttlocation\M2MqttLocation\M2MqttLocation.Shared\Services\MqttGeoService.cs,PublishGeofence,The length of the statement  "	string geofence = String.Format (PUBLISH_GEOFENCE_JSON_FORMAT' position.Coordinate.Latitude' position.Coordinate.Longitude' (state == GeofenceState.Entered)); " is 158.
Missing Default,M2MqttLocation.Services,GeoServiceBase,C:\repos\ppatierno_mqttlocation\M2MqttLocation\M2MqttLocation.Shared\Services\GeoServiceBase.cs,geoLocator_StatusChanged,The following switch statement is missing a default case: switch (args.Status) {  case PositionStatus.NotAvailable:  case PositionStatus.NotInitialized:  case PositionStatus.Initializing:  case PositionStatus.NoData:  case PositionStatus.Ready:  case PositionStatus.Disabled:  	break;  }  
