Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DeviceProvisioningUtility,SharedAccessSignatureBuilder,D:\research\architectureSmells\repos\xamarin_mini-hacks\azure-iot-smart-coffee\mobile\DeviceProvisioningUtility\SasTokenGenerator.cs,BuildSignature,The length of the statement  "			// SharedAccessSignature sr=ENCODED(dh://myiothub.azure-devices.net/a/b/c?myvalue1=a)&sig=<Signature>&se=<ExpiresOnValue>[&skn=<KeyName>] " is 137.
Magic Number,DeviceProvisioningUtility,MainClass,D:\research\architectureSmells\repos\xamarin_mini-hacks\azure-iot-smart-coffee\mobile\DeviceProvisioningUtility\Program.cs,Main,The following statement contains a magic number: var signature = new SharedAccessSignatureBuilder()  			{  				KeyName = policyName'  				Key = policyKey'  				Target = iotHubUrl'  				TimeToLive = TimeSpan.FromDays(365)  			}.ToSignature();
Magic Number,DeviceProvisioningUtility,SharedAccessSignatureBuilder,D:\research\architectureSmells\repos\xamarin_mini-hacks\azure-iot-smart-coffee\mobile\DeviceProvisioningUtility\SasTokenGenerator.cs,SharedAccessSignatureBuilder,The following statement contains a magic number: this.TimeToLive = TimeSpan.FromMinutes(20);
Magic Number,DeviceProvisioningUtility,SharedAccessSignatureBuilder,D:\research\architectureSmells\repos\xamarin_mini-hacks\azure-iot-smart-coffee\mobile\DeviceProvisioningUtility\SasTokenGenerator.cs,BuildExpiresOn,The following statement contains a magic number: TimeSpan secondsFromBaseTime = expiresOn.Subtract(new DateTime(1970' 1' 1' 0' 0' 0' 0));
