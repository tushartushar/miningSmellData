Implementation smell,Namespace,Class,File,Method,Description
Long Method,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The method has 139 lines of code.
Long Method,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The method has 145 lines of code.
Long Method,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The method has 129 lines of code.
Long Method,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The method has 137 lines of code.
Long Statement,EvolveApp.ViewModels,ScanDeviceViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\ScanDeviceViewModel.cs,GetDevice,The length of the statement  "			//	Application.Current.MainPage.DisplayAlert("Uh Oh"' $"Someone already has this device claimed' can you please ask a Xamarin to reset {device}"' "Will do"); " is 157.
Long Statement,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The length of the statement  "				heightConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => p.Height - v.Y - v.Height - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 10) " is 152.
Long Statement,EvolveApp.Helpers,InternetButtonHelper,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Helpers\InternetButtonHelper.cs,CheckDeviceId,The length of the statement  "			if (id == Olive || id == Charlie || id == Kirby || id == Whiskey || id == Anarkali || id == Snow || id == Gizmo || id == Fempto) " is 128.
Long Statement,EvolveApp.Helpers,InternetButtonHelper,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Helpers\InternetButtonHelper.cs,GetAppDescription,The length of the statement  "					return "This app is a throwback to the classic Simon Says. The mobile interaction provides a controller on your phone to send moves to the device or use the buttons firectly on the device for moves. "; " is 201.
Long Statement,EvolveApp.Helpers,InternetButtonHelper,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Helpers\InternetButtonHelper.cs,GetAppDescription,The length of the statement  "					return "Press the buttons on the device to see how the LED lights will follow the closest path to the button you pressed. This app does not have a mobile interaction. Try Simon Says or RGB LED Picker for a mobile interaction."; " is 227.
Long Statement,EvolveApp.Helpers,InternetButtonHelper,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Helpers\InternetButtonHelper.cs,GetAppDescription,The length of the statement  "					return "Shake the device to see the LED lights change color based on the accelerometer readings. This app does not have a mobile interaction. Try Simon Says or RGB LED Picker for a mobile interaction."; " is 202.
Long Statement,EvolveApp.Helpers,InternetButtonHelper,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Helpers\InternetButtonHelper.cs,GetAppDescription,The length of the statement  "					return "Set the R/G/B values in the mobile interaction and push them to the device. The mobile interaction provides a preview of the RGB color and the device will display the RGB intensities and final color from preview."; " is 222.
Complex Conditional,EvolveApp.Helpers,InternetButtonHelper,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Helpers\InternetButtonHelper.cs,CheckDeviceId,The conditional expression  "id == Olive || id == Charlie || id == Kirby || id == Whiskey || id == Anarkali || id == Snow || id == Gizmo || id == Fempto"  is complex.
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,PerformAction,The following statement contains a magic number: if (!gameRunning)  			{  				//Start game  				gameRunning = true;  				OnPropertyChanged("ActionText");  				OnPropertyChanged("ActionColor");  				await StartGame();  			}  			else {  				var result = await InternetButton.CallFunctionAsync("buttonPress"' playerEntry);                    if (Device.OS == TargetPlatform.iOS || Device.OS == TargetPlatform.Android)                  {                      if (result == "1")                      {                          Device.BeginInvokeOnMainThread(() =>                          {                              var notificator = DependencyService.Get<IToastNotificator>();                              notificator.Notify(ToastNotificationType.Success'                                  $"{InternetButton.Name} Says:"' "You got that one right...."' TimeSpan.FromSeconds(2));                          });                      }                      else if (result == "-1")                      {                          Device.BeginInvokeOnMainThread(() =>                          {                              var notificator = DependencyService.Get<IToastNotificator>();                              notificator.Notify(ToastNotificationType.Warning'                                  $"{InternetButton.Name} Says:"' "Don't interrupt my masterpiece!!!"' TimeSpan.FromSeconds(1));                          });                      }                  }    				ClearPlayerEntry();  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following statement contains a magic number: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,StartGame,The following statement contains a magic number: await Task.Delay(500);
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,StartGame,The following statement contains a magic number: for (var i = 0; i < 10; i++)  			{  				gameId += rand.Next(0' 9);  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,StartGame,The following statement contains a magic number: for (var i = 0; i < 10; i++)  			{  				gameId += rand.Next(0' 9);  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,Winner,The following statement contains a magic number: if (Device.OS == TargetPlatform.iOS || Device.OS == TargetPlatform.Android)              {                  Device.BeginInvokeOnMainThread(() =>                  {                      var notificator = DependencyService.Get<IToastNotificator>();                      notificator.Notify(ToastNotificationType.Success'                          "Winner"' "You beat Simon!!"' TimeSpan.FromSeconds(2));                  });              }
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,Loser,The following statement contains a magic number: if (Device.OS == TargetPlatform.iOS || Device.OS == TargetPlatform.Android)              {                  Device.BeginInvokeOnMainThread(() =>                  {                      var notificator = DependencyService.Get<IToastNotificator>();                      notificator.Notify(ToastNotificationType.Error'                          $"{InternetButton.Name} Says: "' "MWHUAHAHAHA I WIN!!"' TimeSpan.FromSeconds(2));                  });              } else              {                  Device.BeginInvokeOnMainThread(() =>                  {                      Application.Current.MainPage.DisplayAlert($"{InternetButton.Name} Says"' "MWHUAHAHAHA I WIN!!"' "This time...");                  });              }
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,PlayerPressButtonAsync,The following statement contains a magic number: switch (color)  			{  				case "r":  					RedOpacity = 0.5;  					break;  				case "g":  					GreenOpacity = 0.5;  					break;  				case "b":  					BlueOpacity = 0.5;  					break;  				case "y":  					YellowOpacity = 0.5;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,PlayerPressButtonAsync,The following statement contains a magic number: switch (color)  			{  				case "r":  					RedOpacity = 0.5;  					break;  				case "g":  					GreenOpacity = 0.5;  					break;  				case "b":  					BlueOpacity = 0.5;  					break;  				case "y":  					YellowOpacity = 0.5;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,PlayerPressButtonAsync,The following statement contains a magic number: switch (color)  			{  				case "r":  					RedOpacity = 0.5;  					break;  				case "g":  					GreenOpacity = 0.5;  					break;  				case "b":  					BlueOpacity = 0.5;  					break;  				case "y":  					YellowOpacity = 0.5;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,PlayerPressButtonAsync,The following statement contains a magic number: switch (color)  			{  				case "r":  					RedOpacity = 0.5;  					break;  				case "g":  					GreenOpacity = 0.5;  					break;  				case "b":  					BlueOpacity = 0.5;  					break;  				case "y":  					YellowOpacity = 0.5;  					break;  			}
Magic Number,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,PlayerPressButtonAsync,The following statement contains a magic number: await Task.Delay(150);
Magic Number,EvolveApp.ViewModels,DeviceLandingPageViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\DeviceLandingPageViewModel.cs,WaitForFlashCompleteAsync,The following statement contains a magic number: await Task.Delay(10000);
Magic Number,EvolveApp.ViewModels,DeviceLandingPageViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\DeviceLandingPageViewModel.cs,WaitForFlashCompleteAsync,The following statement contains a magic number: while (!flashComplete)  			{  				var currentApp = await Device.GetVariableAsync("currentApp");    				if (currentApp != null)  					if (currentApp.Result != null)  						flashComplete = true;    				counter++;    				if (counter >= 20)  					return false;  			}
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: var indicator = new ActivityIndicator { HeightRequest = Device.OnPlatform(50' 30' 50) };
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: var indicator = new ActivityIndicator { HeightRequest = Device.OnPlatform(50' 30' 50) };
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: var indicator = new ActivityIndicator { HeightRequest = Device.OnPlatform(50' 30' 50) };
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: var colorPreview = new BoxView { HeightRequest = 100 };
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: var redSlider = new Slider { StyleId = "redSlider"' Minimum = 0' Maximum = 255' Value = 0 };
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: var greenSlider = new Slider { StyleId = "greenSlider"' Minimum = 0' Maximum = 255' Value = 0 };
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: var blueSlider = new Slider { StyleId = "blueSlider"' Minimum = 0' Maximum = 255' Value = 0 };
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: Func<RelativeLayout' View' double> layoutAfterPrevious = (p' v) => Device.OnPlatform(                                                                                      v.Y + v.Height + 5'                                                                                      v.Y + v.Height + 5'                                                                                      v.Y + v.Height + 2);
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: Func<RelativeLayout' View' double> layoutAfterPrevious = (p' v) => Device.OnPlatform(                                                                                      v.Y + v.Height + 5'                                                                                      v.Y + v.Height + 5'                                                                                      v.Y + v.Height + 2);
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: Func<RelativeLayout' View' double> layoutAfterPrevious = (p' v) => Device.OnPlatform(                                                                                      v.Y + v.Height + 5'                                                                                      v.Y + v.Height + 5'                                                                                      v.Y + v.Height + 2);
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(previewLabel'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.Constant(10)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(colorPreview'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(previewLabel' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(AppSettings.ButtonHeight * 2)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(colorPreview'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(previewLabel' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(AppSettings.ButtonHeight * 2)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(redSlider'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(rLabel' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(greenSlider'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(gLabel' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(blueSlider'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(bLabel' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(indicator'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(blueSlider' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(Device.OnPlatform(50'50'25))              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(indicator'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(blueSlider' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(Device.OnPlatform(50'50'25))              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(indicator'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(blueSlider' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(Device.OnPlatform(50'50'25))              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(indicator'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(blueSlider' layoutAfterPrevious)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(Device.OnPlatform(50'50'25))              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(lightShow'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToParent(p => p.Height - AppSettings.Margin - AppSettings.ButtonHeight)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(AppSettings.ButtonHeight)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(push'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(lightShow' (p' v) => v.Y - AppSettings.ButtonHeight - 10)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(AppSettings.ButtonHeight)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: relativeLayout.Children.Add(push'                  xConstraint: Constraint.Constant(AppSettings.Margin)'                  yConstraint: Constraint.RelativeToView(lightShow' (p' v) => v.Y - AppSettings.ButtonHeight - 10)'                  widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'                  heightConstraint: Constraint.Constant(AppSettings.ButtonHeight)              );
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: if (Device.OS == TargetPlatform.iOS)  			{  				push.FontFamily = "SegoeUI-Light";  				push.FontSize = 16;  				push.TextColor = Color.FromHex("#ffffff");    				lightShow.FontFamily = "SegoeUI-Light";  				lightShow.FontSize = 16;  				lightShow.TextColor = Color.FromHex("#ffffff");  			}
Magic Number,EvolveApp,ChangeLEDColorPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ChangeLEDColorPage.cs,ChangeLEDColorPage,The following statement contains a magic number: if (Device.OS == TargetPlatform.iOS)  			{  				push.FontFamily = "SegoeUI-Light";  				push.FontSize = 16;  				push.TextColor = Color.FromHex("#ffffff");    				lightShow.FontFamily = "SegoeUI-Light";  				lightShow.FontSize = 16;  				lightShow.TextColor = Color.FromHex("#ffffff");  			}
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,CreateGlobalChildren,The following statement contains a magic number: logo = new Image { HeightRequest = 30' Aspect = Aspect.AspectFit };
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				logo'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.Constant(250)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				logo'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.Constant(250)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				loginLabel'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.Constant(2 * AppSettings.Margin)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				loginLabel'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.Constant(2 * AppSettings.Margin)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				loginEntry'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(loginLabel' (p' v) => v.Height + v.Y + AppSettings.Margin)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				passwordEntry'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(loginEntry' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				passwordEntry'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(loginEntry' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => v.Y + v.Height + 5)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)'  				heightConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => p.Height - v.Y - v.Height - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 10)    			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => v.Y + v.Height + 5)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)'  				heightConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => p.Height - v.Y - v.Height - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 10)    			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => v.Y + v.Height + 5)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)'  				heightConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => p.Height - v.Y - v.Height - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 10)    			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => v.Y + v.Height + 5)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)'  				heightConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => p.Height - v.Y - v.Height - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 10)    			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				loginButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(newUserSignUpButton' (p' v) => v.Y - AppSettings.ButtonHeight - 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				loginButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(newUserSignUpButton' (p' v) => v.Y - AppSettings.ButtonHeight - 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,AddConstraintsToChildren,The following statement contains a magic number: layout.Children.Add(  				newUserSignUpButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToParent(p => p.Height - AppSettings.Margin - AppSettings.ButtonHeight)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,OnAppearing,The following statement contains a magic number: if (!isInitialized)  			{  				await Task.Delay(500);  				await logo.TranslateTo(0' -(layout.Height - logo.Y)' 250);    				loginLabel.FadeTo(1' fadeTime);  				newUserSignUpButton.FadeTo(1' fadeTime);  				loginEntry.FadeTo(1' fadeTime);  				passwordEntry.FadeTo(1' fadeTime);  				await loginButton.FadeTo(1' fadeTime);    				isInitialized = true;  				RunAfterAnimation();  			}
Magic Number,EvolveApp,ReusableLoginPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\ReusableLoginPage.cs,OnAppearing,The following statement contains a magic number: if (!isInitialized)  			{  				await Task.Delay(500);  				await logo.TranslateTo(0' -(layout.Height - logo.Y)' 250);    				loginLabel.FadeTo(1' fadeTime);  				newUserSignUpButton.FadeTo(1' fadeTime);  				loginEntry.FadeTo(1' fadeTime);  				passwordEntry.FadeTo(1' fadeTime);  				await loginButton.FadeTo(1' fadeTime);    				isInitialized = true;  				RunAfterAnimation();  			}
Magic Number,EvolveApp,LoginEntry,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\LoginEntry.cs,LoginEntry,The following statement contains a magic number: HeightRequest = 40;
Magic Number,EvolveApp,LoginButton,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\LoginButton.cs,LoginButton,The following statement contains a magic number: FontSize = 18;
Magic Number,EvolveApp,LoginButton,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\LoginButton.cs,LoginButton,The following statement contains a magic number: switch (border)  			{  				case Borders.None:  					break;  				case Borders.Thin:  					BorderRadius = 3;  					BorderColor = Color.White;  					BorderWidth = 1;  					break;  			}
Magic Number,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The following statement contains a magic number: relativeLayout.Children.Add(usernameLabel'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.Constant(AppSettings.Margin)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The following statement contains a magic number: relativeLayout.Children.Add(usernameEntry'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(usernameLabel' (p' v) => v.Y + v.Height + AppSettings.ItemPadding)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The following statement contains a magic number: relativeLayout.Children.Add(passwordLabel'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(usernameEntry' (p' v) => v.Y + v.Height + AppSettings.ItemPadding)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The following statement contains a magic number: relativeLayout.Children.Add(passwordEntry'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(passwordLabel' (p' v) => v.Y + v.Height + AppSettings.ItemPadding)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The following statement contains a magic number: relativeLayout.Children.Add(reEnterPasswordLabel'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(passwordEntry' (p' v) => v.Y + v.Height + AppSettings.ItemPadding)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The following statement contains a magic number: relativeLayout.Children.Add(reEnterPasswordEntry'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(reEnterPasswordLabel' (p' v) => v.Y + v.Height + AppSettings.ItemPadding)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The following statement contains a magic number: relativeLayout.Children.Add(saveUsernameButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToParent(p => p.Height - AppSettings.Margin - AppSettings.ButtonHeight)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)  			);
Magic Number,EvolveApp,NewUserSignUpPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\NewUserSignUpPage.cs,NewUserSignUpPage,The following statement contains a magic number: relativeLayout.Children.Add(indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(reEnterPasswordEntry' (p' v) => v.Y + v.Height)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - 2 * AppSettings.Margin)'  				heightConstraint: Constraint.RelativeToView(reEnterPasswordEntry' (p' v) => p.Height - v.Y - v.Height - AppSettings.Margin - AppSettings.ButtonHeight)  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: var clearSubmission = new Button  			{  				StyleId = "clearMoveButton"'  				Text = "X"'  				FontSize = Device.OnPlatform(10' 8' 10)'  				TextColor = Color.Black'  				FontAttributes = FontAttributes.Bold'  				BorderRadius = 10'  				BackgroundColor = Color.White'  				BorderColor = Color.Black'  				BorderWidth = 1  			};
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: var clearSubmission = new Button  			{  				StyleId = "clearMoveButton"'  				Text = "X"'  				FontSize = Device.OnPlatform(10' 8' 10)'  				TextColor = Color.Black'  				FontAttributes = FontAttributes.Bold'  				BorderRadius = 10'  				BackgroundColor = Color.White'  				BorderColor = Color.Black'  				BorderWidth = 1  			};
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: var clearSubmission = new Button  			{  				StyleId = "clearMoveButton"'  				Text = "X"'  				FontSize = Device.OnPlatform(10' 8' 10)'  				TextColor = Color.Black'  				FontAttributes = FontAttributes.Bold'  				BorderRadius = 10'  				BackgroundColor = Color.White'  				BorderColor = Color.Black'  				BorderWidth = 1  			};
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: var clearSubmission = new Button  			{  				StyleId = "clearMoveButton"'  				Text = "X"'  				FontSize = Device.OnPlatform(10' 8' 10)'  				TextColor = Color.Black'  				FontAttributes = FontAttributes.Bold'  				BorderRadius = 10'  				BackgroundColor = Color.White'  				BorderColor = Color.Black'  				BorderWidth = 1  			};
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: var buttonConstraint = Constraint.RelativeToParent((p) => (p.Width / 2) - AppSettings.Margin - AppSettings.ItemPadding / 2);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: var buttonConstraint = Constraint.RelativeToParent((p) => (p.Width / 2) - AppSettings.Margin - AppSettings.ItemPadding / 2);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(yellow'  				xConstraint: Constraint.RelativeToParent((p) => (p.Width / 2) + AppSettings.ItemPadding / 2)'  				yConstraint: Constraint.Constant(AppSettings.Margin)'  				widthConstraint: buttonConstraint'  				heightConstraint: buttonConstraint  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(yellow'  				xConstraint: Constraint.RelativeToParent((p) => (p.Width / 2) + AppSettings.ItemPadding / 2)'  				yConstraint: Constraint.Constant(AppSettings.Margin)'  				widthConstraint: buttonConstraint'  				heightConstraint: buttonConstraint  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(green'  				xConstraint: Constraint.RelativeToParent((p) => (p.Width / 2) + AppSettings.ItemPadding / 2)'  				yConstraint: Constraint.RelativeToView(yellow' (p' v) => v.Height + v.Y + AppSettings.ItemPadding)'  				widthConstraint: buttonConstraint'  				heightConstraint: buttonConstraint  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(green'  				xConstraint: Constraint.RelativeToParent((p) => (p.Width / 2) + AppSettings.ItemPadding / 2)'  				yConstraint: Constraint.RelativeToView(yellow' (p' v) => v.Height + v.Y + AppSettings.ItemPadding)'  				widthConstraint: buttonConstraint'  				heightConstraint: buttonConstraint  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(lightStack'  				xConstraint: Constraint.Constant(AppSettings.Margin - stackPadding)'  				yConstraint: Constraint.RelativeToView(blue' (p' v) => v.Height + v.Y + AppSettings.ItemPadding * 2)'  				widthConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin * 2 + stackPadding * 2)'  				heightConstraint: Constraint.Constant(25) // TODO calculate the square size based on the width of the view  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(lightStack'  				xConstraint: Constraint.Constant(AppSettings.Margin - stackPadding)'  				yConstraint: Constraint.RelativeToView(blue' (p' v) => v.Height + v.Y + AppSettings.ItemPadding * 2)'  				widthConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin * 2 + stackPadding * 2)'  				heightConstraint: Constraint.Constant(25) // TODO calculate the square size based on the width of the view  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(lightStack'  				xConstraint: Constraint.Constant(AppSettings.Margin - stackPadding)'  				yConstraint: Constraint.RelativeToView(blue' (p' v) => v.Height + v.Y + AppSettings.ItemPadding * 2)'  				widthConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin * 2 + stackPadding * 2)'  				heightConstraint: Constraint.Constant(25) // TODO calculate the square size based on the width of the view  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(lightStack'  				xConstraint: Constraint.Constant(AppSettings.Margin - stackPadding)'  				yConstraint: Constraint.RelativeToView(blue' (p' v) => v.Height + v.Y + AppSettings.ItemPadding * 2)'  				widthConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin * 2 + stackPadding * 2)'  				heightConstraint: Constraint.Constant(25) // TODO calculate the square size based on the width of the view  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(clearSubmission'  				xConstraint: Constraint.RelativeToParent((p) => p.Width - AppSettings.Margin - Device.OnPlatform(10' 15' 15))'  				yConstraint: Constraint.RelativeToView(lightStack' (p' v) => Device.OnPlatform(  																				v.Y - 10'  																				v.Y - 15'  																				v.Y - 15  																			)  				)'  				widthConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))'  				heightConstraint: Constraint.Constant(Device.OnPlatform(25' 30' 30))  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(actionButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToParent(p => p.Height - AppSettings.Margin - AppSettings.ButtonHeight)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.Constant(50)  			);
Magic Number,EvolveApp.Pages,SimonSaysPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\SimonSaysPage.cs,SimonSaysPage,The following statement contains a magic number: layout.Children.Add(actionButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToParent(p => p.Height - AppSettings.Margin - AppSettings.ButtonHeight)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.Constant(50)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: var boxConstraint = Constraint.RelativeToParent(p => p.Width / 2 - AppSettings.Margin - AppSettings.ItemPadding / 2);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: var boxConstraint = Constraint.RelativeToParent(p => p.Width / 2 - AppSettings.Margin - AppSettings.ItemPadding / 2);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(deviceName'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.Constant(Device.OnPlatform(AppSettings.Margin' 10' 10))'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(deviceName'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.Constant(Device.OnPlatform(AppSettings.Margin' 10' 10))'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(deviceName'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.Constant(Device.OnPlatform(AppSettings.Margin' 10' 10))'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(currentAppLabel'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(deviceName' (p' v) => v.Y + v.Height + 5)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(deviceName' (p' v) => v.Height)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(currentAppLabel'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(deviceName' (p' v) => v.Y + v.Height + 5)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(deviceName' (p' v) => v.Height)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(variableWidget'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(currentAppLabel' (p' v) => Device.OnPlatform(  																v.Y + v.Height + 5'  																v.Y + v.Height'  																v.Y + v.Height)  													  )'  				widthConstraint: boxConstraint'  				heightConstraint: boxConstraint  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(functionWidget'  				xConstraint: Constraint.RelativeToParent(p => p.Width / 2 + AppSettings.ItemPadding / 2)'  				yConstraint: Constraint.RelativeToView(variableWidget' (p' v) => v.Y)'  				widthConstraint: boxConstraint'  				heightConstraint: boxConstraint  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(functionWidget'  				xConstraint: Constraint.RelativeToParent(p => p.Width / 2 + AppSettings.ItemPadding / 2)'  				yConstraint: Constraint.RelativeToView(variableWidget' (p' v) => v.Y)'  				widthConstraint: boxConstraint'  				heightConstraint: boxConstraint  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(new ScrollView { Content = appDescription }'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(new ScrollView { Content = appDescription }'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(new ScrollView { Content = appDescription }'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(new ScrollView { Content = appDescription }'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(new ScrollView { Content = appDescription }'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(flashButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToParent(p => p.Height - AppSettings.Margin - AppSettings.ButtonHeight)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.Constant(AppSettings.ButtonHeight)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(interactButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(flashButton' (p' v) => v.Y - AppSettings.ButtonHeight - 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.Constant(AppSettings.ButtonHeight)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(interactButton'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(flashButton' (p' v) => v.Y - AppSettings.ButtonHeight - 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.Constant(AppSettings.ButtonHeight)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Pages,DeviceLandingPage,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Pages\DeviceLandingPage.cs,DeviceLandingPage,The following statement contains a magic number: layout.Children.Add(indicator'  				xConstraint: Constraint.Constant(AppSettings.Margin)'  				yConstraint: Constraint.RelativeToView(functionWidget' (p' v) => v.Y + v.Height + 10)'  				widthConstraint: Constraint.RelativeToParent(p => p.Width - AppSettings.Margin * 2)'  				heightConstraint: Constraint.RelativeToView(functionWidget' (p' v) => p.Height - v.Y - v.Height - 10 - AppSettings.Margin - 2 * AppSettings.ButtonHeight - 20)  			);
Magic Number,EvolveApp.Views.Controls,DashboardWidget,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\DashboardWidget.cs,DashboardWidget,The following statement contains a magic number: Children.Add (WidgetTitle'  				xConstraint: Constraint.Constant (AppSettings.Margin)'  				yConstraint: Constraint.Constant (10)'  				widthConstraint: Constraint.RelativeToParent (p => p.Width - AppSettings.Margin * 2)  			);
Magic Number,EvolveApp.Views.Controls,DashboardWidget,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\DashboardWidget.cs,DashboardWidget,The following statement contains a magic number: Children.Add (WidgetTitle'  				xConstraint: Constraint.Constant (AppSettings.Margin)'  				yConstraint: Constraint.Constant (10)'  				widthConstraint: Constraint.RelativeToParent (p => p.Width - AppSettings.Margin * 2)  			);
Magic Number,EvolveApp.Views.Controls,DashboardWidget,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\DashboardWidget.cs,DashboardWidget,The following statement contains a magic number: Children.Add (WidgetCount'  				xConstraint: Constraint.RelativeToParent (p => (p.Width - getWidgetCountWidth (p)) / 2)'  			    yConstraint: Device.OnPlatform (  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 20)'  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 10)'  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 20)  			   )  			);
Magic Number,EvolveApp.Views.Controls,DashboardWidget,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\DashboardWidget.cs,DashboardWidget,The following statement contains a magic number: Children.Add (WidgetCount'  				xConstraint: Constraint.RelativeToParent (p => (p.Width - getWidgetCountWidth (p)) / 2)'  			    yConstraint: Device.OnPlatform (  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 20)'  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 10)'  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 20)  			   )  			);
Magic Number,EvolveApp.Views.Controls,DashboardWidget,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\DashboardWidget.cs,DashboardWidget,The following statement contains a magic number: Children.Add (WidgetCount'  				xConstraint: Constraint.RelativeToParent (p => (p.Width - getWidgetCountWidth (p)) / 2)'  			    yConstraint: Device.OnPlatform (  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 20)'  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 10)'  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 20)  			   )  			);
Magic Number,EvolveApp.Views.Controls,DashboardWidget,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\DashboardWidget.cs,DashboardWidget,The following statement contains a magic number: Children.Add (WidgetCount'  				xConstraint: Constraint.RelativeToParent (p => (p.Width - getWidgetCountWidth (p)) / 2)'  			    yConstraint: Device.OnPlatform (  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 20)'  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 10)'  				Constraint.RelativeToView (WidgetTitle' (p' v) => v.Y + 20)  			   )  			);
Missing Default,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,SetLightColor,The following switch statement is missing a default case: switch (playerEntry.Length)  			{  				case 1:  					L1 = color;  					OnPropertyChanged("ShowClearButton");  					break;  				case 2:  					L2 = color;  					break;  				case 3:  					L3 = color;  					break;  				case 4:  					L4 = color;  					break;  				case 5:  					L5 = color;  					break;  				case 6:  					L6 = color;  					break;  				case 7:  					L7 = color;  					break;  				case 8:  					L8 = color;  					break;  				case 9:  					L9 = color;  					break;  				case 10:  					L10 = color;  					break;  			}
Missing Default,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,PlayerPressButtonAsync,The following switch statement is missing a default case: switch (color)  			{  				case "r":  					RedOpacity = 0.5;  					break;  				case "g":  					GreenOpacity = 0.5;  					break;  				case "b":  					BlueOpacity = 0.5;  					break;  				case "y":  					YellowOpacity = 0.5;  					break;  			}
Missing Default,EvolveApp.ViewModels,SimonSaysViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\SimonSaysViewModel.cs,PlayerPressButtonAsync,The following switch statement is missing a default case: switch (color)  			{  				case "r":  					RedOpacity = 1;  					colorToDisplay = SimonSaysColors.Red;  					break;  				case "g":  					GreenOpacity = 1;  					colorToDisplay = SimonSaysColors.Green;  					break;  				case "b":  					BlueOpacity = 1;  					colorToDisplay = SimonSaysColors.Blue;  					break;  				case "y":  					YellowOpacity = 1;  					colorToDisplay = SimonSaysColors.Yellow;  					break;  			}
Missing Default,EvolveApp.ViewModels,DeviceLandingPageViewModel,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\ViewModels\DeviceLandingPageViewModel.cs,TryFlashFileAsync,The following switch statement is missing a default case: switch (fileSelected)  			{  				case "RGB LED":  					filename = "rgbled.bin";  					break;  				case "Simon Says":  					filename = "simonsays.bin";  					break;  				case "Follow me LED":  					filename = "followme.bin";  					break;  				case "Shake LED":  					filename = "shakeled.bin";  					break;  			}
Missing Default,EvolveApp,LoginButton,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Views\Controls\LoginButton.cs,LoginButton,The following switch statement is missing a default case: switch (border)  			{  				case Borders.None:  					break;  				case Borders.Thin:  					BorderRadius = 3;  					BorderColor = Color.White;  					BorderWidth = 1;  					break;  			}
Missing Default,EvolveApp.Helpers,InternetButtonHelper,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Helpers\InternetButtonHelper.cs,GetDeviceName,The following switch statement is missing a default case: switch (id)  			{  				case "3d002d000447343233323032":  					return "Olive";  				case "28002b000347343233323032":  					return "Charlie";  				case "3f0020000447343232363230":  					return "Kirby";  				case "20003f000547343232363230":  					return "Whiskey";  				case "35002e001747343338333633":  					return "Anarkali";  				case "2c002c000447343233323032":  					return "Snow";  				case "36002d000447343233323032":  					return "Gizmo";  				case "280021000d47343233323032":  					return "Fempto";  			}
Missing Default,EvolveApp.Helpers,InternetButtonHelper,C:\repos\xamarin_mini-hacks\internet-button\EvolveApp\EvolveApp\EvolveApp\Helpers\InternetButtonHelper.cs,GetAppDescription,The following switch statement is missing a default case: switch (app)  			{  				case "simonsays":  					return "This app is a throwback to the classic Simon Says. The mobile interaction provides a controller on your phone to send moves to the device or use the buttons firectly on the device for moves. ";  					break;  				case "FOLLOWMELED":  					return "Press the buttons on the device to see how the LED lights will follow the closest path to the button you pressed. This app does not have a mobile interaction. Try Simon Says or RGB LED Picker for a mobile interaction.";  				case "SHAKE LED":  					return "Shake the device to see the LED lights change color based on the accelerometer readings. This app does not have a mobile interaction. Try Simon Says or RGB LED Picker for a mobile interaction.";  				case "RGB LED PICKER":  					return "Set the R/G/B values in the mobile interaction and push them to the device. The mobile interaction provides a preview of the RGB color and the device will display the RGB intensities and final color from preview.";  			}
