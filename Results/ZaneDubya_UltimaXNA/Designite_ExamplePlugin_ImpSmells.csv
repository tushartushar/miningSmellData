Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,Cyclomatic complexity of the method is 9
Long Statement,ExamplePlugin,DebugOutputGumpsModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugOutputGumpsModule.cs,OnClickDebugGump,The length of the statement  "                Tracer.Info("Writing all gump textures to /Gumps folder. Progress may be slow. Click Debug:Gumps button again to cancel."); " is 123.
Long Statement,ExamplePlugin,DebugOutputGumpsModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugOutputGumpsModule.cs,OnClickDebugGump,The length of the statement  "                                texture.SaveAsJpeg(new System.IO.FileStream($"Gumps/{i:D6}.jpg"' System.IO.FileMode.Create)' texture.Width' texture.Height); " is 124.
Long Statement,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The length of the statement  "            RenderTarget2D render = new RenderTarget2D(spritebatch.GraphicsDevice' Width + WidthExtra * 2' Height + HeightExtra * 2 + HeightExtra2); " is 136.
Complex Conditional,ExamplePlugin,MapParser,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapParser.cs,CreateSeasonalTileInfo,The conditional expression  "(itemData.IsBackground || itemData.IsFoliage) && !itemData.IsWet && !itemData.IsSurface"  is complex.
Magic Number,ExamplePlugin,DebugShowGumpModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugShowBookModule.cs,OnClickDebugGump,The following statement contains a magic number: Service.Get<UserInterfaceService>().AddControl(new BookGump(book)' 10' 10);
Magic Number,ExamplePlugin,DebugShowGumpModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugShowBookModule.cs,OnClickDebugGump,The following statement contains a magic number: Service.Get<UserInterfaceService>().AddControl(new BookGump(book)' 10' 10);
Magic Number,ExamplePlugin,MapParser,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapParser.cs,ParseMapBlock,The following statement contains a magic number: int countStatics = staticLength / 7;
Magic Number,ExamplePlugin,MapParser,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapParser.cs,ParseMapBlock,The following statement contains a magic number: for (int i = 0; i < countStatics; i++)              {                  int iTileID = staticsData[staticDataIndex++] + (staticsData[staticDataIndex++] << 8);                  int iX = staticsData[staticDataIndex++];                  int iY = staticsData[staticDataIndex++];                  int iTileZ = (sbyte)staticsData[staticDataIndex++];                  int hue = staticsData[staticDataIndex++] + (staticsData[staticDataIndex++] * 256);                    if (m_StaticCounts.ContainsKey(iTileID))                      m_StaticCounts[iTileID]++;                  else                      m_StaticCounts.Add(iTileID' 1);              }
Magic Number,ExamplePlugin,MapParser,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapParser.cs,ParseMapBlock,The following statement contains a magic number: for (int i = 0; i < countStatics; i++)              {                  int iTileID = staticsData[staticDataIndex++] + (staticsData[staticDataIndex++] << 8);                  int iX = staticsData[staticDataIndex++];                  int iY = staticsData[staticDataIndex++];                  int iTileZ = (sbyte)staticsData[staticDataIndex++];                  int hue = staticsData[staticDataIndex++] + (staticsData[staticDataIndex++] * 256);                    if (m_StaticCounts.ContainsKey(iTileID))                      m_StaticCounts[iTileID]++;                  else                      m_StaticCounts.Add(iTileID' 1);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: uint[] toMatches = new uint[216];
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int b = 0; b < 6; b++)                  for (int g = 0; g < 6; g++)                      for (int r = 0; r < 6; r++)                          toMatches[r + g * 6 + b * 36] = (uint)(0x000033 * r + 0x003300 * g + 0x330000 * b);
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int b = 0; b < 6; b++)                  for (int g = 0; g < 6; g++)                      for (int r = 0; r < 6; r++)                          toMatches[r + g * 6 + b * 36] = (uint)(0x000033 * r + 0x003300 * g + 0x330000 * b);
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int b = 0; b < 6; b++)                  for (int g = 0; g < 6; g++)                      for (int r = 0; r < 6; r++)                          toMatches[r + g * 6 + b * 36] = (uint)(0x000033 * r + 0x003300 * g + 0x330000 * b);
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int b = 0; b < 6; b++)                  for (int g = 0; g < 6; g++)                      for (int r = 0; r < 6; r++)                          toMatches[r + g * 6 + b * 36] = (uint)(0x000033 * r + 0x003300 * g + 0x330000 * b);
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int b = 0; b < 6; b++)                  for (int g = 0; g < 6; g++)                      for (int r = 0; r < 6; r++)                          toMatches[r + g * 6 + b * 36] = (uint)(0x000033 * r + 0x003300 * g + 0x330000 * b);
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: Tuple<int' double>[] matches = new Tuple<int' double>[216];
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 216; i++) {                  int nearestHue = -1;                  double distance = double.MaxValue;                  uint dbl_input_red = toMatches[i] & 0x0000ff;                  uint dbl_input_green = (toMatches[i] & 0x00ff00) >> 8;                  uint dbl_input_blue = (toMatches[i] & 0xff0000) >> 16;                  for (int j = 0; j < HueData.HueCount; j++) {                      // compute the Euclidean distance between the two colors                      // note' that the alpha-component is not used in this example                      double dbl_test_red = Math.Pow(Convert.ToDouble(hues[j] & 0x0000ff) - dbl_input_red' 2.0);                      double dbl_test_green = Math.Pow(Convert.ToDouble((hues[j] & 0x00ff00) >> 8) - dbl_input_green' 2.0);                      double dbl_test_blue = Math.Pow(Convert.ToDouble((hues[j] & 0xff0000) >> 16) - dbl_input_blue' 2.0);                        double temp = Math.Sqrt(dbl_test_blue + dbl_test_green + dbl_test_red);                      // explore the result and store the nearest color                      if (temp == 0.0) {                          nearestHue = j;                          distance = 0;                          break;                      }                      else if (temp < distance) {                          distance = temp;                          nearestHue = j;                      }                  }                  matches[i] = new Tuple<int' double>(nearestHue' distance);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 216; i++) {                  int nearestHue = -1;                  double distance = double.MaxValue;                  uint dbl_input_red = toMatches[i] & 0x0000ff;                  uint dbl_input_green = (toMatches[i] & 0x00ff00) >> 8;                  uint dbl_input_blue = (toMatches[i] & 0xff0000) >> 16;                  for (int j = 0; j < HueData.HueCount; j++) {                      // compute the Euclidean distance between the two colors                      // note' that the alpha-component is not used in this example                      double dbl_test_red = Math.Pow(Convert.ToDouble(hues[j] & 0x0000ff) - dbl_input_red' 2.0);                      double dbl_test_green = Math.Pow(Convert.ToDouble((hues[j] & 0x00ff00) >> 8) - dbl_input_green' 2.0);                      double dbl_test_blue = Math.Pow(Convert.ToDouble((hues[j] & 0xff0000) >> 16) - dbl_input_blue' 2.0);                        double temp = Math.Sqrt(dbl_test_blue + dbl_test_green + dbl_test_red);                      // explore the result and store the nearest color                      if (temp == 0.0) {                          nearestHue = j;                          distance = 0;                          break;                      }                      else if (temp < distance) {                          distance = temp;                          nearestHue = j;                      }                  }                  matches[i] = new Tuple<int' double>(nearestHue' distance);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 216; i++) {                  int nearestHue = -1;                  double distance = double.MaxValue;                  uint dbl_input_red = toMatches[i] & 0x0000ff;                  uint dbl_input_green = (toMatches[i] & 0x00ff00) >> 8;                  uint dbl_input_blue = (toMatches[i] & 0xff0000) >> 16;                  for (int j = 0; j < HueData.HueCount; j++) {                      // compute the Euclidean distance between the two colors                      // note' that the alpha-component is not used in this example                      double dbl_test_red = Math.Pow(Convert.ToDouble(hues[j] & 0x0000ff) - dbl_input_red' 2.0);                      double dbl_test_green = Math.Pow(Convert.ToDouble((hues[j] & 0x00ff00) >> 8) - dbl_input_green' 2.0);                      double dbl_test_blue = Math.Pow(Convert.ToDouble((hues[j] & 0xff0000) >> 16) - dbl_input_blue' 2.0);                        double temp = Math.Sqrt(dbl_test_blue + dbl_test_green + dbl_test_red);                      // explore the result and store the nearest color                      if (temp == 0.0) {                          nearestHue = j;                          distance = 0;                          break;                      }                      else if (temp < distance) {                          distance = temp;                          nearestHue = j;                      }                  }                  matches[i] = new Tuple<int' double>(nearestHue' distance);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 216; i++) {                  int nearestHue = -1;                  double distance = double.MaxValue;                  uint dbl_input_red = toMatches[i] & 0x0000ff;                  uint dbl_input_green = (toMatches[i] & 0x00ff00) >> 8;                  uint dbl_input_blue = (toMatches[i] & 0xff0000) >> 16;                  for (int j = 0; j < HueData.HueCount; j++) {                      // compute the Euclidean distance between the two colors                      // note' that the alpha-component is not used in this example                      double dbl_test_red = Math.Pow(Convert.ToDouble(hues[j] & 0x0000ff) - dbl_input_red' 2.0);                      double dbl_test_green = Math.Pow(Convert.ToDouble((hues[j] & 0x00ff00) >> 8) - dbl_input_green' 2.0);                      double dbl_test_blue = Math.Pow(Convert.ToDouble((hues[j] & 0xff0000) >> 16) - dbl_input_blue' 2.0);                        double temp = Math.Sqrt(dbl_test_blue + dbl_test_green + dbl_test_red);                      // explore the result and store the nearest color                      if (temp == 0.0) {                          nearestHue = j;                          distance = 0;                          break;                      }                      else if (temp < distance) {                          distance = temp;                          nearestHue = j;                      }                  }                  matches[i] = new Tuple<int' double>(nearestHue' distance);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 216; i++) {                  int nearestHue = -1;                  double distance = double.MaxValue;                  uint dbl_input_red = toMatches[i] & 0x0000ff;                  uint dbl_input_green = (toMatches[i] & 0x00ff00) >> 8;                  uint dbl_input_blue = (toMatches[i] & 0xff0000) >> 16;                  for (int j = 0; j < HueData.HueCount; j++) {                      // compute the Euclidean distance between the two colors                      // note' that the alpha-component is not used in this example                      double dbl_test_red = Math.Pow(Convert.ToDouble(hues[j] & 0x0000ff) - dbl_input_red' 2.0);                      double dbl_test_green = Math.Pow(Convert.ToDouble((hues[j] & 0x00ff00) >> 8) - dbl_input_green' 2.0);                      double dbl_test_blue = Math.Pow(Convert.ToDouble((hues[j] & 0xff0000) >> 16) - dbl_input_blue' 2.0);                        double temp = Math.Sqrt(dbl_test_blue + dbl_test_green + dbl_test_red);                      // explore the result and store the nearest color                      if (temp == 0.0) {                          nearestHue = j;                          distance = 0;                          break;                      }                      else if (temp < distance) {                          distance = temp;                          nearestHue = j;                      }                  }                  matches[i] = new Tuple<int' double>(nearestHue' distance);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 216; i++) {                  int nearestHue = -1;                  double distance = double.MaxValue;                  uint dbl_input_red = toMatches[i] & 0x0000ff;                  uint dbl_input_green = (toMatches[i] & 0x00ff00) >> 8;                  uint dbl_input_blue = (toMatches[i] & 0xff0000) >> 16;                  for (int j = 0; j < HueData.HueCount; j++) {                      // compute the Euclidean distance between the two colors                      // note' that the alpha-component is not used in this example                      double dbl_test_red = Math.Pow(Convert.ToDouble(hues[j] & 0x0000ff) - dbl_input_red' 2.0);                      double dbl_test_green = Math.Pow(Convert.ToDouble((hues[j] & 0x00ff00) >> 8) - dbl_input_green' 2.0);                      double dbl_test_blue = Math.Pow(Convert.ToDouble((hues[j] & 0xff0000) >> 16) - dbl_input_blue' 2.0);                        double temp = Math.Sqrt(dbl_test_blue + dbl_test_green + dbl_test_red);                      // explore the result and store the nearest color                      if (temp == 0.0) {                          nearestHue = j;                          distance = 0;                          break;                      }                      else if (temp < distance) {                          distance = temp;                          nearestHue = j;                      }                  }                  matches[i] = new Tuple<int' double>(nearestHue' distance);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 216; i++) {                  int nearestHue = -1;                  double distance = double.MaxValue;                  uint dbl_input_red = toMatches[i] & 0x0000ff;                  uint dbl_input_green = (toMatches[i] & 0x00ff00) >> 8;                  uint dbl_input_blue = (toMatches[i] & 0xff0000) >> 16;                  for (int j = 0; j < HueData.HueCount; j++) {                      // compute the Euclidean distance between the two colors                      // note' that the alpha-component is not used in this example                      double dbl_test_red = Math.Pow(Convert.ToDouble(hues[j] & 0x0000ff) - dbl_input_red' 2.0);                      double dbl_test_green = Math.Pow(Convert.ToDouble((hues[j] & 0x00ff00) >> 8) - dbl_input_green' 2.0);                      double dbl_test_blue = Math.Pow(Convert.ToDouble((hues[j] & 0xff0000) >> 16) - dbl_input_blue' 2.0);                        double temp = Math.Sqrt(dbl_test_blue + dbl_test_green + dbl_test_red);                      // explore the result and store the nearest color                      if (temp == 0.0) {                          nearestHue = j;                          distance = 0;                          break;                      }                      else if (temp < distance) {                          distance = temp;                          nearestHue = j;                      }                  }                  matches[i] = new Tuple<int' double>(nearestHue' distance);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 216; i++) {                  int nearestHue = -1;                  double distance = double.MaxValue;                  uint dbl_input_red = toMatches[i] & 0x0000ff;                  uint dbl_input_green = (toMatches[i] & 0x00ff00) >> 8;                  uint dbl_input_blue = (toMatches[i] & 0xff0000) >> 16;                  for (int j = 0; j < HueData.HueCount; j++) {                      // compute the Euclidean distance between the two colors                      // note' that the alpha-component is not used in this example                      double dbl_test_red = Math.Pow(Convert.ToDouble(hues[j] & 0x0000ff) - dbl_input_red' 2.0);                      double dbl_test_green = Math.Pow(Convert.ToDouble((hues[j] & 0x00ff00) >> 8) - dbl_input_green' 2.0);                      double dbl_test_blue = Math.Pow(Convert.ToDouble((hues[j] & 0xff0000) >> 16) - dbl_input_blue' 2.0);                        double temp = Math.Sqrt(dbl_test_blue + dbl_test_green + dbl_test_red);                      // explore the result and store the nearest color                      if (temp == 0.0) {                          nearestHue = j;                          distance = 0;                          break;                      }                      else if (temp < distance) {                          distance = temp;                          nearestHue = j;                      }                  }                  matches[i] = new Tuple<int' double>(nearestHue' distance);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 36; i++) {                  m_kWebSafeHues += "\n            ";                  for (int j = 0; j < 6; j++)                      m_kWebSafeHues += string.Format("{0:0000}' "' matches[i * 6 + j].Item1);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 36; i++) {                  m_kWebSafeHues += "\n            ";                  for (int j = 0; j < 6; j++)                      m_kWebSafeHues += string.Format("{0:0000}' "' matches[i * 6 + j].Item1);              }
Magic Number,ExamplePlugin,WebSafeHueCreator,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\WebSafeHueCreator.cs,CreateHues,The following statement contains a magic number: for (int i = 0; i < 36; i++) {                  m_kWebSafeHues += "\n            ";                  for (int j = 0; j < 6; j++)                      m_kWebSafeHues += string.Format("{0:0000}' "' matches[i * 6 + j].Item1);              }
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: Size = new Point(800' 600);
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: Size = new Point(800' 600);
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: AddControl(new ResizePic(this' 0' 0' 3000' 800' 600));
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: AddControl(new ResizePic(this' 0' 0' 3000' 800' 600));
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: AddControl(new ResizePic(this' 0' 0' 3000' 800' 600));
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: int rowwidth = 60;
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: m_Label = (TextLabel)AddControl(new TextLabel(this' 50' 8' 0' null));
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: m_Label = (TextLabel)AddControl(new TextLabel(this' 50' 8' 0' null));
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: m_HueDisplay = (HuedControl)AddControl(new HuedControl(this' 8305));
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: LastControl.Position = new Point(745' 15);
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: LastControl.Position = new Point(745' 15);
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: LastControl.Position = new Point(-5' 10);
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: LastControl.Position = new Point(-5' 10);
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: LastControl.Position = new Point(3' 10);
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: LastControl.Position = new Point(3' 10);
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: for (int i = 0; i < 3000; i++) {                  AddControl(new HuedControl(this));                  LastControl.Position = new Point((i % rowwidth) * 11 - 5' (i / rowwidth) * 10 + 28);                  ((HuedControl)LastControl).Hue = i + 2;              }
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: for (int i = 0; i < 3000; i++) {                  AddControl(new HuedControl(this));                  LastControl.Position = new Point((i % rowwidth) * 11 - 5' (i / rowwidth) * 10 + 28);                  ((HuedControl)LastControl).Hue = i + 2;              }
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: for (int i = 0; i < 3000; i++) {                  AddControl(new HuedControl(this));                  LastControl.Position = new Point((i % rowwidth) * 11 - 5' (i / rowwidth) * 10 + 28);                  ((HuedControl)LastControl).Hue = i + 2;              }
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: for (int i = 0; i < 3000; i++) {                  AddControl(new HuedControl(this));                  LastControl.Position = new Point((i % rowwidth) * 11 - 5' (i / rowwidth) * 10 + 28);                  ((HuedControl)LastControl).Hue = i + 2;              }
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: for (int i = 0; i < 3000; i++) {                  AddControl(new HuedControl(this));                  LastControl.Position = new Point((i % rowwidth) * 11 - 5' (i / rowwidth) * 10 + 28);                  ((HuedControl)LastControl).Hue = i + 2;              }
Magic Number,UltimaXNA.Ultima.Login,DebugHuesGump,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\DebugHuesGumpModule.cs,OnInitialize,The following statement contains a magic number: for (int i = 0; i < 3000; i++) {                  AddControl(new HuedControl(this));                  LastControl.Position = new Point((i % rowwidth) * 11 - 5' (i / rowwidth) * 10 + 28);                  ((HuedControl)LastControl).Hue = i + 2;              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: RenderTarget2D render = new RenderTarget2D(spritebatch.GraphicsDevice' Width + WidthExtra * 2' Height + HeightExtra * 2 + HeightExtra2);
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: RenderTarget2D render = new RenderTarget2D(spritebatch.GraphicsDevice' Width + WidthExtra * 2' Height + HeightExtra * 2 + HeightExtra2);
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
Magic Number,ExamplePlugin.MapRenderer,MapRendererModule,C:\repos\ZaneDubya_UltimaXNA\plugins\ExamplePlugin\MapRenderer\MapRendererModule.cs,OnClick,The following statement contains a magic number: for (int chunky = 0; chunky < 10; chunky++)              {                  for (int chunkx = 0; chunkx < 10; chunkx++)                  {                      spritebatch.GraphicsDevice.SetRenderTarget(render);                      spritebatch.Reset();                      uint cx = (uint)chunkx + 200;                      uint cy = (uint)chunky + 200;                      map.CenterPosition = new Point((int)(cx << 3)' (int)(cy << 3));                      MapChunk chunk = map.GetMapChunk(cx' cy);                      chunk.LoadStatics(map.MapData' map);                      int z = 0;                      for (int i = 0; i < 64; i++)                      {                          int y = (i / 8);                          int x = (i % 8);                          int sy = y * 22 + x * 22 + HeightExtra + HeightExtra2;                          int sx = 22 * 8 - y * 22 + x * 22 + WidthExtra;                          MapTile tile = chunk.Tiles[i];                          tile.ForceSort();                          for (int j = 0; j < tile.Entities.Count; j++)                          {                              AEntity e = tile.Entities[j];                              AEntityView view = e.GetView();                              view.Draw(spritebatch' new Vector3(sx' sy' 0)' mouseOverNull' map' false);                          }                      }                      spritebatch.SetLightIntensity(lighting.IsometricLightLevel);                      spritebatch.SetLightDirection(lighting.IsometricLightDirection);                      spritebatch.GraphicsDevice.Clear(Color.Transparent);                      spritebatch.FlushSprites(true);                      spritebatch.GraphicsDevice.SetRenderTarget(null);                      render.SaveAsPng(new FileStream($"Chunks/{cy}-{cx}.png"' FileMode.Create)' render.Width' render.Height);                  }              }
