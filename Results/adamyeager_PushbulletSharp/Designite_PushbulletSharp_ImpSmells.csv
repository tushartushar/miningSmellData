Implementation smell,Namespace,Class,File,Method,Description
Long Method,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushFileToAmazonAWS,The method has 71 lines of code.
Complex Method,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushNote,Cyclomatic complexity of the method is 7
Complex Method,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushAddress,Cyclomatic complexity of the method is 7
Complex Method,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushLink,Cyclomatic complexity of the method is 7
Complex Method,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushFile,Cyclomatic complexity of the method is 8
Complex Method,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,GetPushes,Cyclomatic complexity of the method is 11
Complex Method,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,HandleOtherStatusCodes,Cyclomatic complexity of the method is 17
Complex Method,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushFileToAmazonAWS,Cyclomatic complexity of the method is 9
Complex Method,PushbulletSharp.Encryption,EncryptionUtility,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Encryption\EncryptionUtility.cs,EncryptMessage,Cyclomatic complexity of the method is 7
Complex Method,PushbulletSharp.Encryption,EncryptionUtility,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Encryption\EncryptionUtility.cs,DecryptMessage,Cyclomatic complexity of the method is 9
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,CurrentUsersDevices,The length of the statement  "		UserDevices result = GetRequest<UserDevices> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.DevicesUrls.Me' additionalQuery).Trim ()); " is 152.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,CurrentUsersChats,The length of the statement  "		var basicResponse = GetRequest<BasicChatsResponse> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.ChatsUrls.Chats).Trim ()); " is 142.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,CreateChat,The length of the statement  "		BasicChat basicResponse = PostRequest<BasicChat> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.ChatsUrls.Chats)' request); " is 141.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,UpdateChat,The length of the statement  "		BasicChat basicResponse = PostRequest<BasicChat> (string.Format ("{0}{1}/{2}"' PushbulletConstants.BaseUrl' PushbulletConstants.ChatsUrls.Chats' request.Iden)' request); " is 169.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,DeleteChat,The length of the statement  "		string jsonResult = DeleteRequest (string.Format ("{0}{1}/{2}"' PushbulletConstants.BaseUrl' PushbulletConstants.ChatsUrls.Chats' request.ChatIden)); " is 149.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,CurrentUsersContacts,The length of the statement  "		UserContacts result = GetRequest<UserContacts> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.ContactsUrls.Contacts' additionalQuery).Trim ()); " is 161.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,CreateNewContact,The length of the statement  "		Contact response = PostRequest<Contact> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.ContactsUrls.Contacts)' request); " is 138.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,UpdateContact,The length of the statement  "		Contact response = PostRequest<Contact> (string.Format ("{0}{1}/{2}"' PushbulletConstants.BaseUrl' PushbulletConstants.ContactsUrls.Contacts' request.ContactIden)' request); " is 173.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,DeleteContact,The length of the statement  "		string jsonResult = DeleteRequest (string.Format ("{0}{1}/{2}"' PushbulletConstants.BaseUrl' PushbulletConstants.ContactsUrls.Contacts' request.ContactIden)); " is 158.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,SubscribeToChannel,The length of the statement  "	BasicSubscription basicResponse = PostRequest<BasicSubscription> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.SubscriptionUrls.Subscriptions)' request); " is 172.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,CurrentUsersSubscriptions,The length of the statement  "		var basicResult = GetRequest<BasicUserSubscriptions> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.SubscriptionUrls.Subscriptions' additionalQuery).Trim ()); " is 176.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,UnsubscribeFromChannel,The length of the statement  "	string jsonResult = DeleteRequest (string.Format ("{0}{1}/{2}"' PushbulletConstants.BaseUrl' PushbulletConstants.SubscriptionUrls.Subscriptions' channelIden)); " is 159.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,GetChannelInformation,The length of the statement  "	Channel result = GetRequest<Channel> (string.Format ("{0}{1}?tag={2}"' PushbulletConstants.BaseUrl' PushbulletConstants.SubscriptionUrls.ChannelInfo' channelTag)); " is 163.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushFile,The length of the statement  "		FileUploadResponse uploadRequestResponse = PostRequest<FileUploadResponse> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.FileUrls.UploadRequest)' request); " is 174.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,GetPushes,The length of the statement  "				string modifiedDate = filter.ModifiedDate.DateTimeToUnixTime ().ToString (System.Globalization.CultureInfo.InvariantCulture); " is 125.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,GetPushes,The length of the statement  "		BasicPushResponseContainer basicPushContainer = GetRequest<BasicPushResponseContainer> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.PushesUrls.Pushes' queryString).Trim ()); " is 193.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,RequestToken,The length of the statement  "		string jsonResult = PostFormUrlEncodedContentRequest (string.Concat (PushbulletConstants.BaseUrlNonVersion' PushbulletConstants.OAuthUrls.OAuthToken)' parameters); " is 163.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,RequestToken,The length of the statement  "		throw new Exception (string.Format (PushbulletConstants.OAuthErrorMessages.WebExceptionFormat' statusCode' ex.Message)' ex); " is 124.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,GetRequest,The length of the statement  "	request.Headers.Add (PushbulletConstants.HeadersConstants.AuthorizationKey' string.Format (PushbulletConstants.HeadersConstants.AuthorizationValue' this.AccessToken)); " is 167.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,GetRequest,The length of the statement  "		throw new HttpRequestException (string.Format (PushbulletConstants.StatusCodeExceptions.Default' (int)response.StatusCode' response.StatusCode)); " is 145.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PostRequest,The length of the statement  "	request.Headers.Add (PushbulletConstants.HeadersConstants.AuthorizationKey' string.Format (PushbulletConstants.HeadersConstants.AuthorizationValue' this.AccessToken)); " is 167.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PostRequest,The length of the statement  "		throw new HttpRequestException (string.Format (PushbulletConstants.StatusCodeExceptions.Default' (int)response.StatusCode' response.StatusCode)); " is 145.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PostFormUrlEncodedContentRequest,The length of the statement  "		request.Headers.Add (PushbulletConstants.HeadersConstants.AuthorizationKey' string.Format (PushbulletConstants.HeadersConstants.AuthorizationValue' this.AccessToken)); " is 167.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PostFormUrlEncodedContentRequest,The length of the statement  "			throw new HttpRequestException (string.Format (PushbulletConstants.StatusCodeExceptions.Default' (int)response.StatusCode' response.StatusCode)); " is 145.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,DeleteRequest,The length of the statement  "	request.Headers.Add (PushbulletConstants.HeadersConstants.AuthorizationKey' string.Format (PushbulletConstants.HeadersConstants.AuthorizationValue' this.AccessToken)); " is 167.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,DeleteRequest,The length of the statement  "		throw new HttpRequestException (string.Format (PushbulletConstants.StatusCodeExceptions.Default' (int)response.StatusCode' response.StatusCode)); " is 145.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,HandleOtherStatusCodes,The length of the statement  "		throw new HttpRequestException (string.Format (PushbulletConstants.StatusCodeExceptions.FiveHundredXX' (int)statusCode' statusCode)); " is 133.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PostEphemeralRequest,The length of the statement  "	var response = PostRequest<string> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.EphemeralsUrls.Ephemerals)' requestObject); " is 143.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PostPushRequest,The length of the statement  "	var basicResponse = PostRequest<BasicPushResponse> (string.Concat (PushbulletConstants.BaseUrl' PushbulletConstants.PushesUrls.Pushes)' requestObject); " is 151.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushFileToAmazonAWS,The length of the statement  "			awsaccesskeyidContent = CreateStringContentFromNameValue (FileUploadResponseData.Properties.AWSAccessKeyId' fileUploadResponse.Data.AWSAccessKeyId); " is 148.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushFileToAmazonAWS,The length of the statement  "			signatureContent = CreateStringContentFromNameValue (FileUploadResponseData.Properties.Signature' fileUploadResponse.Data.Signature); " is 133.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushFileToAmazonAWS,The length of the statement  "			policyContent = CreateStringContentFromNameValue (FileUploadResponseData.Properties.Policy' fileUploadResponse.Data.Policy); " is 124.
Long Statement,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,PushFileToAmazonAWS,The length of the statement  "			contentTypeContent = CreateStringContentFromNameValue (PushbulletConstants.AmazonHeaders.ContentType' fileUploadResponse.FileType); " is 131.
Magic Number,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,HandleOtherStatusCodes,The following statement contains a magic number: switch ((int)statusCode) {  case (int)HttpStatusCode.BadRequest:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.BadRequest);  case (int)HttpStatusCode.Unauthorized:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.Unauthorized);  case (int)HttpStatusCode.Forbidden:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.Forbidden);  case (int)HttpStatusCode.NotFound:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.NotFound);  case 429:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.BadRequest);  case (int)HttpStatusCode.InternalServerError:  case (int)HttpStatusCode.NotImplemented:  case (int)HttpStatusCode.BadGateway:  case (int)HttpStatusCode.ServiceUnavailable:  case (int)HttpStatusCode.GatewayTimeout:  case (int)HttpStatusCode.HttpVersionNotSupported:  	throw new HttpRequestException (string.Format (PushbulletConstants.StatusCodeExceptions.FiveHundredXX' (int)statusCode' statusCode));  }  
Magic Number,PushbulletSharp.Encryption,EncryptionUtility,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Encryption\EncryptionUtility.cs,EncryptMessage,The following statement contains a magic number: if (keyBytes == null || keyBytes.Length != KeyBitSize / 8)  	throw new ArgumentException (string.Format ("Key needs to be {0} bit!"' KeyBitSize)' "key");  
Magic Number,PushbulletSharp.Encryption,EncryptionUtility,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Encryption\EncryptionUtility.cs,DecryptMessage,The following statement contains a magic number: if (keyBytes == null || keyBytes.Length != KeyBitSize / 8)  	throw new ArgumentException (string.Format ("Key needs to be {0} bit!"' KeyBitSize)' "key");  
Magic Number,PushbulletSharp.Encryption,EncryptionUtility,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Encryption\EncryptionUtility.cs,DecryptMessage,The following statement contains a magic number: using (var cipherStream = new MemoryStream (encryptedMessageBytes)) {  	using (var cipherReader = new BinaryReader (cipherStream)) {  		// Get the Version  		var version = cipherReader.ReadBytes (1);  		var versionString = Encoding.UTF8.GetString (version' 0' version.Length);  		if (versionString != "1") {  			throw new Exception ("Invalid version!");  		}  		// Get the tag  		var tag = cipherReader.ReadBytes (TagBitSize / 8);  		// Get the Nonce (IV)  		var nonce = cipherReader.ReadBytes (NonceBitSize / 8);  		var cipher = new GcmBlockCipher (new AesFastEngine ());  		var parameters = new AeadParameters (new KeyParameter (keyBytes)' TagBitSize' nonce);  		cipher.Init (false' parameters);  		//Decrypt Cipher Text  		var cipherText = cipherReader.ReadBytes (encryptedMessage.Length - version.Length - nonce.Length);  		byte[] cipherWithTag = new byte[cipherText.Length + tag.Length];  		Array.Copy (cipherText' cipherWithTag' cipherText.Length);  		Array.Copy (tag' 0' cipherWithTag' cipherText.Length' tag.Length);  		var plainText = new byte[cipher.GetOutputSize (cipherWithTag.Length)];  		try {  			var len = cipher.ProcessBytes (cipherWithTag' 0' cipherWithTag.Length' plainText' 0);  			cipher.DoFinal (plainText' len);  		} catch (InvalidCipherTextException) {  			//Return null if it doesn't authenticate  			return null;  		}  		return Encoding.UTF8.GetString (plainText' 0' plainText.Length);  	}  }  
Magic Number,PushbulletSharp.Encryption,EncryptionUtility,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Encryption\EncryptionUtility.cs,DecryptMessage,The following statement contains a magic number: using (var cipherStream = new MemoryStream (encryptedMessageBytes)) {  	using (var cipherReader = new BinaryReader (cipherStream)) {  		// Get the Version  		var version = cipherReader.ReadBytes (1);  		var versionString = Encoding.UTF8.GetString (version' 0' version.Length);  		if (versionString != "1") {  			throw new Exception ("Invalid version!");  		}  		// Get the tag  		var tag = cipherReader.ReadBytes (TagBitSize / 8);  		// Get the Nonce (IV)  		var nonce = cipherReader.ReadBytes (NonceBitSize / 8);  		var cipher = new GcmBlockCipher (new AesFastEngine ());  		var parameters = new AeadParameters (new KeyParameter (keyBytes)' TagBitSize' nonce);  		cipher.Init (false' parameters);  		//Decrypt Cipher Text  		var cipherText = cipherReader.ReadBytes (encryptedMessage.Length - version.Length - nonce.Length);  		byte[] cipherWithTag = new byte[cipherText.Length + tag.Length];  		Array.Copy (cipherText' cipherWithTag' cipherText.Length);  		Array.Copy (tag' 0' cipherWithTag' cipherText.Length' tag.Length);  		var plainText = new byte[cipher.GetOutputSize (cipherWithTag.Length)];  		try {  			var len = cipher.ProcessBytes (cipherWithTag' 0' cipherWithTag.Length' plainText' 0);  			cipher.DoFinal (plainText' len);  		} catch (InvalidCipherTextException) {  			//Return null if it doesn't authenticate  			return null;  		}  		return Encoding.UTF8.GetString (plainText' 0' plainText.Length);  	}  }  
Magic Number,PushbulletSharp.Encryption,EncryptionUtility,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Encryption\EncryptionUtility.cs,DecryptMessage,The following statement contains a magic number: using (var cipherReader = new BinaryReader (cipherStream)) {  	// Get the Version  	var version = cipherReader.ReadBytes (1);  	var versionString = Encoding.UTF8.GetString (version' 0' version.Length);  	if (versionString != "1") {  		throw new Exception ("Invalid version!");  	}  	// Get the tag  	var tag = cipherReader.ReadBytes (TagBitSize / 8);  	// Get the Nonce (IV)  	var nonce = cipherReader.ReadBytes (NonceBitSize / 8);  	var cipher = new GcmBlockCipher (new AesFastEngine ());  	var parameters = new AeadParameters (new KeyParameter (keyBytes)' TagBitSize' nonce);  	cipher.Init (false' parameters);  	//Decrypt Cipher Text  	var cipherText = cipherReader.ReadBytes (encryptedMessage.Length - version.Length - nonce.Length);  	byte[] cipherWithTag = new byte[cipherText.Length + tag.Length];  	Array.Copy (cipherText' cipherWithTag' cipherText.Length);  	Array.Copy (tag' 0' cipherWithTag' cipherText.Length' tag.Length);  	var plainText = new byte[cipher.GetOutputSize (cipherWithTag.Length)];  	try {  		var len = cipher.ProcessBytes (cipherWithTag' 0' cipherWithTag.Length' plainText' 0);  		cipher.DoFinal (plainText' len);  	} catch (InvalidCipherTextException) {  		//Return null if it doesn't authenticate  		return null;  	}  	return Encoding.UTF8.GetString (plainText' 0' plainText.Length);  }  
Magic Number,PushbulletSharp.Encryption,EncryptionUtility,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Encryption\EncryptionUtility.cs,DecryptMessage,The following statement contains a magic number: using (var cipherReader = new BinaryReader (cipherStream)) {  	// Get the Version  	var version = cipherReader.ReadBytes (1);  	var versionString = Encoding.UTF8.GetString (version' 0' version.Length);  	if (versionString != "1") {  		throw new Exception ("Invalid version!");  	}  	// Get the tag  	var tag = cipherReader.ReadBytes (TagBitSize / 8);  	// Get the Nonce (IV)  	var nonce = cipherReader.ReadBytes (NonceBitSize / 8);  	var cipher = new GcmBlockCipher (new AesFastEngine ());  	var parameters = new AeadParameters (new KeyParameter (keyBytes)' TagBitSize' nonce);  	cipher.Init (false' parameters);  	//Decrypt Cipher Text  	var cipherText = cipherReader.ReadBytes (encryptedMessage.Length - version.Length - nonce.Length);  	byte[] cipherWithTag = new byte[cipherText.Length + tag.Length];  	Array.Copy (cipherText' cipherWithTag' cipherText.Length);  	Array.Copy (tag' 0' cipherWithTag' cipherText.Length' tag.Length);  	var plainText = new byte[cipher.GetOutputSize (cipherWithTag.Length)];  	try {  		var len = cipher.ProcessBytes (cipherWithTag' 0' cipherWithTag.Length' plainText' 0);  		cipher.DoFinal (plainText' len);  	} catch (InvalidCipherTextException) {  		//Return null if it doesn't authenticate  		return null;  	}  	return Encoding.UTF8.GetString (plainText' 0' plainText.Length);  }  
Magic Number,PushbulletSharp.Models.Requests.Ephemerals,NotificationEphemeral,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\Models\Requests\Ephemerals\NotificationEphemeral.cs,NotificationEphemeral,The following statement contains a magic number: ClientVersion = 3;  
Missing Default,PushbulletSharp,PushbulletClient,D:\newReposJune17\adamyeager_PushbulletSharp\PushbulletSharp\PushbulletClient.cs,HandleOtherStatusCodes,The following switch statement is missing a default case: switch ((int)statusCode) {  case (int)HttpStatusCode.BadRequest:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.BadRequest);  case (int)HttpStatusCode.Unauthorized:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.Unauthorized);  case (int)HttpStatusCode.Forbidden:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.Forbidden);  case (int)HttpStatusCode.NotFound:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.NotFound);  case 429:  	throw new HttpRequestException (PushbulletConstants.StatusCodeExceptions.BadRequest);  case (int)HttpStatusCode.InternalServerError:  case (int)HttpStatusCode.NotImplemented:  case (int)HttpStatusCode.BadGateway:  case (int)HttpStatusCode.ServiceUnavailable:  case (int)HttpStatusCode.GatewayTimeout:  case (int)HttpStatusCode.HttpVersionNotSupported:  	throw new HttpRequestException (string.Format (PushbulletConstants.StatusCodeExceptions.FiveHundredXX' (int)statusCode' statusCode));  }  
