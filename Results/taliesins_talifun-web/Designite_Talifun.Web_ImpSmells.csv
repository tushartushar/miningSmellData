Implementation smell,Namespace,Class,File,Method,Description
Long Method,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The method has 118 lines of code.
Complex Method,Talifun.Web,UrlHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\UrlHelper.cs,UrlToString,Cyclomatic complexity of the method is 12
Complex Method,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetRanges,Cyclomatic complexity of the method is 11
Complex Method,Talifun.Web.Module,HttpModuleRegistry,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Module\HttpModuleRegistry.cs,UnregisterInPartialTrust,Cyclomatic complexity of the method is 8
Complex Method,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,ServeRequest,Cyclomatic complexity of the method is 13
Complex Method,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,Cyclomatic complexity of the method is 18
Complex Method,Talifun.Web.StaticFile,WebServerDetector,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\WebServerDetector.cs,DetectWebServerType,Cyclomatic complexity of the method is 13
Long Parameter List,Talifun.Web,EmbeddedResourceLoader,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\EmbeddedResourceLoader.cs,LoadEmbeddedResource,The method has 6 parameters. Parameters: response' assembly' resourcePath' bufferSize' offset' length
Long Parameter List,Talifun.Web,IEmbeddedResourceLoader,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\IEmbeddedResourceLoader.cs,LoadEmbeddedResource,The method has 6 parameters. Parameters: response' assembly' resourcePath' bufferSize' offset' length
Long Parameter List,Talifun.Web,TransmitEntityStrategyForEmbeddedResource,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\TransmitEntityStrategyForEmbeddedResource.cs,TransmitEntityStrategyForEmbeddedResource,The method has 5 parameters. Parameters: embeddedResourceLoader' entity' assembly' resourcePath' bufferSize
Long Parameter List,Talifun.Web,TransmitEntityStrategyForEmbeddedResource,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\TransmitEntityStrategyForEmbeddedResource.cs,TransmitFile,The method has 6 parameters. Parameters: response' assembly' resourcePath' bufferSize' offset' length
Long Parameter List,Talifun.Web,HttpCacheManager,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Cache\HttpCacheManager.cs,Insert,The method has 7 parameters. Parameters: key' value' dependencies' absoluteExpiration' slidingExpiration' priority' onRemoveCallback
Long Parameter List,Talifun.Web,RetryableFileOpener,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\RetryableFileOpener.cs,OpenFileStream,The method has 5 parameters. Parameters: fileInfo' retry' fileMode' fileAccess' fileShare
Long Parameter List,Talifun.Web,IRetryableFileOpener,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\IRetryableFileOpener.cs,OpenFileStream,The method has 5 parameters. Parameters: fileInfo' retry' fileMode' fileAccess' fileShare
Long Parameter List,Talifun.Web,UrlHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\UrlHelper.cs,TryParseUrl,The method has 6 parameters. Parameters: input' filePath' fileName' fileExtension' queryString' bookMark
Long Parameter List,Talifun.Web,UrlHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\UrlHelper.cs,UrlToString,The method has 5 parameters. Parameters: filePath' fileName' fileExtension' queryString' bookMark
Long Parameter List,Talifun.Web,HttpResponseHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpResponseHeaderHelper.cs,SetResponseCachable,The method has 5 parameters. Parameters: response' now' lastModified' etag' maxAge
Long Parameter List,Talifun.Web,ICacheManager,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Cache\ICacheManager.cs,Insert,The method has 7 parameters. Parameters: key' value' dependencies' absoluteExpiration' slidingExpiration' priority' onRemoveCallback
Long Parameter List,Talifun.Web,IHttpResponseHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\IHttpResponseHeaderHelper.cs,SetResponseCachable,The method has 5 parameters. Parameters: response' now' lastModified' etag' maxAge
Long Parameter List,Talifun.Web,EntityResponseMultiPart,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\EntityResponseMultiPart.cs,TransmitMultiPartFile,The method has 5 parameters. Parameters: response' contentType' contentLength' ranges' transmitEntity
Long Parameter List,Talifun.Web,TransmitEntityStrategyForFile,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\TransmitEntityStrategyForFile.cs,TransmitFile,The method has 6 parameters. Parameters: retryableFileOpener' response' file' bufferSize' offset' length
Long Parameter List,Talifun.Web,TransmitEntityStrategyForStream,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\TransmitEntityStrategyForStream.cs,TransmitFile,The method has 5 parameters. Parameters: response' stream' bufferSize' offset' length
Long Parameter List,Talifun.Web.Compress,EmptyMembershipProvider,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\EmptyMembershipProvider.cs,CreateUser,The method has 8 parameters. Parameters: username' password' email' passwordQuestion' passwordAnswer' isApproved' providerUserKey' status
Long Parameter List,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,EmbeddedResourceEntityResponder,The method has 9 parameters. Parameters: cacheManager' mimeTyper' hasher' embeddedResourceLoader' maxFileSizeToServe' bufferSize' mimeSettingProvider' assembly' resourcePath
Long Parameter List,Talifun.Web.StaticFile,FileEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\FileEntityResponder.cs,FileEntityResponder,The method has 8 parameters. Parameters: cacheManager' retryableFileOpener' mimeTyper' hasher' maxFileSizeToServe' bufferSize' mimeSettingProvider' fileInfo
Long Parameter List,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetUrlEtagHandler,The method has 5 parameters. Parameters: request' response' urlEtagHandlingMethod' urlEtagQuerystringName' etag
Long Identifier,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,CheckIfUnmodifiedSince,The length of the parameter requestHeaderIfUnmodifiedSince is 30.
Long Identifier,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,CheckUnlessModifiedSince,The length of the parameter requestHeaderUnlessModifiedSince is 32.
Long Identifier,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,CheckIfNoneMatch,The length of the parameter requestHeaderIfNoneMatchValues is 30.
Long Identifier,Talifun.Web.Compress,SR,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\SR.cs,,The length of the parameter WebResourceCompressionModuleInvalidRequest is 42.
Long Identifier,Talifun.Web.Compress,SR,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\SR.cs,,The length of the parameter WebResourceCompressionModuleAssemblyNotFound is 44.
Long Identifier,Talifun.Web.Compress,SR,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\SR.cs,,The length of the parameter WebResourceCompressionModuleResourceNotFound is 44.
Long Identifier,Talifun.Web.Compress,SR,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\SR.cs,,The length of the parameter WebResourceCompressionModuleReflectionNotAllowd is 47.
Long Identifier,Talifun.Web.IpAddressAuthentication,IpAddressAuthenticationModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\IpAddressAuthentication\IpAddressAuthenticationModule.cs,,The length of the parameter IpAddressAuthenticationManager is 30.
Long Identifier,Talifun.Web.IpAddressAuthentication,IpAddressAuthenticationModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\IpAddressAuthentication\IpAddressAuthenticationModule.cs,,The length of the parameter GenerateResponseHeadersForHandlerMethod is 39.
Long Identifier,Talifun.Web.RegexUrlAuthorization,RegexUrlAuthorizationModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\RegexUrlAuthorization\RegexUrlAuthorizationModule.cs,,The length of the parameter GenerateResponseHeadersForHandlerMethod is 39.
Long Identifier,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,TryGetFileHandlerCacheItem,The length of the parameter entityStoredWithCompressionType is 31.
Long Identifier,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,,The length of the parameter EmbeddedResourceEntityResponderType is 35.
Long Identifier,Talifun.Web.StaticFile,FileEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\FileEntityResponder.cs,TryGetFileHandlerCacheItem,The length of the parameter entityStoredWithCompressionType is 31.
Long Identifier,Talifun.Web.StaticFile,IEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\IEntityResponder.cs,TryGetFileHandlerCacheItem,The length of the parameter entityStoredWithCompressionType is 31.
Long Identifier,Talifun.Web.StaticFile,StaticFileManager,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\StaticFileManager.cs,,The length of the parameter ErrorTheRemoteHostClosedTheConnection is 37.
Long Identifier,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,ServeRequest,The length of the parameter entityStoredWithCompressionType is 31.
Long Statement,Talifun.Web.Configuration,CurrentConfigurationManager,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Configuration\CurrentConfigurationManager.cs,GetSection,The length of the statement  "            // If we've got this far' it means we didn't find any matching sections in the configuration file. so we raise an exception: " is 124.
Long Statement,Talifun.Web.Configuration,CurrentConfigurationManager,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Configuration\CurrentConfigurationManager.cs,GetDesignTimeConfiguration,The length of the statement  "                        configMap.ExeConfigFilename = String.Format(CultureInfo.InvariantCulture' "{0}\\{1}"' info.Directory.FullName' item.Name); " is 122.
Long Statement,Talifun.Web,EmbeddedResourceLoader,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\EmbeddedResourceLoader.cs,LoadEmbeddedResource,The length of the statement  "            var embeddedResourcePath = string.Format("{0}.{1}"' assemblyName' (resourcePath.StartsWith("/") ? resourcePath.Substring(1) : resourcePath).Replace("/"' ".")); " is 159.
Long Statement,Talifun.Web,EmbeddedResourceLoader,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\EmbeddedResourceLoader.cs,LoadEmbeddedResource,The length of the statement  "            var embeddedResourcePath = string.Format("{0}.{1}"' assemblyName' (resourcePath.StartsWith("/") ? resourcePath.Substring(1) : resourcePath).Replace("/"' ".")); " is 159.
Long Statement,Talifun.Web,EmbeddedResourceLoader,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\EmbeddedResourceLoader.cs,LoadEmbeddedResource,The length of the statement  "            var embeddedResourcePath = string.Format("{0}.{1}"' assemblyName' (resourcePath.StartsWith("/") ? resourcePath.Substring(1) : resourcePath).Replace("/"' ".")); " is 159.
Long Statement,Talifun.Web,TransmitEntityStrategyForEmbeddedResource,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\TransmitEntityStrategyForEmbeddedResource.cs,TransmitFile,The length of the statement  "            _embeddedResourceLoader.LoadEmbeddedResource(response.OutputStream' assembly' resourcePath' (int)bufferSize' offset' length); " is 125.
Long Statement,Talifun.Web,EntityResponseMultiPart,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\EntityResponseMultiPart.cs,SendBody,The length of the statement  "            TransmitMultiPartFile(response' transmitEntity.Entity.ContentType' transmitEntity.Entity.ContentLength' Ranges' transmitEntity); " is 128.
Long Statement,Talifun.Web,EntityResponseSinglePart,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\EntityResponseSinglePart.cs,SendHeaders,The length of the statement  "            HttpResponseHeaderHelper.AppendHeader(response' HttpHeaderContentRange' Bytes + " " + Range.StartRange + "-" + Range.EndRange + "/" + entity.ContentLength); " is 156.
Long Statement,Talifun.Web,UriBuilderExtensions,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\UriBuilderExtensions.cs,AddQueryArgument,The length of the statement  "            if (x.AllKeys.Contains(key)) throw new ArgumentOutOfRangeException(key' string.Format("Key '{0}' already exists!"' key)); " is 121.
Long Statement,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetCompressionMode,The length of the statement  "            var acceptEncodingValues = GetHttpHeaderWithQValues(request' HttpRequestHeader.AcceptEncoding).OrderByDescending(x => x' HeaderValueQValueComparer); " is 148.
Long Statement,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetCompressionMode,The length of the statement  "            var acceptEncodingToUse = acceptEncodingValues.Where(x => (x.Identity.Equals(Deflate' StringComparison.InvariantCultureIgnoreCase) || x.Identity.Equals(Gzip' StringComparison.InvariantCultureIgnoreCase) || x.Identity.Equals(Xgzip' StringComparison.InvariantCultureIgnoreCase) || x.Identity == "*") && (!x.QValue.HasValue || x.QValue.Value > 0)).FirstOrDefault(); " is 362.
Long Statement,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetCompressionMode,The length of the statement  "                //Wildcard logic is everything that is not in the list' so we are assuming they can handle what ever we can send to them " is 120.
Long Statement,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetCompressionMode,The length of the statement  "                if (!acceptEncodingValues.Any(x => x.Identity.Equals(Deflate' StringComparison.InvariantCultureIgnoreCase))) return ResponseCompressionType.Deflate; " is 148.
Long Statement,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetCompressionMode,The length of the statement  "                if (!acceptEncodingValues.Any(x => x.Identity.Equals(Gzip' StringComparison.InvariantCultureIgnoreCase) || x.Identity.Equals(Xgzip' StringComparison.InvariantCultureIgnoreCase))) return ResponseCompressionType.GZip; " is 215.
Long Statement,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetCompressionMode,The length of the statement  "                //We tried our best to use wild card but we got no results' so see if we can send based on any other acceptable identities " is 122.
Long Statement,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetCompressionMode,The length of the statement  "                acceptEncodingToUse = acceptEncodingValues.Where(x => (x.Identity.Equals(Deflate' StringComparison.InvariantCultureIgnoreCase) || x.Identity.Equals(Gzip' StringComparison.InvariantCultureIgnoreCase) || x.Identity.Equals(Xgzip' StringComparison.InvariantCultureIgnoreCase)) && (!x.QValue.HasValue || x.QValue.Value > 0)).FirstOrDefault(); " is 337.
Long Statement,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,CheckUnlessModifiedSince,The length of the statement  "            var requestHeaderUnlessModifiedSince = GetHttpHeaderValue(request' HttpRequestHeader.UnlessModifiedSince' string.Empty); " is 120.
Long Statement,Talifun.Web.Helper,RetryableFileWriter,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\RetryableFileWriter.cs,SaveContentsToFile,The length of the statement  "            using (var outputFile = RetryableFileOpener.OpenFileStream(outputPath' 5' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.None))" is 135.
Long Statement,Talifun.Web.Compress,CompressionModuleHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\CompressionModuleHelper.cs,IsAjaxPostBackRequest,The length of the statement  "            return httpContext.Request.Headers["X-MicrosoftAjax"] != null || httpContext.Request.ContentType.ToLower().Contains("application/json"); " is 136.
Long Statement,Talifun.Web.Compress,CompressionModuleHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\CompressionModuleHelper.cs,IsCompressionSupported,The length of the statement  "            if (context.Request.Headers["Accept-encoding"] == null || !(context.Request.Headers["Accept-encoding"].Contains(GZIP) || context.Request.Headers["Accept-encoding"].Contains(DEFLATE))) " is 183.
Long Statement,Talifun.Web.Compress,Quadruplet<TFirst;TSecond;TThird;TFourth>,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\Quadruplet.cs,Equals,The length of the statement  "            return (other != null) && (other.First.Equals(First)) && (other.Second.Equals(Second)) && (other.Third.Equals(Third)) && (other.Forth.Equals(Forth)); " is 149.
Long Statement,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,OnPreRequestHandlerExecute,The length of the statement  "                // If the WebResource needs to perform substitution (WebResource inside WebResource)' we leave it to the original AssemblyResourceLoader handler ;-) " is 148.
Long Statement,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,CompressAndWriteToStream,The length of the statement  "            var compressionType = CompressionModuleHelper.IsSpecificEncodingSupported(context' CompressionModuleHelper.GZIP) ? CompressionModuleHelper.GZIP : CompressionModuleHelper.DEFLATE; " is 178.
Long Statement,Talifun.Web.Compress,PageCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\PageCompressionModule.cs,OnPostAcquireRequestState,The length of the statement  "            // Because there is a problem with async postbacks compression' we check here if the current request if an 'MS AJAX' call. " is 122.
Long Statement,Talifun.Web.Compress,PageCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\PageCompressionModule.cs,OnPostAcquireRequestState,The length of the statement  "            if (!(httpContext.CurrentHandler is Page || httpContext.CurrentHandler.GetType().BaseType.FullName == "System.Web.Mvc.MvcHandler") || CompressionModuleHelper.IsAjaxPostBackRequest(httpContext)) return; " is 201.
Long Statement,Talifun.Web.LogUrl,LogUrlModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\LogUrl\LogUrlModule.cs,OnEndRequest,The length of the statement  "            if (application.Context.Error != null || !(application.Response.StatusCode == (int)HttpStatusCode.Ok || application.Response.StatusCode == (int)HttpStatusCode.NotModified)) return; " is 180.
Long Statement,Talifun.Web.RegexUrlAuthorization.Config,UrlMatchElement,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\RegexUrlAuthorization\Config\UrlMatchElement.cs,PostDeserialize,The length of the statement  "                this.everyoneAllowed = (rule.Action == AuthorizationRuleAction.Allow) && (bool)everyoneAllowedProperty.GetValue(rule' null); " is 124.
Long Statement,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,GetTransmitEntityStrategy,The length of the statement  "                return new TransmitEntityStrategyForEmbeddedResource(EmbeddedResourceLoader' entityCacheItem' _assembly' _resourcePath' BufferSize); " is 132.
Long Statement,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,TryGetFileHandlerCacheItem,The length of the statement  "                //When a browser sets the If-Modified-Since field to 13-1-2010 10:30:58' another DateTime instance is created' but this one has a Ticks value of 633989754580000000 " is 163.
Long Statement,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,TryGetFileHandlerCacheItem,The length of the statement  "                //Put fileHandlerCacheItem into cache with 30 min sliding expiration' also if file changes then remove fileHandlerCacheItem from cache " is 134.
Long Statement,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,GetEntityData,The length of the statement  "            using (var outputStream = (compressionType == ResponseCompressionType.None ? stream : (compressionType == ResponseCompressionType.GZip ? (Stream)new GZipStream(stream' CompressionMode.Compress' true) : (Stream)new DeflateStream(stream' CompressionMode.Compress)))) " is 264.
Long Statement,Talifun.Web.StaticFile,FileEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\FileEntityResponder.cs,TryGetFileHandlerCacheItem,The length of the statement  "                //When a browser sets the If-Modified-Since field to 13-1-2010 10:30:58' another DateTime instance is created' but this one has a Ticks value of 633989754580000000 " is 163.
Long Statement,Talifun.Web.StaticFile,FileEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\FileEntityResponder.cs,TryGetFileHandlerCacheItem,The length of the statement  "                //Put fileHandlerCacheItem into cache with 30 min sliding expiration' also if file changes then remove fileHandlerCacheItem from cache " is 134.
Long Statement,Talifun.Web.StaticFile,FileEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\FileEntityResponder.cs,GetEntityData,The length of the statement  "            using (var outputStream = (compressionType == ResponseCompressionType.None ? stream : (compressionType == ResponseCompressionType.GZip ? (Stream)new GZipStream(stream' CompressionMode.Compress' true) : (Stream)new DeflateStream(stream' CompressionMode.Compress)))) " is 264.
Long Statement,Talifun.Web.StaticFile,FileEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\FileEntityResponder.cs,GetEntityData,The length of the statement  "                using (var fileStream = RetryableFileOpener.OpenFileStream(FileInfo' 5' FileMode.Open' FileAccess.Read' FileShare.Read)) " is 120.
Long Statement,Talifun.Web.StaticFile,StaticFileManager,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\StaticFileManager.cs,ProcessRequest,The length of the statement  "            var fileEntity = new FileEntityResponder(_cacheManager' _retryableFileOpener' _mimeTyper' _hasher' MaxFileSizeToServe' BufferSize' _mimeSettingProvider' file); " is 159.
Long Statement,Talifun.Web.StaticFile,StaticFileManager,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\StaticFileManager.cs,ProcessRequest,The length of the statement  "            var fileEntity = new EmbeddedResourceEntityResponder(_cacheManager' _mimeTyper' _hasher' _embeddedResourceLoader' MaxFileSizeToServe' BufferSize' _mimeSettingProvider' assembly' resourcePath); " is 192.
Long Statement,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,ServeRequest,The length of the statement  "                //If we have cached the properties of the file but its to large to serve from memory then we must check that the file exists each time. " is 135.
Long Statement,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,ServeRequest,The length of the statement  "            var urlEtagHandler = GetUrlEtagHandler(request' response' entityResponder.UrlEtagHandlingMethod' entityResponder.UrlEtagQuerystringName' fileEntityCacheItem.Etag); " is 163.
Long Statement,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,ServeRequest,The length of the statement  "            HttpResponseHeaderHelper.SetResponseCachable(response' DateTime.Now' fileEntityCacheItem.LastModified' fileEntityCacheItem.Etag' entityResponder.Expires); " is 154.
Long Statement,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetUrlEtagHandler,The length of the statement  "            if (urlEtagHandlingMethod == UrlEtagHandlingMethodType.None || !HttpRequestHeaderHelper.HasQuerystringParameter(request' urlEtagQuerystringName)) " is 145.
Long Statement,Talifun.Web.StaticFile,WebServerDetector,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\WebServerDetector.cs,GetWorkerRequestViaReflection,The length of the statement  "            var wrField = request.GetType().GetField("_wr"' bindingFlags) ?? request.GetType().GetField("worker_request"' bindingFlags); " is 124.
Long Statement,Talifun.Web.StaticFile,WebServerDetector,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\WebServerDetector.cs,DetectWebServerType,The length of the statement  "            var worker = (HttpWorkerRequest)provider.GetService(HttpWorkerRequestType) ?? GetWorkerRequestViaReflection(context.Request); " is 125.
Complex Conditional,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The conditional expression  "!(ifNoneMatch.HasValue && ifNoneMatch.Value) || !(ifMatch.HasValue && !ifMatch.Value)"  is complex.
Empty Catch Block,Talifun.Web.Module,HttpModuleRegistry,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Module\HttpModuleRegistry.cs,GetModules,The method has an empty catch block.
Magic Number,Talifun.Web,UrlHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\UrlHelper.cs,TryParseUrl,The following statement contains a magic number: fileName = matchForUrl.Groups[2].Value;
Magic Number,Talifun.Web,UrlHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\UrlHelper.cs,TryParseUrl,The following statement contains a magic number: fileExtension = matchForUrl.Groups[3].Value;
Magic Number,Talifun.Web,UrlHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\UrlHelper.cs,TryParseUrl,The following statement contains a magic number: queryString = HttpUtility.ParseQueryString(matchForUrl.Groups[5].Value);
Magic Number,Talifun.Web,UrlHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\UrlHelper.cs,TryParseUrl,The following statement contains a magic number: bookMark = matchForUrl.Groups[7].Value;
Magic Number,Talifun.Web,HttpRequestHeaderHelper,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\HttpRequestHeaderHelper.cs,GetRanges,The following statement contains a magic number: currentRangeString.Length != 2
Magic Number,Talifun.Web.Helper,ParallelExecute,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Helper\ParallelExecute.cs,EachParallel,The following statement contains a magic number: ThreadPool.QueueUserWorkItem((object data) =>                      {                          var manualResetEvent = (CountdownEvent)((object[])data)[0];                          var actionToExecute = (Action<T>)((object[])data)[1];                          var itemForAction = (T)((object[])data)[2];                            // Execute the method and pass in the enumerated item                          actionToExecute(itemForAction);                            // Tell the calling thread that we're done                          manualResetEvent.Signal();                      }' new object[] { countdownEvents' action' item });
Magic Number,Talifun.Web.Compress,Quadruplet<TFirst;TSecond;TThird;TFourth>,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\Quadruplet.cs,GetHashCode,The following statement contains a magic number: var ab = ((a << 5) + a) ^ Second.GetHashCode();
Magic Number,Talifun.Web.Compress,Quadruplet<TFirst;TSecond;TThird;TFourth>,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\Quadruplet.cs,GetHashCode,The following statement contains a magic number: var cd = ((c << 5) + a) ^ Third.GetHashCode();
Magic Number,Talifun.Web.Compress,Quadruplet<TFirst;TSecond;TThird;TFourth>,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\Quadruplet.cs,GetHashCode,The following statement contains a magic number: return ((ab << 5) + ab) ^ cd.GetHashCode();
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,OnPreRequestHandlerExecute,The following statement contains a magic number: ThrowHttpException(404' SR.WebResourceCompressionModuleAssemblyNotFound' urlInfo.Forth);
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,OnPreRequestHandlerExecute,The following statement contains a magic number: ThrowHttpException(404' SR.WebResourceCompressionModuleAssemblyNotFound' urlInfo.Forth);
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,StreamCopy,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetAssembly,The following statement contains a magic number: switch (signal)              {                  case 's':                      assembly = typeof(AssemblyResourceLoader).Assembly;                      break;                  case 'p':                      assembly = Assembly.Load(assemblyName);                      break;                  case 'f':                      {                          var strArray = assemblyName.Split(new char[] { ''' });                          if (strArray.Length != 4)                          {                              ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                          }                          var assemblyRef = new AssemblyName                                                {                                                    Name = strArray[0]'                                                    Version = new Version(strArray[1])                                                };                          var name = strArray[2];                          assemblyRef.CultureInfo = name.Length > 0 ? new CultureInfo(name) : CultureInfo.InvariantCulture;                          var tokens = strArray[3];                          var publicKeyToken = new byte[tokens.Length / 2];                          for (var i = 0; i < publicKeyToken.Length; i++)                          {                              publicKeyToken[i] = byte.Parse(tokens.Substring(i * 2' 2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);                          }                          assemblyRef.SetPublicKeyToken(publicKeyToken);                          assembly = Assembly.Load(assemblyRef);                          break;                      }                  default:                      ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                      break;              }
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetAssembly,The following statement contains a magic number: switch (signal)              {                  case 's':                      assembly = typeof(AssemblyResourceLoader).Assembly;                      break;                  case 'p':                      assembly = Assembly.Load(assemblyName);                      break;                  case 'f':                      {                          var strArray = assemblyName.Split(new char[] { ''' });                          if (strArray.Length != 4)                          {                              ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                          }                          var assemblyRef = new AssemblyName                                                {                                                    Name = strArray[0]'                                                    Version = new Version(strArray[1])                                                };                          var name = strArray[2];                          assemblyRef.CultureInfo = name.Length > 0 ? new CultureInfo(name) : CultureInfo.InvariantCulture;                          var tokens = strArray[3];                          var publicKeyToken = new byte[tokens.Length / 2];                          for (var i = 0; i < publicKeyToken.Length; i++)                          {                              publicKeyToken[i] = byte.Parse(tokens.Substring(i * 2' 2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);                          }                          assemblyRef.SetPublicKeyToken(publicKeyToken);                          assembly = Assembly.Load(assemblyRef);                          break;                      }                  default:                      ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                      break;              }
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetAssembly,The following statement contains a magic number: switch (signal)              {                  case 's':                      assembly = typeof(AssemblyResourceLoader).Assembly;                      break;                  case 'p':                      assembly = Assembly.Load(assemblyName);                      break;                  case 'f':                      {                          var strArray = assemblyName.Split(new char[] { ''' });                          if (strArray.Length != 4)                          {                              ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                          }                          var assemblyRef = new AssemblyName                                                {                                                    Name = strArray[0]'                                                    Version = new Version(strArray[1])                                                };                          var name = strArray[2];                          assemblyRef.CultureInfo = name.Length > 0 ? new CultureInfo(name) : CultureInfo.InvariantCulture;                          var tokens = strArray[3];                          var publicKeyToken = new byte[tokens.Length / 2];                          for (var i = 0; i < publicKeyToken.Length; i++)                          {                              publicKeyToken[i] = byte.Parse(tokens.Substring(i * 2' 2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);                          }                          assemblyRef.SetPublicKeyToken(publicKeyToken);                          assembly = Assembly.Load(assemblyRef);                          break;                      }                  default:                      ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                      break;              }
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetAssembly,The following statement contains a magic number: switch (signal)              {                  case 's':                      assembly = typeof(AssemblyResourceLoader).Assembly;                      break;                  case 'p':                      assembly = Assembly.Load(assemblyName);                      break;                  case 'f':                      {                          var strArray = assemblyName.Split(new char[] { ''' });                          if (strArray.Length != 4)                          {                              ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                          }                          var assemblyRef = new AssemblyName                                                {                                                    Name = strArray[0]'                                                    Version = new Version(strArray[1])                                                };                          var name = strArray[2];                          assemblyRef.CultureInfo = name.Length > 0 ? new CultureInfo(name) : CultureInfo.InvariantCulture;                          var tokens = strArray[3];                          var publicKeyToken = new byte[tokens.Length / 2];                          for (var i = 0; i < publicKeyToken.Length; i++)                          {                              publicKeyToken[i] = byte.Parse(tokens.Substring(i * 2' 2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);                          }                          assemblyRef.SetPublicKeyToken(publicKeyToken);                          assembly = Assembly.Load(assemblyRef);                          break;                      }                  default:                      ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                      break;              }
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetAssembly,The following statement contains a magic number: switch (signal)              {                  case 's':                      assembly = typeof(AssemblyResourceLoader).Assembly;                      break;                  case 'p':                      assembly = Assembly.Load(assemblyName);                      break;                  case 'f':                      {                          var strArray = assemblyName.Split(new char[] { ''' });                          if (strArray.Length != 4)                          {                              ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                          }                          var assemblyRef = new AssemblyName                                                {                                                    Name = strArray[0]'                                                    Version = new Version(strArray[1])                                                };                          var name = strArray[2];                          assemblyRef.CultureInfo = name.Length > 0 ? new CultureInfo(name) : CultureInfo.InvariantCulture;                          var tokens = strArray[3];                          var publicKeyToken = new byte[tokens.Length / 2];                          for (var i = 0; i < publicKeyToken.Length; i++)                          {                              publicKeyToken[i] = byte.Parse(tokens.Substring(i * 2' 2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);                          }                          assemblyRef.SetPublicKeyToken(publicKeyToken);                          assembly = Assembly.Load(assemblyRef);                          break;                      }                  default:                      ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                      break;              }
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetAssembly,The following statement contains a magic number: switch (signal)              {                  case 's':                      assembly = typeof(AssemblyResourceLoader).Assembly;                      break;                  case 'p':                      assembly = Assembly.Load(assemblyName);                      break;                  case 'f':                      {                          var strArray = assemblyName.Split(new char[] { ''' });                          if (strArray.Length != 4)                          {                              ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                          }                          var assemblyRef = new AssemblyName                                                {                                                    Name = strArray[0]'                                                    Version = new Version(strArray[1])                                                };                          var name = strArray[2];                          assemblyRef.CultureInfo = name.Length > 0 ? new CultureInfo(name) : CultureInfo.InvariantCulture;                          var tokens = strArray[3];                          var publicKeyToken = new byte[tokens.Length / 2];                          for (var i = 0; i < publicKeyToken.Length; i++)                          {                              publicKeyToken[i] = byte.Parse(tokens.Substring(i * 2' 2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);                          }                          assemblyRef.SetPublicKeyToken(publicKeyToken);                          assembly = Assembly.Load(assemblyRef);                          break;                      }                  default:                      ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                      break;              }
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetAssembly,The following statement contains a magic number: switch (signal)              {                  case 's':                      assembly = typeof(AssemblyResourceLoader).Assembly;                      break;                  case 'p':                      assembly = Assembly.Load(assemblyName);                      break;                  case 'f':                      {                          var strArray = assemblyName.Split(new char[] { ''' });                          if (strArray.Length != 4)                          {                              ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                          }                          var assemblyRef = new AssemblyName                                                {                                                    Name = strArray[0]'                                                    Version = new Version(strArray[1])                                                };                          var name = strArray[2];                          assemblyRef.CultureInfo = name.Length > 0 ? new CultureInfo(name) : CultureInfo.InvariantCulture;                          var tokens = strArray[3];                          var publicKeyToken = new byte[tokens.Length / 2];                          for (var i = 0; i < publicKeyToken.Length; i++)                          {                              publicKeyToken[i] = byte.Parse(tokens.Substring(i * 2' 2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);                          }                          assemblyRef.SetPublicKeyToken(publicKeyToken);                          assembly = Assembly.Load(assemblyRef);                          break;                      }                  default:                      ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                      break;              }
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetAssembly,The following statement contains a magic number: switch (signal)              {                  case 's':                      assembly = typeof(AssemblyResourceLoader).Assembly;                      break;                  case 'p':                      assembly = Assembly.Load(assemblyName);                      break;                  case 'f':                      {                          var strArray = assemblyName.Split(new char[] { ''' });                          if (strArray.Length != 4)                          {                              ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                          }                          var assemblyRef = new AssemblyName                                                {                                                    Name = strArray[0]'                                                    Version = new Version(strArray[1])                                                };                          var name = strArray[2];                          assemblyRef.CultureInfo = name.Length > 0 ? new CultureInfo(name) : CultureInfo.InvariantCulture;                          var tokens = strArray[3];                          var publicKeyToken = new byte[tokens.Length / 2];                          for (var i = 0; i < publicKeyToken.Length; i++)                          {                              publicKeyToken[i] = byte.Parse(tokens.Substring(i * 2' 2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);                          }                          assemblyRef.SetPublicKeyToken(publicKeyToken);                          assembly = Assembly.Load(assemblyRef);                          break;                      }                  default:                      ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);                      break;              }
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetDataFromQuery,The following statement contains a magic number: ThrowHttpException(400' SR.WebResourceCompressionModuleInvalidRequest);
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetDataFromQuery,The following statement contains a magic number: ThrowHttpException(404' SR.WebResourceCompressionModuleAssemblyNotFound' decryptedParam);
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetDataFromQuery,The following statement contains a magic number: pipeIndex < 1 || pipeIndex > (decryptedParam.Length - 2)
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetDataFromQuery,The following statement contains a magic number: ThrowHttpException(404' SR.WebResourceCompressionModuleResourceNotFound' decryptedParam);
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,GetDataFromQuery,The following statement contains a magic number: pipeIndex > (decryptedParam.Length - 2)
Magic Number,Talifun.Web.Compress,WebResourceCompressionModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Compress\WebResourceCompressionModule.cs,CombineHashCodes,The following statement contains a magic number: return (((hash1 << 5) + hash1) ^ hash2);
Magic Number,Talifun.Web.IpAddressAuthentication,IpAddressAuthenticationModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\IpAddressAuthentication\IpAddressAuthenticationModule.cs,OnEnter,The following statement contains a magic number: context.Response.StatusCode = 403;
Magic Number,Talifun.Web.RegexUrlAuthorization,RegexUrlAuthorizationModule,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\RegexUrlAuthorization\RegexUrlAuthorizationModule.cs,OnEnter,The following statement contains a magic number: context.Response.StatusCode = 401;
Magic Number,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,EmbeddedResourceEntityResponder,The following statement contains a magic number: ResourceLastModified = new DateTime(2000' 1' 1)                  .AddDays(version.Build)                  .AddSeconds(version.Revision * 2)                  .ToUniversalTime();
Magic Number,Talifun.Web.StaticFile,EmbeddedResourceEntityResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\EmbeddedResourceEntityResponder.cs,EmbeddedResourceEntityResponder,The following statement contains a magic number: ResourceLastModified = new DateTime(2000' 1' 1)                  .AddDays(version.Build)                  .AddSeconds(version.Revision * 2)                  .ToUniversalTime();
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299 || (int)responseCode == 304))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299))
Magic Number,Talifun.Web.StaticFile,HttpRequestResponder,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\HttpRequestResponder.cs,GetResponseHttpStatus,The following statement contains a magic number: (((int)responseCode >= 200 && (int)responseCode <= 299))
Magic Number,Talifun.Web.StaticFile,WebServerDetector,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\WebServerDetector.cs,DetectWebServerType,The following statement contains a magic number: switch (workerType.FullName)                      {                          case "System.Web.Hosting.ISAPIWorkerRequest":                              //IIS 7 in Classic mode gets lumped in here too                              WebServerType = WebServerType.IIS6orIIS7ClassicMode;                              break;                          case "Microsoft.VisualStudio.WebHost.Request":                              {                                  var version = workerType.Assembly.GetName().Version.Major;                                  if (version >= 11)                                  {                                      WebServerType = WebServerType.VisualStudio2012;                                  }                                  else if (version > 10)                                  {                                      WebServerType = WebServerType.VisualStudio2010;                                  }                                  else if (version > 9)                                  {                                      WebServerType = WebServerType.VisualStudio2008;                                  }                                  else                                  {                                      WebServerType = WebServerType.Cassini;                                  }                                  break;                              }                          case "Cassini.Request":                              {                                  var version = workerType.Assembly.GetName().Version.Major;                                  if (version > 9)                                  {                                      WebServerType = WebServerType.IIS7;                                  }                                  else                                  {                                      WebServerType = WebServerType.Cassini;                                  }                                  break;                              }                          case "System.Web.Hosting.IIS7WorkerRequest":                              WebServerType = WebServerType.IIS7;                              break;                          default:                              WebServerType = WebServerType.Unknown;                              break;                      }
Magic Number,Talifun.Web.StaticFile,WebServerDetector,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\WebServerDetector.cs,DetectWebServerType,The following statement contains a magic number: switch (workerType.FullName)                      {                          case "System.Web.Hosting.ISAPIWorkerRequest":                              //IIS 7 in Classic mode gets lumped in here too                              WebServerType = WebServerType.IIS6orIIS7ClassicMode;                              break;                          case "Microsoft.VisualStudio.WebHost.Request":                              {                                  var version = workerType.Assembly.GetName().Version.Major;                                  if (version >= 11)                                  {                                      WebServerType = WebServerType.VisualStudio2012;                                  }                                  else if (version > 10)                                  {                                      WebServerType = WebServerType.VisualStudio2010;                                  }                                  else if (version > 9)                                  {                                      WebServerType = WebServerType.VisualStudio2008;                                  }                                  else                                  {                                      WebServerType = WebServerType.Cassini;                                  }                                  break;                              }                          case "Cassini.Request":                              {                                  var version = workerType.Assembly.GetName().Version.Major;                                  if (version > 9)                                  {                                      WebServerType = WebServerType.IIS7;                                  }                                  else                                  {                                      WebServerType = WebServerType.Cassini;                                  }                                  break;                              }                          case "System.Web.Hosting.IIS7WorkerRequest":                              WebServerType = WebServerType.IIS7;                              break;                          default:                              WebServerType = WebServerType.Unknown;                              break;                      }
Magic Number,Talifun.Web.StaticFile,WebServerDetector,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\WebServerDetector.cs,DetectWebServerType,The following statement contains a magic number: switch (workerType.FullName)                      {                          case "System.Web.Hosting.ISAPIWorkerRequest":                              //IIS 7 in Classic mode gets lumped in here too                              WebServerType = WebServerType.IIS6orIIS7ClassicMode;                              break;                          case "Microsoft.VisualStudio.WebHost.Request":                              {                                  var version = workerType.Assembly.GetName().Version.Major;                                  if (version >= 11)                                  {                                      WebServerType = WebServerType.VisualStudio2012;                                  }                                  else if (version > 10)                                  {                                      WebServerType = WebServerType.VisualStudio2010;                                  }                                  else if (version > 9)                                  {                                      WebServerType = WebServerType.VisualStudio2008;                                  }                                  else                                  {                                      WebServerType = WebServerType.Cassini;                                  }                                  break;                              }                          case "Cassini.Request":                              {                                  var version = workerType.Assembly.GetName().Version.Major;                                  if (version > 9)                                  {                                      WebServerType = WebServerType.IIS7;                                  }                                  else                                  {                                      WebServerType = WebServerType.Cassini;                                  }                                  break;                              }                          case "System.Web.Hosting.IIS7WorkerRequest":                              WebServerType = WebServerType.IIS7;                              break;                          default:                              WebServerType = WebServerType.Unknown;                              break;                      }
Magic Number,Talifun.Web.StaticFile,WebServerDetector,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\StaticFile\WebServerDetector.cs,DetectWebServerType,The following statement contains a magic number: switch (workerType.FullName)                      {                          case "System.Web.Hosting.ISAPIWorkerRequest":                              //IIS 7 in Classic mode gets lumped in here too                              WebServerType = WebServerType.IIS6orIIS7ClassicMode;                              break;                          case "Microsoft.VisualStudio.WebHost.Request":                              {                                  var version = workerType.Assembly.GetName().Version.Major;                                  if (version >= 11)                                  {                                      WebServerType = WebServerType.VisualStudio2012;                                  }                                  else if (version > 10)                                  {                                      WebServerType = WebServerType.VisualStudio2010;                                  }                                  else if (version > 9)                                  {                                      WebServerType = WebServerType.VisualStudio2008;                                  }                                  else                                  {                                      WebServerType = WebServerType.Cassini;                                  }                                  break;                              }                          case "Cassini.Request":                              {                                  var version = workerType.Assembly.GetName().Version.Major;                                  if (version > 9)                                  {                                      WebServerType = WebServerType.IIS7;                                  }                                  else                                  {                                      WebServerType = WebServerType.Cassini;                                  }                                  break;                              }                          case "System.Web.Hosting.IIS7WorkerRequest":                              WebServerType = WebServerType.IIS7;                              break;                          default:                              WebServerType = WebServerType.Unknown;                              break;                      }
Missing Default,Talifun.Web,EntityResponseMultiPart,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\EntityResponseMultiPart.cs,SendHeaders,The following switch statement is missing a default case: switch (compressionType)              {                  case ResponseCompressionType.None:                      var partialContentLength = GetMultipartPartialRequestLength(Ranges' entity.ContentType' entity.ContentLength);                      HttpResponseHeaderHelper.AppendHeader(response' HttpHeaderContentLength' partialContentLength.ToString());                      break;                  case ResponseCompressionType.GZip:                      response.BufferOutput = true;                      response.Filter = new GZipStream(response.Filter' CompressionMode.Compress);                      //This means that the output stream will be chunked' so we don't have to worry about content length                      break;                  case ResponseCompressionType.Deflate:                      response.BufferOutput = true;                      response.Filter = new DeflateStream(response.Filter' CompressionMode.Compress);                      //This means that the output stream will be chunked' so we don't have to worry about content length                      break;              }
Missing Default,Talifun.Web,EntityResponseFull,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\EntityResponseFull.cs,SendHeaders,The following switch statement is missing a default case: switch (compressionType)                  {                      case ResponseCompressionType.GZip:                          response.BufferOutput = true;                          response.Filter = new GZipStream(response.Filter' CompressionMode.Compress' true);                          //This means that the output stream will be chunked' so we don't have to worry about content length                          break;                      case ResponseCompressionType.Deflate:                          response.BufferOutput = true;                          response.Filter = new DeflateStream(response.Filter' CompressionMode.Compress' true);                          //This means that the output stream will be chunked' so we don't have to worry about content length                          break;                  }
Missing Default,Talifun.Web,EntityResponseSinglePart,D:\research\architectureSmells\repos1\taliesins_talifun-web\src\Talifun.Web\Http\EntityResponseSinglePart.cs,SendHeaders,The following switch statement is missing a default case: switch (compressionType)              {                  case ResponseCompressionType.None:                      var contentLength = Range.EndRange - Range.StartRange + 1;                      HttpResponseHeaderHelper.AppendHeader(response' HttpHeaderContentLength' contentLength.ToString());                      break;                  case ResponseCompressionType.GZip:                      response.BufferOutput = true;                      response.Filter = new GZipStream(response.Filter' CompressionMode.Compress);                      //This means that the output stream will be chunked' so we don't have to worry about content length                      break;                  case ResponseCompressionType.Deflate:                      response.BufferOutput = true;                      response.Filter = new DeflateStream(response.Filter' CompressionMode.Compress);                      //This means that the output stream will be chunked' so we don't have to worry about content length                      break;              }
