Implementation smell,Namespace,Class,File,Method,Description
Long Method,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The method has 201 lines of code.
Complex Method,Talifun.Crusher.CommandLine.Options,Option,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\Option.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Long Parameter List,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The length of the statement  "                    "the configuration path to the web.config or app.config file. E.g. ../../../Talifun.Web.Examples/Crusher.Demo/web.config"' " is 122.
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The length of the statement  "                    "the section name of the configuration element for the Talifun.Crusher configuration. Defaults to 'Crusher' if not specified."' " is 127.
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The length of the statement  "                    "the section name of the configuration element for the Talifun.CssSprite configuration. Defaults to 'CssSprite' if not specified."' " is 131.
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The length of the statement  "                            var cssSpriteCreator = new CssSpriteCreator(cacheManager' retryableFileOpener' pathProvider' retryableFileWriter' fileMetaData); " is 128.
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The length of the statement  "                            var cssCrusher = new CssCrusher(cacheManager' pathProvider' retryableFileOpener' retryableFileWriter' cssPathRewriter' fileMetaData' crusherConfiguration.WatchAssets); " is 167.
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The length of the statement  "                    Console.WriteLine("Skipping css sprite creation. \"{0}\" section name not found in \"{1}\""' cssSpriteSectionName' configPath); " is 127.
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The length of the statement  "                    Console.WriteLine("Skipping css/js crushed content creation. \"{0}\" section name not found in \"{1}\""' crusherSectionName' configPath); " is 137.
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,DisplayHelp,The length of the statement  "            Console.WriteLine("Talifun.Crusher will crush js/css files and create css sprite images as specified in .config file."); " is 120.
Long Statement,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,DisplayHelp,The length of the statement  "			Console.WriteLine("Use this when you want to crush the js/css files and create css sprite images as part of your build process. Useful if you need to deploy to a CDN or you can't run the http module as it requires medium trust."); " is 230.
Complex Conditional,Talifun.Crusher.CommandLine.Options,Option,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\Option.cs,Option,The conditional expression  "Array.IndexOf(names' "<>") >= 0 &&                      ((names.Length == 1 && this.type != OptionValueType.None) ||                       (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n[n.Length - 1] == '+' || n[n.Length - 1] == '-') &&                      Contains((rn = n.Substring(0' n.Length - 1)))"  is complex.
Complex Conditional,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The conditional expression  "string.IsNullOrEmpty(jsOutput) && string.IsNullOrEmpty(cssOutput) && !jsExceptions.Any() && !cssExceptions.Any()"  is complex.
Magic Number,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,Add,The following statement contains a magic number: Option p = new ActionOption(prototype' description' 2'                      delegate(OptionValueCollection v) { action(v[0]' v[1]); });
Magic Number,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this)              {                  int written = 0;                  if (!WriteOptionPrototype(o' p' ref written))                      continue;                    if (written < OptionWidth)                      o.Write(new string(' '' OptionWidth - written));                  else                  {                      o.WriteLine();                      o.Write(new string(' '' OptionWidth));                  }                    List<string> lines = GetLines(localizer(GetDescription(p.Description)));                  o.WriteLine(lines[0]);                  string prefix = new string(' '' OptionWidth + 2);                  for (int i = 1; i < lines.Count; ++i)                  {                      o.Write(prefix);                      o.WriteLine(lines[i]);                  }              }
Magic Number,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,Talifun.Crusher.CommandLine,Program,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Program.cs,Main,The following statement contains a magic number: try          	{  				Console.WriteLine();  				Console.WriteLine("Settings used:");  				Console.WriteLine("configPath = " + configPath);  				Console.WriteLine("crusherSectionName = " + crusherSectionName);  				Console.WriteLine("applicationPath = " + applicationPath);            	    var configUri = new Uri(configPath' UriKind.RelativeOrAbsolute);                  if (!configUri.IsAbsoluteUri)                  {                      configUri = new Uri(Path.Combine(Environment.CurrentDirectory' configUri.ToString()));                  }                    var physicalApplicationPath = new FileInfo(configUri.LocalPath).DirectoryName;    				var retryableFileOpener = new RetryableFileOpener();  				var hasher = new Md5Hasher(retryableFileOpener);  				var retryableFileWriter = new RetryableFileWriter(BufferSize' Encoding' retryableFileOpener' hasher);  				var pathProvider = new PathProvider(applicationPath' physicalApplicationPath);  				var cacheManager = new HttpCacheManager();                    var fileMetaData = new MultiFileMetaData(retryableFileOpener' retryableFileWriter);            	    var jsOutput = string.Empty;          	    var cssOutput = string.Empty;                  var cssSpriteOutput = string.Empty;                         //We want to be able to use output from css sprites in crushed content                  var countdownEvents = new CountdownEvent(3);                    var cssSpriteExceptions = new List<CssSpriteException>();                  ThreadPool.QueueUserWorkItem(data =>                  {                      var manualResetEvent = (CountdownEvent)data;                      try                      {                          if (crusherConfiguration != null)                          {                              var cssSpriteGroups = crusherConfiguration.CssSpriteGroups;                              var cssSpriteCreator = new CssSpriteCreator(cacheManager' retryableFileOpener' pathProvider' retryableFileWriter' fileMetaData);                              var cssSpriteGroupsProcessor = new CssSpriteGroupsProcessor();                                cssSpriteOutput = cssSpriteGroupsProcessor.ProcessGroups(pathProvider' cssSpriteCreator' cssSpriteGroups).ToString();                          }                      }                      catch (Exception exception)                      {                          cssSpriteExceptions.Add(new CssSpriteException(exception));                      }                      manualResetEvent.Signal();                  }' countdownEvents);                    var jsExceptions = new List<JsException>();                  ThreadPool.QueueUserWorkItem(data =>                  {                      var manualResetEvent = (CountdownEvent)data;                      try                      {                          if (crusherConfiguration != null)                          {                              var jsCrusher = new JsCrusher(cacheManager' pathProvider' retryableFileOpener' retryableFileWriter' fileMetaData);                              var jsGroups = crusherConfiguration.JsGroups;                              var jsGroupsProcessor = new JsGroupsProcessor();                                jsOutput = jsGroupsProcessor.ProcessGroups(pathProvider' jsCrusher' jsGroups).ToString();                          }                      }                      catch (Exception exception)                      {                          jsExceptions.Add(new JsException(exception));                      }                      manualResetEvent.Signal();                  }' countdownEvents);                    var cssExceptions = new List<CssException>();                  ThreadPool.QueueUserWorkItem(data =>                  {                      var manualResetEvent = (CountdownEvent)data;                      try                      {                          if (crusherConfiguration != null)                          {                              var hashQueryStringKeyName = crusherConfiguration.QuerystringKeyName;                              var cssAssetsFileHasher = new CssAssetsFileHasher(hashQueryStringKeyName' hasher' pathProvider);                              var cssPathRewriter = new CssPathRewriter(cssAssetsFileHasher' pathProvider);                              var cssCrusher = new CssCrusher(cacheManager' pathProvider' retryableFileOpener' retryableFileWriter' cssPathRewriter' fileMetaData' crusherConfiguration.WatchAssets);                              var cssGroups = crusherConfiguration.CssGroups;                              var cssGroupsCrusher = new CssGroupsProcessor();                              cssOutput = cssGroupsCrusher.ProcessGroups(pathProvider' cssCrusher' cssGroups).ToString();                          }                      }                      catch (Exception exception)                      {                          cssExceptions.Add(new CssException(exception));                      }                      manualResetEvent.Signal();                  }' countdownEvents);            	    countdownEvents.Wait();                    if (string.IsNullOrEmpty(cssSpriteOutput) && !cssSpriteExceptions.Any())                  {                      Console.WriteLine();                      Console.WriteLine("Skipping css sprite creation. \"{0}\" section name not found in \"{1}\""' cssSpriteSectionName' configPath);                  }                  else                  {                      Console.WriteLine();                      Console.WriteLine(cssSpriteOutput);                        if (cssSpriteExceptions.Any())                      {                          Console.WriteLine("Css sprite errors:");                          Console.WriteLine(new AggregateException(cssSpriteExceptions.Cast<Exception>()));                      }                  }                    if (string.IsNullOrEmpty(jsOutput) && string.IsNullOrEmpty(cssOutput) && !jsExceptions.Any() && !cssExceptions.Any())                  {                      Console.WriteLine();                      Console.WriteLine("Skipping css/js crushed content creation. \"{0}\" section name not found in \"{1}\""' crusherSectionName' configPath);                  }                  else                  {                      Console.WriteLine();                      Console.WriteLine(cssOutput);                      if (cssExceptions.Any())                      {                          Console.WriteLine("Css errors:");                          Console.WriteLine(new AggregateException(cssExceptions.Cast<Exception>()));                      }                        Console.WriteLine();                      Console.WriteLine(jsOutput);                      if (jsExceptions.Any())                      {                          Console.WriteLine("Js errors:");                          Console.WriteLine(new AggregateException(jsExceptions.Cast<Exception>()));                      }                  }  			}  			catch (Exception exception)  			{  				Console.Write(exception);  				return ErrorExitCode;  			}
Missing Default,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType)                  {                      case OptionValueType.None:                          c.OptionValues.Add(n);                          c.Option.Invoke(c);                          break;                      case OptionValueType.Optional:                      case OptionValueType.Required:                          ParseValue(v' c);                          break;                  }
Missing Default,Talifun.Crusher.CommandLine.Options,OptionSet,C:\repos\taliesins_talifun-web\src\Talifun.Crusher.CommandLine\Options\OptionSet.cs,GetLineEnd,The following switch statement is missing a default case: switch (description[i])                  {                      case ' ':                      case '\t':                      case '\v':                      case '-':                      case ''':                      case '.':                      case ';':                          sep = i;                          break;                      case '\n':                          return i;                  }
