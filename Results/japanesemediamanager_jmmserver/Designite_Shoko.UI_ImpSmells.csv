Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Shoko.UI.Forms,LoginForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\LoginForm.xaml.cs,LoginForm,The method has 6 parameters. Parameters: name' authurl' clientid' scopes' redirect' scopecommaseparated
Long Statement,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,SubscribeEvents,The length of the statement  "                (sender' args) => MessageBox.Show(this' args.Message' args.Title ?? (args.IsError ? "Error" : "Message")' MessageBoxButton.OK' args.IsError ? MessageBoxImage.Error : MessageBoxImage.Information); " is 195.
Long Statement,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MigrationForm)); " is 133.
Complex Conditional,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnSaveDatabaseSettings_Click,The conditional expression  "string.IsNullOrEmpty(txtMSSQL_DatabaseName.Text) ||                          string.IsNullOrEmpty(txtMSSQL_Password.Password)                          || string.IsNullOrEmpty(cboMSSQLServerList.Text) ||                          string.IsNullOrEmpty(txtMSSQL_Username.Text)"  is complex.
Complex Conditional,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnSaveDatabaseSettings_Click,The conditional expression  "string.IsNullOrEmpty(txtMySQL_DatabaseName.Text) ||                          string.IsNullOrEmpty(txtMySQL_Password.Password)                          || string.IsNullOrEmpty(txtMySQL_ServerAddress.Text) ||                          string.IsNullOrEmpty(txtMySQL_Username.Text)"  is complex.
Complex Conditional,Shoko.UI.Forms,CloudAccountForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\CloudAccountForm.xaml.cs,BtnSave_Click,The conditional expression  "!string.IsNullOrEmpty(txtCloudAccountName.Text) && comboProvider.SelectedItem != null &&                      !string.IsNullOrEmpty(WorkingAccount.ConnectionString) && (WorkingAccount?.FileSystem != null)"  is complex.
Complex Conditional,Shoko.UI.Forms,ImportFolderForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\ImportFolderForm.xaml.cs,btnSave_Click,The conditional expression  "chkDropDestination.IsChecked.HasValue && chkDropSource.IsChecked.HasValue &&                      chkDropDestination.IsChecked.Value &&                      chkDropSource.IsChecked.Value"  is complex.
Empty Catch Block,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnUploadAzureCache_Click,The method has an empty catch block.
Empty Catch Block,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,shutdownServer,The method has an empty catch block.
Empty Catch Block,Shoko.UI.Forms,CloudFolderBrowser,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\CloudFolderBrowser.xaml.cs,Item_Expanded,The method has an empty catch block.
Empty Catch Block,Shoko.UI.Forms,HyperLinkStandard,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\HyperLinkStandard.xaml.cs,hlURL_Click,The method has an empty catch block.
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnImagesClear_Click,The following statement contains a magic number: Task task = new Task(() =>              {                  ShokoService.CmdProcessorImages.Stop();                    // wait until the queue stops                  while (ShokoService.CmdProcessorImages.ProcessingCommands)                  {                      Thread.Sleep(200);                  }                  Thread.Sleep(200);                    RepoFactory.CommandRequest.Delete(RepoFactory.CommandRequest.GetAllCommandRequestImages());                    ShokoService.CmdProcessorImages.Init();              });
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnImagesClear_Click,The following statement contains a magic number: Task task = new Task(() =>              {                  ShokoService.CmdProcessorImages.Stop();                    // wait until the queue stops                  while (ShokoService.CmdProcessorImages.ProcessingCommands)                  {                      Thread.Sleep(200);                  }                  Thread.Sleep(200);                    RepoFactory.CommandRequest.Delete(RepoFactory.CommandRequest.GetAllCommandRequestImages());                    ShokoService.CmdProcessorImages.Init();              });
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnGeneralClear_Click,The following statement contains a magic number: Task task = new Task(() =>              {                      ShokoService.CmdProcessorGeneral.Stop();                        // wait until the queue stops                      while (ShokoService.CmdProcessorGeneral.ProcessingCommands)                      {                          Thread.Sleep(200);                      }                      Thread.Sleep(200);                        RepoFactory.CommandRequest.Delete(RepoFactory.CommandRequest.GetAllCommandRequestGeneral());                        ShokoService.CmdProcessorGeneral.Init();              });
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnGeneralClear_Click,The following statement contains a magic number: Task task = new Task(() =>              {                      ShokoService.CmdProcessorGeneral.Stop();                        // wait until the queue stops                      while (ShokoService.CmdProcessorGeneral.ProcessingCommands)                      {                          Thread.Sleep(200);                      }                      Thread.Sleep(200);                        RepoFactory.CommandRequest.Delete(RepoFactory.CommandRequest.GetAllCommandRequestGeneral());                        ShokoService.CmdProcessorGeneral.Init();              });
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnHasherClear_Click,The following statement contains a magic number: Task task = new Task(() =>              {                  ShokoService.CmdProcessorHasher.Stop();                    // wait until the queue stops                  while (ShokoService.CmdProcessorHasher.ProcessingCommands)                  {                      Thread.Sleep(200);                  }                  Thread.Sleep(200);                    RepoFactory.CommandRequest.Delete(RepoFactory.CommandRequest.GetAllCommandRequestHasher());                    ShokoService.CmdProcessorHasher.Init();              });
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnHasherClear_Click,The following statement contains a magic number: Task task = new Task(() =>              {                  ShokoService.CmdProcessorHasher.Stop();                    // wait until the queue stops                  while (ShokoService.CmdProcessorHasher.ProcessingCommands)                  {                      Thread.Sleep(200);                  }                  Thread.Sleep(200);                    RepoFactory.CommandRequest.Delete(RepoFactory.CommandRequest.GetAllCommandRequestHasher());                    ShokoService.CmdProcessorHasher.Init();              });
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,cboDatabaseType_SelectionChanged,The following statement contains a magic number: switch (cboDatabaseType.SelectedIndex)              {                  case 0:                      ServerState.Instance.DatabaseIsSQLite = true;                      ServerState.Instance.DatabaseIsSQLServer = false;                      ServerState.Instance.DatabaseIsMySQL = false;                      break;                  case 1:                      bool anySettingsMSSQL = !string.IsNullOrEmpty(ServerSettings.DatabaseName) ||                                              !string.IsNullOrEmpty(ServerSettings.DatabasePassword)                                              || !string.IsNullOrEmpty(ServerSettings.DatabaseServer) ||                                              !string.IsNullOrEmpty(ServerSettings.DatabaseUsername);                      if (anySettingsMSSQL)                      {                          txtMSSQL_DatabaseName.Text = ServerSettings.DatabaseName;                          txtMSSQL_Password.Password = ServerSettings.DatabasePassword;                            cboMSSQLServerList.Text = ServerSettings.DatabaseServer;                          txtMSSQL_Username.Text = ServerSettings.DatabaseUsername;                      }                      else                      {                          txtMSSQL_DatabaseName.Text = "JMMServer";                          txtMSSQL_Password.Password = "";                          cboMSSQLServerList.Text = "localhost";                          txtMSSQL_Username.Text = "sa";                      }                      ServerState.Instance.DatabaseIsSQLServer = true;                      ServerState.Instance.DatabaseIsSQLite = false;                      ServerState.Instance.DatabaseIsMySQL = false;                      break;                  case 2:                      bool anySettingsMySQL = !string.IsNullOrEmpty(ServerSettings.MySQL_SchemaName) ||                                              !string.IsNullOrEmpty(ServerSettings.MySQL_Password)                                              || !string.IsNullOrEmpty(ServerSettings.MySQL_Hostname) ||                                              !string.IsNullOrEmpty(ServerSettings.MySQL_Username);                      if (anySettingsMySQL)                      {                          txtMySQL_DatabaseName.Text = ServerSettings.MySQL_SchemaName;                          txtMySQL_Password.Password = ServerSettings.MySQL_Password;                          txtMySQL_ServerAddress.Text = ServerSettings.MySQL_Hostname;                          txtMySQL_Username.Text = ServerSettings.MySQL_Username;                      }                      else                      {                          txtMySQL_DatabaseName.Text = "JMMServer";                          txtMySQL_Password.Password = "";                          txtMySQL_ServerAddress.Text = "localhost";                          txtMySQL_Username.Text = "root";                      }                      ServerState.Instance.DatabaseIsMySQL = true;                      ServerState.Instance.DatabaseIsSQLServer = false;                      ServerState.Instance.DatabaseIsSQLite = false;                      break;              }
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,ShowDatabaseSetup,The following statement contains a magic number: if (ServerSettings.DatabaseType.Trim().Equals("MySQL"' StringComparison.InvariantCultureIgnoreCase))                  cboDatabaseType.SelectedIndex = 2;
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,btnApplyServerPort_Click,The following statement contains a magic number: if (!success || port <= 0 || port > 65535)              {                  MessageBox.Show(Commons.Properties.Resources.Server_EnterCertainValue'                      Commons.Properties.Resources.Error'                      MessageBoxButton.OK' MessageBoxImage.Error);                  txtServerPort.Focus();                  return;              }
Magic Number,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,MainWindow_Loaded,The following statement contains a magic number: tabControl1.SelectedIndex = 6;
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress.Location = new System.Drawing.Point(167' 117);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress.Location = new System.Drawing.Point(167' 117);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress.Size = new System.Drawing.Size(542' 20);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress.Size = new System.Drawing.Size(542' 20);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress1.Location = new System.Drawing.Point(242' 157);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress1.Location = new System.Drawing.Point(242' 157);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress1.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress1.Margin = new System.Windows.Forms.Padding(4' 0' 4' 0);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress1.Size = new System.Drawing.Size(392' 20);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.txtMigrateInProgress1.Size = new System.Drawing.Size(392' 20);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.gbMigration.Location = new System.Drawing.Point(13' 13);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.gbMigration.Location = new System.Drawing.Point(13' 13);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.gbMigration.Size = new System.Drawing.Size(900' 324);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.gbMigration.Size = new System.Drawing.Size(900' 324);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.gbMigration.TabIndex = 2;
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(925' 349);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(925' 349);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 5' 4' 5);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 5' 4' 5);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 5' 4' 5);
Magic Number,Shoko.UI,MigrationForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MigrationForm.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 5' 4' 5);
Magic Number,Shoko.UI.Forms,AboutForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\AboutForm.xaml.cs,CopyToClipboard,The following statement contains a magic number: CopyToClipboardRecursiveRetry(obj' 0' 5);
Magic Number,Shoko.UI.Forms,AboutForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\AboutForm.xaml.cs,CopyToClipboardRecursiveRetry,The following statement contains a magic number: try              {                  Clipboard.Clear();                  Thread.Sleep(50);                  Clipboard.SetDataObject(obj);              }              catch (COMException ex)              {                  if (retryCount < maxRetryCount)                  {                      Thread.Sleep(200);                      CopyToClipboardRecursiveRetry(obj' retryCount + 1' maxRetryCount);                  }              }
Magic Number,Shoko.UI.Forms,AboutForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\AboutForm.xaml.cs,CopyToClipboardRecursiveRetry,The following statement contains a magic number: try              {                  Clipboard.Clear();                  Thread.Sleep(50);                  Clipboard.SetDataObject(obj);              }              catch (COMException ex)              {                  if (retryCount < maxRetryCount)                  {                      Thread.Sleep(200);                      CopyToClipboardRecursiveRetry(obj' retryCount + 1' maxRetryCount);                  }              }
Magic Number,Shoko.UI.Forms,InitialSetupForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\InitialSetupForm.xaml.cs,workerTestLogin_DoWork,The following statement contains a magic number: try              {                  workerTestLogin.ReportProgress(0' Shoko.Commons.Properties.Resources.InitialSetup_Disposing);                  ShokoService.AnidbProcessor.ForceLogout();                  ShokoService.AnidbProcessor.CloseConnections();                  Thread.Sleep(1000);                    Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(ServerSettings.Culture);                    workerTestLogin.ReportProgress(0' Shoko.Commons.Properties.Resources.Server_Initializing);                  ShokoService.AnidbProcessor.Init(ServerSettings.AniDB_Username' ServerSettings.AniDB_Password'                      ServerSettings.AniDB_ServerAddress'                      ServerSettings.AniDB_ServerPort' ServerSettings.AniDB_ClientPort);                    workerTestLogin.ReportProgress(0' Shoko.Commons.Properties.Resources.InitialSetup_Login);                  if (ShokoService.AnidbProcessor.Login())                  {                      workerTestLogin.ReportProgress(0' Shoko.Commons.Properties.Resources.InitialSetup_LoginPass1);                      ShokoService.AnidbProcessor.ForceLogout();                      workerTestLogin.ReportProgress(0' Shoko.Commons.Properties.Resources.InitialSetup_LoginPass2);                  }                  else                  {                      workerTestLogin.ReportProgress(0' Shoko.Commons.Properties.Resources.InitialSetup_LoginFail);                  }              }              catch (Exception ex)              {                  workerTestLogin.ReportProgress(0' ex.Message);              }
Missing Default,Shoko.UI,MainWindow,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\MainWindow.xaml.cs,cboDatabaseType_SelectionChanged,The following switch statement is missing a default case: switch (cboDatabaseType.SelectedIndex)              {                  case 0:                      ServerState.Instance.DatabaseIsSQLite = true;                      ServerState.Instance.DatabaseIsSQLServer = false;                      ServerState.Instance.DatabaseIsMySQL = false;                      break;                  case 1:                      bool anySettingsMSSQL = !string.IsNullOrEmpty(ServerSettings.DatabaseName) ||                                              !string.IsNullOrEmpty(ServerSettings.DatabasePassword)                                              || !string.IsNullOrEmpty(ServerSettings.DatabaseServer) ||                                              !string.IsNullOrEmpty(ServerSettings.DatabaseUsername);                      if (anySettingsMSSQL)                      {                          txtMSSQL_DatabaseName.Text = ServerSettings.DatabaseName;                          txtMSSQL_Password.Password = ServerSettings.DatabasePassword;                            cboMSSQLServerList.Text = ServerSettings.DatabaseServer;                          txtMSSQL_Username.Text = ServerSettings.DatabaseUsername;                      }                      else                      {                          txtMSSQL_DatabaseName.Text = "JMMServer";                          txtMSSQL_Password.Password = "";                          cboMSSQLServerList.Text = "localhost";                          txtMSSQL_Username.Text = "sa";                      }                      ServerState.Instance.DatabaseIsSQLServer = true;                      ServerState.Instance.DatabaseIsSQLite = false;                      ServerState.Instance.DatabaseIsMySQL = false;                      break;                  case 2:                      bool anySettingsMySQL = !string.IsNullOrEmpty(ServerSettings.MySQL_SchemaName) ||                                              !string.IsNullOrEmpty(ServerSettings.MySQL_Password)                                              || !string.IsNullOrEmpty(ServerSettings.MySQL_Hostname) ||                                              !string.IsNullOrEmpty(ServerSettings.MySQL_Username);                      if (anySettingsMySQL)                      {                          txtMySQL_DatabaseName.Text = ServerSettings.MySQL_SchemaName;                          txtMySQL_Password.Password = ServerSettings.MySQL_Password;                          txtMySQL_ServerAddress.Text = ServerSettings.MySQL_Hostname;                          txtMySQL_Username.Text = ServerSettings.MySQL_Username;                      }                      else                      {                          txtMySQL_DatabaseName.Text = "JMMServer";                          txtMySQL_Password.Password = "";                          txtMySQL_ServerAddress.Text = "localhost";                          txtMySQL_Username.Text = "root";                      }                      ServerState.Instance.DatabaseIsMySQL = true;                      ServerState.Instance.DatabaseIsSQLServer = false;                      ServerState.Instance.DatabaseIsSQLite = false;                      break;              }
Missing Default,Shoko.UI.Forms,LoginForm,C:\repos\japanesemediamanager_jmmserver\Shoko.UI\Forms\LoginForm.xaml.cs,CheckUrl,The following switch statement is missing a default case: switch (s)                      {                          case "code":                              Code = col[s];                              break;                          case "scope":                              Scopes = col[s].Split(' ').ToList();                              break;                      }
