Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Tvl.Events,WeakEvents,C:\repos\tunnelvisionlabs_LangSvcV2\Tvl.Core\Events\WeakEvents.cs,AsWeak,The length of the statement  "            ConstructorInfo ctor = t.GetConstructor(new Type[] { typeof(EventHandler<TEventArgs>)' typeof(Action<EventHandler<TEventArgs>>) }); " is 131.
Long Statement,Tvl.Events,WeakEvents,C:\repos\tunnelvisionlabs_LangSvcV2\Tvl.Core\Events\WeakEvents.cs,AsWeak,The length of the statement  "            IWeakEventHandler<TEventArgs> weakHandler = (IWeakEventHandler<TEventArgs>)ctor.Invoke(new object[] { handler' unregister }); " is 125.
Long Statement,Tvl,TaskExtensions,C:\repos\tunnelvisionlabs_LangSvcV2\Tvl.Core\Extensions\TaskExtensions.cs,HandleNonCriticalExceptions,The length of the statement  "            task.ContinueWith(HandleNonCriticalExceptionsCore' TaskContinuationOptions.OnlyOnFaulted | TaskContinuationOptions.ExecuteSynchronously); " is 137.
Complex Conditional,Tvl,ExceptionExtensions,C:\repos\tunnelvisionlabs_LangSvcV2\Tvl.Core\Extensions\ExceptionExtensions.cs,IsCritical,The conditional expression  "e is AccessViolationException                  || e is StackOverflowException                  || e is ExecutionEngineException                  || e is OutOfMemoryException                  || e is BadImageFormatException                  || e is AppDomainUnloadedException"  is complex.
Empty Catch Block,Tvl,WeakReference<T>,C:\repos\tunnelvisionlabs_LangSvcV2\Tvl.Core\WeakReference`1.cs,Equals,The method has an empty catch block.
Magic Number,Tvl.Collections,Int32ArrayEqualityComparer,C:\repos\tunnelvisionlabs_LangSvcV2\Tvl.Core\Collections\ArrayEqualityComparers.cs,GetHashCode,The following statement contains a magic number: unsafe                  {                      int length = obj.Length;                      if (length > 0)                      {                          fixed (int* objbase = obj)                          {                              int* pobj = objbase;                              for (int i = 0; i < length; i++)                                  hashCode = 31 * hashCode + *pobj++;                          }                      }                  }
