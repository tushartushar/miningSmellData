Implementation smell,Namespace,Class,File,Method,Description
Long Method,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ReadInputFile,The method has 119 lines of code.
Complex Method,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ReadInputFile,Cyclomatic complexity of the method is 8
Complex Method,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,GetAllAddesses,Cyclomatic complexity of the method is 10
Long Statement,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ReadInputFile,The length of the statement  "			//if (MessageBox.Show("Error While Reading Input Record\n\nDetails=" + ex.Message' "Error"' MessageBoxButtons.OKCancel) == DialogResult.Cancel) " is 143.
Long Statement,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ReadInputFile,The length of the statement  "		labelEstimated.Text = "Total Minutes=    " + milisecondsLeft + "           'Estimated Time of completion" + StartingTime.AddMilliseconds (estimatedTime).TimeOfDay; " is 163.
Long Statement,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ReadInputFile,The length of the statement  "		//        if (MessageBox.Show("Error While Eriting Record\nDetails= "+e.Message' "Error"' MessageBoxButtons.OKCancel) == DialogResult.Cancel) " is 141.
Long Statement,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,RenameFileFormat,The length of the statement  "		labelNotify2.Text = "We are unable to create CSV output File' You can Find the output in notepad file\n\n\nDetails: " + e.Message; " is 130.
Long Statement,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,GetAllAddesses,The length of the statement  "				MatchCollection collection = Regex.Matches (Document' "<div class=\"soldDetails\">(.|\\n|\\r)*?class=\"soldAddress\".*?>(?<address>.*?)(</a>|</div>)(.|\\n|\\r)*?class=\\\"noBed\\\">(?<noBed>.*?)</td>|</tbody>"); " is 211.
Long Statement,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ExtractAndRemovePostalCode,The length of the statement  "	string postalCode = Regex.Match (address' "(?<postalcode> [A-Z]{1'2}\\d{1'2} \\d{1}[A-Z]{2})"' RegexOptions.RightToLeft).Groups ["postalcode"].Value; " is 149.
Long Statement,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ExtractAndRemovePostalCode,The length of the statement  "		postalCode = Regex.Match (address' "(?<postalcode> [A-Z]{1'2}\\d{1}[A-Z]{1} \\d{1}[A-Z]{2})"' RegexOptions.RightToLeft).Groups ["postalcode"].Value; " is 148.
Long Statement,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,CreateUrl,The length of the statement  "	urlMade = @"http://www.rightmove.co.uk/house-prices/detail.html?country=" + country + "&locationIdentifier=PARTIAL%5E" + ConstructedPostalCode + "&searchLocation=" + ConstructedPostalCode + "&referrer=landingPage&index=" + (i * 25); " is 232.
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,GetPagesCount,The following statement contains a magic number: if (temp != null) {  	string[] splits = temp.Split (' ');  	int count = 0;  	if (int.TryParse (splits [3]' out count) == false) {  		Result = null;  		throw new Exception ("\nCan not parse the count of all pages\n");  	}  	if (count == 0) {  		Result = null;  	}  	else {  		Result = count;  	}  }  else {  	Result = null;  }  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,GetPagesCount,The following statement contains a magic number: if (int.TryParse (splits [3]' out count) == false) {  	Result = null;  	throw new Exception ("\nCan not parse the count of all pages\n");  }  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ReadInputFile,The following statement contains a magic number: foreach (var line in lines)//(n)   {  	count++;  	double localTime = 0;  	Stopwatch stopwatch = new Stopwatch ();  	stopwatch.Start ();  	if (string.IsNullOrEmpty (line)) {  		continue;  	}  	// (1)  	string[] tokens = line.Split (''');  	string postalcode = tokens [0];  	string country = null;  	//2.1 correction length to count  	if (tokens.Count () >= 2) {  		country = tokens [1];  	}  	//2.1  	else {  		country = "england";  	}  	//(1 ends)  	#region Notification  	i++;  	labelNotify2.Text = "Reading PostCode " + i + " out of " + lines.Count ();  	labelNotify2.Update ();  	decimal value = (i * 100) / RecordsCount;  	progressBar2.Value = (int)value;  	progressBar2.Update ();  	#endregion  	try {  		//(8) added country because we have country variable   		List<PropertyRecord> temp = GetAllAddesses (postalcode' country);  		if (temp != null) {  			collection.AddRange (temp);  		}  	}  	catch (Exception ex) {  		richTextBox1.Text += "\n" + line + "\n";  		#region exceptionHandling  		//if (MessageBox.Show("Error While Reading Input Record\n\nDetails=" + ex.Message' "Error"' MessageBoxButtons.OKCancel) == DialogResult.Cancel)  		//{  		//    labelNotify.Text = "Stopped";  		//    labelNotify2.Text = "stopped";  		//    progressBar1.Value = 0;  		//    progressBar2.Value = 0;  		//  //  return;  		//}  		//else  		//{  		//    continue;  		//}  		#endregion  	}  	stopwatch.Stop ();  	localTime = stopwatch.ElapsedMilliseconds;  	AverageTime += localTime;  	double time = (AverageTime / count);  	labelTime.Text = "AverageTime=  " + TimeSpan.FromMilliseconds (time).TotalSeconds + " s";  	labelTime.Update ();  	double estimatedTime = (time * lines.Count ());  	double milisecondsLeft = TimeSpan.FromMilliseconds (estimatedTime).TotalMinutes;  	labelEstimated.Text = "Total Minutes=    " + milisecondsLeft + "           'Estimated Time of completion" + StartingTime.AddMilliseconds (estimatedTime).TimeOfDay;  	labelEstimated.Update ();  }  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ReadInputFile,The following statement contains a magic number: foreach (var line in lines)//(n)   {  	count++;  	double localTime = 0;  	Stopwatch stopwatch = new Stopwatch ();  	stopwatch.Start ();  	if (string.IsNullOrEmpty (line)) {  		continue;  	}  	// (1)  	string[] tokens = line.Split (''');  	string postalcode = tokens [0];  	string country = null;  	//2.1 correction length to count  	if (tokens.Count () >= 2) {  		country = tokens [1];  	}  	//2.1  	else {  		country = "england";  	}  	//(1 ends)  	#region Notification  	i++;  	labelNotify2.Text = "Reading PostCode " + i + " out of " + lines.Count ();  	labelNotify2.Update ();  	decimal value = (i * 100) / RecordsCount;  	progressBar2.Value = (int)value;  	progressBar2.Update ();  	#endregion  	try {  		//(8) added country because we have country variable   		List<PropertyRecord> temp = GetAllAddesses (postalcode' country);  		if (temp != null) {  			collection.AddRange (temp);  		}  	}  	catch (Exception ex) {  		richTextBox1.Text += "\n" + line + "\n";  		#region exceptionHandling  		//if (MessageBox.Show("Error While Reading Input Record\n\nDetails=" + ex.Message' "Error"' MessageBoxButtons.OKCancel) == DialogResult.Cancel)  		//{  		//    labelNotify.Text = "Stopped";  		//    labelNotify2.Text = "stopped";  		//    progressBar1.Value = 0;  		//    progressBar2.Value = 0;  		//  //  return;  		//}  		//else  		//{  		//    continue;  		//}  		#endregion  	}  	stopwatch.Stop ();  	localTime = stopwatch.ElapsedMilliseconds;  	AverageTime += localTime;  	double time = (AverageTime / count);  	labelTime.Text = "AverageTime=  " + TimeSpan.FromMilliseconds (time).TotalSeconds + " s";  	labelTime.Update ();  	double estimatedTime = (time * lines.Count ());  	double milisecondsLeft = TimeSpan.FromMilliseconds (estimatedTime).TotalMinutes;  	labelEstimated.Text = "Total Minutes=    " + milisecondsLeft + "           'Estimated Time of completion" + StartingTime.AddMilliseconds (estimatedTime).TimeOfDay;  	labelEstimated.Update ();  }  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,ReadInputFile,The following statement contains a magic number: if (tokens.Count () >= 2) {  	country = tokens [1];  }  //2.1  else {  	country = "england";  }  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,GetAllAddesses,The following statement contains a magic number: using (WebClient w = new WebClient ()) {  	string url = CreateUrl (postalcode' country);  	string Document = w.DownloadString (url);  	int? pagescount = GetPagesCount (Document);  	richTextBox1.Text += "\nPages=" + pagescount;  	if (pagescount == null) {  		return null;  	}  	else {  		for (int i = 0; i <= pagescount; i++)//(n*m)  		 {  			int recordsOnPage = 0;  			#region Notification  			labelNotify.Text = "Reading Page " + i + " out of " + (pagescount);  			labelNotify.Update ();  			decimal value = (i * 100) / (decimal)pagescount;  			progressBar1.Value = (int)value;  			progressBar1.Update ();  			#endregion  			url = CreateUrl (postalcode' country' i);  			Document = w.DownloadString (url);  			//matches are added in Records(List)  			#region Extract Record From Page  			MatchCollection collection = Regex.Matches (Document' "<div class=\"soldDetails\">(.|\\n|\\r)*?class=\"soldAddress\".*?>(?<address>.*?)(</a>|</div>)(.|\\n|\\r)*?class=\\\"noBed\\\">(?<noBed>.*?)</td>|</tbody>");  			foreach (Match x in collection)//(n*m*k)...we are saving another loop by using only one Regex here  			 {  				PropertyRecord r = new PropertyRecord ();  				try {  					string BedroomCount = x.Groups ["noBed"].Value;  					if (String.IsNullOrEmpty (BedroomCount) == false) {  						if (BedroomCount.Contains ("bedrooms")) {  							r.BedroomCount = BedroomCount.Replace ("bedrooms"' "");  						}  						else if (BedroomCount.Contains ("bedroom")) {  							r.BedroomCount = BedroomCount.Replace ("bedroom"' "");  						}  					}  					else {  						r.BedroomCount = "-1";  					}  					r.address = x.Groups ["address"].Value;  					string postalCode = ExtractAndRemovePostalCode (ref r.address).Trim ();  					//(9)added to increase efficiencty           new way  					//                         string temp = r.address.Replace("'"' @"""'""");  					string temp = @"""" + r.address + @"""";  					string line = postalCode + "'" + temp + "'" + r.BedroomCount;  					OutputLines.Add (line);  					//(9)ends  				}  				catch (Exception ex) {  					richTextBox1.Text = ex.Message;  				}  				Records.Add (r);  				recordsOnPage++;  			}  			#endregion  			richTextBox1.Text += "\n----Page=" + i + "   'Records=" + recordsOnPage;  		}  	}  }  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,GetAllAddesses,The following statement contains a magic number: if (pagescount == null) {  	return null;  }  else {  	for (int i = 0; i <= pagescount; i++)//(n*m)  	 {  		int recordsOnPage = 0;  		#region Notification  		labelNotify.Text = "Reading Page " + i + " out of " + (pagescount);  		labelNotify.Update ();  		decimal value = (i * 100) / (decimal)pagescount;  		progressBar1.Value = (int)value;  		progressBar1.Update ();  		#endregion  		url = CreateUrl (postalcode' country' i);  		Document = w.DownloadString (url);  		//matches are added in Records(List)  		#region Extract Record From Page  		MatchCollection collection = Regex.Matches (Document' "<div class=\"soldDetails\">(.|\\n|\\r)*?class=\"soldAddress\".*?>(?<address>.*?)(</a>|</div>)(.|\\n|\\r)*?class=\\\"noBed\\\">(?<noBed>.*?)</td>|</tbody>");  		foreach (Match x in collection)//(n*m*k)...we are saving another loop by using only one Regex here  		 {  			PropertyRecord r = new PropertyRecord ();  			try {  				string BedroomCount = x.Groups ["noBed"].Value;  				if (String.IsNullOrEmpty (BedroomCount) == false) {  					if (BedroomCount.Contains ("bedrooms")) {  						r.BedroomCount = BedroomCount.Replace ("bedrooms"' "");  					}  					else if (BedroomCount.Contains ("bedroom")) {  						r.BedroomCount = BedroomCount.Replace ("bedroom"' "");  					}  				}  				else {  					r.BedroomCount = "-1";  				}  				r.address = x.Groups ["address"].Value;  				string postalCode = ExtractAndRemovePostalCode (ref r.address).Trim ();  				//(9)added to increase efficiencty           new way  				//                         string temp = r.address.Replace("'"' @"""'""");  				string temp = @"""" + r.address + @"""";  				string line = postalCode + "'" + temp + "'" + r.BedroomCount;  				OutputLines.Add (line);  				//(9)ends  			}  			catch (Exception ex) {  				richTextBox1.Text = ex.Message;  			}  			Records.Add (r);  			recordsOnPage++;  		}  		#endregion  		richTextBox1.Text += "\n----Page=" + i + "   'Records=" + recordsOnPage;  	}  }  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,GetAllAddesses,The following statement contains a magic number: for (int i = 0; i <= pagescount; i++)//(n*m)   {  	int recordsOnPage = 0;  	#region Notification  	labelNotify.Text = "Reading Page " + i + " out of " + (pagescount);  	labelNotify.Update ();  	decimal value = (i * 100) / (decimal)pagescount;  	progressBar1.Value = (int)value;  	progressBar1.Update ();  	#endregion  	url = CreateUrl (postalcode' country' i);  	Document = w.DownloadString (url);  	//matches are added in Records(List)  	#region Extract Record From Page  	MatchCollection collection = Regex.Matches (Document' "<div class=\"soldDetails\">(.|\\n|\\r)*?class=\"soldAddress\".*?>(?<address>.*?)(</a>|</div>)(.|\\n|\\r)*?class=\\\"noBed\\\">(?<noBed>.*?)</td>|</tbody>");  	foreach (Match x in collection)//(n*m*k)...we are saving another loop by using only one Regex here  	 {  		PropertyRecord r = new PropertyRecord ();  		try {  			string BedroomCount = x.Groups ["noBed"].Value;  			if (String.IsNullOrEmpty (BedroomCount) == false) {  				if (BedroomCount.Contains ("bedrooms")) {  					r.BedroomCount = BedroomCount.Replace ("bedrooms"' "");  				}  				else if (BedroomCount.Contains ("bedroom")) {  					r.BedroomCount = BedroomCount.Replace ("bedroom"' "");  				}  			}  			else {  				r.BedroomCount = "-1";  			}  			r.address = x.Groups ["address"].Value;  			string postalCode = ExtractAndRemovePostalCode (ref r.address).Trim ();  			//(9)added to increase efficiencty           new way  			//                         string temp = r.address.Replace("'"' @"""'""");  			string temp = @"""" + r.address + @"""";  			string line = postalCode + "'" + temp + "'" + r.BedroomCount;  			OutputLines.Add (line);  			//(9)ends  		}  		catch (Exception ex) {  			richTextBox1.Text = ex.Message;  		}  		Records.Add (r);  		recordsOnPage++;  	}  	#endregion  	richTextBox1.Text += "\n----Page=" + i + "   'Records=" + recordsOnPage;  }  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,CreateUrl,The following statement contains a magic number: urlMade = @"http://www.rightmove.co.uk/house-prices/detail.html?country=" + country + "&locationIdentifier=PARTIAL%5E" + ConstructedPostalCode + "&searchLocation=" + ConstructedPostalCode + "&referrer=landingPage&index=" + (i * 25);  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,buttonRead_Click,The following statement contains a magic number: progressBar1.Value = 100;  
Magic Number,Right_Move___Bedroom_Count,Form1,C:\repos\AbbasNaqvi_Projects\Right Move - Bedroom Count\Right Move - Bedroom Count\Form1.cs,buttonRead_Click,The following statement contains a magic number: progressBar2.Value = 100;  
