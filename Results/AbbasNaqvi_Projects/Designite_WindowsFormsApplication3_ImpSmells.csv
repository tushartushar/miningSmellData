Implementation smell,Namespace,Class,File,Method,Description
Long Method,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The method has 125 lines of code.
Complex Method,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,Cyclomatic complexity of the method is 19
Long Statement,WindowsFormsApplication3,Myurl,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Myurl.cs,Change_Angle,The length of the statement  "		//   ResultString = Regex.Match(url' "http://maps.google.com/maps.q=.layer=c.cbll=.*?cbp=(?<data>.*)").Groups["data"].Value; " is 124.
Long Statement,WindowsFormsApplication3,Myurl,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Myurl.cs,Change_Angle,The length of the statement  "		ResultString = Regex.Match (url' "maps.google.com/maps\\?(?<data1>.*?)layer.*?cbp=(?<data>.*?)&.*").Groups ["data"].Value; " is 122.
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: First_Tx.Interval = 1000;  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: while (First_tx_count < 10) {  	Application.DoEvents ();  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (pageCounts >= 2) {  	if (ClickSVButton () == false) {  		if (ClickLabel () == true) {  			IsLabelClicked = true;  		}  		else {  			Success = false;  		}  	}  	else {  		IsSVbuttonFound = true;  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: while ((IsSVbuttonFound == false && pageCounts < 12) || (IsSVbuttonFound == true && pageCounts < 15)) {  	Application.DoEvents ();  	//    richTextBox1.Text += "Spining"+First_tx_count+"'"+pageCounts+"\n";  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: while ((IsSVbuttonFound == false && pageCounts < 12) || (IsSVbuttonFound == true && pageCounts < 15)) {  	Application.DoEvents ();  	//    richTextBox1.Text += "Spining"+First_tx_count+"'"+pageCounts+"\n";  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (pageCounts > 11) {  	richTextBox1.Text += "Sucessfully Entered Street View\n";  	if (IsSVbuttonFound == true) {  		richTextBox1.Text += "Change Angle By Link\n";  		urls.Url1 = urls.Change_Angle (FormUrl' "90"' ConsoleText);  		urls.Url2 = urls.Change_Angle (FormUrl' "180"' ConsoleText);  		urls.Url3 = urls.Change_Angle (FormUrl' "270"' ConsoleText);  		urls.Url4 = urls.Change_Angle (FormUrl' "360"' ConsoleText);  	}  	else {  		richTextBox1.Text += "Change Angle\n";  		urls.Url1 = "STREETVIEW";  		urls.Url2 = "STREETVIEW";  		urls.Url3 = "STREETVIEW";  		urls.Url4 = "STREETVIEW";  	}  	if (WindowState != FormWindowState.Maximized) {  		this.WindowState = FormWindowState.Maximized;  	}  	string url = null;  	while (currentUrl <= 3) {  		currentUrl++;  		richTextBox1.Text += "Finding Url" + currentUrl + "\n";  		try {  			url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  		}  		catch (Exception) {  			richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  			continue;  		}  		if (url.Equals ("STREETVIEW")) {  			try {  				Spin ();  				ClickLeft ();  				Spin ();  				ClickLeft ();  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SPINING";  			}  		}  		else {  			try {  				webBrowser2.Navigate (url);  				Spin ();  				Spin ();  			}  			catch (Exception) {  				richTextBox1.Text += "Can not Navigate to this url";  			}  		}  		//     richTextBox1.Text += "Going on... " + url + "\n";  		if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  			int attempts = 0;  			long size = 10;  			do {  				try {  					Spin ();  					richTextBox1.Text += "Capture :) " + url + "\n";  					size = SaveImage (attempts);  					richTextBox1.Text += "Size is " + size + "\n";  					attempts++;  				}  				catch (Exception) {  					richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  				}  			}  			while (size < 600000 && attempts <= 8);  			//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  			//   previousUrl = currentUrl;  			//  ++count;  		}  	}  	//completed = true;  	//panel1.Enabled = true;  	//pictureBox1.Visible = true;  	//readyToClose = true;  	//this.Close();  	//PageReference.Activate();  	try {  		GUIclock.Stop ();  	}  	catch (Exception) {  		richTextBox1.Text = "sTOPPING THE CLOCK\n";  	}  	try {  		this.Close ();  	}  	catch (Exception) {  		richTextBox1.Text += "Exception while Close\n";  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (pageCounts > 11) {  	richTextBox1.Text += "Sucessfully Entered Street View\n";  	if (IsSVbuttonFound == true) {  		richTextBox1.Text += "Change Angle By Link\n";  		urls.Url1 = urls.Change_Angle (FormUrl' "90"' ConsoleText);  		urls.Url2 = urls.Change_Angle (FormUrl' "180"' ConsoleText);  		urls.Url3 = urls.Change_Angle (FormUrl' "270"' ConsoleText);  		urls.Url4 = urls.Change_Angle (FormUrl' "360"' ConsoleText);  	}  	else {  		richTextBox1.Text += "Change Angle\n";  		urls.Url1 = "STREETVIEW";  		urls.Url2 = "STREETVIEW";  		urls.Url3 = "STREETVIEW";  		urls.Url4 = "STREETVIEW";  	}  	if (WindowState != FormWindowState.Maximized) {  		this.WindowState = FormWindowState.Maximized;  	}  	string url = null;  	while (currentUrl <= 3) {  		currentUrl++;  		richTextBox1.Text += "Finding Url" + currentUrl + "\n";  		try {  			url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  		}  		catch (Exception) {  			richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  			continue;  		}  		if (url.Equals ("STREETVIEW")) {  			try {  				Spin ();  				ClickLeft ();  				Spin ();  				ClickLeft ();  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SPINING";  			}  		}  		else {  			try {  				webBrowser2.Navigate (url);  				Spin ();  				Spin ();  			}  			catch (Exception) {  				richTextBox1.Text += "Can not Navigate to this url";  			}  		}  		//     richTextBox1.Text += "Going on... " + url + "\n";  		if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  			int attempts = 0;  			long size = 10;  			do {  				try {  					Spin ();  					richTextBox1.Text += "Capture :) " + url + "\n";  					size = SaveImage (attempts);  					richTextBox1.Text += "Size is " + size + "\n";  					attempts++;  				}  				catch (Exception) {  					richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  				}  			}  			while (size < 600000 && attempts <= 8);  			//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  			//   previousUrl = currentUrl;  			//  ++count;  		}  	}  	//completed = true;  	//panel1.Enabled = true;  	//pictureBox1.Visible = true;  	//readyToClose = true;  	//this.Close();  	//PageReference.Activate();  	try {  		GUIclock.Stop ();  	}  	catch (Exception) {  		richTextBox1.Text = "sTOPPING THE CLOCK\n";  	}  	try {  		this.Close ();  	}  	catch (Exception) {  		richTextBox1.Text += "Exception while Close\n";  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (pageCounts > 11) {  	richTextBox1.Text += "Sucessfully Entered Street View\n";  	if (IsSVbuttonFound == true) {  		richTextBox1.Text += "Change Angle By Link\n";  		urls.Url1 = urls.Change_Angle (FormUrl' "90"' ConsoleText);  		urls.Url2 = urls.Change_Angle (FormUrl' "180"' ConsoleText);  		urls.Url3 = urls.Change_Angle (FormUrl' "270"' ConsoleText);  		urls.Url4 = urls.Change_Angle (FormUrl' "360"' ConsoleText);  	}  	else {  		richTextBox1.Text += "Change Angle\n";  		urls.Url1 = "STREETVIEW";  		urls.Url2 = "STREETVIEW";  		urls.Url3 = "STREETVIEW";  		urls.Url4 = "STREETVIEW";  	}  	if (WindowState != FormWindowState.Maximized) {  		this.WindowState = FormWindowState.Maximized;  	}  	string url = null;  	while (currentUrl <= 3) {  		currentUrl++;  		richTextBox1.Text += "Finding Url" + currentUrl + "\n";  		try {  			url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  		}  		catch (Exception) {  			richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  			continue;  		}  		if (url.Equals ("STREETVIEW")) {  			try {  				Spin ();  				ClickLeft ();  				Spin ();  				ClickLeft ();  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SPINING";  			}  		}  		else {  			try {  				webBrowser2.Navigate (url);  				Spin ();  				Spin ();  			}  			catch (Exception) {  				richTextBox1.Text += "Can not Navigate to this url";  			}  		}  		//     richTextBox1.Text += "Going on... " + url + "\n";  		if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  			int attempts = 0;  			long size = 10;  			do {  				try {  					Spin ();  					richTextBox1.Text += "Capture :) " + url + "\n";  					size = SaveImage (attempts);  					richTextBox1.Text += "Size is " + size + "\n";  					attempts++;  				}  				catch (Exception) {  					richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  				}  			}  			while (size < 600000 && attempts <= 8);  			//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  			//   previousUrl = currentUrl;  			//  ++count;  		}  	}  	//completed = true;  	//panel1.Enabled = true;  	//pictureBox1.Visible = true;  	//readyToClose = true;  	//this.Close();  	//PageReference.Activate();  	try {  		GUIclock.Stop ();  	}  	catch (Exception) {  		richTextBox1.Text = "sTOPPING THE CLOCK\n";  	}  	try {  		this.Close ();  	}  	catch (Exception) {  		richTextBox1.Text += "Exception while Close\n";  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (pageCounts > 11) {  	richTextBox1.Text += "Sucessfully Entered Street View\n";  	if (IsSVbuttonFound == true) {  		richTextBox1.Text += "Change Angle By Link\n";  		urls.Url1 = urls.Change_Angle (FormUrl' "90"' ConsoleText);  		urls.Url2 = urls.Change_Angle (FormUrl' "180"' ConsoleText);  		urls.Url3 = urls.Change_Angle (FormUrl' "270"' ConsoleText);  		urls.Url4 = urls.Change_Angle (FormUrl' "360"' ConsoleText);  	}  	else {  		richTextBox1.Text += "Change Angle\n";  		urls.Url1 = "STREETVIEW";  		urls.Url2 = "STREETVIEW";  		urls.Url3 = "STREETVIEW";  		urls.Url4 = "STREETVIEW";  	}  	if (WindowState != FormWindowState.Maximized) {  		this.WindowState = FormWindowState.Maximized;  	}  	string url = null;  	while (currentUrl <= 3) {  		currentUrl++;  		richTextBox1.Text += "Finding Url" + currentUrl + "\n";  		try {  			url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  		}  		catch (Exception) {  			richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  			continue;  		}  		if (url.Equals ("STREETVIEW")) {  			try {  				Spin ();  				ClickLeft ();  				Spin ();  				ClickLeft ();  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SPINING";  			}  		}  		else {  			try {  				webBrowser2.Navigate (url);  				Spin ();  				Spin ();  			}  			catch (Exception) {  				richTextBox1.Text += "Can not Navigate to this url";  			}  		}  		//     richTextBox1.Text += "Going on... " + url + "\n";  		if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  			int attempts = 0;  			long size = 10;  			do {  				try {  					Spin ();  					richTextBox1.Text += "Capture :) " + url + "\n";  					size = SaveImage (attempts);  					richTextBox1.Text += "Size is " + size + "\n";  					attempts++;  				}  				catch (Exception) {  					richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  				}  			}  			while (size < 600000 && attempts <= 8);  			//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  			//   previousUrl = currentUrl;  			//  ++count;  		}  	}  	//completed = true;  	//panel1.Enabled = true;  	//pictureBox1.Visible = true;  	//readyToClose = true;  	//this.Close();  	//PageReference.Activate();  	try {  		GUIclock.Stop ();  	}  	catch (Exception) {  		richTextBox1.Text = "sTOPPING THE CLOCK\n";  	}  	try {  		this.Close ();  	}  	catch (Exception) {  		richTextBox1.Text += "Exception while Close\n";  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (pageCounts > 11) {  	richTextBox1.Text += "Sucessfully Entered Street View\n";  	if (IsSVbuttonFound == true) {  		richTextBox1.Text += "Change Angle By Link\n";  		urls.Url1 = urls.Change_Angle (FormUrl' "90"' ConsoleText);  		urls.Url2 = urls.Change_Angle (FormUrl' "180"' ConsoleText);  		urls.Url3 = urls.Change_Angle (FormUrl' "270"' ConsoleText);  		urls.Url4 = urls.Change_Angle (FormUrl' "360"' ConsoleText);  	}  	else {  		richTextBox1.Text += "Change Angle\n";  		urls.Url1 = "STREETVIEW";  		urls.Url2 = "STREETVIEW";  		urls.Url3 = "STREETVIEW";  		urls.Url4 = "STREETVIEW";  	}  	if (WindowState != FormWindowState.Maximized) {  		this.WindowState = FormWindowState.Maximized;  	}  	string url = null;  	while (currentUrl <= 3) {  		currentUrl++;  		richTextBox1.Text += "Finding Url" + currentUrl + "\n";  		try {  			url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  		}  		catch (Exception) {  			richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  			continue;  		}  		if (url.Equals ("STREETVIEW")) {  			try {  				Spin ();  				ClickLeft ();  				Spin ();  				ClickLeft ();  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SPINING";  			}  		}  		else {  			try {  				webBrowser2.Navigate (url);  				Spin ();  				Spin ();  			}  			catch (Exception) {  				richTextBox1.Text += "Can not Navigate to this url";  			}  		}  		//     richTextBox1.Text += "Going on... " + url + "\n";  		if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  			int attempts = 0;  			long size = 10;  			do {  				try {  					Spin ();  					richTextBox1.Text += "Capture :) " + url + "\n";  					size = SaveImage (attempts);  					richTextBox1.Text += "Size is " + size + "\n";  					attempts++;  				}  				catch (Exception) {  					richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  				}  			}  			while (size < 600000 && attempts <= 8);  			//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  			//   previousUrl = currentUrl;  			//  ++count;  		}  	}  	//completed = true;  	//panel1.Enabled = true;  	//pictureBox1.Visible = true;  	//readyToClose = true;  	//this.Close();  	//PageReference.Activate();  	try {  		GUIclock.Stop ();  	}  	catch (Exception) {  		richTextBox1.Text = "sTOPPING THE CLOCK\n";  	}  	try {  		this.Close ();  	}  	catch (Exception) {  		richTextBox1.Text += "Exception while Close\n";  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: while (currentUrl <= 3) {  	currentUrl++;  	richTextBox1.Text += "Finding Url" + currentUrl + "\n";  	try {  		url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  	}  	catch (Exception) {  		richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  		continue;  	}  	if (url.Equals ("STREETVIEW")) {  		try {  			Spin ();  			ClickLeft ();  			Spin ();  			ClickLeft ();  		}  		catch (Exception) {  			richTextBox1.Text += "ERROR WHILE SPINING";  		}  	}  	else {  		try {  			webBrowser2.Navigate (url);  			Spin ();  			Spin ();  		}  		catch (Exception) {  			richTextBox1.Text += "Can not Navigate to this url";  		}  	}  	//     richTextBox1.Text += "Going on... " + url + "\n";  	if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  		int attempts = 0;  		long size = 10;  		do {  			try {  				Spin ();  				richTextBox1.Text += "Capture :) " + url + "\n";  				size = SaveImage (attempts);  				richTextBox1.Text += "Size is " + size + "\n";  				attempts++;  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  			}  		}  		while (size < 600000 && attempts <= 8);  		//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  		//   previousUrl = currentUrl;  		//  ++count;  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: while (currentUrl <= 3) {  	currentUrl++;  	richTextBox1.Text += "Finding Url" + currentUrl + "\n";  	try {  		url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  	}  	catch (Exception) {  		richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  		continue;  	}  	if (url.Equals ("STREETVIEW")) {  		try {  			Spin ();  			ClickLeft ();  			Spin ();  			ClickLeft ();  		}  		catch (Exception) {  			richTextBox1.Text += "ERROR WHILE SPINING";  		}  	}  	else {  		try {  			webBrowser2.Navigate (url);  			Spin ();  			Spin ();  		}  		catch (Exception) {  			richTextBox1.Text += "Can not Navigate to this url";  		}  	}  	//     richTextBox1.Text += "Going on... " + url + "\n";  	if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  		int attempts = 0;  		long size = 10;  		do {  			try {  				Spin ();  				richTextBox1.Text += "Capture :) " + url + "\n";  				size = SaveImage (attempts);  				richTextBox1.Text += "Size is " + size + "\n";  				attempts++;  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  			}  		}  		while (size < 600000 && attempts <= 8);  		//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  		//   previousUrl = currentUrl;  		//  ++count;  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: while (currentUrl <= 3) {  	currentUrl++;  	richTextBox1.Text += "Finding Url" + currentUrl + "\n";  	try {  		url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  	}  	catch (Exception) {  		richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  		continue;  	}  	if (url.Equals ("STREETVIEW")) {  		try {  			Spin ();  			ClickLeft ();  			Spin ();  			ClickLeft ();  		}  		catch (Exception) {  			richTextBox1.Text += "ERROR WHILE SPINING";  		}  	}  	else {  		try {  			webBrowser2.Navigate (url);  			Spin ();  			Spin ();  		}  		catch (Exception) {  			richTextBox1.Text += "Can not Navigate to this url";  		}  	}  	//     richTextBox1.Text += "Going on... " + url + "\n";  	if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  		int attempts = 0;  		long size = 10;  		do {  			try {  				Spin ();  				richTextBox1.Text += "Capture :) " + url + "\n";  				size = SaveImage (attempts);  				richTextBox1.Text += "Size is " + size + "\n";  				attempts++;  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  			}  		}  		while (size < 600000 && attempts <= 8);  		//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  		//   previousUrl = currentUrl;  		//  ++count;  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: while (currentUrl <= 3) {  	currentUrl++;  	richTextBox1.Text += "Finding Url" + currentUrl + "\n";  	try {  		url = urls.GetType ().GetProperty ("Url" + currentUrl).GetValue (urls' null).ToString ();  	}  	catch (Exception) {  		richTextBox1.Text += "Stuck Here---" + currentUrl + "\n";  		continue;  	}  	if (url.Equals ("STREETVIEW")) {  		try {  			Spin ();  			ClickLeft ();  			Spin ();  			ClickLeft ();  		}  		catch (Exception) {  			richTextBox1.Text += "ERROR WHILE SPINING";  		}  	}  	else {  		try {  			webBrowser2.Navigate (url);  			Spin ();  			Spin ();  		}  		catch (Exception) {  			richTextBox1.Text += "Can not Navigate to this url";  		}  	}  	//     richTextBox1.Text += "Going on... " + url + "\n";  	if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  		int attempts = 0;  		long size = 10;  		do {  			try {  				Spin ();  				richTextBox1.Text += "Capture :) " + url + "\n";  				size = SaveImage (attempts);  				richTextBox1.Text += "Size is " + size + "\n";  				attempts++;  			}  			catch (Exception) {  				richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  			}  		}  		while (size < 600000 && attempts <= 8);  		//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  		//   previousUrl = currentUrl;  		//  ++count;  	}  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  	int attempts = 0;  	long size = 10;  	do {  		try {  			Spin ();  			richTextBox1.Text += "Capture :) " + url + "\n";  			size = SaveImage (attempts);  			richTextBox1.Text += "Size is " + size + "\n";  			attempts++;  		}  		catch (Exception) {  			richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  		}  	}  	while (size < 600000 && attempts <= 8);  	//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  	//   previousUrl = currentUrl;  	//  ++count;  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  	int attempts = 0;  	long size = 10;  	do {  		try {  			Spin ();  			richTextBox1.Text += "Capture :) " + url + "\n";  			size = SaveImage (attempts);  			richTextBox1.Text += "Size is " + size + "\n";  			attempts++;  		}  		catch (Exception) {  			richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  		}  	}  	while (size < 600000 && attempts <= 8);  	//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  	//   previousUrl = currentUrl;  	//  ++count;  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: if (webBrowser2.ReadyState == WebBrowserReadyState.Complete) {  	int attempts = 0;  	long size = 10;  	do {  		try {  			Spin ();  			richTextBox1.Text += "Capture :) " + url + "\n";  			size = SaveImage (attempts);  			richTextBox1.Text += "Size is " + size + "\n";  			attempts++;  		}  		catch (Exception) {  			richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  		}  	}  	while (size < 600000 && attempts <= 8);  	//     richTextBox1.Text += "Completed " + count + "'" + previousUrl + "'" + currentUrl + "\n";  	//   previousUrl = currentUrl;  	//  ++count;  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: do {  	try {  		Spin ();  		richTextBox1.Text += "Capture :) " + url + "\n";  		size = SaveImage (attempts);  		richTextBox1.Text += "Size is " + size + "\n";  		attempts++;  	}  	catch (Exception) {  		richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  	}  }  while (size < 600000 && attempts <= 8);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,button1_Click,The following statement contains a magic number: do {  	try {  		Spin ();  		richTextBox1.Text += "Capture :) " + url + "\n";  		size = SaveImage (attempts);  		richTextBox1.Text += "Size is " + size + "\n";  		attempts++;  	}  	catch (Exception) {  		richTextBox1.Text += "ERROR WHILE SAVING IMAGE\n";  	}  }  while (size < 600000 && attempts <= 8);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,Spin,The following statement contains a magic number: while (Second_tx_count < 10) {  	Application.DoEvents ();  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,First_Tx_Tick,The following statement contains a magic number: if (First_tx_count >= 10) {  	First_Tx.Stop ();  }  else {  	First_tx_count++;  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,SaveImage,The following statement contains a magic number: try {  	Rectangle bounds = this.Bounds;  	Bitmap bitmap = new Bitmap (bounds.Width - 70' bounds.Height - 125);  	using (Graphics g = Graphics.FromImage (bitmap)) {  		g.CopyFromScreen (new Point (bounds.Left + 500' bounds.Top + 90)' Point.Empty' bounds.Size);  		newbitmap = new Bitmap (bitmap);  	}  	richTextBox1.Text += "Saving Image" + "... total attempts: " + attemps + "\n";  	string directory = null;  	try {  		directory = DirectoryName;  		Directory.CreateDirectory (directory);  		bitmap.Save (directory + currentUrl + ".png"' ImageFormat.Png);  	}  	catch (Exception) {  		MessageBox.Show ("cAN NOT SAVE IMAGE");  	}  	FileInfo info = new FileInfo (directory + currentUrl + ".png");  	size = info.Length;  	return size;  }  catch (IOException) {  	richTextBox1.Text += "IO Exception Unhandled";  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,SaveImage,The following statement contains a magic number: try {  	Rectangle bounds = this.Bounds;  	Bitmap bitmap = new Bitmap (bounds.Width - 70' bounds.Height - 125);  	using (Graphics g = Graphics.FromImage (bitmap)) {  		g.CopyFromScreen (new Point (bounds.Left + 500' bounds.Top + 90)' Point.Empty' bounds.Size);  		newbitmap = new Bitmap (bitmap);  	}  	richTextBox1.Text += "Saving Image" + "... total attempts: " + attemps + "\n";  	string directory = null;  	try {  		directory = DirectoryName;  		Directory.CreateDirectory (directory);  		bitmap.Save (directory + currentUrl + ".png"' ImageFormat.Png);  	}  	catch (Exception) {  		MessageBox.Show ("cAN NOT SAVE IMAGE");  	}  	FileInfo info = new FileInfo (directory + currentUrl + ".png");  	size = info.Length;  	return size;  }  catch (IOException) {  	richTextBox1.Text += "IO Exception Unhandled";  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,SaveImage,The following statement contains a magic number: try {  	Rectangle bounds = this.Bounds;  	Bitmap bitmap = new Bitmap (bounds.Width - 70' bounds.Height - 125);  	using (Graphics g = Graphics.FromImage (bitmap)) {  		g.CopyFromScreen (new Point (bounds.Left + 500' bounds.Top + 90)' Point.Empty' bounds.Size);  		newbitmap = new Bitmap (bitmap);  	}  	richTextBox1.Text += "Saving Image" + "... total attempts: " + attemps + "\n";  	string directory = null;  	try {  		directory = DirectoryName;  		Directory.CreateDirectory (directory);  		bitmap.Save (directory + currentUrl + ".png"' ImageFormat.Png);  	}  	catch (Exception) {  		MessageBox.Show ("cAN NOT SAVE IMAGE");  	}  	FileInfo info = new FileInfo (directory + currentUrl + ".png");  	size = info.Length;  	return size;  }  catch (IOException) {  	richTextBox1.Text += "IO Exception Unhandled";  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,SaveImage,The following statement contains a magic number: try {  	Rectangle bounds = this.Bounds;  	Bitmap bitmap = new Bitmap (bounds.Width - 70' bounds.Height - 125);  	using (Graphics g = Graphics.FromImage (bitmap)) {  		g.CopyFromScreen (new Point (bounds.Left + 500' bounds.Top + 90)' Point.Empty' bounds.Size);  		newbitmap = new Bitmap (bitmap);  	}  	richTextBox1.Text += "Saving Image" + "... total attempts: " + attemps + "\n";  	string directory = null;  	try {  		directory = DirectoryName;  		Directory.CreateDirectory (directory);  		bitmap.Save (directory + currentUrl + ".png"' ImageFormat.Png);  	}  	catch (Exception) {  		MessageBox.Show ("cAN NOT SAVE IMAGE");  	}  	FileInfo info = new FileInfo (directory + currentUrl + ".png");  	size = info.Length;  	return size;  }  catch (IOException) {  	richTextBox1.Text += "IO Exception Unhandled";  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,SaveImage,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bitmap)) {  	g.CopyFromScreen (new Point (bounds.Left + 500' bounds.Top + 90)' Point.Empty' bounds.Size);  	newbitmap = new Bitmap (bitmap);  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,SaveImage,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bitmap)) {  	g.CopyFromScreen (new Point (bounds.Left + 500' bounds.Top + 90)' Point.Empty' bounds.Size);  	newbitmap = new Bitmap (bitmap);  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,SaveImage,The following statement contains a magic number: g.CopyFromScreen (new Point (bounds.Left + 500' bounds.Top + 90)' Point.Empty' bounds.Size);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,SaveImage,The following statement contains a magic number: g.CopyFromScreen (new Point (bounds.Left + 500' bounds.Top + 90)' Point.Empty' bounds.Size);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,webBrowser2_DocumentCompleted,The following statement contains a magic number: if (IsLabelClicked == true && e.Url.ToString ().Contains ("javascript") == true && Timer_Done == false) {  	GUIclock = new System.Windows.Forms.Timer ();  	GUIclock.Disposed += new EventHandler (GUIclock_Disposed);  	GUIclock.Enabled = true;  	GUIclock.Interval = (1000);  	GUIclock.Tick += GUIclock_Tick_1;  	richTextBox1.Text += "Timer Started  " + DateTime.Now.TimeOfDay + "\n";  	GUIclock.Start ();  	Timer_Done = true;  }  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,webBrowser2_DocumentCompleted,The following statement contains a magic number: GUIclock.Interval = (1000);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,ClickLeft,The following statement contains a magic number: MoveMouse (19900' 10500);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,ClickLeft,The following statement contains a magic number: MoveMouse (19900' 10500);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,ClickLeft,The following statement contains a magic number: ClickLeftMouseButton (19900' 10500);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,ClickLeft,The following statement contains a magic number: ClickLeftMouseButton (19900' 10500);  
Magic Number,WindowsFormsApplication3,Form1,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Form1.cs,GUIclock_Tick_1,The following statement contains a magic number: if (Count >= 100) {  	richTextBox1.Text += "End";  	GUIclock.Stop ();  }  
Magic Number,WindowsFormsApplication3,Myurl,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Myurl.cs,Change_Angle,The following statement contains a magic number: try {  	//   ResultString = Regex.Match(url' "http://maps.google.com/maps.q=.layer=c.cbll=.*?cbp=(?<data>.*)").Groups["data"].Value;  	ResultString = Regex.Match (url' "maps.google.com/maps\\?(?<data1>.*?)layer.*?cbp=(?<data>.*?)&.*").Groups ["data"].Value;  	if (string.IsNullOrEmpty (ResultString)) {  		return "ERROR: ANGLE CAN NOT BE CHANGED";  	}  	string[] tokens = ResultString.Split (new char[] {  		'''  	});  	string c1 = tokens [2];  	string c2 = tokens [3];  	string c3 = tokens [4];  	string JoinedString = tokens [0] + "'" + angle + "'" + c1 + "'" + c2 + "'" + c3;  	RefinedString = Regex.Replace (url' ResultString' JoinedString);  	ResultString = Regex.Replace (RefinedString' "q=.*?&"' "");  }  catch (ArgumentException ex) {  	consoleText += "Invalid Url=  " + ex.Message + "\n";  }  
Magic Number,WindowsFormsApplication3,Myurl,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Myurl.cs,Change_Angle,The following statement contains a magic number: try {  	//   ResultString = Regex.Match(url' "http://maps.google.com/maps.q=.layer=c.cbll=.*?cbp=(?<data>.*)").Groups["data"].Value;  	ResultString = Regex.Match (url' "maps.google.com/maps\\?(?<data1>.*?)layer.*?cbp=(?<data>.*?)&.*").Groups ["data"].Value;  	if (string.IsNullOrEmpty (ResultString)) {  		return "ERROR: ANGLE CAN NOT BE CHANGED";  	}  	string[] tokens = ResultString.Split (new char[] {  		'''  	});  	string c1 = tokens [2];  	string c2 = tokens [3];  	string c3 = tokens [4];  	string JoinedString = tokens [0] + "'" + angle + "'" + c1 + "'" + c2 + "'" + c3;  	RefinedString = Regex.Replace (url' ResultString' JoinedString);  	ResultString = Regex.Replace (RefinedString' "q=.*?&"' "");  }  catch (ArgumentException ex) {  	consoleText += "Invalid Url=  " + ex.Message + "\n";  }  
Magic Number,WindowsFormsApplication3,Myurl,C:\repos\AbbasNaqvi_Projects\WindowsFormsApplication3\WindowsFormsApplication3\Myurl.cs,Change_Angle,The following statement contains a magic number: try {  	//   ResultString = Regex.Match(url' "http://maps.google.com/maps.q=.layer=c.cbll=.*?cbp=(?<data>.*)").Groups["data"].Value;  	ResultString = Regex.Match (url' "maps.google.com/maps\\?(?<data1>.*?)layer.*?cbp=(?<data>.*?)&.*").Groups ["data"].Value;  	if (string.IsNullOrEmpty (ResultString)) {  		return "ERROR: ANGLE CAN NOT BE CHANGED";  	}  	string[] tokens = ResultString.Split (new char[] {  		'''  	});  	string c1 = tokens [2];  	string c2 = tokens [3];  	string c3 = tokens [4];  	string JoinedString = tokens [0] + "'" + angle + "'" + c1 + "'" + c2 + "'" + c3;  	RefinedString = Regex.Replace (url' ResultString' JoinedString);  	ResultString = Regex.Replace (RefinedString' "q=.*?&"' "");  }  catch (ArgumentException ex) {  	consoleText += "Invalid Url=  " + ex.Message + "\n";  }  
