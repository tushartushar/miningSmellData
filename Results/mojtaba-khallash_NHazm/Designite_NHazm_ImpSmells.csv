Implementation smell,Namespace,Class,File,Method,Description
Long Method,NHazm,WordTokenizer,C:\repos\mojtaba-khallash_NHazm\NHazm\Tokenizer\WordTokenizer.cs,WordTokenizer,The method has 144 lines of code.
Complex Method,NHazm,BijankhanReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\BijankhanReader.cs,GetSentences,Cyclomatic complexity of the method is 9
Complex Method,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,Cyclomatic complexity of the method is 8
Long Parameter List,NHazm,Lemmatizer,C:\repos\mojtaba-khallash_NHazm\NHazm\Lemmatizer.cs,Lemmatizer,The method has 8 parameters.
Long Parameter List,NHazm,Lemmatizer,C:\repos\mojtaba-khallash_NHazm\NHazm\Lemmatizer.cs,Conjugations,The method has 6 parameters.
Long Statement,NHazm,PeykareReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PeykareReader.cs,JoinVerbParts,The length of the statement  "		if (PeykareReader.tokenizer.BeforeVerbs.Contains (taggedWord.word ()) || (PeykareReader.tokenizer.AfterVerbs.Contains (beforeTaggedWord.word ()) && PeykareReader.tokenizer.Verbs.Contains (taggedWord.word ()))) { " is 211.
Magic Number,NHazm,BijankhanReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\BijankhanReader.cs,GetSentences,The following statement contains a magic number: foreach (var line in File.ReadAllLines (this._bijankhanFile)) {  	var parts = Regex.Split (line.Trim ()' "  +");  	if (parts.Length == 2) {  		var word = parts [0];  		var tag = parts [1];  		if (!(word.Equals ("#") || word.Equals ("*"))) {  			word = this.Normalizer.Run (word);  			if (word.Length == 0)  				word = "_";  			sentence.Add (new TaggedWord (word' tag));  		}  		if (tag.Equals ("DELM") && punctuation.Contains (word)) {  			if (sentence.Count > 0) {  				if (this._joinedVerbParts)  					sentence = PeykareReader.JoinVerbParts (sentence);  				if (mapper != null)  					sentence.ForEach (x =>  {  						x.setTag (mapper [x.tag ()].ToString ());  					});  				yield return sentence;  				sentence = new List<TaggedWord> ();  			}  		}  	}  }  
Magic Number,NHazm,BijankhanReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\BijankhanReader.cs,GetSentences,The following statement contains a magic number: if (parts.Length == 2) {  	var word = parts [0];  	var tag = parts [1];  	if (!(word.Equals ("#") || word.Equals ("*"))) {  		word = this.Normalizer.Run (word);  		if (word.Length == 0)  			word = "_";  		sentence.Add (new TaggedWord (word' tag));  	}  	if (tag.Equals ("DELM") && punctuation.Contains (word)) {  		if (sentence.Count > 0) {  			if (this._joinedVerbParts)  				sentence = PeykareReader.JoinVerbParts (sentence);  			if (mapper != null)  				sentence.ForEach (x =>  {  					x.setTag (mapper [x.tag ()].ToString ());  				});  			yield return sentence;  			sentence = new List<TaggedWord> ();  		}  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: foreach (var folder in dir.GetDirectories ()) {  	if (hasFilter && !IsInRange (startYear' endYear' folder.Name))  		continue;  	foreach (var file in folder.GetFiles ()) {  		if (!this.invalidFiles.Contains (file.Name)) {  			if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  				continue;  			XmlDocument xDoc = new XmlDocument ();  			try {  				xDoc.Load (file.FullName);  			}  			catch (Exception e) {  				Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  				continue;  			}  			foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  				// refine text  				var body = doc ["TEXT"].InnerText;  				body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  				Document document = new Document () {  					ID = doc ["DOCID"].InnerText'  					Number = doc ["DOCNO"].InnerText'  					OriginalFile = doc ["ORIGINALFILE"].InnerText'  					Issue = doc ["ISSUE"].InnerText'  					WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  					PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  					EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  					PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  					Title = doc ["TITLE"].InnerText'  					Body = body  				};  				yield return document;  			}  		}  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: foreach (var folder in dir.GetDirectories ()) {  	if (hasFilter && !IsInRange (startYear' endYear' folder.Name))  		continue;  	foreach (var file in folder.GetFiles ()) {  		if (!this.invalidFiles.Contains (file.Name)) {  			if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  				continue;  			XmlDocument xDoc = new XmlDocument ();  			try {  				xDoc.Load (file.FullName);  			}  			catch (Exception e) {  				Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  				continue;  			}  			foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  				// refine text  				var body = doc ["TEXT"].InnerText;  				body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  				Document document = new Document () {  					ID = doc ["DOCID"].InnerText'  					Number = doc ["DOCNO"].InnerText'  					OriginalFile = doc ["ORIGINALFILE"].InnerText'  					Issue = doc ["ISSUE"].InnerText'  					WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  					PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  					EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  					PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  					Title = doc ["TITLE"].InnerText'  					Body = body  				};  				yield return document;  			}  		}  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: foreach (var folder in dir.GetDirectories ()) {  	if (hasFilter && !IsInRange (startYear' endYear' folder.Name))  		continue;  	foreach (var file in folder.GetFiles ()) {  		if (!this.invalidFiles.Contains (file.Name)) {  			if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  				continue;  			XmlDocument xDoc = new XmlDocument ();  			try {  				xDoc.Load (file.FullName);  			}  			catch (Exception e) {  				Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  				continue;  			}  			foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  				// refine text  				var body = doc ["TEXT"].InnerText;  				body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  				Document document = new Document () {  					ID = doc ["DOCID"].InnerText'  					Number = doc ["DOCNO"].InnerText'  					OriginalFile = doc ["ORIGINALFILE"].InnerText'  					Issue = doc ["ISSUE"].InnerText'  					WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  					PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  					EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  					PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  					Title = doc ["TITLE"].InnerText'  					Body = body  				};  				yield return document;  			}  		}  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: foreach (var file in folder.GetFiles ()) {  	if (!this.invalidFiles.Contains (file.Name)) {  		if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  			continue;  		XmlDocument xDoc = new XmlDocument ();  		try {  			xDoc.Load (file.FullName);  		}  		catch (Exception e) {  			Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  			continue;  		}  		foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  			// refine text  			var body = doc ["TEXT"].InnerText;  			body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  			Document document = new Document () {  				ID = doc ["DOCID"].InnerText'  				Number = doc ["DOCNO"].InnerText'  				OriginalFile = doc ["ORIGINALFILE"].InnerText'  				Issue = doc ["ISSUE"].InnerText'  				WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  				PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  				EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  				PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  				Title = doc ["TITLE"].InnerText'  				Body = body  			};  			yield return document;  		}  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: foreach (var file in folder.GetFiles ()) {  	if (!this.invalidFiles.Contains (file.Name)) {  		if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  			continue;  		XmlDocument xDoc = new XmlDocument ();  		try {  			xDoc.Load (file.FullName);  		}  		catch (Exception e) {  			Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  			continue;  		}  		foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  			// refine text  			var body = doc ["TEXT"].InnerText;  			body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  			Document document = new Document () {  				ID = doc ["DOCID"].InnerText'  				Number = doc ["DOCNO"].InnerText'  				OriginalFile = doc ["ORIGINALFILE"].InnerText'  				Issue = doc ["ISSUE"].InnerText'  				WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  				PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  				EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  				PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  				Title = doc ["TITLE"].InnerText'  				Body = body  			};  			yield return document;  		}  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: foreach (var file in folder.GetFiles ()) {  	if (!this.invalidFiles.Contains (file.Name)) {  		if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  			continue;  		XmlDocument xDoc = new XmlDocument ();  		try {  			xDoc.Load (file.FullName);  		}  		catch (Exception e) {  			Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  			continue;  		}  		foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  			// refine text  			var body = doc ["TEXT"].InnerText;  			body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  			Document document = new Document () {  				ID = doc ["DOCID"].InnerText'  				Number = doc ["DOCNO"].InnerText'  				OriginalFile = doc ["ORIGINALFILE"].InnerText'  				Issue = doc ["ISSUE"].InnerText'  				WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  				PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  				EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  				PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  				Title = doc ["TITLE"].InnerText'  				Body = body  			};  			yield return document;  		}  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: if (!this.invalidFiles.Contains (file.Name)) {  	if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  		continue;  	XmlDocument xDoc = new XmlDocument ();  	try {  		xDoc.Load (file.FullName);  	}  	catch (Exception e) {  		Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  		continue;  	}  	foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  		// refine text  		var body = doc ["TEXT"].InnerText;  		body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  		Document document = new Document () {  			ID = doc ["DOCID"].InnerText'  			Number = doc ["DOCNO"].InnerText'  			OriginalFile = doc ["ORIGINALFILE"].InnerText'  			Issue = doc ["ISSUE"].InnerText'  			WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  			PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  			EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  			PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  			Title = doc ["TITLE"].InnerText'  			Body = body  		};  		yield return document;  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: if (!this.invalidFiles.Contains (file.Name)) {  	if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  		continue;  	XmlDocument xDoc = new XmlDocument ();  	try {  		xDoc.Load (file.FullName);  	}  	catch (Exception e) {  		Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  		continue;  	}  	foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  		// refine text  		var body = doc ["TEXT"].InnerText;  		body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  		Document document = new Document () {  			ID = doc ["DOCID"].InnerText'  			Number = doc ["DOCNO"].InnerText'  			OriginalFile = doc ["ORIGINALFILE"].InnerText'  			Issue = doc ["ISSUE"].InnerText'  			WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  			PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  			EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  			PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  			Title = doc ["TITLE"].InnerText'  			Body = body  		};  		yield return document;  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: if (!this.invalidFiles.Contains (file.Name)) {  	if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  		continue;  	XmlDocument xDoc = new XmlDocument ();  	try {  		xDoc.Load (file.FullName);  	}  	catch (Exception e) {  		Console.WriteLine ("error in reading" + file.Name + ".\n" + e.Message);  		continue;  	}  	foreach (XmlNode doc in xDoc.GetElementsByTagName ("DOC")) {  		// refine text  		var body = doc ["TEXT"].InnerText;  		body = this._paragraphPattern.Apply (body).Replace ("\no "' "\n");  		Document document = new Document () {  			ID = doc ["DOCID"].InnerText'  			Number = doc ["DOCNO"].InnerText'  			OriginalFile = doc ["ORIGINALFILE"].InnerText'  			Issue = doc ["ISSUE"].InnerText'  			WesternDate = doc.SelectSingleNode ("DATE[@calender='Western']").InnerText'  			PersianDate = doc.SelectSingleNode ("DATE[@calender='Persian']").InnerText'  			EnglishCategory = doc.SelectSingleNode ("CAT[@*='en']").InnerText'  			PersianCategory = doc.SelectSingleNode ("CAT[@*='fa']").InnerText'  			Title = doc ["TITLE"].InnerText'  			Body = body  		};  		yield return document;  	}  }  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  	continue;  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  	continue;  
Magic Number,NHazm,HamshahriReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\HamshahriReader.cs,GetDocuments,The following statement contains a magic number: if (hasFilter && !IsInRange (startTime' endTime' folder.Name.Substring (0' 2) + file.Name.Substring (5' 6)))  	continue;  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._valencyFile)) {  	if (text.Contains ("بن ماضی"))  		continue;  	var line = text.Trim ().Replace ("-\t"' "\t");  	var parts = line.Split ('\t');  	if (parts.Length == 6)  		yield return new Verb {  			PastLightVerb = parts [0]'  			PresentLightVerb = parts [1]'  			Prefix = parts [2]'  			NonVerbalElement = parts [3]'  			Preposition = parts [4]'  			Valency = parts [5]  		};  }  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._valencyFile)) {  	if (text.Contains ("بن ماضی"))  		continue;  	var line = text.Trim ().Replace ("-\t"' "\t");  	var parts = line.Split ('\t');  	if (parts.Length == 6)  		yield return new Verb {  			PastLightVerb = parts [0]'  			PresentLightVerb = parts [1]'  			Prefix = parts [2]'  			NonVerbalElement = parts [3]'  			Preposition = parts [4]'  			Valency = parts [5]  		};  }  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._valencyFile)) {  	if (text.Contains ("بن ماضی"))  		continue;  	var line = text.Trim ().Replace ("-\t"' "\t");  	var parts = line.Split ('\t');  	if (parts.Length == 6)  		yield return new Verb {  			PastLightVerb = parts [0]'  			PresentLightVerb = parts [1]'  			Prefix = parts [2]'  			NonVerbalElement = parts [3]'  			Preposition = parts [4]'  			Valency = parts [5]  		};  }  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._valencyFile)) {  	if (text.Contains ("بن ماضی"))  		continue;  	var line = text.Trim ().Replace ("-\t"' "\t");  	var parts = line.Split ('\t');  	if (parts.Length == 6)  		yield return new Verb {  			PastLightVerb = parts [0]'  			PresentLightVerb = parts [1]'  			Prefix = parts [2]'  			NonVerbalElement = parts [3]'  			Preposition = parts [4]'  			Valency = parts [5]  		};  }  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._valencyFile)) {  	if (text.Contains ("بن ماضی"))  		continue;  	var line = text.Trim ().Replace ("-\t"' "\t");  	var parts = line.Split ('\t');  	if (parts.Length == 6)  		yield return new Verb {  			PastLightVerb = parts [0]'  			PresentLightVerb = parts [1]'  			Prefix = parts [2]'  			NonVerbalElement = parts [3]'  			Preposition = parts [4]'  			Valency = parts [5]  		};  }  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: if (parts.Length == 6)  	yield return new Verb {  		PastLightVerb = parts [0]'  		PresentLightVerb = parts [1]'  		Prefix = parts [2]'  		NonVerbalElement = parts [3]'  		Preposition = parts [4]'  		Valency = parts [5]  	};  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: if (parts.Length == 6)  	yield return new Verb {  		PastLightVerb = parts [0]'  		PresentLightVerb = parts [1]'  		Prefix = parts [2]'  		NonVerbalElement = parts [3]'  		Preposition = parts [4]'  		Valency = parts [5]  	};  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: if (parts.Length == 6)  	yield return new Verb {  		PastLightVerb = parts [0]'  		PresentLightVerb = parts [1]'  		Prefix = parts [2]'  		NonVerbalElement = parts [3]'  		Preposition = parts [4]'  		Valency = parts [5]  	};  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: if (parts.Length == 6)  	yield return new Verb {  		PastLightVerb = parts [0]'  		PresentLightVerb = parts [1]'  		Prefix = parts [2]'  		NonVerbalElement = parts [3]'  		Preposition = parts [4]'  		Valency = parts [5]  	};  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: if (parts.Length == 6)  	yield return new Verb {  		PastLightVerb = parts [0]'  		PresentLightVerb = parts [1]'  		Prefix = parts [2]'  		NonVerbalElement = parts [3]'  		Preposition = parts [4]'  		Valency = parts [5]  	};  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: yield return new Verb {  	PastLightVerb = parts [0]'  	PresentLightVerb = parts [1]'  	Prefix = parts [2]'  	NonVerbalElement = parts [3]'  	Preposition = parts [4]'  	Valency = parts [5]  };  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: yield return new Verb {  	PastLightVerb = parts [0]'  	PresentLightVerb = parts [1]'  	Prefix = parts [2]'  	NonVerbalElement = parts [3]'  	Preposition = parts [4]'  	Valency = parts [5]  };  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: yield return new Verb {  	PastLightVerb = parts [0]'  	PresentLightVerb = parts [1]'  	Prefix = parts [2]'  	NonVerbalElement = parts [3]'  	Preposition = parts [4]'  	Valency = parts [5]  };  
Magic Number,NHazm,VerbValencyReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\VerbValencyReader.cs,GetVerbs,The following statement contains a magic number: yield return new Verb {  	PastLightVerb = parts [0]'  	PresentLightVerb = parts [1]'  	Prefix = parts [2]'  	NonVerbalElement = parts [3]'  	Preposition = parts [4]'  	Valency = parts [5]  };  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._persicaFile)) {  	var line = text.Trim ();  	if (line.Length > 0) {  		if (line.EndsWith ("'"))  			lines.Add (line.TrimEnd ('''));  		else {  			lines.Add (line);  			yield return new Doc () {  				ID = int.Parse (lines [0])'  				Title = lines [1]'  				Text = lines [2]'  				Date = lines [3]'  				Time = lines [4]'  				Category = lines [5]'  				Category2 = lines [6]  			};  			lines = new List<string> ();  		}  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._persicaFile)) {  	var line = text.Trim ();  	if (line.Length > 0) {  		if (line.EndsWith ("'"))  			lines.Add (line.TrimEnd ('''));  		else {  			lines.Add (line);  			yield return new Doc () {  				ID = int.Parse (lines [0])'  				Title = lines [1]'  				Text = lines [2]'  				Date = lines [3]'  				Time = lines [4]'  				Category = lines [5]'  				Category2 = lines [6]  			};  			lines = new List<string> ();  		}  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._persicaFile)) {  	var line = text.Trim ();  	if (line.Length > 0) {  		if (line.EndsWith ("'"))  			lines.Add (line.TrimEnd ('''));  		else {  			lines.Add (line);  			yield return new Doc () {  				ID = int.Parse (lines [0])'  				Title = lines [1]'  				Text = lines [2]'  				Date = lines [3]'  				Time = lines [4]'  				Category = lines [5]'  				Category2 = lines [6]  			};  			lines = new List<string> ();  		}  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._persicaFile)) {  	var line = text.Trim ();  	if (line.Length > 0) {  		if (line.EndsWith ("'"))  			lines.Add (line.TrimEnd ('''));  		else {  			lines.Add (line);  			yield return new Doc () {  				ID = int.Parse (lines [0])'  				Title = lines [1]'  				Text = lines [2]'  				Date = lines [3]'  				Time = lines [4]'  				Category = lines [5]'  				Category2 = lines [6]  			};  			lines = new List<string> ();  		}  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: foreach (var text in File.ReadAllLines (this._persicaFile)) {  	var line = text.Trim ();  	if (line.Length > 0) {  		if (line.EndsWith ("'"))  			lines.Add (line.TrimEnd ('''));  		else {  			lines.Add (line);  			yield return new Doc () {  				ID = int.Parse (lines [0])'  				Title = lines [1]'  				Text = lines [2]'  				Date = lines [3]'  				Time = lines [4]'  				Category = lines [5]'  				Category2 = lines [6]  			};  			lines = new List<string> ();  		}  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.Length > 0) {  	if (line.EndsWith ("'"))  		lines.Add (line.TrimEnd ('''));  	else {  		lines.Add (line);  		yield return new Doc () {  			ID = int.Parse (lines [0])'  			Title = lines [1]'  			Text = lines [2]'  			Date = lines [3]'  			Time = lines [4]'  			Category = lines [5]'  			Category2 = lines [6]  		};  		lines = new List<string> ();  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.Length > 0) {  	if (line.EndsWith ("'"))  		lines.Add (line.TrimEnd ('''));  	else {  		lines.Add (line);  		yield return new Doc () {  			ID = int.Parse (lines [0])'  			Title = lines [1]'  			Text = lines [2]'  			Date = lines [3]'  			Time = lines [4]'  			Category = lines [5]'  			Category2 = lines [6]  		};  		lines = new List<string> ();  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.Length > 0) {  	if (line.EndsWith ("'"))  		lines.Add (line.TrimEnd ('''));  	else {  		lines.Add (line);  		yield return new Doc () {  			ID = int.Parse (lines [0])'  			Title = lines [1]'  			Text = lines [2]'  			Date = lines [3]'  			Time = lines [4]'  			Category = lines [5]'  			Category2 = lines [6]  		};  		lines = new List<string> ();  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.Length > 0) {  	if (line.EndsWith ("'"))  		lines.Add (line.TrimEnd ('''));  	else {  		lines.Add (line);  		yield return new Doc () {  			ID = int.Parse (lines [0])'  			Title = lines [1]'  			Text = lines [2]'  			Date = lines [3]'  			Time = lines [4]'  			Category = lines [5]'  			Category2 = lines [6]  		};  		lines = new List<string> ();  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.Length > 0) {  	if (line.EndsWith ("'"))  		lines.Add (line.TrimEnd ('''));  	else {  		lines.Add (line);  		yield return new Doc () {  			ID = int.Parse (lines [0])'  			Title = lines [1]'  			Text = lines [2]'  			Date = lines [3]'  			Time = lines [4]'  			Category = lines [5]'  			Category2 = lines [6]  		};  		lines = new List<string> ();  	}  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.EndsWith ("'"))  	lines.Add (line.TrimEnd ('''));  else {  	lines.Add (line);  	yield return new Doc () {  		ID = int.Parse (lines [0])'  		Title = lines [1]'  		Text = lines [2]'  		Date = lines [3]'  		Time = lines [4]'  		Category = lines [5]'  		Category2 = lines [6]  	};  	lines = new List<string> ();  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.EndsWith ("'"))  	lines.Add (line.TrimEnd ('''));  else {  	lines.Add (line);  	yield return new Doc () {  		ID = int.Parse (lines [0])'  		Title = lines [1]'  		Text = lines [2]'  		Date = lines [3]'  		Time = lines [4]'  		Category = lines [5]'  		Category2 = lines [6]  	};  	lines = new List<string> ();  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.EndsWith ("'"))  	lines.Add (line.TrimEnd ('''));  else {  	lines.Add (line);  	yield return new Doc () {  		ID = int.Parse (lines [0])'  		Title = lines [1]'  		Text = lines [2]'  		Date = lines [3]'  		Time = lines [4]'  		Category = lines [5]'  		Category2 = lines [6]  	};  	lines = new List<string> ();  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.EndsWith ("'"))  	lines.Add (line.TrimEnd ('''));  else {  	lines.Add (line);  	yield return new Doc () {  		ID = int.Parse (lines [0])'  		Title = lines [1]'  		Text = lines [2]'  		Date = lines [3]'  		Time = lines [4]'  		Category = lines [5]'  		Category2 = lines [6]  	};  	lines = new List<string> ();  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: if (line.EndsWith ("'"))  	lines.Add (line.TrimEnd ('''));  else {  	lines.Add (line);  	yield return new Doc () {  		ID = int.Parse (lines [0])'  		Title = lines [1]'  		Text = lines [2]'  		Date = lines [3]'  		Time = lines [4]'  		Category = lines [5]'  		Category2 = lines [6]  	};  	lines = new List<string> ();  }  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: yield return new Doc () {  	ID = int.Parse (lines [0])'  	Title = lines [1]'  	Text = lines [2]'  	Date = lines [3]'  	Time = lines [4]'  	Category = lines [5]'  	Category2 = lines [6]  };  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: yield return new Doc () {  	ID = int.Parse (lines [0])'  	Title = lines [1]'  	Text = lines [2]'  	Date = lines [3]'  	Time = lines [4]'  	Category = lines [5]'  	Category2 = lines [6]  };  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: yield return new Doc () {  	ID = int.Parse (lines [0])'  	Title = lines [1]'  	Text = lines [2]'  	Date = lines [3]'  	Time = lines [4]'  	Category = lines [5]'  	Category2 = lines [6]  };  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: yield return new Doc () {  	ID = int.Parse (lines [0])'  	Title = lines [1]'  	Text = lines [2]'  	Date = lines [3]'  	Time = lines [4]'  	Category = lines [5]'  	Category2 = lines [6]  };  
Magic Number,NHazm.Reader,PersicaReader,C:\repos\mojtaba-khallash_NHazm\NHazm\Reader\PersicaReader.cs,GetDocs,The following statement contains a magic number: yield return new Doc () {  	ID = int.Parse (lines [0])'  	Title = lines [1]'  	Text = lines [2]'  	Date = lines [3]'  	Time = lines [4]'  	Category = lines [5]'  	Category2 = lines [6]  };  
