Implementation smell,Namespace,Class,File,Method,Description
Long Method,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The method has 106 lines of code.
Long Method,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The method has 107 lines of code.
Complex Method,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoSearch4,Cyclomatic complexity of the method is 8
Complex Method,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,BuildAdditionalIndexes,Cyclomatic complexity of the method is 8
Complex Method,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,PrefetchRelations,Cyclomatic complexity of the method is 13
Complex Method,PkmnFoundations.Structures,GtsRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\GtsRecord5.cs,CanTrade,Cyclomatic complexity of the method is 8
Complex Method,PkmnFoundations.Structures,GtsRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\GtsRecord4.cs,CanTrade,Cyclomatic complexity of the method is 8
Complex Method,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,Cyclomatic complexity of the method is 12
Complex Method,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,Cyclomatic complexity of the method is 14
Long Parameter List,PkmnFoundations.Data,Database,C:\repos\mm201_pkmnFoundations\library\Data\Database.cs,GtsSearch4,The method has 8 parameters. Parameters: pokedex' pid' species' gender' minLevel' maxLevel' country' count
Long Parameter List,PkmnFoundations.Data,Database,C:\repos\mm201_pkmnFoundations\library\Data\Database.cs,GtsSearch5,The method has 8 parameters. Parameters: pokedex' pid' species' gender' minLevel' maxLevel' country' count
Long Parameter List,PkmnFoundations.Data,Database,C:\repos\mm201_pkmnFoundations\library\Data\Database.cs,BattleVideoSearch4,The method has 6 parameters. Parameters: species' ranking' metagame' country' region' count
Long Parameter List,PkmnFoundations.Data,Database,C:\repos\mm201_pkmnFoundations\library\Data\Database.cs,BattleVideoSearch5,The method has 6 parameters. Parameters: species' ranking' metagame' country' region' count
Long Parameter List,PkmnFoundations.Data,DatabaseExtender,C:\repos\mm201_pkmnFoundations\library\Data\DatabaseExtender.cs,GetBytes,The method has 6 parameters. Parameters: reader' column' fieldOffset' buffer' bufferOffset' length
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsGetRecord4,The method has 5 parameters. Parameters: tran' pokedex' tradeId' isExchanged' allowHistory
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsSearch4,The method has 9 parameters. Parameters: tran' pokedex' pid' species' gender' minLevel' maxLevel' country' count
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsSearch4,The method has 8 parameters. Parameters: pokedex' pid' species' gender' minLevel' maxLevel' country' count
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The method has 5 parameters. Parameters: tran' record' timeWithdrawn' partner_pid' trade_id
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsGetRecord5,The method has 5 parameters. Parameters: tran' pokedex' tradeId' isExchanged' allowHistory
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsSearch5,The method has 8 parameters. Parameters: pokedex' pid' species' gender' minLevel' maxLevel' country' count
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsSearch5,The method has 9 parameters. Parameters: tran' pokedex' pid' species' gender' minLevel' maxLevel' country' count
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade5,The method has 5 parameters. Parameters: tran' record' timeWithdrawn' partner_pid' trade_id
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoSearch4,The method has 7 parameters. Parameters: tran' species' ranking' metagame' country' region' count
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoSearch4,The method has 6 parameters. Parameters: species' ranking' metagame' country' region' count
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoSearch5,The method has 7 parameters. Parameters: tran' species' ranking' metagame' country' region' count
Long Parameter List,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoSearch5,The method has 6 parameters. Parameters: species' ranking' metagame' country' region' count
Long Parameter List,PkmnFoundations.Pokedex,FormStats,C:\repos\mm201_pkmnFoundations\library\Pokedex\FormStats.cs,FormStats,The method has 7 parameters. Parameters: pokedex' form_id' min_generation' type1' type2' base_stats' reward_evs
Long Parameter List,PkmnFoundations.Pokedex,Item,C:\repos\mm201_pkmnFoundations\library\Pokedex\Item.cs,Item,The method has 8 parameters. Parameters: pokedex' id' value3' value4' value5' value6' price' name
Long Parameter List,PkmnFoundations.Pokedex,Location,C:\repos\mm201_pkmnFoundations\library\Pokedex\Location.cs,Location,The method has 10 parameters. Parameters: pokedex' id' region_id' value3' value_colo' value_xd' value4' value5' value6' name
Long Parameter List,PkmnFoundations.Pokedex,Move,C:\repos\mm201_pkmnFoundations\library\Pokedex\Move.cs,Move,The method has 10 parameters. Parameters: pokedex' id' type_id' name' damage_class' damage' pp' accuracy' priority' target
Long Parameter List,PkmnFoundations.Pokedex,Ribbon,C:\repos\mm201_pkmnFoundations\library\Pokedex\Ribbon.cs,Ribbon,The method has 12 parameters. Parameters: pokedex' id' name' description' position3' position4' position5' position6' value3' value4' value5' value6
Long Parameter List,PkmnFoundations.Pokedex,Species,C:\repos\mm201_pkmnFoundations\library\Pokedex\Species.cs,Species,The method has 10 parameters. Parameters: pokedex' national_dex' family_id' name' growth_rate' gender_ratio' egg_group_1' egg_group_2' egg_steps' gender_variations
Long Parameter List,PkmnFoundations.Pokedex,Family,C:\repos\mm201_pkmnFoundations\library\Pokedex\Family.cs,Family,The method has 8 parameters. Parameters: pokedex' id' basic_male_id' basic_female_id' baby_male_id' baby_female_id' incense_id' gender_ratio
Long Parameter List,PkmnFoundations.Pokedex,Form,C:\repos\mm201_pkmnFoundations\library\Pokedex\Form.cs,Form,The method has 9 parameters. Parameters: pokedex' id' species_id' value' name' suffix' height' weight' experience
Long Parameter List,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,BattleTowerPokemon4,The method has 12 parameters. Parameters: species' held_item' moveset' ot' personality' ivs' evs' unknown1' language' ability' happiness' nickname
Long Parameter List,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The method has 6 parameters. Parameters: HP' Attack' Defense' Speed' SpAttack' SpDefense
Long Parameter List,PkmnFoundations.Structures,BattleTowerProfile4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerProfile4.cs,BattleTowerProfile4,The method has 9 parameters. Parameters: name' version' language' country' region' ot' phrase_leader' gender' unknown
Long Parameter List,PkmnFoundations.Structures,BoxRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BoxRecord4.cs,BoxRecord4,The method has 5 parameters. Parameters: pid' label' serial_number' data' offset
Long Parameter List,PkmnFoundations.Structures,ByteStatValues,C:\repos\mm201_pkmnFoundations\library\Structures\ByteStatValues.cs,ByteStatValues,The method has 6 parameters. Parameters: hp' attack' defense' speed' special_attack' special_defense
Long Parameter List,PkmnFoundations.Structures,ConditionValues,C:\repos\mm201_pkmnFoundations\library\Structures\ContestStatValues.cs,ConditionValues,The method has 6 parameters. Parameters: cool' beauty' cute' smart' tough' sheen
Long Parameter List,PkmnFoundations.Structures,IvStatValues,C:\repos\mm201_pkmnFoundations\library\Structures\IvStatValues.cs,IvStatValues,The method has 6 parameters. Parameters: hp' attack' defense' speed' special_attack' special_defense
Long Parameter List,PkmnFoundations.Structures,IntStatValues,C:\repos\mm201_pkmnFoundations\library\Structures\IntStatValues.cs,IntStatValues,The method has 6 parameters. Parameters: hp' attack' defense' speed' special_attack' special_defense
Long Parameter List,PkmnFoundations.Structures,StatValues<T>,C:\repos\mm201_pkmnFoundations\library\Structures\StatValues.cs,StatValues,The method has 6 parameters. Parameters: hp' attack' defense' speed' special_attack' special_defense
Long Parameter List,PkmnFoundations.Structures,StatValuesBase<T>,C:\repos\mm201_pkmnFoundations\library\Structures\StatValuesBase.cs,StatValuesBase,The method has 6 parameters. Parameters: s0' s1' s2' s3' s4' s5
Long Parameter List,PkmnFoundations.Structures,TrainerMemo,C:\repos\mm201_pkmnFoundations\library\Structures\TrainerMemo.cs,TrainerMemo,The method has 8 parameters. Parameters: pokedex' numbering' time_egg_obtained' time_encountered' location_egg_obtained_id' location_encountered_id' is_hatched' level_encountered
Long Parameter List,PkmnFoundations.Support,LogHelper,C:\repos\mm201_pkmnFoundations\library\Support\LogHelper.cs,Write,The method has 5 parameters. Parameters: message' type' eventID' category' rawData
Long Identifier,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,,The length of the parameter m_ribbon_positions_generations is 30.
Long Statement,PkmnFoundations.Data,Database,C:\repos\mm201_pkmnFoundations\library\Data\Database.cs,CreateInstance,The length of the statement  "            if (connStr == null) throw new NotSupportedException("No database connection string provided. Please add one in web.config or app.config."); " is 140.
Long Statement,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,PlazaSetProfile,The length of the statement  "            long exists = (long)tran.ExecuteScalar("SELECT EXISTS(SELECT * FROM pkmncf_plaza_profiles WHERE pid = @pid)"' new MySqlParameter("@pid"' profile.PID)); " is 151.
Long Statement,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GamestatsBumpProfile4,The length of the statement  "            long exists = (long)tran.ExecuteScalar("SELECT EXISTS(SELECT * FROM GtsProfiles4 WHERE pid = @pid)"' new MySqlParameter("@pid"' pid)); " is 134.
Long Statement,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GamestatsSetProfile4,The length of the statement  "            long exists = (long)tran.ExecuteScalar("SELECT EXISTS(SELECT * FROM GtsProfiles4 WHERE pid = @pid)"' new MySqlParameter("@pid"' profile.PID)); " is 142.
Long Statement,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The length of the statement  "            byte[] src = record.Data.ToArray(); // xxx: why is there no IList<T>.CopyTo(T[] dest' int destOffset' int count) overload?? " is 123.
Long Statement,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GamestatsSetProfile5,The length of the statement  "            long exists = (long)tran.ExecuteScalar("SELECT EXISTS(SELECT * FROM GtsProfiles5 WHERE pid = @pid)"' new MySqlParameter("@pid"' profile.PID)); " is 142.
Long Statement,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,DressupUpload4,The length of the statement  "            long exists = (long)tran.ExecuteScalar("SELECT EXISTS(SELECT * FROM TerminalDressup4 WHERE md5 = unhex(md5(@data)) AND Data = @data)"' new MySqlParameter("@data"' record.Data)); " is 177.
Long Statement,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BoxUpload4,The length of the statement  "            long exists = (long)tran.ExecuteScalar("SELECT EXISTS(SELECT * FROM TerminalBoxes4 WHERE md5 = unhex(md5(@data)) AND Data = @data)"' new MySqlParameter("@data"' record.Data)); " is 175.
Long Statement,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,CreateLocalizedStringQueryPieces,The length of the statement  "                MySqlParameter param = new MySqlParameter(prefix + lang.ToLowerInvariant()' s.ContainsKey(lang) ? s[lang] : (object)DBNull.Value); " is 130.
Long Statement,PkmnFoundations.Data,MySqlDatabaseExtender,C:\repos\mm201_pkmnFoundations\library\Data\MySqlDatabaseExtender.cs,CloneParameters,The length of the statement  "                MySqlParameter param = new MySqlParameter(p.ParameterName' (MySqlDbType)p.DbType' p.Size' p.Direction' p.IsNullable' p.Precision' p.Scale' p.SourceColumn' p.SourceVersion' p.Value); " is 181.
Long Statement,PkmnFoundations.Data,SqlDatabaseExtender,C:\repos\mm201_pkmnFoundations\library\Data\SqlDatabaseExtender.cs,CloneParameters,The length of the statement  "                SqlParameter param = new SqlParameter(p.ParameterName' (SqlDbType)p.DbType' p.Size' p.Direction' p.IsNullable' p.Precision' p.Scale' p.SourceColumn' p.SourceVersion' p.Value); " is 175.
Long Statement,PkmnFoundations.Pokedex,Location,C:\repos\mm201_pkmnFoundations\library\Pokedex\Location.cs,CreatePairForGeneration,The length of the statement  "                k => k == 0 ? null : (pokedex == null ? null : pokedex.Locations(GenerationToLocationNumbering(generationGetter()))[k])' " is 120.
Long Statement,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,GetAllData,The length of the statement  "            Dictionary<int' SortedList<Generations' FormStats>> resultFormStats = new Dictionary<int' SortedList<Generations' FormStats>>(); " is 128.
Long Statement,PkmnFoundations.Structures,TrainerMemo,C:\repos\mm201_pkmnFoundations\library\Structures\TrainerMemo.cs,ToString,The length of the statement  "                return String.Format("Egg obtained from {1} on {0:D}. Hatched in {3} on {2:D}."' timeEgg' LocationToString(LocationEggObtained' LocationEggObtainedID)' timeGiven' LocationToString(LocationEncountered' LocationEncounteredID)); " is 225.
Long Statement,PkmnFoundations.Structures,TrainerMemo,C:\repos\mm201_pkmnFoundations\library\Structures\TrainerMemo.cs,ToString,The length of the statement  "                return String.Format("Met at Lv. {0} in {2} on {1:D}."' level' time' LocationToString(LocationEncountered' LocationEncounteredID)); " is 131.
Virtual Method Call from Constructor,PkmnFoundations.Structures,BoxRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BoxRecord4.cs,BoxRecord4,The constructor "BoxRecord4" calls a virtual method "Load".
Virtual Method Call from Constructor,PkmnFoundations.Structures,DressupRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\DressupRecord4.cs,DressupRecord4,The constructor "DressupRecord4" calls a virtual method "Load".
Virtual Method Call from Constructor,PkmnFoundations.Structures,MusicalRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\MusicalRecord5.cs,MusicalRecord5,The constructor "MusicalRecord5" calls a virtual method "Load".
Virtual Method Call from Constructor,PkmnFoundations.Structures,MusicalParticipant5,C:\repos\mm201_pkmnFoundations\library\Structures\MusicalRecord5.cs,MusicalParticipant5,The constructor "MusicalParticipant5" calls a virtual method "Load".
Virtual Method Call from Constructor,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,PokemonBase,The constructor "PokemonBase" calls a virtual method "Load".
Empty Catch Block,PkmnFoundations.Support,LocalizedString,C:\repos\mm201_pkmnFoundations\library\Support\LocalizedString.cs,ToString,The method has an empty catch block.
Empty Catch Block,PkmnFoundations.Support,LocalizedString,C:\repos\mm201_pkmnFoundations\library\Support\LocalizedString.cs,ToString,The method has an empty catch block.
Magic Number,PkmnFoundations.Data,DatabaseExtender,C:\repos\mm201_pkmnFoundations\library\Data\DatabaseExtender.cs,GetByteArray,The following statement contains a magic number: const int BUFFER_LENGTH = 256;
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsDepositPokemon4,The following statement contains a magic number: if (record.Data.Count != 236) throw new FormatException("pkm data must be 236 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsDepositPokemon4,The following statement contains a magic number: if (record.TrainerNameEncoded.RawData.Length != 16) throw new FormatException("Trainer name must be 16 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsDepositPokemon4,The following statement contains a magic number: if (record.Data.Count != 236) throw new FormatException("pkm data must be 236 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsDepositPokemon4,The following statement contains a magic number: if (record.TrainerNameEncoded.RawData.Length != 16) throw new FormatException("Trainer name must be 16 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: byte[] data = new byte[236];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: reader.GetBytes(0' 0' data' 0' 236);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.Gender = (Genders)reader.GetByte(2);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.Level = reader.GetByte(3);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.RequestedSpecies = reader.GetUInt16(4);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.RequestedGender = (Genders)reader.GetByte(5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.RequestedMinLevel = reader.GetByte(6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.RequestedMaxLevel = reader.GetByte(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.Unknown1 = reader.GetByte(8);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.TrainerGender = (TrainerGenders)reader.GetByte(9);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.Unknown2 = reader.GetByte(10);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: if (reader.IsDBNull(11)) result.TimeDeposited = null;              else result.TimeDeposited = reader.GetDateTime(11);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: if (reader.IsDBNull(11)) result.TimeDeposited = null;              else result.TimeDeposited = reader.GetDateTime(11);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: if (reader.IsDBNull(12)) result.TimeExchanged = null;              else result.TimeExchanged = reader.GetDateTime(12);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: if (reader.IsDBNull(12)) result.TimeExchanged = null;              else result.TimeExchanged = reader.GetDateTime(12);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.PID = reader.GetInt32(13);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: data = new byte[16];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: reader.GetBytes(14' 0' data' 0' 16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: reader.GetBytes(14' 0' data' 0' 16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.TrainerOT = reader.GetUInt16(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.TrainerCountry = reader.GetByte(16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.TrainerRegion = reader.GetByte(17);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.TrainerClass = reader.GetByte(18);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.IsExchanged = reader.GetByte(19);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.TrainerVersion = reader.GetByte(20);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record4FromReader,The following statement contains a magic number: result.TrainerLanguage = reader.GetByte(21);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: MySqlParameter[] result = new MySqlParameter[22];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[2] = new MySqlParameter("@Gender"' (byte)record.Gender);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[3] = new MySqlParameter("@Level"' record.Level);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[4] = new MySqlParameter("@RequestedSpecies"' record.RequestedSpecies);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[5] = new MySqlParameter("@RequestedGender"' (byte)record.RequestedGender);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[6] = new MySqlParameter("@RequestedMinLevel"' record.RequestedMinLevel);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[7] = new MySqlParameter("@RequestedMaxLevel"' record.RequestedMaxLevel);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[8] = new MySqlParameter("@Unknown1"' record.Unknown1);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[9] = new MySqlParameter("@TrainerGender"' (byte)record.TrainerGender);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[10] = new MySqlParameter("@Unknown2"' record.Unknown2);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[11] = new MySqlParameter("@TimeDeposited"' record.TimeDeposited);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[12] = new MySqlParameter("@TimeExchanged"' record.TimeExchanged);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[13] = new MySqlParameter("@pid"' record.PID);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[14] = new MySqlParameter("@TrainerName"' record.TrainerNameEncoded.RawData);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[15] = new MySqlParameter("@TrainerOT"' record.TrainerOT);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[16] = new MySqlParameter("@TrainerCountry"' record.TrainerCountry);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[17] = new MySqlParameter("@TrainerRegion"' record.TrainerRegion);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[18] = new MySqlParameter("@TrainerClass"' record.TrainerClass);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[19] = new MySqlParameter("@IsExchanged"' record.IsExchanged);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[20] = new MySqlParameter("@TrainerVersion"' record.TrainerVersion);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord4,The following statement contains a magic number: result[21] = new MySqlParameter("@TrainerLanguage"' record.TrainerLanguage);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: if (record.Data.Count != 236) throw new FormatException("pkm data must be 236 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: if (record.TrainerNameEncoded.RawData.Length != 16) throw new FormatException("Trainer name must be 16 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: MySqlParameter[] _params2 = new MySqlParameter[25];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: Array.Copy(_params' _params2' 22);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: _params2[22] = new MySqlParameter("@TimeWithdrawn"' timeWithdrawn);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: _params2[23] = new MySqlParameter("@trade_id"' trade_id);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: _params2[24] = new MySqlParameter("@partner_pid"' partner_pid);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: if (record.Data.Count != 236) throw new FormatException("pkm data must be 236 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade4,The following statement contains a magic number: if (record.TrainerNameEncoded.RawData.Length != 16) throw new FormatException("Trainer name must be 16 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerUpdateRecord4,The following statement contains a magic number: if (record.BattlesWon > 7) throw new ArgumentException("Battles won can not be greater than 7.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerUpdateRecord4,The following statement contains a magic number: uint position = (uint)(7 - record.BattlesWon);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerUpdateRecord4,The following statement contains a magic number: if (pkey != 0)              {                  List<MySqlParameter> _params = ParamsFromBattleTowerRecord4(record' false);                  _params.Add(new MySqlParameter("@position"' position));                  _params.Add(new MySqlParameter("@id"' pkey));                    tran.ExecuteNonQuery("UPDATE GtsBattleTower4 SET pid = @pid' Name = @name' " +                      "Version = @version' Language = @language' Country = @country' " +                      "Region = @region' TrainerID = @trainer_id' " +                      "PhraseLeader = @phrase_leader' Gender = @gender' " +                      "Unknown2 = @unknown2' PhraseChallenged = @phrase_challenged' " +                      "PhraseWon = @phrase_won' PhraseLost = @phrase_lost' " +                      "Unknown3 = @unknown3' " +                      "Unknown5 = @unknown5' ParseVersion = 1' Rank = @rank' " +                      "BattlesWon = @battles_won' Position = @position' " +                      "TimeUpdated = UTC_TIMESTAMP() WHERE id = @id"'                      _params.ToArray());                    UpdateBattleTowerPokemon4(tran' record.Party[0]' pkey' 0);                  UpdateBattleTowerPokemon4(tran' record.Party[1]' pkey' 1);                  UpdateBattleTowerPokemon4(tran' record.Party[2]' pkey' 2);              }              else              {                  List<MySqlParameter> _params = ParamsFromBattleTowerRecord4(record' false);                  _params.Add(new MySqlParameter("@position"' position));                    pkey = Convert.ToUInt64(tran.ExecuteScalar("INSERT INTO GtsBattleTower4 " +                      "(pid' Name' Version' Language' Country' Region' TrainerID' " +                      "PhraseLeader' Gender' Unknown2' PhraseChallenged' PhraseWon' " +                      "PhraseLost' Unknown3' Unknown5' ParseVersion' " +                      "Rank' RoomNum' BattlesWon' Position' TimeAdded' TimeUpdated) VALUES " +                      "(@pid' @name' @version' @language' @country' @region' @trainer_id' " +                      "@phrase_leader' @gender' @unknown2' @phrase_challenged' @phrase_won' " +                      "@phrase_lost' @unknown3' @unknown5' 1' " +                      "@rank' @room' @battles_won' @position' UTC_TIMESTAMP()' UTC_TIMESTAMP()); " +                      "SELECT LAST_INSERT_ID()"'                      _params.ToArray()));                    InsertBattleTowerPokemon4(tran' record.Party[0]' pkey' 0);                  InsertBattleTowerPokemon4(tran' record.Party[1]' pkey' 1);                  InsertBattleTowerPokemon4(tran' record.Party[2]' pkey' 2);              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerUpdateRecord4,The following statement contains a magic number: if (pkey != 0)              {                  List<MySqlParameter> _params = ParamsFromBattleTowerRecord4(record' false);                  _params.Add(new MySqlParameter("@position"' position));                  _params.Add(new MySqlParameter("@id"' pkey));                    tran.ExecuteNonQuery("UPDATE GtsBattleTower4 SET pid = @pid' Name = @name' " +                      "Version = @version' Language = @language' Country = @country' " +                      "Region = @region' TrainerID = @trainer_id' " +                      "PhraseLeader = @phrase_leader' Gender = @gender' " +                      "Unknown2 = @unknown2' PhraseChallenged = @phrase_challenged' " +                      "PhraseWon = @phrase_won' PhraseLost = @phrase_lost' " +                      "Unknown3 = @unknown3' " +                      "Unknown5 = @unknown5' ParseVersion = 1' Rank = @rank' " +                      "BattlesWon = @battles_won' Position = @position' " +                      "TimeUpdated = UTC_TIMESTAMP() WHERE id = @id"'                      _params.ToArray());                    UpdateBattleTowerPokemon4(tran' record.Party[0]' pkey' 0);                  UpdateBattleTowerPokemon4(tran' record.Party[1]' pkey' 1);                  UpdateBattleTowerPokemon4(tran' record.Party[2]' pkey' 2);              }              else              {                  List<MySqlParameter> _params = ParamsFromBattleTowerRecord4(record' false);                  _params.Add(new MySqlParameter("@position"' position));                    pkey = Convert.ToUInt64(tran.ExecuteScalar("INSERT INTO GtsBattleTower4 " +                      "(pid' Name' Version' Language' Country' Region' TrainerID' " +                      "PhraseLeader' Gender' Unknown2' PhraseChallenged' PhraseWon' " +                      "PhraseLost' Unknown3' Unknown5' ParseVersion' " +                      "Rank' RoomNum' BattlesWon' Position' TimeAdded' TimeUpdated) VALUES " +                      "(@pid' @name' @version' @language' @country' @region' @trainer_id' " +                      "@phrase_leader' @gender' @unknown2' @phrase_challenged' @phrase_won' " +                      "@phrase_lost' @unknown3' @unknown5' 1' " +                      "@rank' @room' @battles_won' @position' UTC_TIMESTAMP()' UTC_TIMESTAMP()); " +                      "SELECT LAST_INSERT_ID()"'                      _params.ToArray()));                    InsertBattleTowerPokemon4(tran' record.Party[0]' pkey' 0);                  InsertBattleTowerPokemon4(tran' record.Party[1]' pkey' 1);                  InsertBattleTowerPokemon4(tran' record.Party[2]' pkey' 2);              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerUpdateRecord4,The following statement contains a magic number: if (pkey != 0)              {                  List<MySqlParameter> _params = ParamsFromBattleTowerRecord4(record' false);                  _params.Add(new MySqlParameter("@position"' position));                  _params.Add(new MySqlParameter("@id"' pkey));                    tran.ExecuteNonQuery("UPDATE GtsBattleTower4 SET pid = @pid' Name = @name' " +                      "Version = @version' Language = @language' Country = @country' " +                      "Region = @region' TrainerID = @trainer_id' " +                      "PhraseLeader = @phrase_leader' Gender = @gender' " +                      "Unknown2 = @unknown2' PhraseChallenged = @phrase_challenged' " +                      "PhraseWon = @phrase_won' PhraseLost = @phrase_lost' " +                      "Unknown3 = @unknown3' " +                      "Unknown5 = @unknown5' ParseVersion = 1' Rank = @rank' " +                      "BattlesWon = @battles_won' Position = @position' " +                      "TimeUpdated = UTC_TIMESTAMP() WHERE id = @id"'                      _params.ToArray());                    UpdateBattleTowerPokemon4(tran' record.Party[0]' pkey' 0);                  UpdateBattleTowerPokemon4(tran' record.Party[1]' pkey' 1);                  UpdateBattleTowerPokemon4(tran' record.Party[2]' pkey' 2);              }              else              {                  List<MySqlParameter> _params = ParamsFromBattleTowerRecord4(record' false);                  _params.Add(new MySqlParameter("@position"' position));                    pkey = Convert.ToUInt64(tran.ExecuteScalar("INSERT INTO GtsBattleTower4 " +                      "(pid' Name' Version' Language' Country' Region' TrainerID' " +                      "PhraseLeader' Gender' Unknown2' PhraseChallenged' PhraseWon' " +                      "PhraseLost' Unknown3' Unknown5' ParseVersion' " +                      "Rank' RoomNum' BattlesWon' Position' TimeAdded' TimeUpdated) VALUES " +                      "(@pid' @name' @version' @language' @country' @region' @trainer_id' " +                      "@phrase_leader' @gender' @unknown2' @phrase_challenged' @phrase_won' " +                      "@phrase_lost' @unknown3' @unknown5' 1' " +                      "@rank' @room' @battles_won' @position' UTC_TIMESTAMP()' UTC_TIMESTAMP()); " +                      "SELECT LAST_INSERT_ID()"'                      _params.ToArray()));                    InsertBattleTowerPokemon4(tran' record.Party[0]' pkey' 0);                  InsertBattleTowerPokemon4(tran' record.Party[1]' pkey' 1);                  InsertBattleTowerPokemon4(tran' record.Party[2]' pkey' 2);              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerUpdateRecord4,The following statement contains a magic number: if (pkey != 0)              {                  List<MySqlParameter> _params = ParamsFromBattleTowerRecord4(record' false);                  _params.Add(new MySqlParameter("@position"' position));                  _params.Add(new MySqlParameter("@id"' pkey));                    tran.ExecuteNonQuery("UPDATE GtsBattleTower4 SET pid = @pid' Name = @name' " +                      "Version = @version' Language = @language' Country = @country' " +                      "Region = @region' TrainerID = @trainer_id' " +                      "PhraseLeader = @phrase_leader' Gender = @gender' " +                      "Unknown2 = @unknown2' PhraseChallenged = @phrase_challenged' " +                      "PhraseWon = @phrase_won' PhraseLost = @phrase_lost' " +                      "Unknown3 = @unknown3' " +                      "Unknown5 = @unknown5' ParseVersion = 1' Rank = @rank' " +                      "BattlesWon = @battles_won' Position = @position' " +                      "TimeUpdated = UTC_TIMESTAMP() WHERE id = @id"'                      _params.ToArray());                    UpdateBattleTowerPokemon4(tran' record.Party[0]' pkey' 0);                  UpdateBattleTowerPokemon4(tran' record.Party[1]' pkey' 1);                  UpdateBattleTowerPokemon4(tran' record.Party[2]' pkey' 2);              }              else              {                  List<MySqlParameter> _params = ParamsFromBattleTowerRecord4(record' false);                  _params.Add(new MySqlParameter("@position"' position));                    pkey = Convert.ToUInt64(tran.ExecuteScalar("INSERT INTO GtsBattleTower4 " +                      "(pid' Name' Version' Language' Country' Region' TrainerID' " +                      "PhraseLeader' Gender' Unknown2' PhraseChallenged' PhraseWon' " +                      "PhraseLost' Unknown3' Unknown5' ParseVersion' " +                      "Rank' RoomNum' BattlesWon' Position' TimeAdded' TimeUpdated) VALUES " +                      "(@pid' @name' @version' @language' @country' @region' @trainer_id' " +                      "@phrase_leader' @gender' @unknown2' @phrase_challenged' @phrase_won' " +                      "@phrase_lost' @unknown3' @unknown5' 1' " +                      "@rank' @room' @battles_won' @position' UTC_TIMESTAMP()' UTC_TIMESTAMP()); " +                      "SELECT LAST_INSERT_ID()"'                      _params.ToArray()));                    InsertBattleTowerPokemon4(tran' record.Party[0]' pkey' 0);                  InsertBattleTowerPokemon4(tran' record.Party[1]' pkey' 1);                  InsertBattleTowerPokemon4(tran' record.Party[2]' pkey' 2);              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerUpdateRecord4,The following statement contains a magic number: if (record.BattlesWon > 7) throw new ArgumentException("Battles won can not be greater than 7.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleTowerRecord4,The following statement contains a magic number: List<MySqlParameter> result = new List<MySqlParameter>(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleTowerPokemon4,The following statement contains a magic number: List<MySqlParameter> result = new List<MySqlParameter>(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleTowerPokemon4,The following statement contains a magic number: result.Add(new MySqlParameter("@move3"' pokemon.Moveset[2]));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleTowerPokemon4,The following statement contains a magic number: result.Add(new MySqlParameter("@move4"' pokemon.Moveset[3]));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerGetOpponents4,The following statement contains a magic number: List<BattleTowerRecord4> records = new List<BattleTowerRecord4>(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerGetOpponents4,The following statement contains a magic number: List<ulong> keys = new List<ulong>(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerGetOpponents4,The following statement contains a magic number: using (MySqlDataReader reader = (MySqlDataReader)tran.ExecuteReader(                  "SELECT id' pid' Name' " +                  "Version' Language' Country' Region' TrainerID' " +                  "PhraseLeader' Gender' Unknown2' PhraseChallenged' " +                  "PhraseWon' PhraseLost' Unknown3' Unknown5 FROM GtsBattleTower4 " +                  "WHERE Rank = @rank AND RoomNum = @room AND pid != @pid " +                  "ORDER BY Position LIMIT 7"'                  new MySqlParameter("@rank"' rank)'                  new MySqlParameter("@room"' roomNum)'                  new MySqlParameter("@pid"' pid)))              {                  while (reader.Read())                  {                      BattleTowerRecord4 record = BattleTowerRecord4FromReader(reader);                      record.Party = new BattleTowerPokemon4[3];                      records.Add(record);                      keys.Add(reader.GetUInt64(0));                  }                  reader.Close();              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 11) result.PhraseChallenged = new TrendyPhrase4(reader.GetByteArray(11' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 11) result.PhraseChallenged = new TrendyPhrase4(reader.GetByteArray(11' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 11) result.PhraseChallenged = new TrendyPhrase4(reader.GetByteArray(11' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 12) result.PhraseWon = new TrendyPhrase4(reader.GetByteArray(12' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 12) result.PhraseWon = new TrendyPhrase4(reader.GetByteArray(12' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 12) result.PhraseWon = new TrendyPhrase4(reader.GetByteArray(12' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 13) result.PhraseLost = new TrendyPhrase4(reader.GetByteArray(13' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 13) result.PhraseLost = new TrendyPhrase4(reader.GetByteArray(13' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 13) result.PhraseLost = new TrendyPhrase4(reader.GetByteArray(13' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 14) result.Unknown3 = reader.GetUInt16(14);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 14) result.Unknown3 = reader.GetUInt16(14);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 15) result.Unknown5 = reader.GetUInt64(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: if (reader.FieldCount > 15) result.Unknown5 = reader.GetUInt64(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.Name = new EncodedString4(reader.GetByteArray(2' 16));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.Name = new EncodedString4(reader.GetByteArray(2' 16));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.Version = (Versions)reader.GetByte(3);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.Language = (Languages)reader.GetByte(4);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.Country = reader.GetByte(5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.Region = reader.GetByte(6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.OT = reader.GetUInt32(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.PhraseLeader = new TrendyPhrase4(reader.GetByteArray(8' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.PhraseLeader = new TrendyPhrase4(reader.GetByteArray(8' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.Gender = reader.GetByte(9);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerRecord4FromReader,The following statement contains a magic number: profile.Unknown = reader.GetByte(10);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Species = reader.GetUInt16(2);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.HeldItem = reader.GetUInt16(3);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Moveset = new ushort[4];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Moveset[0] = reader.GetUInt16(4);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Moveset[1] = reader.GetUInt16(5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Moveset[2] = reader.GetUInt16(6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Moveset[2] = reader.GetUInt16(6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Moveset[3] = reader.GetUInt16(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Moveset[3] = reader.GetUInt16(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.OT = reader.GetUInt32(8);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Personality = reader.GetUInt32(9);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.IVs = reader.GetUInt32(10);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.EVs = reader.GetByteArray(11' 6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.EVs = reader.GetByteArray(11' 6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Unknown1 = reader.GetByte(12);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Language = (Languages)reader.GetByte(13);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Ability = reader.GetByte(14);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Happiness = reader.GetByte(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Nickname = new EncodedString4(reader.GetByteArray(16' 22));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerPokemon4FromReader,The following statement contains a magic number: result.Nickname = new EncodedString4(reader.GetByteArray(16' 22));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleTowerGetLeaders4,The following statement contains a magic number: List<BattleTowerProfile4> profiles = new List<BattleTowerProfile4>(30);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,PlazaGetProfile,The following statement contains a magic number: using (MySqlDataReader reader = (MySqlDataReader)tran.ExecuteReader("SELECT " +                  "DataPrefix' Data FROM pkmncf_plaza_profiles " +                  "WHERE pid = @pid"'                  new MySqlParameter("@pid"' pid)))              {                  if (reader.Read())                  {                      TrainerProfilePlaza result = new TrainerProfilePlaza(pid' reader.GetByteArray(0' 12)' reader.GetByteArray(1' 152));                      reader.Close();                      return result;                  }                  else return null;              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,PlazaGetProfile,The following statement contains a magic number: using (MySqlDataReader reader = (MySqlDataReader)tran.ExecuteReader("SELECT " +                  "DataPrefix' Data FROM pkmncf_plaza_profiles " +                  "WHERE pid = @pid"'                  new MySqlParameter("@pid"' pid)))              {                  if (reader.Read())                  {                      TrainerProfilePlaza result = new TrainerProfilePlaza(pid' reader.GetByteArray(0' 12)' reader.GetByteArray(1' 152));                      reader.Close();                      return result;                  }                  else return null;              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,PlazaSetProfile,The following statement contains a magic number: if (profile.DataPrefix.Length != 12) throw new FormatException("Profile data prefix must be 12 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,PlazaSetProfile,The following statement contains a magic number: if (profile.Data.Length != 152) throw new FormatException("Profile data must be 152 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GamestatsSetProfile4,The following statement contains a magic number: if (profile.Data.Length != 100) throw new FormatException("Profile data must be 100 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsDepositPokemon5,The following statement contains a magic number: if (record.Data.Count != 236) throw new FormatException("pkm data must be 236 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsDepositPokemon5,The following statement contains a magic number: if (record.TrainerNameEncoded.RawData.Length != 16) throw new FormatException("Trainer name must be 16 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsDepositPokemon5,The following statement contains a magic number: if (record.Data.Count != 236) throw new FormatException("pkm data must be 236 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsDepositPokemon5,The following statement contains a magic number: if (record.TrainerNameEncoded.RawData.Length != 16) throw new FormatException("Trainer name must be 16 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: byte[] data = new byte[236];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: reader.GetBytes(0' 0' data' 0' 220);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: reader.GetBytes(1' 0' data' 220' 16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: reader.GetBytes(1' 0' data' 220' 16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.Species = reader.GetUInt16(2);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.Gender = (Genders)reader.GetByte(3);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.Level = reader.GetByte(4);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.RequestedSpecies = reader.GetUInt16(5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.RequestedGender = (Genders)reader.GetByte(6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.RequestedMinLevel = reader.GetByte(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.RequestedMaxLevel = reader.GetByte(8);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.Unknown1 = reader.GetByte(9);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerGender = (TrainerGenders)reader.GetByte(10);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.Unknown2 = reader.GetByte(11);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: if (reader.IsDBNull(12)) result.TimeDeposited = null;              else result.TimeDeposited = reader.GetDateTime(12);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: if (reader.IsDBNull(12)) result.TimeDeposited = null;              else result.TimeDeposited = reader.GetDateTime(12);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: if (reader.IsDBNull(13)) result.TimeExchanged = null;              else result.TimeExchanged = reader.GetDateTime(13);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: if (reader.IsDBNull(13)) result.TimeExchanged = null;              else result.TimeExchanged = reader.GetDateTime(13);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.PID = reader.GetInt32(14);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerOT = reader.GetUInt32(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: data = new byte[16];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: reader.GetBytes(16' 0' data' 0' 16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: reader.GetBytes(16' 0' data' 0' 16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerCountry = reader.GetByte(17);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerRegion = reader.GetByte(18);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerClass = reader.GetByte(19);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.IsExchanged = reader.GetByte(20);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerVersion = reader.GetByte(21);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerLanguage = reader.GetByte(22);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerBadges = reader.GetByte(23);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Record5FromReader,The following statement contains a magic number: result.TrainerUnityTower = reader.GetByte(24);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: MySqlParameter[] result = new MySqlParameter[25];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: byte[] data = new byte[220];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: byte[] unknown0 = new byte[16];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: Array.Copy(src' 0' data' 0' 220);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: Array.Copy(src' 220' unknown0' 0' 16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: Array.Copy(src' 220' unknown0' 0' 16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[2] = new MySqlParameter("@Species"' record.Species);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[3] = new MySqlParameter("@Gender"' (byte)record.Gender);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[4] = new MySqlParameter("@Level"' record.Level);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[5] = new MySqlParameter("@RequestedSpecies"' record.RequestedSpecies);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[6] = new MySqlParameter("@RequestedGender"' (byte)record.RequestedGender);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[7] = new MySqlParameter("@RequestedMinLevel"' record.RequestedMinLevel);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[8] = new MySqlParameter("@RequestedMaxLevel"' record.RequestedMaxLevel);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[9] = new MySqlParameter("@Unknown1"' record.Unknown1);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[10] = new MySqlParameter("@TrainerGender"' (byte)record.TrainerGender);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[11] = new MySqlParameter("@Unknown2"' record.Unknown2);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[12] = new MySqlParameter("@TimeDeposited"' record.TimeDeposited);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[13] = new MySqlParameter("@TimeExchanged"' record.TimeExchanged);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[14] = new MySqlParameter("@pid"' record.PID);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[15] = new MySqlParameter("@TrainerOT"' record.TrainerOT);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[16] = new MySqlParameter("@TrainerName"' record.TrainerNameEncoded.RawData);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[17] = new MySqlParameter("@TrainerCountry"' record.TrainerCountry);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[18] = new MySqlParameter("@TrainerRegion"' record.TrainerRegion);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[19] = new MySqlParameter("@TrainerClass"' record.TrainerClass);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[20] = new MySqlParameter("@IsExchanged"' record.IsExchanged);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[21] = new MySqlParameter("@TrainerVersion"' record.TrainerVersion);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[22] = new MySqlParameter("@TrainerLanguage"' record.TrainerLanguage);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[23] = new MySqlParameter("@TrainerBadges"' record.TrainerBadges);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromRecord5,The following statement contains a magic number: result[24] = new MySqlParameter("@TrainerUnityTower"' record.TrainerUnityTower);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade5,The following statement contains a magic number: if (record.Data.Count != 236) throw new FormatException("pkm data must be 236 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade5,The following statement contains a magic number: if (record.TrainerNameEncoded.RawData.Length != 16) throw new FormatException("Trainer name must be 16 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade5,The following statement contains a magic number: MySqlParameter[] _params2 = new MySqlParameter[28];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade5,The following statement contains a magic number: Array.Copy(_params' _params2' 25);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade5,The following statement contains a magic number: _params2[25] = new MySqlParameter("@TimeWithdrawn"' timeWithdrawn);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade5,The following statement contains a magic number: _params2[26] = new MySqlParameter("@trade_id"' trade_id);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GtsLogTrade5,The following statement contains a magic number: _params2[27] = new MySqlParameter("@partner_pid"' partner_pid);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayUpdateRecord5,The following statement contains a magic number: if (record.BattlesWon > 7) throw new ArgumentException("Battles won can not be greater than 7.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayUpdateRecord5,The following statement contains a magic number: if (record.BattlesWon > 7) throw new ArgumentException("Battles won can not be greater than 7.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayUpdateRecord5,The following statement contains a magic number: uint position = (uint)(7 - record.BattlesWon);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayUpdateRecord5,The following statement contains a magic number: if (pkey != 0)              {                  List<MySqlParameter> _params = ParamsFromBattleSubwayRecord5(record' false);                  _params.Add(new MySqlParameter("@position"' position));                  _params.Add(new MySqlParameter("@id"' pkey));                    tran.ExecuteNonQuery("UPDATE GtsBattleSubway5 SET pid = @pid' Name = @name' " +                      "Version = @version' Language = @language' Country = @country' " +                      "Region = @region' TrainerID = @trainer_id' " +                      "PhraseLeader = @phrase_leader' Gender = @gender' " +                      "Unknown2 = @unknown2' PhraseChallenged = @phrase_challenged' " +                      "PhraseWon = @phrase_won' PhraseLost = @phrase_lost' Unknown3 = @unknown3' " +                      "Unknown4 = @unknown4' Unknown5 = @unknown5' ParseVersion = 1' Rank = @rank' " +                      "BattlesWon = @battles_won' Position = @position' " +                      "TimeUpdated = UTC_TIMESTAMP() WHERE id = @id"'                      _params.ToArray());                    UpdateBattleSubwayPokemon5(tran' record.Party[0]' pkey' 0);                  UpdateBattleSubwayPokemon5(tran' record.Party[1]' pkey' 1);                  UpdateBattleSubwayPokemon5(tran' record.Party[2]' pkey' 2);              }              else              {                  List<MySqlParameter> _params = ParamsFromBattleSubwayRecord5(record' false);                  _params.Add(new MySqlParameter("@position"' position));                    pkey = Convert.ToUInt64(tran.ExecuteScalar("INSERT INTO GtsBattleSubway5 " +                      "(pid' Name' Version' Language' Country' Region' TrainerID' " +                      "PhraseLeader' Gender' Unknown2' PhraseChallenged' PhraseWon' " +                      "PhraseLost' Unknown3' Unknown4' Unknown5' ParseVersion' " +                      "Rank' RoomNum' BattlesWon' Position' TimeAdded' TimeUpdated) VALUES " +                      "(@pid' @name' @version' @language' @country' @region' @trainer_id' " +                      "@phrase_leader' @gender' @unknown2' @phrase_challenged' @phrase_won' " +                      "@phrase_lost' @unknown3' @unknown4' @unknown5' 1' " +                      "@rank' @room' @battles_won' @position' UTC_TIMESTAMP()' UTC_TIMESTAMP()); " +                      "SELECT LAST_INSERT_ID()"'                      _params.ToArray()));                    InsertBattleSubwayPokemon5(tran' record.Party[0]' pkey' 0);                  InsertBattleSubwayPokemon5(tran' record.Party[1]' pkey' 1);                  InsertBattleSubwayPokemon5(tran' record.Party[2]' pkey' 2);              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayUpdateRecord5,The following statement contains a magic number: if (pkey != 0)              {                  List<MySqlParameter> _params = ParamsFromBattleSubwayRecord5(record' false);                  _params.Add(new MySqlParameter("@position"' position));                  _params.Add(new MySqlParameter("@id"' pkey));                    tran.ExecuteNonQuery("UPDATE GtsBattleSubway5 SET pid = @pid' Name = @name' " +                      "Version = @version' Language = @language' Country = @country' " +                      "Region = @region' TrainerID = @trainer_id' " +                      "PhraseLeader = @phrase_leader' Gender = @gender' " +                      "Unknown2 = @unknown2' PhraseChallenged = @phrase_challenged' " +                      "PhraseWon = @phrase_won' PhraseLost = @phrase_lost' Unknown3 = @unknown3' " +                      "Unknown4 = @unknown4' Unknown5 = @unknown5' ParseVersion = 1' Rank = @rank' " +                      "BattlesWon = @battles_won' Position = @position' " +                      "TimeUpdated = UTC_TIMESTAMP() WHERE id = @id"'                      _params.ToArray());                    UpdateBattleSubwayPokemon5(tran' record.Party[0]' pkey' 0);                  UpdateBattleSubwayPokemon5(tran' record.Party[1]' pkey' 1);                  UpdateBattleSubwayPokemon5(tran' record.Party[2]' pkey' 2);              }              else              {                  List<MySqlParameter> _params = ParamsFromBattleSubwayRecord5(record' false);                  _params.Add(new MySqlParameter("@position"' position));                    pkey = Convert.ToUInt64(tran.ExecuteScalar("INSERT INTO GtsBattleSubway5 " +                      "(pid' Name' Version' Language' Country' Region' TrainerID' " +                      "PhraseLeader' Gender' Unknown2' PhraseChallenged' PhraseWon' " +                      "PhraseLost' Unknown3' Unknown4' Unknown5' ParseVersion' " +                      "Rank' RoomNum' BattlesWon' Position' TimeAdded' TimeUpdated) VALUES " +                      "(@pid' @name' @version' @language' @country' @region' @trainer_id' " +                      "@phrase_leader' @gender' @unknown2' @phrase_challenged' @phrase_won' " +                      "@phrase_lost' @unknown3' @unknown4' @unknown5' 1' " +                      "@rank' @room' @battles_won' @position' UTC_TIMESTAMP()' UTC_TIMESTAMP()); " +                      "SELECT LAST_INSERT_ID()"'                      _params.ToArray()));                    InsertBattleSubwayPokemon5(tran' record.Party[0]' pkey' 0);                  InsertBattleSubwayPokemon5(tran' record.Party[1]' pkey' 1);                  InsertBattleSubwayPokemon5(tran' record.Party[2]' pkey' 2);              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayUpdateRecord5,The following statement contains a magic number: if (pkey != 0)              {                  List<MySqlParameter> _params = ParamsFromBattleSubwayRecord5(record' false);                  _params.Add(new MySqlParameter("@position"' position));                  _params.Add(new MySqlParameter("@id"' pkey));                    tran.ExecuteNonQuery("UPDATE GtsBattleSubway5 SET pid = @pid' Name = @name' " +                      "Version = @version' Language = @language' Country = @country' " +                      "Region = @region' TrainerID = @trainer_id' " +                      "PhraseLeader = @phrase_leader' Gender = @gender' " +                      "Unknown2 = @unknown2' PhraseChallenged = @phrase_challenged' " +                      "PhraseWon = @phrase_won' PhraseLost = @phrase_lost' Unknown3 = @unknown3' " +                      "Unknown4 = @unknown4' Unknown5 = @unknown5' ParseVersion = 1' Rank = @rank' " +                      "BattlesWon = @battles_won' Position = @position' " +                      "TimeUpdated = UTC_TIMESTAMP() WHERE id = @id"'                      _params.ToArray());                    UpdateBattleSubwayPokemon5(tran' record.Party[0]' pkey' 0);                  UpdateBattleSubwayPokemon5(tran' record.Party[1]' pkey' 1);                  UpdateBattleSubwayPokemon5(tran' record.Party[2]' pkey' 2);              }              else              {                  List<MySqlParameter> _params = ParamsFromBattleSubwayRecord5(record' false);                  _params.Add(new MySqlParameter("@position"' position));                    pkey = Convert.ToUInt64(tran.ExecuteScalar("INSERT INTO GtsBattleSubway5 " +                      "(pid' Name' Version' Language' Country' Region' TrainerID' " +                      "PhraseLeader' Gender' Unknown2' PhraseChallenged' PhraseWon' " +                      "PhraseLost' Unknown3' Unknown4' Unknown5' ParseVersion' " +                      "Rank' RoomNum' BattlesWon' Position' TimeAdded' TimeUpdated) VALUES " +                      "(@pid' @name' @version' @language' @country' @region' @trainer_id' " +                      "@phrase_leader' @gender' @unknown2' @phrase_challenged' @phrase_won' " +                      "@phrase_lost' @unknown3' @unknown4' @unknown5' 1' " +                      "@rank' @room' @battles_won' @position' UTC_TIMESTAMP()' UTC_TIMESTAMP()); " +                      "SELECT LAST_INSERT_ID()"'                      _params.ToArray()));                    InsertBattleSubwayPokemon5(tran' record.Party[0]' pkey' 0);                  InsertBattleSubwayPokemon5(tran' record.Party[1]' pkey' 1);                  InsertBattleSubwayPokemon5(tran' record.Party[2]' pkey' 2);              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayUpdateRecord5,The following statement contains a magic number: if (pkey != 0)              {                  List<MySqlParameter> _params = ParamsFromBattleSubwayRecord5(record' false);                  _params.Add(new MySqlParameter("@position"' position));                  _params.Add(new MySqlParameter("@id"' pkey));                    tran.ExecuteNonQuery("UPDATE GtsBattleSubway5 SET pid = @pid' Name = @name' " +                      "Version = @version' Language = @language' Country = @country' " +                      "Region = @region' TrainerID = @trainer_id' " +                      "PhraseLeader = @phrase_leader' Gender = @gender' " +                      "Unknown2 = @unknown2' PhraseChallenged = @phrase_challenged' " +                      "PhraseWon = @phrase_won' PhraseLost = @phrase_lost' Unknown3 = @unknown3' " +                      "Unknown4 = @unknown4' Unknown5 = @unknown5' ParseVersion = 1' Rank = @rank' " +                      "BattlesWon = @battles_won' Position = @position' " +                      "TimeUpdated = UTC_TIMESTAMP() WHERE id = @id"'                      _params.ToArray());                    UpdateBattleSubwayPokemon5(tran' record.Party[0]' pkey' 0);                  UpdateBattleSubwayPokemon5(tran' record.Party[1]' pkey' 1);                  UpdateBattleSubwayPokemon5(tran' record.Party[2]' pkey' 2);              }              else              {                  List<MySqlParameter> _params = ParamsFromBattleSubwayRecord5(record' false);                  _params.Add(new MySqlParameter("@position"' position));                    pkey = Convert.ToUInt64(tran.ExecuteScalar("INSERT INTO GtsBattleSubway5 " +                      "(pid' Name' Version' Language' Country' Region' TrainerID' " +                      "PhraseLeader' Gender' Unknown2' PhraseChallenged' PhraseWon' " +                      "PhraseLost' Unknown3' Unknown4' Unknown5' ParseVersion' " +                      "Rank' RoomNum' BattlesWon' Position' TimeAdded' TimeUpdated) VALUES " +                      "(@pid' @name' @version' @language' @country' @region' @trainer_id' " +                      "@phrase_leader' @gender' @unknown2' @phrase_challenged' @phrase_won' " +                      "@phrase_lost' @unknown3' @unknown4' @unknown5' 1' " +                      "@rank' @room' @battles_won' @position' UTC_TIMESTAMP()' UTC_TIMESTAMP()); " +                      "SELECT LAST_INSERT_ID()"'                      _params.ToArray()));                    InsertBattleSubwayPokemon5(tran' record.Party[0]' pkey' 0);                  InsertBattleSubwayPokemon5(tran' record.Party[1]' pkey' 1);                  InsertBattleSubwayPokemon5(tran' record.Party[2]' pkey' 2);              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleSubwayRecord5,The following statement contains a magic number: List<MySqlParameter> result = new List<MySqlParameter>(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleSubwayRecord5,The following statement contains a magic number: if (!leader)              {                  result.Add(new MySqlParameter("@phrase_challenged"' record.PhraseChallenged.Data));                  result.Add(new MySqlParameter("@phrase_won"' record.PhraseWon.Data));                  result.Add(new MySqlParameter("@phrase_lost"' record.PhraseLost.Data));                  result.Add(new MySqlParameter("@unknown3"' record.Unknown3));                  result.Add(new MySqlParameter("@unknown4"' record.Unknown4 ?? new byte[5]));                  result.Add(new MySqlParameter("@unknown5"' record.Unknown5));                  result.Add(new MySqlParameter("@battles_won"' record.BattlesWon));              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleSubwayPokemon5,The following statement contains a magic number: List<MySqlParameter> result = new List<MySqlParameter>(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleSubwayPokemon5,The following statement contains a magic number: result.Add(new MySqlParameter("@move3"' pokemon.Moveset[2]));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,ParamsFromBattleSubwayPokemon5,The following statement contains a magic number: result.Add(new MySqlParameter("@move4"' pokemon.Moveset[3]));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayGetOpponents5,The following statement contains a magic number: List<BattleSubwayRecord5> records = new List<BattleSubwayRecord5>(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayGetOpponents5,The following statement contains a magic number: List<ulong> keys = new List<ulong>(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayGetOpponents5,The following statement contains a magic number: using (MySqlDataReader reader = (MySqlDataReader)tran.ExecuteReader(                  "SELECT id' pid' Name' " +                  "Version' Language' Country' Region' TrainerID' " +                  "PhraseLeader' Gender' Unknown2' PhraseChallenged' " +                  "PhraseWon' PhraseLost' Unknown3' Unknown4' Unknown5 " +                  "FROM GtsBattleSubway5 " +                  "WHERE Rank = @rank AND RoomNum = @room AND pid != @pid " +                  "ORDER BY Position LIMIT 7"'                  new MySqlParameter("@rank"' rank)'                  new MySqlParameter("@room"' roomNum)'                  new MySqlParameter("@pid"' pid)))              {                  while (reader.Read())                  {                      BattleSubwayRecord5 record = BattleSubwayRecord5FromReader(reader);                      record.Party = new BattleSubwayPokemon5[3];                      records.Add(record);                      keys.Add(reader.GetUInt64(0));                  }                  reader.Close();              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 11) result.PhraseChallenged = new TrendyPhrase5(reader.GetByteArray(11' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 11) result.PhraseChallenged = new TrendyPhrase5(reader.GetByteArray(11' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 11) result.PhraseChallenged = new TrendyPhrase5(reader.GetByteArray(11' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 12) result.PhraseWon = new TrendyPhrase5(reader.GetByteArray(12' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 12) result.PhraseWon = new TrendyPhrase5(reader.GetByteArray(12' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 12) result.PhraseWon = new TrendyPhrase5(reader.GetByteArray(12' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 13) result.PhraseLost = new TrendyPhrase5(reader.GetByteArray(13' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 13) result.PhraseLost = new TrendyPhrase5(reader.GetByteArray(13' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 13) result.PhraseLost = new TrendyPhrase5(reader.GetByteArray(13' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 14) result.Unknown3 = reader.GetUInt16(14);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 14) result.Unknown3 = reader.GetUInt16(14);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 15 && !reader.IsDBNull(15)) result.Unknown4 = reader.GetByteArray(15' 5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 15 && !reader.IsDBNull(15)) result.Unknown4 = reader.GetByteArray(15' 5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 15 && !reader.IsDBNull(15)) result.Unknown4 = reader.GetByteArray(15' 5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 15 && !reader.IsDBNull(15)) result.Unknown4 = reader.GetByteArray(15' 5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 16) result.Unknown5 = reader.GetUInt64(16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: if (reader.FieldCount > 16) result.Unknown5 = reader.GetUInt64(16);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.Name = new EncodedString5(reader.GetByteArray(2' 16));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.Name = new EncodedString5(reader.GetByteArray(2' 16));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.Version = (Versions)reader.GetByte(3);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.Language = (Languages)reader.GetByte(4);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.Country = reader.GetByte(5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.Region = reader.GetByte(6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.OT = reader.GetUInt32(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.PhraseLeader = new TrendyPhrase5(reader.GetByteArray(8' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.PhraseLeader = new TrendyPhrase5(reader.GetByteArray(8' 8));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.Gender = reader.GetByte(9);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayRecord5FromReader,The following statement contains a magic number: profile.Unknown = reader.GetByte(10);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Species = reader.GetUInt16(2);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.HeldItem = reader.GetUInt16(3);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Moveset = new ushort[4];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Moveset[0] = reader.GetUInt16(4);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Moveset[1] = reader.GetUInt16(5);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Moveset[2] = reader.GetUInt16(6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Moveset[2] = reader.GetUInt16(6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Moveset[3] = reader.GetUInt16(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Moveset[3] = reader.GetUInt16(7);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.OT = reader.GetUInt32(8);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Personality = reader.GetUInt32(9);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.IVs = reader.GetUInt32(10);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.EVs = reader.GetByteArray(11' 6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.EVs = reader.GetByteArray(11' 6);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Unknown1 = reader.GetByte(12);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Language = (Languages)reader.GetByte(13);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Ability = reader.GetByte(14);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Happiness = reader.GetByte(15);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Nickname = new EncodedString5(reader.GetByteArray(16' 22));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Nickname = new EncodedString5(reader.GetByteArray(16' 22));
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayPokemon5FromReader,The following statement contains a magic number: result.Unknown2 = reader.GetUInt32(17);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleSubwayGetLeaders5,The following statement contains a magic number: List<BattleSubwayProfile5> profiles = new List<BattleSubwayProfile5>(30);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,GamestatsSetProfile5,The following statement contains a magic number: if (profile.Data.Length != 100) throw new FormatException("Profile data must be 100 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,DressupUpload4,The following statement contains a magic number: if (record.Data.Length != 224) throw new ArgumentException("Dressup data must be 224 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,DressupUpload4,The following statement contains a magic number: if (record.Data.Length != 224) throw new ArgumentException("Dressup data must be 224 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Dressup4FromReader,The following statement contains a magic number: byte[] data = new byte[224];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Dressup4FromReader,The following statement contains a magic number: reader.GetBytes(2' 0' data' 0' 224);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Dressup4FromReader,The following statement contains a magic number: reader.GetBytes(2' 0' data' 0' 224);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BoxUpload4,The following statement contains a magic number: if (record.Data.Length != 540) throw new ArgumentException("Box data must be 540 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BoxUpload4,The following statement contains a magic number: if (record.Data.Length != 540) throw new ArgumentException("Box data must be 540 bytes.");
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Box4FromReader,The following statement contains a magic number: byte[] data = new byte[540];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Box4FromReader,The following statement contains a magic number: reader.GetBytes(3' 0' data' 0' 540);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Box4FromReader,The following statement contains a magic number: reader.GetBytes(3' 0' data' 0' 540);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Box4FromReader,The following statement contains a magic number: return new BoxRecord4(reader.GetInt32(0)' (BoxLabels4)reader.GetInt32(1)' reader.GetUInt64(2)' data);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoUpload4,The following statement contains a magic number: if (record.Data.Length != 7272) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoUpload4,The following statement contains a magic number: if (record.Header.Data.Length != 228) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoUpload4,The following statement contains a magic number: if (record.Data.Length != 7272) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoUpload4,The following statement contains a magic number: if (record.Header.Data.Length != 228) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,InsertBattleVideoParty4,The following statement contains a magic number: for (byte x = 0; x < 12; x++)              {                  ushort species = party[x];                  if (species == 0) continue;                  cmd.Parameters["@slot"].Value = x;                  cmd.Parameters["@species"].Value = species;                  cmd.ExecuteNonQuery();              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoHeader4FromReader,The following statement contains a magic number: byte[] data = new byte[228];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoHeader4FromReader,The following statement contains a magic number: reader.GetBytes(2' 0' data' 0' 228);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoHeader4FromReader,The following statement contains a magic number: reader.GetBytes(2' 0' data' 0' 228);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideo4FromReader,The following statement contains a magic number: byte[] data = new byte[7272];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideo4FromReader,The following statement contains a magic number: reader.GetBytes(3' 0' data' 0' 7272);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideo4FromReader,The following statement contains a magic number: reader.GetBytes(3' 0' data' 0' 7272);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,MusicalUpload5,The following statement contains a magic number: if (record.Data.Length != 560) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,InsertMusicalParticipants5,The following statement contains a magic number: for (byte x = 0; x < 4; x++)              {                  ushort species = participants[x].Species;                  if (species == 0) continue;                  cmd.Parameters["@slot"].Value = x;                  cmd.Parameters["@species"].Value = species;                  cmd.ExecuteNonQuery();              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Musical5FromReader,The following statement contains a magic number: byte[] data = new byte[560];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Musical5FromReader,The following statement contains a magic number: reader.GetBytes(2' 0' data' 0' 560);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,Musical5FromReader,The following statement contains a magic number: reader.GetBytes(2' 0' data' 0' 560);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoUpload5,The following statement contains a magic number: if (record.Data.Length != 6112) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoUpload5,The following statement contains a magic number: if (record.Header.Data.Length != 196) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoUpload5,The following statement contains a magic number: if (record.Data.Length != 6112) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoUpload5,The following statement contains a magic number: if (record.Header.Data.Length != 196) throw new ArgumentException();
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,InsertBattleVideoParty5,The following statement contains a magic number: for (byte x = 0; x < 12; x++)              {                  ushort species = party[x];                  if (species == 0) continue;                  cmd.Parameters["@slot"].Value = x;                  cmd.Parameters["@species"].Value = species;                  cmd.ExecuteNonQuery();              }
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoHeader5FromReader,The following statement contains a magic number: byte[] data = new byte[196];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoHeader5FromReader,The following statement contains a magic number: reader.GetBytes(2' 0' data' 0' 196);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideoHeader5FromReader,The following statement contains a magic number: reader.GetBytes(2' 0' data' 0' 196);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideo5FromReader,The following statement contains a magic number: byte[] data = new byte[6112];
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideo5FromReader,The following statement contains a magic number: reader.GetBytes(3' 0' data' 0' 6112);
Magic Number,PkmnFoundations.Data,DataMysql,C:\repos\mm201_pkmnFoundations\library\Data\DataMysql.cs,BattleVideo5FromReader,The following statement contains a magic number: reader.GetBytes(3' 0' data' 0' 6112);
Magic Number,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,SpeciesAtGeneration,The following statement contains a magic number: switch (generation)              {                  case Generations.Generation1:                      return 151;                  case Generations.Generation2:                      return 251;                  case Generations.Generation3:                      return 386;                  case Generations.Generation4:                      return 493;                  case Generations.Generation5:                      return 649;                  case Generations.Generation6:                      return 721;                  default:                      throw new NotSupportedException();              }
Magic Number,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,SpeciesAtGeneration,The following statement contains a magic number: switch (generation)              {                  case Generations.Generation1:                      return 151;                  case Generations.Generation2:                      return 251;                  case Generations.Generation3:                      return 386;                  case Generations.Generation4:                      return 493;                  case Generations.Generation5:                      return 649;                  case Generations.Generation6:                      return 721;                  default:                      throw new NotSupportedException();              }
Magic Number,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,SpeciesAtGeneration,The following statement contains a magic number: switch (generation)              {                  case Generations.Generation1:                      return 151;                  case Generations.Generation2:                      return 251;                  case Generations.Generation3:                      return 386;                  case Generations.Generation4:                      return 493;                  case Generations.Generation5:                      return 649;                  case Generations.Generation6:                      return 721;                  default:                      throw new NotSupportedException();              }
Magic Number,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,SpeciesAtGeneration,The following statement contains a magic number: switch (generation)              {                  case Generations.Generation1:                      return 151;                  case Generations.Generation2:                      return 251;                  case Generations.Generation3:                      return 386;                  case Generations.Generation4:                      return 493;                  case Generations.Generation5:                      return 649;                  case Generations.Generation6:                      return 721;                  default:                      throw new NotSupportedException();              }
Magic Number,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,SpeciesAtGeneration,The following statement contains a magic number: switch (generation)              {                  case Generations.Generation1:                      return 151;                  case Generations.Generation2:                      return 251;                  case Generations.Generation3:                      return 386;                  case Generations.Generation4:                      return 493;                  case Generations.Generation5:                      return 649;                  case Generations.Generation6:                      return 721;                  default:                      throw new NotSupportedException();              }
Magic Number,PkmnFoundations.Pokedex,Pokedex,C:\repos\mm201_pkmnFoundations\library\Pokedex\Pokedex.cs,SpeciesAtGeneration,The following statement contains a magic number: switch (generation)              {                  case Generations.Generation1:                      return 151;                  case Generations.Generation2:                      return 251;                  case Generations.Generation3:                      return 386;                  case Generations.Generation4:                      return 493;                  case Generations.Generation5:                      return 649;                  case Generations.Generation6:                      return 721;                  default:                      throw new NotSupportedException();              }
Magic Number,PkmnFoundations.Structures,BattleSubwayPokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayPokemon5.cs,Save,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  writer.Write(Moveset[x]);              }
Magic Number,PkmnFoundations.Structures,BattleSubwayPokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayPokemon5.cs,Save,The following statement contains a magic number: for (int x = 0; x < 6; x++)              {                  writer.Write(EVs[x]);              }
Magic Number,PkmnFoundations.Structures,BattleSubwayPokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayPokemon5.cs,Load,The following statement contains a magic number: Moveset = new ushort[4];
Magic Number,PkmnFoundations.Structures,BattleSubwayPokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayPokemon5.cs,Load,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  Moveset[x] = BitConverter.ToUInt16(data' 0x04 + x * 2 + start);              }
Magic Number,PkmnFoundations.Structures,BattleSubwayPokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayPokemon5.cs,Load,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  Moveset[x] = BitConverter.ToUInt16(data' 0x04 + x * 2 + start);              }
Magic Number,PkmnFoundations.Structures,BattleSubwayPokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayPokemon5.cs,Load,The following statement contains a magic number: EVs = new byte[6];
Magic Number,PkmnFoundations.Structures,BattleSubwayPokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayPokemon5.cs,Load,The following statement contains a magic number: for (int x = 0; x < 6; x++)              {                  EVs[x] = data[0x18 + x + start];              }
Magic Number,PkmnFoundations.Structures,BattleSubwayProfile5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayProfile5.cs,Save,The following statement contains a magic number: writer.Write(Name.RawData' 0' 16);
Magic Number,PkmnFoundations.Structures,BattleSubwayProfile5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayProfile5.cs,Save,The following statement contains a magic number: writer.Write(PhraseLeader.Data' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleSubwayProfile5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayProfile5.cs,Load,The following statement contains a magic number: byte[] trendyPhrase = new byte[8];
Magic Number,PkmnFoundations.Structures,BattleSubwayProfile5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayProfile5.cs,Load,The following statement contains a magic number: Array.Copy(data' 0x18 + start' trendyPhrase' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Save,The following statement contains a magic number: for (int x = 0; x < 3; x++)              {                  writer.Write(Party[x].Save());              }
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Load,The following statement contains a magic number: Party = new BattleSubwayPokemon5[3];
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Load,The following statement contains a magic number: for (int x = 0; x < 3; x++)              {                  Party[x] = new BattleSubwayPokemon5(data' start + x * 0x3c);              }
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Load,The following statement contains a magic number: byte[] trendyPhrase = new byte[8];
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Load,The following statement contains a magic number: Array.Copy(data' 0xd6 + start' trendyPhrase' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Load,The following statement contains a magic number: trendyPhrase = new byte[8];
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Load,The following statement contains a magic number: Array.Copy(data' 0xde + start' trendyPhrase' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Load,The following statement contains a magic number: trendyPhrase = new byte[8];
Magic Number,PkmnFoundations.Structures,BattleSubwayRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleSubwayRecord5.cs,Load,The following statement contains a magic number: Array.Copy(data' 0xe6 + start' trendyPhrase' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,BattleTowerPokemon4,The following statement contains a magic number: if (moveset.Length != 4) throw new ArgumentException("moveset");
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,BattleTowerPokemon4,The following statement contains a magic number: if (evs.Length != 6) throw new ArgumentException("evs");
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,BattleTowerPokemon4,The following statement contains a magic number: if (nickname.Size != 22) throw new ArgumentException("nickname");
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,Save,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  writer.Write(Moveset[x]);              }
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,Save,The following statement contains a magic number: for (int x = 0; x < 6; x++)              {                  writer.Write(EVs[x]);              }
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,Load,The following statement contains a magic number: Moveset = new ushort[4];
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,Load,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  Moveset[x] = BitConverter.ToUInt16(data' 0x04 + x * 2 + start);              }
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,Load,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  Moveset[x] = BitConverter.ToUInt16(data' 0x04 + x * 2 + start);              }
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,Load,The following statement contains a magic number: EVs = new byte[6];
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,Load,The following statement contains a magic number: for (int x = 0; x < 6; x++)              {                  EVs[x] = data[0x18 + x + start];              }
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,UnpackIV,The following statement contains a magic number: int shift = (int)stat * 5 - 5;
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,UnpackIV,The following statement contains a magic number: int shift = (int)stat * 5 - 5;
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerPokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerPokemon4.cs,PackIVs,The following statement contains a magic number: return (uint)((HP & 31) |                  ((Attack & 31) << 5) |                  ((Defense & 31) << 10) |                  ((Speed & 31) << 15) |                  ((SpAttack & 31) << 20) |                  ((SpDefense & 31) << 25));
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Save,The following statement contains a magic number: for (int x = 0; x < 3; x++)              {                  writer.Write(Party[x].Save());              }
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Load,The following statement contains a magic number: Party = new BattleTowerPokemon4[3];
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Load,The following statement contains a magic number: for (int x = 0; x < 3; x++)              {                  Party[x] = new BattleTowerPokemon4(data' start + x * 0x38);              }
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Load,The following statement contains a magic number: byte[] trendyPhrase = new byte[8];
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Load,The following statement contains a magic number: Array.Copy(data' 0xca + start' trendyPhrase' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Load,The following statement contains a magic number: trendyPhrase = new byte[8];
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Load,The following statement contains a magic number: Array.Copy(data' 0xd2 + start' trendyPhrase' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Load,The following statement contains a magic number: trendyPhrase = new byte[8];
Magic Number,PkmnFoundations.Structures,BattleTowerRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerRecord4.cs,Load,The following statement contains a magic number: Array.Copy(data' 0xda + start' trendyPhrase' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleTowerProfile4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerProfile4.cs,BattleTowerProfile4,The following statement contains a magic number: if (name.Size != 16) throw new ArgumentException("name");
Magic Number,PkmnFoundations.Structures,BattleTowerProfile4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerProfile4.cs,Save,The following statement contains a magic number: writer.Write(Name.RawData' 0' 16);
Magic Number,PkmnFoundations.Structures,BattleTowerProfile4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerProfile4.cs,Save,The following statement contains a magic number: writer.Write(PhraseLeader.Data' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleTowerProfile4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerProfile4.cs,Load,The following statement contains a magic number: byte[] trendyPhrase = new byte[8];
Magic Number,PkmnFoundations.Structures,BattleTowerProfile4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleTowerProfile4.cs,Load,The following statement contains a magic number: Array.Copy(data' 0x18 + start' trendyPhrase' 0' 8);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,BattleVideoHeader4,The following statement contains a magic number: if (data.Length != 228) throw new ArgumentException("Battle video header data must be 228 bytes.");
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: byte[] serialDigits = m_templates[keyDigits[11]].ToArray();
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: valueShift += keyDigits[9];
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: valueShift += keyDigits[10];
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: valueShift %= 10;
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: if (valueShift + serialDigits[1] > 9)                  serialDigits[0]--;
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: for (int x = 0; x < 11; x++)              {                  serialDigits[x] += valueShift;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: serialDigits[0] += 9;
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: serialDigits[0] %= 9;
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: if (serialDigits[0] == 0) serialDigits[0] = 9;
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: serialDigits[1] %= 10;
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: for (int x = 1; x < 10; x++)              {                  serialDigits[x + 1] += 10;                  serialDigits[x + 1] -= keyDigits[x];                  serialDigits[x + 1] %= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: for (int x = 1; x < 10; x++)              {                  serialDigits[x + 1] += 10;                  serialDigits[x + 1] -= keyDigits[x];                  serialDigits[x + 1] %= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,KeyToSerial,The following statement contains a magic number: for (int x = 1; x < 10; x++)              {                  serialDigits[x + 1] += 10;                  serialDigits[x + 1] -= keyDigits[x];                  serialDigits[x + 1] %= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: byte[] templateDigits = m_templates[serialDigits[11]];
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: serialDigits[0] = (byte)(10 + templateDigits[0] - serialDigits[0]);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: for (int x = 1; x < 11; x++)              {                  serialDigits[x] = (byte)(10 + templateDigits[x] - serialDigits[x]);              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: for (int x = 1; x < 11; x++)              {                  serialDigits[x] = (byte)(10 + templateDigits[x] - serialDigits[x]);              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: byte valueShift = (byte)(serialDigits[1] % 10);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: serialDigits[0] += (byte)(9 - valueShift);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: serialDigits[0] %= 9;
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: for (int x = 1; x < 11; x++)              {                  serialDigits[x] += (byte)(10 - valueShift);                  serialDigits[x] %= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: for (int x = 1; x < 11; x++)              {                  serialDigits[x] += (byte)(10 - valueShift);                  serialDigits[x] %= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: for (int x = 1; x < 11; x++)              {                  serialDigits[x] += (byte)(10 - valueShift);                  serialDigits[x] %= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: for (int x = 1; x < 10; x++)              {                  serialDigits[x] = serialDigits[x + 1];              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: serialDigits[10] = (byte)((20 - valueShift - serialDigits[9]) % 10);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: serialDigits[10] = (byte)((20 - valueShift - serialDigits[9]) % 10);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: serialDigits[10] = (byte)((20 - valueShift - serialDigits[9]) % 10);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,SerialToKey,The following statement contains a magic number: serialDigits[10] = (byte)((20 - valueShift - serialDigits[9]) % 10);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,LongToDigits,The following statement contains a magic number: byte[] result = new byte[12];
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,LongToDigits,The following statement contains a magic number: for (int x = 11; x >= 0; x--)              {                  result[x] = (byte)(value % 10);                  value /= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,LongToDigits,The following statement contains a magic number: for (int x = 11; x >= 0; x--)              {                  result[x] = (byte)(value % 10);                  value /= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,LongToDigits,The following statement contains a magic number: for (int x = 11; x >= 0; x--)              {                  result[x] = (byte)(value % 10);                  value /= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,DigitsToLong,The following statement contains a magic number: if (digits.Length != 12) throw new ArgumentException();
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,DigitsToLong,The following statement contains a magic number: for (int x = 11; x >= 0; x--)              {                  if (digits[x] > 9) throw new ArgumentException();                  result += digits[x] * pow;                  pow *= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,DigitsToLong,The following statement contains a magic number: for (int x = 11; x >= 0; x--)              {                  if (digits[x] > 9) throw new ArgumentException();                  result += digits[x] * pow;                  pow *= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,DigitsToLong,The following statement contains a magic number: for (int x = 11; x >= 0; x--)              {                  if (digits[x] > 9) throw new ArgumentException();                  result += digits[x] * pow;                  pow *= 10;              }
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,FormatSerial,The following statement contains a magic number: String[] split = new String[3];
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,FormatSerial,The following statement contains a magic number: split[0] = number.Substring(0' number.Length - 10);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,FormatSerial,The following statement contains a magic number: split[1] = number.Substring(number.Length - 10' 5);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,FormatSerial,The following statement contains a magic number: split[1] = number.Substring(number.Length - 10' 5);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,FormatSerial,The following statement contains a magic number: split[2] = number.Substring(number.Length - 5' 5);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,FormatSerial,The following statement contains a magic number: split[2] = number.Substring(number.Length - 5' 5);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader4.cs,FormatSerial,The following statement contains a magic number: split[2] = number.Substring(number.Length - 5' 5);
Magic Number,PkmnFoundations.Structures,BattleVideoHeader5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoHeader5.cs,BattleVideoHeader5,The following statement contains a magic number: if (data.Length != 196) throw new ArgumentException("Battle video header data must be 196 bytes.");
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,BattleVideoRecord4,The following statement contains a magic number: if (data.Length != 7500) throw new ArgumentException("Battle video data must be 7500 bytes.");
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,BattleVideoRecord4,The following statement contains a magic number: byte[] data_head = new byte[228];
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,BattleVideoRecord4,The following statement contains a magic number: byte[] data_main = new byte[7272];
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,BattleVideoRecord4,The following statement contains a magic number: Array.Copy(data' 0' data_head' 0' 228);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,BattleVideoRecord4,The following statement contains a magic number: Array.Copy(data' 228' data_main' 0' 7272);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,BattleVideoRecord4,The following statement contains a magic number: Array.Copy(data' 228' data_main' 0' 7272);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,BattleVideoRecord4,The following statement contains a magic number: if (data_main.Length != 7272) throw new ArgumentException("Battle video main data must be 7272 bytes.");
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,Save,The following statement contains a magic number: byte[] result = new byte[7500];
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,Save,The following statement contains a magic number: Array.Copy(Header.Data' 0' result' 0' 228);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,Save,The following statement contains a magic number: Array.Copy(Data' 228' result' 0' 7272);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord4.cs,Save,The following statement contains a magic number: Array.Copy(Data' 228' result' 0' 7272);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,BattleVideoRecord5,The following statement contains a magic number: if (data.Length != 6308) throw new ArgumentException("Battle video data must be 6308 bytes.");
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,BattleVideoRecord5,The following statement contains a magic number: byte[] data_head = new byte[196];
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,BattleVideoRecord5,The following statement contains a magic number: byte[] data_main = new byte[6112];
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,BattleVideoRecord5,The following statement contains a magic number: Array.Copy(data' 0' data_head' 0' 196);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,BattleVideoRecord5,The following statement contains a magic number: Array.Copy(data' 196' data_main' 0' 6112);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,BattleVideoRecord5,The following statement contains a magic number: Array.Copy(data' 196' data_main' 0' 6112);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,BattleVideoRecord5,The following statement contains a magic number: if (data_main.Length != 6112) throw new ArgumentException("Battle video main data must be 6112 bytes.");
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,Save,The following statement contains a magic number: byte[] result = new byte[6308];
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,Save,The following statement contains a magic number: Array.Copy(Header.Data' 0' result' 0' 196);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,Save,The following statement contains a magic number: Array.Copy(Data' 196' result' 0' 6112);
Magic Number,PkmnFoundations.Structures,BattleVideoRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\BattleVideoRecord5.cs,Save,The following statement contains a magic number: Array.Copy(Data' 196' result' 0' 6112);
Magic Number,PkmnFoundations.Structures,BoxRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\BoxRecord4.cs,Load,The following statement contains a magic number: m_data = reader.ReadBytes(540);
Magic Number,PkmnFoundations.Structures,DressupRecord4,C:\repos\mm201_pkmnFoundations\library\Structures\DressupRecord4.cs,Load,The following statement contains a magic number: m_data = reader.ReadBytes(224);
Magic Number,PkmnFoundations.Structures,Format,C:\repos\mm201_pkmnFoundations\library\Structures\Format.cs,Markings,The following statement contains a magic number: for (int value = 0; value < 6; value++)              {                  if (marking > 1) result.Append(delimiter);                  String format = (((int)markings & marking) != 0) ? trueFormat : falseFormat;                  result.Append(String.Format(format' m_marks[value]));                    marking <<= 1;              }
Magic Number,PkmnFoundations.Structures,GtsRecordBase,C:\repos\mm201_pkmnFoundations\library\Structures\GtsRecordBase.cs,CheckLevels,The following statement contains a magic number: if (max == 0) max = 255;
Magic Number,PkmnFoundations.Structures,IvStatValues,C:\repos\mm201_pkmnFoundations\library\Structures\IvStatValues.cs,IvStatValues,The following statement contains a magic number: for (int x = 0; x < 6; x++)              {                  Stats[x] = (byte)(ivs & 31);                  ivs >>= 5;              }
Magic Number,PkmnFoundations.Structures,IvStatValues,C:\repos\mm201_pkmnFoundations\library\Structures\IvStatValues.cs,IvStatValues,The following statement contains a magic number: for (int x = 0; x < 6; x++)              {                  Stats[x] = (byte)(ivs & 31);                  ivs >>= 5;              }
Magic Number,PkmnFoundations.Structures,IvStatValues,C:\repos\mm201_pkmnFoundations\library\Structures\IvStatValues.cs,IvStatValues,The following statement contains a magic number: for (int x = 0; x < 6; x++)              {                  Stats[x] = (byte)(ivs & 31);                  ivs >>= 5;              }
Magic Number,PkmnFoundations.Structures,IvStatValues,C:\repos\mm201_pkmnFoundations\library\Structures\IvStatValues.cs,ToInt32,The following statement contains a magic number: foreach (byte iv in Stats)              {                  result |= iv << shift;                  shift += 5;              }
Magic Number,PkmnFoundations.Structures,MusicalRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\MusicalRecord5.cs,UpdateParticipants,The following statement contains a magic number: m_participants = new MusicalParticipant5[4];
Magic Number,PkmnFoundations.Structures,MusicalRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\MusicalRecord5.cs,UpdateParticipants,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  Participants[x] = new MusicalParticipant5(m_data' x * 0x58 + 0x84);              }
Magic Number,PkmnFoundations.Structures,MusicalRecord5,C:\repos\mm201_pkmnFoundations\library\Structures\MusicalRecord5.cs,Load,The following statement contains a magic number: m_data = reader.ReadBytes(560);
Magic Number,PkmnFoundations.Structures,MusicalParticipant5,C:\repos\mm201_pkmnFoundations\library\Structures\MusicalRecord5.cs,Load,The following statement contains a magic number: m_data = reader.ReadBytes(88);
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: byte[][] blocks = new byte[4][];
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: for (int x = 0; x < 4; x++)                                  // 0008                  blocks[x] = reader.ReadBytes(32);
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: for (int x = 0; x < 4; x++)                                  // 0008                  blocks[x] = reader.ReadBytes(32);
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                      block[24]'                                                      block[25]'                                                      block[26]'                                                      block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    ShinyLeaves = (ShinyLeaves)block[25];                  Unknown1 = BitConverter.ToUInt16(block' 26);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString4(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString4(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString4(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString4(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString4(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString4(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString4(block' 0' 16);                    // todo: store as DateTime                  EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  PokeBallID_Hgss = block[30];                  Unknown4 = block[31];              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: byte[] ribbons = new byte[12];
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons1)' 0' ribbons' 0' 4);
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons2)' 0' ribbons' 4' 4);
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons2)' 0' ribbons' 4' 4);
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons3)' 0' ribbons' 8' 4);
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons3)' 0' ribbons' 8' 4);
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,Load,The following statement contains a magic number: for (int x = 0; x < 96; x++)              {                  if (PokemonPartyBase.HasRibbon(ribbons' x))                  {                      if (allRibbons.ContainsKey(x))                          Ribbons.Add(allRibbons[x]);                      else                          UnknownRibbons.Add(x);                  }              }
Magic Number,PkmnFoundations.Structures,Pokemon4,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon4.cs,IsHgssPokeball,The following statement contains a magic number: return pokeballId > 16;
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: byte[][] blocks = new byte[4][];
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: for (int x = 0; x < 4; x++)                                  // 0008                  blocks[x] = reader.ReadBytes(32);
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: for (int x = 0; x < 4; x++)                                  // 0008                  blocks[x] = reader.ReadBytes(32);
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[0];                    SpeciesID = BitConverter.ToUInt16(block' 0);                  HeldItemID = BitConverter.ToUInt16(block' 2);                  TrainerID = BitConverter.ToUInt32(block' 4);                  Experience = BitConverter.ToInt32(block' 8);                  Happiness = block[12];                  AbilityID = block[13];                  Markings = (Markings)block[14];                  Language = (Languages)block[15];                  EVs = new ByteStatValues(block[16]'                                           block[17]'                                           block[18]'                                           block[19]'                                           block[20]'                                           block[21]);                  ContestStats = new ConditionValues(block[22]'                                                     block[23]'                                                     block[24]'                                                     block[25]'                                                     block[26]'                                                     block[27]);                    ribbons2 = BitConverter.ToInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[1];                    Moves[0] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 0)' block[12]' block[8]);                  Moves[1] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 2)' block[13]' block[9]);                  Moves[2] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 4)' block[14]' block[10]);                  Moves[3] = new MoveSlot(m_pokedex' BitConverter.ToUInt16(block' 6)' block[15]' block[11]);                    int ivs = BitConverter.ToInt32(block' 16);                  IVs = new IvStatValues(ivs & 0x3fffffff);                  IsEgg = (ivs & 0x40000000) != 0;                  HasNickname = (ivs & 0x80000000) != 0;                    ribbons1 = BitConverter.ToInt32(block' 20);                    byte forme = block[24];                  FatefulEncounter = (forme & 0x01) != 0;                  m_female = (forme & 0x02) != 0;                  m_genderless = (forme & 0x04) != 0;                  FormID = (byte)(forme >> 3);                    byte nature = block[25]; // todo: which nature is real? Do they both need to match?                  m_bw_flags = BitConverter.ToUInt16(block' 26);                  HiddenAbility = (m_bw_flags & 0x01) != 0;                  N = (m_bw_flags & 0x02) != 0;                  Unknown1 = BitConverter.ToUInt32(block' 28);                    EggLocationID_Plat = BitConverter.ToUInt16(block' 28);                  LocationID_Plat = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString5(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString5(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString5(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString5(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString5(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[2];                    NicknameEncoded = new EncodedString5(block' 0' 22);                  Unknown2 = block[22];                  Version = (Versions)block[23];                  ribbons3 = BitConverter.ToInt32(block' 24);                  Unknown3 = BitConverter.ToUInt32(block' 28);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: {                  byte[] block = blocks[3];                    TrainerNameEncoded = new EncodedString5(block' 0' 16);                    EggDate = new byte[3];                  Array.Copy(block' 16' EggDate' 0' 3);                  Date = new byte[3];                  Array.Copy(block' 19' Date' 0' 3);                    EggLocationID = BitConverter.ToUInt16(block' 22);                  LocationID = BitConverter.ToUInt16(block' 24);                  byte pokerusStatus = block[26];                  PokerusDaysLeft = (byte)(pokerusStatus & 0x0f);                  PokerusStrain = (byte)(pokerusStatus >> 4);                  PokeBallID = block[27];                    byte encounter_level = block[28];                  EncounterLevel = (byte)(encounter_level & 0x7f);                  bool trainerFemale = (encounter_level & 0x80) != 0;                  TrainerGender = trainerFemale ? TrainerGenders.Female : TrainerGenders.Male;                    EncounterType = block[29];                  Unknown4 = BitConverter.ToUInt16(block' 30);              }
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: byte[] ribbons = new byte[12];
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons1)' 0' ribbons' 0' 4);
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons2)' 0' ribbons' 4' 4);
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons2)' 0' ribbons' 4' 4);
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons3)' 0' ribbons' 8' 4);
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(ribbons3)' 0' ribbons' 8' 4);
Magic Number,PkmnFoundations.Structures,Pokemon5,C:\repos\mm201_pkmnFoundations\library\Structures\Pokemon5.cs,Load,The following statement contains a magic number: for (int x = 0; x < 96; x++)              {                  if (PokemonPartyBase.HasRibbon(ribbons' x))                  {                      if (allRibbons.ContainsKey(x))                          Ribbons.Add(allRibbons[x]);                      else                          UnknownRibbons.Add(x);                  }              }
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ShinyTest,The following statement contains a magic number: int step2 = (int)((step1 >> 16) ^ (step1 & 0xffffu));
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,BlockScramble,The following statement contains a magic number: int x = 4;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,BlockScramble,The following statement contains a magic number: int xFactorial = 24;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt,The following statement contains a magic number: if (level > 100 || level < 1) throw new ArgumentOutOfRangeException("level");
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,LevelAt,The following statement contains a magic number: int minLevel = 1' maxLevel = 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,LevelAt,The following statement contains a magic number: int minExp = ExperienceAt(1' gr)' maxExp = ExperienceAt(100' gr);
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,LevelAt,The following statement contains a magic number: while (1 < 2)              {                  if (maxExp <= experience) return (byte)maxLevel;                  if (minLevel + 1 >= maxLevel) return (byte)minLevel;                    int midLevel = (minLevel + maxLevel) >> 1;                  int midExp = ExperienceAt(midLevel' gr);                    if (experience >= midExp)                  {                      minLevel = midLevel;                      minExp = midExp;                  }                  else                  {                      maxLevel = midLevel;                      maxExp = midExp;                  }              }
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Slow,The following statement contains a magic number: return 5 * cube / 4;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Slow,The following statement contains a magic number: return 5 * cube / 4;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fast,The following statement contains a magic number: return 4 * cube / 5;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fast,The following statement contains a magic number: return 4 * cube / 5;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_MediumSlow,The following statement contains a magic number: return 6 * cube / 5 - 15 * square + 100 * level - 140;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_MediumSlow,The following statement contains a magic number: return 6 * cube / 5 - 15 * square + 100 * level - 140;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_MediumSlow,The following statement contains a magic number: return 6 * cube / 5 - 15 * square + 100 * level - 140;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_MediumSlow,The following statement contains a magic number: return 6 * cube / 5 - 15 * square + 100 * level - 140;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_MediumSlow,The following statement contains a magic number: return 6 * cube / 5 - 15 * square + 100 * level - 140;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Erratic,The following statement contains a magic number: if (level < 50)                  return (cube * (100 - level)) / 50;              else if (level < 68)                  return (cube * (150 - level)) / 100;              else if (level < 98)                  // note that there is intentional rounding error cause by /3 inside the formula.                  return (cube * ((1911 - 10 * level) / 3)) / 500;              else                  return (cube * (160 - level)) / 100;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt_Fluctuating,The following statement contains a magic number: if (level < 15)                  return cube * ((level + 1) / 3 + 24) / 50;              else if (level < 36)                  return cube * (level + 14) / 50;              else                  return cube * (level / 2 + 32) / 50;
Magic Number,PkmnFoundations.Structures,Characteristic,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ToString,The following statement contains a magic number: if (BestIvModulo > 4) throw new InvalidOperationException();
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty4,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty4.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Unknown7 = new byte[56];                  Array.Copy(block' 20' Unknown7' 0' 56);                  Seals = new byte[24];                  Array.Copy(block' 76' Seals' 0' 24);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonParty5,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonParty5.cs,Load,The following statement contains a magic number: {                  int rand = (int)Personality;                  byte[] block = reader.ReadBytes(100);                  for (int pos = 0; pos < 100; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }                    StatusAffliction = block[0];                  Unknown5 = block[1];                  Unknown6 = BitConverter.ToUInt16(block' 2);                  // todo: validate this against the computed level                  //Level = block[4];                  CapsuleIndex = block[5];                  HP = BitConverter.ToUInt16(block' 6);                  // todo: validate this against computed stats                  m_stats = new IntStatValues(BitConverter.ToUInt16(block' 8)'                      BitConverter.ToUInt16(block' 10)'                      BitConverter.ToUInt16(block' 12)'                      BitConverter.ToUInt16(block' 14)'                      BitConverter.ToUInt16(block' 16)'                      BitConverter.ToUInt16(block' 18));                    Mail = new byte[56];                  Array.Copy(block' 20' Mail' 0' 56);                  Unknown7 = new byte[8];                  Array.Copy(block' 76' Unknown7' 0' 8);                  Padding = new byte[16];                  Array.Copy(block' 84' Padding' 0' 16);              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,ComputeChecksum,The following statement contains a magic number: for (int x = 0; x < data.Length; x += 2)                  result += BitConverter.ToUInt16(data' x);
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,DecryptBlocks,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  byte[] block = blocks[x];                  for (int pos = 0; pos < 32; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,DecryptBlocks,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  byte[] block = blocks[x];                  for (int pos = 0; pos < 32; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,DecryptBlocks,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  byte[] block = blocks[x];                  for (int pos = 0; pos < 32; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,DecryptBlocks,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  byte[] block = blocks[x];                  for (int pos = 0; pos < 32; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,DecryptBlocks,The following statement contains a magic number: for (int x = 0; x < 4; x++)              {                  byte[] block = blocks[x];                  for (int pos = 0; pos < 32; pos += 2)                  {                      rand = DecryptRNG(rand);                      block[pos] ^= (byte)(rand >> 16);                      block[pos + 1] ^= (byte)(rand >> 24);                  }              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,ShuffleBlocks,The following statement contains a magic number: AssertHelper.Equals(blockSequence.Count' 4);
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,ShuffleBlocks,The following statement contains a magic number: {                  byte[][] blocks2 = new byte[4][];                  for (int x = 0; x < 4; x++)                      blocks2[x] = blocks[blockSequence[x]];                  for (int x = 0; x < 4; x++)                      blocks[x] = blocks2[x];              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,ShuffleBlocks,The following statement contains a magic number: {                  byte[][] blocks2 = new byte[4][];                  for (int x = 0; x < 4; x++)                      blocks2[x] = blocks[blockSequence[x]];                  for (int x = 0; x < 4; x++)                      blocks[x] = blocks2[x];              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,ShuffleBlocks,The following statement contains a magic number: {                  byte[][] blocks2 = new byte[4][];                  for (int x = 0; x < 4; x++)                      blocks2[x] = blocks[blockSequence[x]];                  for (int x = 0; x < 4; x++)                      blocks[x] = blocks2[x];              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,HasRibbon,The following statement contains a magic number: if (value >= 96 || value < 0) throw new ArgumentOutOfRangeException();
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,HasRibbon,The following statement contains a magic number: int offset = value >> 3;
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,TrainerMemoDateTime,The following statement contains a magic number: if (data.Length != 3) throw new ArgumentException();
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,TrainerMemoDateTime,The following statement contains a magic number: if (data[1] == 0 && data[2] == 0 && data[0] == 0) return null;
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,TrainerMemoDateTime,The following statement contains a magic number: try              {                  return new DateTime(2000 + data[0]' data[1]' data[2]);              }              catch (ArgumentOutOfRangeException)              {                  return null;              }
Magic Number,PkmnFoundations.Structures,PokemonPartyBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonPartyBase.cs,TrainerMemoDateTime,The following statement contains a magic number: try              {                  return new DateTime(2000 + data[0]' data[1]' data[2]);              }              catch (ArgumentOutOfRangeException)              {                  return null;              }
Magic Number,PkmnFoundations.Structures,StatValues<T>,C:\repos\mm201_pkmnFoundations\library\Structures\StatValues.cs,StatValues,The following statement contains a magic number: if (s.Length != 6) throw new ArgumentException();
Magic Number,PkmnFoundations.Structures,TrainerProfile4,C:\repos\mm201_pkmnFoundations\library\Structures\TrainerProfile4.cs,TrainerProfile4,The following statement contains a magic number: if (data.Length != 100) throw new ArgumentException("Profile data must be 100 bytes.");
Magic Number,PkmnFoundations.Structures,TrainerProfile5,C:\repos\mm201_pkmnFoundations\library\Structures\TrainerProfile5.cs,TrainerProfile5,The following statement contains a magic number: if (data.Length != 100) throw new ArgumentException("Profile data must be 100 bytes.");
Magic Number,PkmnFoundations.Structures,TrainerProfilePlaza,C:\repos\mm201_pkmnFoundations\library\Structures\TrainerProfilePlaza.cs,TrainerProfilePlaza,The following statement contains a magic number: if (data.Length != 152) throw new ArgumentException("Profile data must be 152 bytes.");
Magic Number,PkmnFoundations.Support,EncodedString4,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString4.cs,EncodedString4,The following statement contains a magic number: if (length < 2) throw new ArgumentOutOfRangeException("length");
Magic Number,PkmnFoundations.Support,EncodedString4,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString4.cs,EncodedString4,The following statement contains a magic number: if (length % 2 != 0) throw new ArgumentException("length");
Magic Number,PkmnFoundations.Support,EncodedString4,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString4.cs,EncodedString4,The following statement contains a magic number: if (length < 2) throw new ArgumentOutOfRangeException("length");
Magic Number,PkmnFoundations.Support,EncodedString4,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString4.cs,EncodedString4,The following statement contains a magic number: if (length % 2 != 0) throw new ArgumentException("length");
Magic Number,PkmnFoundations.Support,EncodedString4,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString4.cs,DecodeString,The following statement contains a magic number: for (int i = start; i < start + count * 2; i += 2)  			{  				ushort gamecode = BitConverter.ToUInt16(data' i);  				if (gamecode == 0xffff) { break; }  				char ch = Generation4TextLookupTable.ContainsKey(gamecode) ?                      Generation4TextLookupTable[gamecode] :                      '?';    				sb.Append(ch);  			}
Magic Number,PkmnFoundations.Support,EncodedString4,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString4.cs,DecodeString,The following statement contains a magic number: for (int i = start; i < start + count * 2; i += 2)  			{  				ushort gamecode = BitConverter.ToUInt16(data' i);  				if (gamecode == 0xffff) { break; }  				char ch = Generation4TextLookupTable.ContainsKey(gamecode) ?                      Generation4TextLookupTable[gamecode] :                      '?';    				sb.Append(ch);  			}
Magic Number,PkmnFoundations.Support,EncodedString4,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString4.cs,EncodeString,The following statement contains a magic number: foreach (char c in str.ToCharArray())              {                  m.Write(BitConverter.GetBytes(LookupReverse.ContainsKey(c) ? LookupReverse[c] : (ushort)0x01ac)' 0' 2);              }
Magic Number,PkmnFoundations.Support,EncodedString5,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString5.cs,EncodedString5,The following statement contains a magic number: if (length < 2) throw new ArgumentOutOfRangeException("length");
Magic Number,PkmnFoundations.Support,EncodedString5,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString5.cs,EncodedString5,The following statement contains a magic number: if (length % 2 != 0) throw new ArgumentException("length");
Magic Number,PkmnFoundations.Support,EncodedString5,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString5.cs,EncodedString5,The following statement contains a magic number: if (length < 2) throw new ArgumentOutOfRangeException("length");
Magic Number,PkmnFoundations.Support,EncodedString5,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString5.cs,EncodedString5,The following statement contains a magic number: if (length % 2 != 0) throw new ArgumentException("length");
Magic Number,PkmnFoundations.Support,EncodedString5,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString5.cs,DecodeString,The following statement contains a magic number: for (int i = start; i < start + count * 2; i += 2)  			{                  ushort gamecode = BitConverter.ToUInt16(data' i);                  if (gamecode == 0xffff) { break; }                  char ch = Generation5TextLookupTable.ContainsKey(gamecode) ?                      Generation5TextLookupTable[gamecode] :                      (char)gamecode;                    sb.Append(ch);              }
Magic Number,PkmnFoundations.Support,EncodedString5,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString5.cs,DecodeString,The following statement contains a magic number: for (int i = start; i < start + count * 2; i += 2)  			{                  ushort gamecode = BitConverter.ToUInt16(data' i);                  if (gamecode == 0xffff) { break; }                  char ch = Generation5TextLookupTable.ContainsKey(gamecode) ?                      Generation5TextLookupTable[gamecode] :                      (char)gamecode;                    sb.Append(ch);              }
Magic Number,PkmnFoundations.Support,EncodedString5,C:\repos\mm201_pkmnFoundations\library\Support\EncodedString5.cs,EncodeString,The following statement contains a magic number: foreach (char c in str.ToCharArray())              {                  m.Write(BitConverter.GetBytes(LookupReverse.ContainsKey(c) ? LookupReverse[c] : c)' 0' 2);              }
Magic Number,PkmnFoundations.Support,StreamExtender,C:\repos\mm201_pkmnFoundations\library\Support\StreamExtender.cs,CompatibleCopyTo,The following statement contains a magic number: const int BUFFER_LENGTH = 256;
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,Pack,The following statement contains a magic number: byte[] result = new byte[8];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(mood)' 0' result' 0' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(index)' 0' result' 2' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(index)' 0' result' 2' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(word1)' 0' result' 4' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(word1)' 0' result' 4' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(word2)' 0' result' 6' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(word2)' 0' result' 6' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderPhrase,The following statement contains a magic number: if (data.Length != 8) throw new ArgumentException();
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderPhrase,The following statement contains a magic number: ushort index = BitConverter.ToUInt16(data' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderPhrase,The following statement contains a magic number: ushort word1 = BitConverter.ToUInt16(data' 4);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderPhrase,The following statement contains a magic number: ushort word2 = BitConverter.ToUInt16(data' 6);
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderPhrase,The following statement contains a magic number: if (mood >= 5) return "";
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderPhrase,The following statement contains a magic number: if (index >= 20) return "";
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 496) return WORDS_POKEMON[word];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 964) return WORDS_MOVES[word - 496];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 964) return WORDS_MOVES[word - 496];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 982) return WORDS_TYPES[word - 964];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 982) return WORDS_TYPES[word - 964];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1106) return WORDS_ABILITIES[word - 982];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1106) return WORDS_ABILITIES[word - 982];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1144) return WORDS_TRAINER[word - 1106];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1144) return WORDS_TRAINER[word - 1106];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1182) return WORDS_PEOPLE[word - 1144];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1182) return WORDS_PEOPLE[word - 1144];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1289) return WORDS_GREETINGS[word - 1182];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1289) return WORDS_GREETINGS[word - 1182];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1393) return WORDS_LIFESTYLE[word - 1289];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1393) return WORDS_LIFESTYLE[word - 1289];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1440) return WORDS_FEELINGS[word - 1393];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1440) return WORDS_FEELINGS[word - 1393];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1472) return WORDS_TOUGH[word - 1440];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1472) return WORDS_TOUGH[word - 1440];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1495) return WORDS_UNION[word - 1472];
Magic Number,PkmnFoundations.Support,TrendyPhrase4,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase4.cs,RenderWord,The following statement contains a magic number: if (word < 1495) return WORDS_UNION[word - 1472];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,Pack,The following statement contains a magic number: byte[] result = new byte[8];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(mood)' 0' result' 0' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(index)' 0' result' 2' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(index)' 0' result' 2' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(word1)' 0' result' 4' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(word1)' 0' result' 4' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(word2)' 0' result' 6' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,Pack,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(word2)' 0' result' 6' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderPhrase,The following statement contains a magic number: if (data.Length != 8) throw new ArgumentException();
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderPhrase,The following statement contains a magic number: ushort index = BitConverter.ToUInt16(data' 2);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderPhrase,The following statement contains a magic number: ushort word1 = BitConverter.ToUInt16(data' 4);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderPhrase,The following statement contains a magic number: ushort word2 = BitConverter.ToUInt16(data' 6);
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderPhrase,The following statement contains a magic number: if (mood >= 5) return "";
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderPhrase,The following statement contains a magic number: if (index >= 20) return "";
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 652) return WORDS_POKEMON[word];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1212) return WORDS_MOVES[word - 652];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1212) return WORDS_MOVES[word - 652];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1229) return WORDS_TYPES[word - 1212];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1229) return WORDS_TYPES[word - 1212];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1394) return WORDS_ABILITIES[word - 1229];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1394) return WORDS_ABILITIES[word - 1229];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1438) return WORDS_TRAINER[word - 1394];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1438) return WORDS_TRAINER[word - 1394];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1476) return WORDS_PEOPLE[word - 1438];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1476) return WORDS_PEOPLE[word - 1438];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1524) return WORDS_GREETINGS[word - 1476];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1524) return WORDS_GREETINGS[word - 1476];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1627) return WORDS_LIFESTYLE[word - 1524];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1627) return WORDS_LIFESTYLE[word - 1524];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1674) return WORDS_FEELINGS[word - 1627];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1674) return WORDS_FEELINGS[word - 1627];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1706) return WORDS_TERM[word - 1674];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1706) return WORDS_TERM[word - 1674];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1732) return WORDS_CONNECTION[word - 1706];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1732) return WORDS_CONNECTION[word - 1706];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1742) return WORDS_ANIMATED[word - 1732];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1742) return WORDS_ANIMATED[word - 1732];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1803) return WORDS_VOICE[word - 1742];
Magic Number,PkmnFoundations.Support,TrendyPhrase5,C:\repos\mm201_pkmnFoundations\library\Support\TrendyPhrase5.cs,RenderWord,The following statement contains a magic number: if (word < 1803) return WORDS_VOICE[word - 1742];
Missing Default,PkmnFoundations.Structures,PokemonBase,C:\repos\mm201_pkmnFoundations\library\Structures\PokemonBase.cs,ExperienceAt,The following switch statement is missing a default case: switch (gr)              {                  case GrowthRates.Slow:                      return ExperienceAt_Slow(level);                  case GrowthRates.Medium:                      return ExperienceAt_Medium(level);                  case GrowthRates.Fast:                      return ExperienceAt_Fast(level);                  case GrowthRates.MediumSlow:                      return ExperienceAt_MediumSlow(level);                  case GrowthRates.Erratic:                      return ExperienceAt_Erratic(level);                  case GrowthRates.Fluctuating:                      return ExperienceAt_Fluctuating(level);              }
Missing Default,PkmnFoundations.Support,LogHelper,C:\repos\mm201_pkmnFoundations\library\Support\LogHelper.cs,Write,The following switch statement is missing a default case: switch (Type)              {                  case EventLogTypes.StandardOutput:                      Console.WriteLine(message);                      break;                  case EventLogTypes.StandardError:                      Console.Error.WriteLine(message);                      break;                  case EventLogTypes.File:                      try                      {                          using (FileStream fs = File.Open(m_filename' FileMode.Append))                          {                              StreamWriter sw = new StreamWriter(fs);                              sw.Write("{0}\t{1}\n"' DateTime.Now' message);                              sw.Close();                          }                      }                      catch (Exception ex)                      {                          Console.WriteLine("Can't open logfile at {0}.\nException: {1}\nMessage: {2}"' m_filename' ex.Message' message);                      }                      break;                  case EventLogTypes.Windows:                      m_event_log.WriteEntry(message' type' eventID' (short)category' rawData);                      break;              }
