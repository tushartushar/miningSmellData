Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PkmnFoundations.Web,DependencyGraph<TKey;TValue>,C:\repos\mm201_pkmnFoundations\web\src\DependencyNode.cs,Resolve,Cyclomatic complexity of the method is 8
Complex Method,PkmnFoundations.Web,ForeignLookupSource,C:\repos\mm201_pkmnFoundations\web\src\ForeignLookupSource.cs,ProcessRequest,Cyclomatic complexity of the method is 9
Long Statement,PkmnFoundations.GTS,BattleVideo,C:\repos\mm201_pkmnFoundations\web\battlevideo\Default.aspx.cs,btnSend4_Click,The length of the statement  "                litMessage4.Text = "The battle video ID could not be read. Please enter a battle video ID in the format' xx-xxxxx-xxxxx' and try again."; " is 137.
Long Statement,PkmnFoundations.GTS,BattleVideo,C:\repos\mm201_pkmnFoundations\web\battlevideo\Default.aspx.cs,btnSend5_Click,The length of the statement  "                litMessage5.Text = "The battle video ID could not be read. Please enter a battle video ID in the format' xx-xxxxx-xxxxx' and try again."; " is 137.
Long Statement,PkmnFoundations.GTS,AllPokemon,C:\repos\mm201_pkmnFoundations\web\gts\Default.aspx.cs,Page_Load,The length of the statement  "                GtsRecord4[] records4 = Database.Instance.GtsSearch4(pokedex' 0' (ushort)species' gender' (byte)minLevel' (byte)maxLevel' 0' -1); " is 129.
Long Statement,PkmnFoundations.GTS,AllPokemon,C:\repos\mm201_pkmnFoundations\web\gts\Default.aspx.cs,Page_Load,The length of the statement  "                GtsRecord5[] records5 = Database.Instance.GtsSearch5(pokedex' 0' (ushort)species' gender' (byte)minLevel' (byte)maxLevel' 0' -1); " is 129.
Long Statement,PkmnFoundations.Web,DependencyGraph<TKey;TValue>,C:\repos\mm201_pkmnFoundations\web\src\DependencyNode.cs,Resolve,The length of the statement  "            LinkedList<DependencyNode<TKey' TValue>> nodesList = new LinkedList<DependencyNode<TKey' TValue>>(Graph.Select(n => n.Clone())); " is 128.
Long Statement,PkmnFoundations.Web,RequireLinkBase,C:\repos\mm201_pkmnFoundations\web\src\RequireLinkBase.cs,RequireLinkBase_PreRender,The length of the statement  "            DependencyNode<String' RequireLinkBase> node = new DependencyNode<String' RequireLinkBase>(Key' this' ParseDependencies(After ?? "")); " is 134.
Complex Conditional,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The conditional expression  "data[0x04] != 0x09 ||                  data[0x05] != 0x52 ||                  data[0x06] != 0x00 ||                  data[0x07] != 0x00"  is complex.
Complex Conditional,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The conditional expression  "data[0x04] != 0x09 ||                  data[0x05] != 0x52 ||                  data[0x06] != 0x00 ||                  data[0x07] != 0x00"  is complex.
Complex Conditional,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The conditional expression  "data[0x04] != 0x21 ||                   data[0x05] != 0x4e ||                  data[0x06] != 0x00 ||                  data[0x07] != 0x00"  is complex.
Complex Conditional,PkmnFoundations.Web,ForeignLookupSource,C:\repos\mm201_pkmnFoundations\web\src\ForeignLookupSource.cs,ProcessRequest,The conditional expression  "control_id.Contains('<') || control_id.Contains('>') || control_id.Contains('\"')                  || control_id.Contains('\'') || control_id.Contains('\\')"  is complex.
Empty Catch Block,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,btnDecode_Click,The method has an empty catch block.
Empty Catch Block,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,btnDecode_Click,The method has an empty catch block.
Empty Catch Block,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,btnDecode_Click,The method has an empty catch block.
Empty Catch Block,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,btnDecode_Click,The method has an empty catch block.
Empty Catch Block,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,btnDecode_Click,The method has an empty catch block.
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: if (data.Length != 12 + 556 * results)              {                  Fail(); return;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: if (data.Length != 12 + 556 * results)              {                  Fail(); return;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddBoxes,C:\repos\mm201_pkmnFoundations\web\admin\AddBoxes.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 556 * x);                  BoxLabels4 label = (BoxLabels4)BitConverter.ToInt32(data' 16 + 556 * x);                  ulong serial = BitConverter.ToUInt64(data' 20 + 556 * x);                  if (serial == 0) continue;                    byte[] result = new byte[540];                  Array.Copy(data' 28 + 556 * x' result' 0' 540);                    BoxRecord4 record = new BoxRecord4(pid' label' serial' result);                  if (Database.Instance.BoxUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: if (data.Length != 12 + 572 * results)              {                  Fail(); return;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: if (data.Length != 12 + 572 * results)              {                  Fail(); return;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 572 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 572 * x);                  if (serial == 0) continue;                    byte[] result = new byte[560];                  Array.Copy(data' 24 + 572 * x' result' 0' 560);                    MusicalRecord5 record = new MusicalRecord5(pid' serial' result);                  if (Database.Instance.MusicalUpload5(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 572 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 572 * x);                  if (serial == 0) continue;                    byte[] result = new byte[560];                  Array.Copy(data' 24 + 572 * x' result' 0' 560);                    MusicalRecord5 record = new MusicalRecord5(pid' serial' result);                  if (Database.Instance.MusicalUpload5(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 572 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 572 * x);                  if (serial == 0) continue;                    byte[] result = new byte[560];                  Array.Copy(data' 24 + 572 * x' result' 0' 560);                    MusicalRecord5 record = new MusicalRecord5(pid' serial' result);                  if (Database.Instance.MusicalUpload5(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 572 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 572 * x);                  if (serial == 0) continue;                    byte[] result = new byte[560];                  Array.Copy(data' 24 + 572 * x' result' 0' 560);                    MusicalRecord5 record = new MusicalRecord5(pid' serial' result);                  if (Database.Instance.MusicalUpload5(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 572 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 572 * x);                  if (serial == 0) continue;                    byte[] result = new byte[560];                  Array.Copy(data' 24 + 572 * x' result' 0' 560);                    MusicalRecord5 record = new MusicalRecord5(pid' serial' result);                  if (Database.Instance.MusicalUpload5(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 572 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 572 * x);                  if (serial == 0) continue;                    byte[] result = new byte[560];                  Array.Copy(data' 24 + 572 * x' result' 0' 560);                    MusicalRecord5 record = new MusicalRecord5(pid' serial' result);                  if (Database.Instance.MusicalUpload5(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 572 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 572 * x);                  if (serial == 0) continue;                    byte[] result = new byte[560];                  Array.Copy(data' 24 + 572 * x' result' 0' 560);                    MusicalRecord5 record = new MusicalRecord5(pid' serial' result);                  if (Database.Instance.MusicalUpload5(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.admin,AddMusical,C:\repos\mm201_pkmnFoundations\web\admin\AddMusical.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 572 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 572 * x);                  if (serial == 0) continue;                    byte[] result = new byte[560];                  Array.Copy(data' 24 + 572 * x' result' 0' 560);                    MusicalRecord5 record = new MusicalRecord5(pid' serial' result);                  if (Database.Instance.MusicalUpload5(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: if (data.Length != 12 + 236 * results)              {                  Fail(); return;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: if (data.Length != 12 + 236 * results)              {                  Fail(); return;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 236 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 236 * x);                  if (serial == 0) continue;                    byte[] result = new byte[224];                  Array.Copy(data' 24 + 236 * x' result' 0' 224);                    DressupRecord4 record = new DressupRecord4(pid' serial' result);                  if (Database.Instance.DressupUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 236 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 236 * x);                  if (serial == 0) continue;                    byte[] result = new byte[224];                  Array.Copy(data' 24 + 236 * x' result' 0' 224);                    DressupRecord4 record = new DressupRecord4(pid' serial' result);                  if (Database.Instance.DressupUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 236 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 236 * x);                  if (serial == 0) continue;                    byte[] result = new byte[224];                  Array.Copy(data' 24 + 236 * x' result' 0' 224);                    DressupRecord4 record = new DressupRecord4(pid' serial' result);                  if (Database.Instance.DressupUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 236 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 236 * x);                  if (serial == 0) continue;                    byte[] result = new byte[224];                  Array.Copy(data' 24 + 236 * x' result' 0' 224);                    DressupRecord4 record = new DressupRecord4(pid' serial' result);                  if (Database.Instance.DressupUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 236 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 236 * x);                  if (serial == 0) continue;                    byte[] result = new byte[224];                  Array.Copy(data' 24 + 236 * x' result' 0' 224);                    DressupRecord4 record = new DressupRecord4(pid' serial' result);                  if (Database.Instance.DressupUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 236 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 236 * x);                  if (serial == 0) continue;                    byte[] result = new byte[224];                  Array.Copy(data' 24 + 236 * x' result' 0' 224);                    DressupRecord4 record = new DressupRecord4(pid' serial' result);                  if (Database.Instance.DressupUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 236 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 236 * x);                  if (serial == 0) continue;                    byte[] result = new byte[224];                  Array.Copy(data' 24 + 236 * x' result' 0' 224);                    DressupRecord4 record = new DressupRecord4(pid' serial' result);                  if (Database.Instance.DressupUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS.test,AddDressup,C:\repos\mm201_pkmnFoundations\web\admin\AddDressup.aspx.cs,btnSend_Click,The following statement contains a magic number: for (int x = 0; x < results; x++)              {                  int pid = BitConverter.ToInt32(data' 12 + 236 * x);                  ulong serial = BitConverter.ToUInt64(data' 16 + 236 * x);                  if (serial == 0) continue;                    byte[] result = new byte[224];                  Array.Copy(data' 24 + 236 * x' result' 0' 224);                    DressupRecord4 record = new DressupRecord4(pid' serial' result);                  if (Database.Instance.DressupUpload4(record) != 0) added++;              }
Magic Number,PkmnFoundations.GTS,AllPokemon,C:\repos\mm201_pkmnFoundations\web\gts\Default.aspx.cs,CreatePokeball,The following statement contains a magic number: try              {                  GtsRecordBase record = (GtsRecordBase)DataItem;                  // Hide pokeballs with incorrect numbers until we catalog them.                  if (record.Pokemon.Pokeball.Value4 > 15) return "";                  String itemName = Common.HtmlEncode(record.Pokemon.Pokeball.Name.ToString());                  return "<img src=\"" + ResolveUrl(WebFormat.ItemImage(record.Pokemon.Pokeball)) +                      "\" alt=\"" + itemName + "\" title=\"" + itemName +                       "\" class=\"sprite item\" width=\"24px\" height=\"24px\" />";              }              catch              {                  return "???";              }
Magic Number,PkmnFoundations.GTS,RoomLeaders,C:\repos\mm201_pkmnFoundations\web\RoomLeaders.aspx.cs,btnGet_Click,The following statement contains a magic number: if (rank > 10 || rank < 1)              {                  litResults.Text = "Rank must be 1-10.";              }
Magic Number,PkmnFoundations.GTS,RoomLeaders,C:\repos\mm201_pkmnFoundations\web\RoomLeaders.aspx.cs,btnGet_Click,The following statement contains a magic number: if (room > 50 || rank < 1)              {                  litResults.Text = "Room must be 1-50.";              }
Magic Number,PkmnFoundations.Web,Common,C:\repos\mm201_pkmnFoundations\web\src\Common.cs,JsEncode,The following statement contains a magic number: foreach (char c in s.ToCharArray())              {                  if (c == '\r')                  {                      result.Append("\\r");                  }                  else if (c == '\n')                  {                      result.Append("\\n");                  }                  else if (c == '\t')                  {                      result.Append("\\t");                  }                  else if (Convert.ToUInt16(c) < 32)                  {                    }                  else if (NeedsJsEscape(c))                  {                      result.Append('\\');                      result.Append(c);                  }                  else result.Append(c);              }
Magic Number,PkmnFoundations.Web,Common,C:\repos\mm201_pkmnFoundations\web\src\Common.cs,NeedsJsEscape,The following statement contains a magic number: if (Convert.ToUInt16(c) < 32) return true;
Magic Number,PkmnFoundations.Web,Common,C:\repos\mm201_pkmnFoundations\web\src\Common.cs,CryptMessage,The following statement contains a magic number: if (m_pad == null)              {                  m_pad = new byte[256];                  FileStream s = File.Open(HttpContext.Current.Server.MapPath("~/pad.bin")' FileMode.Open);                  s.Read(m_pad' 0' m_pad.Length);                  s.Close();              }
Magic Number,PkmnFoundations.Web,Common,C:\repos\mm201_pkmnFoundations\web\src\Common.cs,CryptMessage,The following statement contains a magic number: if (message.Length < 5) return;
Magic Number,PkmnFoundations.Web,Common,C:\repos\mm201_pkmnFoundations\web\src\Common.cs,CryptMessage,The following statement contains a magic number: byte padOffset = (byte)(message[0] + message[4]);
Magic Number,PkmnFoundations.Web,Common,C:\repos\mm201_pkmnFoundations\web\src\Common.cs,CryptMessage,The following statement contains a magic number: for (int x = 5; x < message.Length; x++)                  message[x] ^= m_pad[(x + padOffset) & 0xff];
Magic Number,PkmnFoundations.Web,ForeignLookupSource,C:\repos\mm201_pkmnFoundations\web\src\ForeignLookupSource.cs,ServerError,The following statement contains a magic number: context.Response.StatusCode = 400;
Magic Number,PkmnFoundations.Web,WebException,C:\repos\mm201_pkmnFoundations\web\src\WebException.cs,DefaultMessage,The following statement contains a magic number: switch (responseCode)              {                  case 400:                      return "Bad request";                  case 403:                      return "Forbidden";                  case 404:                      return "Not found";                  case 500:                  default:                      return "Server error";              }
Magic Number,PkmnFoundations.Web,WebException,C:\repos\mm201_pkmnFoundations\web\src\WebException.cs,DefaultMessage,The following statement contains a magic number: switch (responseCode)              {                  case 400:                      return "Bad request";                  case 403:                      return "Forbidden";                  case 404:                      return "Not found";                  case 500:                  default:                      return "Server error";              }
Magic Number,PkmnFoundations.Web,WebException,C:\repos\mm201_pkmnFoundations\web\src\WebException.cs,DefaultMessage,The following statement contains a magic number: switch (responseCode)              {                  case 400:                      return "Bad request";                  case 403:                      return "Forbidden";                  case 404:                      return "Not found";                  case 500:                  default:                      return "Server error";              }
Magic Number,PkmnFoundations.Web,WebException,C:\repos\mm201_pkmnFoundations\web\src\WebException.cs,DefaultMessage,The following statement contains a magic number: switch (responseCode)              {                  case 400:                      return "Bad request";                  case 403:                      return "Forbidden";                  case 404:                      return "Not found";                  case 500:                  default:                      return "Server error";              }
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.QueryString.Count == 0 || Request.QueryString.Count > 2) throw new WebException(400);
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.QueryString.Count == 0 || Request.QueryString.Count > 2) throw new WebException(400);
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.QueryString["offer"] != null ||                  Request.QueryString["exchange"] != null)              {                  String generation = Request.QueryString["g"];                  if (generation == null ||                      Request.QueryString.Count != 2)                      throw new WebException(400);                    int tradeId;                  bool isExchanged;                    if (Request.QueryString["offer"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["offer"]);                      isExchanged = false;                  }                  else if (Request.QueryString["exchange"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["exchange"]);                      isExchanged = true;                  }                  else                  {                      AssertHelper.Unreachable();                      throw new WebException(400);                  }                    // todo: when userprofiles are ready' add checks that they allow viewing their GTS history                  switch (generation)                  {                      case "4":                      {                          GtsRecord4 record = Database.Instance.GtsGetRecord4(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      case "5":                      {                          GtsRecord5 record = Database.Instance.GtsGetRecord5(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      default:                          throw new WebException(400);                  }              }              else if (Request.QueryString["check"] != null)              {                  int checkId = Convert.ToInt32(Request.QueryString["check"]);                  throw new NotImplementedException();              }              else throw new WebException(400);
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.QueryString["offer"] != null ||                  Request.QueryString["exchange"] != null)              {                  String generation = Request.QueryString["g"];                  if (generation == null ||                      Request.QueryString.Count != 2)                      throw new WebException(400);                    int tradeId;                  bool isExchanged;                    if (Request.QueryString["offer"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["offer"]);                      isExchanged = false;                  }                  else if (Request.QueryString["exchange"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["exchange"]);                      isExchanged = true;                  }                  else                  {                      AssertHelper.Unreachable();                      throw new WebException(400);                  }                    // todo: when userprofiles are ready' add checks that they allow viewing their GTS history                  switch (generation)                  {                      case "4":                      {                          GtsRecord4 record = Database.Instance.GtsGetRecord4(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      case "5":                      {                          GtsRecord5 record = Database.Instance.GtsGetRecord5(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      default:                          throw new WebException(400);                  }              }              else if (Request.QueryString["check"] != null)              {                  int checkId = Convert.ToInt32(Request.QueryString["check"]);                  throw new NotImplementedException();              }              else throw new WebException(400);
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.QueryString["offer"] != null ||                  Request.QueryString["exchange"] != null)              {                  String generation = Request.QueryString["g"];                  if (generation == null ||                      Request.QueryString.Count != 2)                      throw new WebException(400);                    int tradeId;                  bool isExchanged;                    if (Request.QueryString["offer"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["offer"]);                      isExchanged = false;                  }                  else if (Request.QueryString["exchange"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["exchange"]);                      isExchanged = true;                  }                  else                  {                      AssertHelper.Unreachable();                      throw new WebException(400);                  }                    // todo: when userprofiles are ready' add checks that they allow viewing their GTS history                  switch (generation)                  {                      case "4":                      {                          GtsRecord4 record = Database.Instance.GtsGetRecord4(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      case "5":                      {                          GtsRecord5 record = Database.Instance.GtsGetRecord5(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      default:                          throw new WebException(400);                  }              }              else if (Request.QueryString["check"] != null)              {                  int checkId = Convert.ToInt32(Request.QueryString["check"]);                  throw new NotImplementedException();              }              else throw new WebException(400);
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.QueryString["offer"] != null ||                  Request.QueryString["exchange"] != null)              {                  String generation = Request.QueryString["g"];                  if (generation == null ||                      Request.QueryString.Count != 2)                      throw new WebException(400);                    int tradeId;                  bool isExchanged;                    if (Request.QueryString["offer"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["offer"]);                      isExchanged = false;                  }                  else if (Request.QueryString["exchange"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["exchange"]);                      isExchanged = true;                  }                  else                  {                      AssertHelper.Unreachable();                      throw new WebException(400);                  }                    // todo: when userprofiles are ready' add checks that they allow viewing their GTS history                  switch (generation)                  {                      case "4":                      {                          GtsRecord4 record = Database.Instance.GtsGetRecord4(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      case "5":                      {                          GtsRecord5 record = Database.Instance.GtsGetRecord5(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      default:                          throw new WebException(400);                  }              }              else if (Request.QueryString["check"] != null)              {                  int checkId = Convert.ToInt32(Request.QueryString["check"]);                  throw new NotImplementedException();              }              else throw new WebException(400);
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.QueryString["offer"] != null ||                  Request.QueryString["exchange"] != null)              {                  String generation = Request.QueryString["g"];                  if (generation == null ||                      Request.QueryString.Count != 2)                      throw new WebException(400);                    int tradeId;                  bool isExchanged;                    if (Request.QueryString["offer"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["offer"]);                      isExchanged = false;                  }                  else if (Request.QueryString["exchange"] != null)                  {                      tradeId = Convert.ToInt32(Request.QueryString["exchange"]);                      isExchanged = true;                  }                  else                  {                      AssertHelper.Unreachable();                      throw new WebException(400);                  }                    // todo: when userprofiles are ready' add checks that they allow viewing their GTS history                  switch (generation)                  {                      case "4":                      {                          GtsRecord4 record = Database.Instance.GtsGetRecord4(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      case "5":                      {                          GtsRecord5 record = Database.Instance.GtsGetRecord5(pokedex' tradeId' isExchanged' true);                          if (record != null) pkmn = new PokemonParty4(pokedex' record.Data.ToArray());                        } break;                      default:                          throw new WebException(400);                  }              }              else if (Request.QueryString["check"] != null)              {                  int checkId = Convert.ToInt32(Request.QueryString["check"]);                  throw new NotImplementedException();              }              else throw new WebException(400);
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Page_Load,The following statement contains a magic number: if (pkmn == null)                  throw new WebException(403);
Magic Number,PkmnFoundations.Web.gts,Pokemon,C:\repos\mm201_pkmnFoundations\web\gts\Pokemon.aspx.cs,Bind,The following statement contains a magic number: if (pkmn.Level < 100)              {                  int expCurrLevel = PokemonBase.ExperienceAt(pkmn.Level' pkmn.Species.GrowthRate);                  int expNextLevel = PokemonBase.ExperienceAt(pkmn.Level + 1' pkmn.Species.GrowthRate);                  int progress = pkmn.Experience - expCurrLevel;                  int nextIn = expNextLevel - pkmn.Experience;                    litExperienceNext.Text = String.Format("next in {0}"' nextIn);                  litExpProgress.Text = WebFormat.RenderProgress(progress' expNextLevel - expCurrLevel);              }              else              {                  litExperienceNext.Text = "";                  litExpProgress.Text = WebFormat.RenderProgress(0' 1);              }
Magic Number,PkmnFoundations.GTS.debug,BoxUp,C:\repos\mm201_pkmnFoundations\web\test\BoxUp.aspx.cs,RenderHex,The following statement contains a magic number: for (int x = 0; x < hex.Length; x += 16)              {                  if (x % 32 == 0)                  {                      builder.Append((x >> 1).ToString("x4"));                      builder.Append(": ");                  }                    builder.Append(hex.Substring(x' Math.Min(16' hex.Length - x)));                  builder.Append((x % 32 == 0) ? " " : "<br />");              }
Magic Number,PkmnFoundations.GTS.debug,BoxUp,C:\repos\mm201_pkmnFoundations\web\test\BoxUp.aspx.cs,RenderHex,The following statement contains a magic number: for (int x = 0; x < hex.Length; x += 16)              {                  if (x % 32 == 0)                  {                      builder.Append((x >> 1).ToString("x4"));                      builder.Append(": ");                  }                    builder.Append(hex.Substring(x' Math.Min(16' hex.Length - x)));                  builder.Append((x % 32 == 0) ? " " : "<br />");              }
Magic Number,PkmnFoundations.GTS.debug,BoxUp,C:\repos\mm201_pkmnFoundations\web\test\BoxUp.aspx.cs,RenderHex,The following statement contains a magic number: for (int x = 0; x < hex.Length; x += 16)              {                  if (x % 32 == 0)                  {                      builder.Append((x >> 1).ToString("x4"));                      builder.Append(": ");                  }                    builder.Append(hex.Substring(x' Math.Min(16' hex.Length - x)));                  builder.Append((x % 32 == 0) ? " " : "<br />");              }
Magic Number,PkmnFoundations.GTS.debug,BoxUp,C:\repos\mm201_pkmnFoundations\web\test\BoxUp.aspx.cs,RenderHex,The following statement contains a magic number: for (int x = 0; x < hex.Length; x += 16)              {                  if (x % 32 == 0)                  {                      builder.Append((x >> 1).ToString("x4"));                      builder.Append(": ");                  }                    builder.Append(hex.Substring(x' Math.Min(16' hex.Length - x)));                  builder.Append((x % 32 == 0) ? " " : "<br />");              }
Magic Number,PkmnFoundations.GTS.debug,BoxUp,C:\repos\mm201_pkmnFoundations\web\test\BoxUp.aspx.cs,CryptMessage,The following statement contains a magic number: if (message.Length < 5) return;
Magic Number,PkmnFoundations.GTS.debug,BoxUp,C:\repos\mm201_pkmnFoundations\web\test\BoxUp.aspx.cs,CryptMessage,The following statement contains a magic number: byte padOffset = (byte)(message[0] + message[4]);
Magic Number,PkmnFoundations.GTS.debug,BoxUp,C:\repos\mm201_pkmnFoundations\web\test\BoxUp.aspx.cs,CryptMessage,The following statement contains a magic number: for (int x = 5; x < message.Length; x++)                  message[x] ^= m_pad[(x + padOffset) & 0xff];
Magic Number,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,DecryptData,The following statement contains a magic number: if (data2.Length < 12) throw new FormatException("Data must contain at least 12 bytes.");
Magic Number,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,RenderHex,The following statement contains a magic number: for (int x = 0; x < hex.Length; x += 16)              {                  if (x % 32 == 0)                  {                      builder.Append((x >> 1).ToString("x4"));                      builder.Append(": ");                  }                    builder.Append(hex.Substring(x' Math.Min(16' hex.Length - x)));                  builder.Append((x % 32 == 0) ? " " : "<br />");              }
Magic Number,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,RenderHex,The following statement contains a magic number: for (int x = 0; x < hex.Length; x += 16)              {                  if (x % 32 == 0)                  {                      builder.Append((x >> 1).ToString("x4"));                      builder.Append(": ");                  }                    builder.Append(hex.Substring(x' Math.Min(16' hex.Length - x)));                  builder.Append((x % 32 == 0) ? " " : "<br />");              }
Magic Number,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,RenderHex,The following statement contains a magic number: for (int x = 0; x < hex.Length; x += 16)              {                  if (x % 32 == 0)                  {                      builder.Append((x >> 1).ToString("x4"));                      builder.Append(": ");                  }                    builder.Append(hex.Substring(x' Math.Min(16' hex.Length - x)));                  builder.Append((x % 32 == 0) ? " " : "<br />");              }
Magic Number,PkmnFoundations.GTS.debug,Decode,C:\repos\mm201_pkmnFoundations\web\test\Decode.aspx.cs,RenderHex,The following statement contains a magic number: for (int x = 0; x < hex.Length; x += 16)              {                  if (x % 32 == 0)                  {                      builder.Append((x >> 1).ToString("x4"));                      builder.Append(": ");                  }                    builder.Append(hex.Substring(x' Math.Min(16' hex.Length - x)));                  builder.Append((x % 32 == 0) ? " " : "<br />");              }
Missing Default,PkmnFoundations.GTS,RoomLeaders,C:\repos\mm201_pkmnFoundations\web\RoomLeaders.aspx.cs,btnGet_Click,The following switch statement is missing a default case: switch (rbGeneration.SelectedValue)              {                  case "4":                  {                      BattleTowerProfile4[] results = Database.Instance.BattleTowerGetLeaders4(rank' room);                        StringBuilder builder = new StringBuilder();                        builder.Append("<p>Leaders:</p><ul>");                      foreach (BattleTowerProfile4 profile in results)                      {                          builder.Append("<li>");                          TrendyPhrase4 tp = profile.PhraseLeader;                          builder.Append(tp.Render("<span style=\"color: #0066ff; font-weight: bold;\">{0}</span>"));                          builder.Append("</li>");                      }                      builder.Append("</ul><p>Opponents:</p><ul>");                        BattleTowerRecord4[] opponents = Database.Instance.BattleTowerGetOpponents4(-1' rank' room);                      foreach (BattleTowerRecord4 record in opponents)                      {                          builder.Append("<li>");                            builder.Append(record.PhraseChallenged.Render("<span style=\"color: #0066ff; font-weight: bold;\">{0}</span>"));                          builder.Append("<br />");                            builder.Append(record.PhraseWon.Render("<span style=\"color: #0066ff; font-weight: bold;\">{0}</span>"));                          builder.Append("<br />");                            builder.Append(record.PhraseLost.Render("<span style=\"color: #0066ff; font-weight: bold;\">{0}</span>"));                            builder.Append("</li>");                      }                      litResults.Text = builder.ToString();                  } break;                  case "5":                      {                          BattleSubwayProfile5[] results = Database.Instance.BattleSubwayGetLeaders5(rank' room);                            StringBuilder builder = new StringBuilder();                            builder.Append("<p>Leaders:</p><ul>");                          foreach (BattleSubwayProfile5 profile in results)                          {                              builder.Append("<li>");                              TrendyPhrase5 tp = profile.PhraseLeader;                              builder.Append(tp.Render("<span style=\"color: #0066ff; font-weight: bold;\">{0}</span>"));                              builder.Append("</li>");                          }                          builder.Append("</ul><p>Opponents:</p><ul>");                            BattleSubwayRecord5[] opponents = Database.Instance.BattleSubwayGetOpponents5(-1' rank' room);                          foreach (BattleSubwayRecord5 record in opponents)                          {                              builder.Append("<li>");                                builder.Append(record.PhraseChallenged.Render("<span style=\"color: #0066ff; font-weight: bold;\">{0}</span>"));                              builder.Append("<br />");                                builder.Append(record.PhraseWon.Render("<span style=\"color: #0066ff; font-weight: bold;\">{0}</span>"));                              builder.Append("<br />");                                builder.Append(record.PhraseLost.Render("<span style=\"color: #0066ff; font-weight: bold;\">{0}</span>"));                                builder.Append("</li>");                          }                          litResults.Text = builder.ToString();                      } break;              }
