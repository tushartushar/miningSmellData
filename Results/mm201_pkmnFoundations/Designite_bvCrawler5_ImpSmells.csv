Implementation smell,Namespace,Class,File,Method,Description
Long Method,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The method has 147 lines of code.
Long Method,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,WriteBase64shit,The method has 60 lines of code.
Long Method,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The method has 79 lines of code.
Complex Method,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,Cyclomatic complexity of the method is 16
Complex Method,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,Cyclomatic complexity of the method is 14
Complex Method,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,Cyclomatic complexity of the method is 19
Complex Method,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RetryAll,Cyclomatic complexity of the method is 11
Long Parameter List,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The method has 6 parameters.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The length of the statement  "		if ((long)db.ExecuteScalar ("SELECT Count(*) FROM BattleVideoSearchHistory5 WHERE Metagame = @metagame " + "AND Species = @species AND Country = @country AND Region = @region AND Special = 0"' new MySqlParameter ("@metagame"' (int)metagame)' new MySqlParameter ("@species"' (int)species)' new MySqlParameter ("@country"' (int)country)' new MySqlParameter ("@region"' (int)region)) == 0) { " is 388.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The length of the statement  "		dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Metagame = @metagame AND Special = 0 ORDER BY Species"' new MySqlParameter ("@metagame"' (int)metagame)); " is 225.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The length of the statement  "		dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Species = @species AND Special = 0 ORDER BY Metagame"' new MySqlParameter ("@species"' (int)species)); " is 222.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The length of the statement  "		dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Special = 0 ORDER BY Metagame' Species"); " is 161.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The length of the statement  "			db.ExecuteNonQuery ("INSERT INTO BattleVideoSearchHistory5 (Metagame' Species' " + "Country' Region' Special) VALUES (@metagame' @species' @country' @region' @special)"' new MySqlParameter ("@metagame"' (int)meta)' new MySqlParameter ("@species"' (int)species)' new MySqlParameter ("@country"' (int)country)' new MySqlParameter ("@region"' (int)region)' new MySqlParameter ("@special"' (int)special)); " is 401.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueVideoId,The length of the statement  "		long count = (long)tran.ExecuteScalar ("SELECT Count(*) FROM BattleVideoCrawlQueue5 WHERE SerialNumber = @serial_number"' new MySqlParameter ("@serial_number"' id)); " is 165.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueVideoId,The length of the statement  "		tran.ExecuteNonQuery ("INSERT INTO BattleVideoCrawlQueue5 (SerialNumber' `Timestamp`) VALUES (@serial_number' NOW())"' new MySqlParameter ("@serial_number"' id)); " is 162.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,DequeueVideo,The length of the statement  "		object o = tran.ExecuteScalar ("SELECT SerialNumber FROM BattleVideoCrawlQueue5 WHERE Complete = 0 ORDER BY `Timestamp` LIMIT 1"); " is 130.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,DequeueVideo,The length of the statement  "		tran.ExecuteNonQuery ("UPDATE BattleVideoCrawlQueue5 SET Complete = 1 WHERE SerialNumber = @serial_number"' new MySqlParameter ("@serial_number"' id)); " is 151.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Conversation,The length of the statement  "		SslStream sslClient = new SslStream (client.GetStream ()' false' delegate (object s' X509Certificate certificate' X509Chain chain' SslPolicyErrors sslPolicyErrors) { " is 165.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RetryAll,The length of the statement  "			db.ExecuteNonQuery ("UPDATE BattleVideoCrawlQueue5 SET Complete = 0 " + "WHERE SerialNumber IN (" + toRecheck.ToString () + ")"); " is 129.
Long Statement,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,CreateConnection,The length of the statement  "	return new MySqlConnection (ConfigurationManager.ConnectionStrings ["pkmnFoundationsConnectionString"].ConnectionString); " is 121.
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: while (true) {  	ulong videoId;  	try {  		using (MySqlConnection db = CreateConnection ()) {  			db.Open ();  			videoId = DequeueVideo (db);  			db.Close ();  		}  	} catch (Exception ex) {  		// haven't touched the server' sleep short  		LogError (ex);  		Thread.Sleep (1000 * 1);  		continue;  	}  	if (videoId == 0) {  		try {  			if (last_retry_all < DateTime.Now.AddHours (-6)) {  				last_retry_all = DateTime.Now;  				RetryAll ();  				continue;  			}  			if (last_top30 < DateTime.Now.AddMinutes (-60)) {  				last_top30 = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.Latest30);  				continue;  			}  			if (last_top_link < DateTime.Now.AddMinutes (-120)) {  				last_top_link = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopLinkBattles);  				continue;  			}  			if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  				last_top_subway = DateTime.Now;  				QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  				continue;  			} else if (RunSearch (pid)) {  				continue;  			}  		} catch (Exception ex) {  			LogError (ex);  			Thread.Sleep (1000 * 30);  			continue;  		}  		Console.WriteLine ("Nothing to do. Idling 1 minute.");  		Thread.Sleep (1000 * 60);  		continue;  	}  	String formatted = FormatVideoId (videoId);  	String filename = String.Format ("{0}\\{1}.bin"' m_upload_dir' formatted);  	if (File.Exists (filename)) {  		Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  		Thread.Sleep (1000 * 1);  		continue;  	}  	byte[] data;  	try {  		data = GetBattleVideo (pid' videoId);  		using (FileStream file = File.Create (filename)) {  			file.Write (data' 0' data.Length);  			file.Close ();  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Successfully saved battle video {0}."' formatted);  	Thread.Sleep (1000 * 30);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	using (MySqlConnection db = CreateConnection ()) {  		db.Open ();  		videoId = DequeueVideo (db);  		db.Close ();  	}  } catch (Exception ex) {  	// haven't touched the server' sleep short  	LogError (ex);  	Thread.Sleep (1000 * 1);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 1);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (videoId == 0) {  	try {  		if (last_retry_all < DateTime.Now.AddHours (-6)) {  			last_retry_all = DateTime.Now;  			RetryAll ();  			continue;  		}  		if (last_top30 < DateTime.Now.AddMinutes (-60)) {  			last_top30 = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.Latest30);  			continue;  		}  		if (last_top_link < DateTime.Now.AddMinutes (-120)) {  			last_top_link = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopLinkBattles);  			continue;  		}  		if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  			last_top_subway = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  			continue;  		} else if (RunSearch (pid)) {  			continue;  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Nothing to do. Idling 1 minute.");  	Thread.Sleep (1000 * 60);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (videoId == 0) {  	try {  		if (last_retry_all < DateTime.Now.AddHours (-6)) {  			last_retry_all = DateTime.Now;  			RetryAll ();  			continue;  		}  		if (last_top30 < DateTime.Now.AddMinutes (-60)) {  			last_top30 = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.Latest30);  			continue;  		}  		if (last_top_link < DateTime.Now.AddMinutes (-120)) {  			last_top_link = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopLinkBattles);  			continue;  		}  		if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  			last_top_subway = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  			continue;  		} else if (RunSearch (pid)) {  			continue;  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Nothing to do. Idling 1 minute.");  	Thread.Sleep (1000 * 60);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (videoId == 0) {  	try {  		if (last_retry_all < DateTime.Now.AddHours (-6)) {  			last_retry_all = DateTime.Now;  			RetryAll ();  			continue;  		}  		if (last_top30 < DateTime.Now.AddMinutes (-60)) {  			last_top30 = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.Latest30);  			continue;  		}  		if (last_top_link < DateTime.Now.AddMinutes (-120)) {  			last_top_link = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopLinkBattles);  			continue;  		}  		if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  			last_top_subway = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  			continue;  		} else if (RunSearch (pid)) {  			continue;  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Nothing to do. Idling 1 minute.");  	Thread.Sleep (1000 * 60);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (videoId == 0) {  	try {  		if (last_retry_all < DateTime.Now.AddHours (-6)) {  			last_retry_all = DateTime.Now;  			RetryAll ();  			continue;  		}  		if (last_top30 < DateTime.Now.AddMinutes (-60)) {  			last_top30 = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.Latest30);  			continue;  		}  		if (last_top_link < DateTime.Now.AddMinutes (-120)) {  			last_top_link = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopLinkBattles);  			continue;  		}  		if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  			last_top_subway = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  			continue;  		} else if (RunSearch (pid)) {  			continue;  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Nothing to do. Idling 1 minute.");  	Thread.Sleep (1000 * 60);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (videoId == 0) {  	try {  		if (last_retry_all < DateTime.Now.AddHours (-6)) {  			last_retry_all = DateTime.Now;  			RetryAll ();  			continue;  		}  		if (last_top30 < DateTime.Now.AddMinutes (-60)) {  			last_top30 = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.Latest30);  			continue;  		}  		if (last_top_link < DateTime.Now.AddMinutes (-120)) {  			last_top_link = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopLinkBattles);  			continue;  		}  		if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  			last_top_subway = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  			continue;  		} else if (RunSearch (pid)) {  			continue;  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Nothing to do. Idling 1 minute.");  	Thread.Sleep (1000 * 60);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (videoId == 0) {  	try {  		if (last_retry_all < DateTime.Now.AddHours (-6)) {  			last_retry_all = DateTime.Now;  			RetryAll ();  			continue;  		}  		if (last_top30 < DateTime.Now.AddMinutes (-60)) {  			last_top30 = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.Latest30);  			continue;  		}  		if (last_top_link < DateTime.Now.AddMinutes (-120)) {  			last_top_link = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopLinkBattles);  			continue;  		}  		if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  			last_top_subway = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  			continue;  		} else if (RunSearch (pid)) {  			continue;  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Nothing to do. Idling 1 minute.");  	Thread.Sleep (1000 * 60);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (videoId == 0) {  	try {  		if (last_retry_all < DateTime.Now.AddHours (-6)) {  			last_retry_all = DateTime.Now;  			RetryAll ();  			continue;  		}  		if (last_top30 < DateTime.Now.AddMinutes (-60)) {  			last_top30 = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.Latest30);  			continue;  		}  		if (last_top_link < DateTime.Now.AddMinutes (-120)) {  			last_top_link = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopLinkBattles);  			continue;  		}  		if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  			last_top_subway = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  			continue;  		} else if (RunSearch (pid)) {  			continue;  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Nothing to do. Idling 1 minute.");  	Thread.Sleep (1000 * 60);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (videoId == 0) {  	try {  		if (last_retry_all < DateTime.Now.AddHours (-6)) {  			last_retry_all = DateTime.Now;  			RetryAll ();  			continue;  		}  		if (last_top30 < DateTime.Now.AddMinutes (-60)) {  			last_top30 = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.Latest30);  			continue;  		}  		if (last_top_link < DateTime.Now.AddMinutes (-120)) {  			last_top_link = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopLinkBattles);  			continue;  		}  		if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  			last_top_subway = DateTime.Now;  			QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  			continue;  		} else if (RunSearch (pid)) {  			continue;  		}  	} catch (Exception ex) {  		LogError (ex);  		Thread.Sleep (1000 * 30);  		continue;  	}  	Console.WriteLine ("Nothing to do. Idling 1 minute.");  	Thread.Sleep (1000 * 60);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	if (last_retry_all < DateTime.Now.AddHours (-6)) {  		last_retry_all = DateTime.Now;  		RetryAll ();  		continue;  	}  	if (last_top30 < DateTime.Now.AddMinutes (-60)) {  		last_top30 = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.Latest30);  		continue;  	}  	if (last_top_link < DateTime.Now.AddMinutes (-120)) {  		last_top_link = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopLinkBattles);  		continue;  	}  	if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  		last_top_subway = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  		continue;  	} else if (RunSearch (pid)) {  		continue;  	}  } catch (Exception ex) {  	LogError (ex);  	Thread.Sleep (1000 * 30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	if (last_retry_all < DateTime.Now.AddHours (-6)) {  		last_retry_all = DateTime.Now;  		RetryAll ();  		continue;  	}  	if (last_top30 < DateTime.Now.AddMinutes (-60)) {  		last_top30 = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.Latest30);  		continue;  	}  	if (last_top_link < DateTime.Now.AddMinutes (-120)) {  		last_top_link = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopLinkBattles);  		continue;  	}  	if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  		last_top_subway = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  		continue;  	} else if (RunSearch (pid)) {  		continue;  	}  } catch (Exception ex) {  	LogError (ex);  	Thread.Sleep (1000 * 30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	if (last_retry_all < DateTime.Now.AddHours (-6)) {  		last_retry_all = DateTime.Now;  		RetryAll ();  		continue;  	}  	if (last_top30 < DateTime.Now.AddMinutes (-60)) {  		last_top30 = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.Latest30);  		continue;  	}  	if (last_top_link < DateTime.Now.AddMinutes (-120)) {  		last_top_link = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopLinkBattles);  		continue;  	}  	if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  		last_top_subway = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  		continue;  	} else if (RunSearch (pid)) {  		continue;  	}  } catch (Exception ex) {  	LogError (ex);  	Thread.Sleep (1000 * 30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	if (last_retry_all < DateTime.Now.AddHours (-6)) {  		last_retry_all = DateTime.Now;  		RetryAll ();  		continue;  	}  	if (last_top30 < DateTime.Now.AddMinutes (-60)) {  		last_top30 = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.Latest30);  		continue;  	}  	if (last_top_link < DateTime.Now.AddMinutes (-120)) {  		last_top_link = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopLinkBattles);  		continue;  	}  	if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  		last_top_subway = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  		continue;  	} else if (RunSearch (pid)) {  		continue;  	}  } catch (Exception ex) {  	LogError (ex);  	Thread.Sleep (1000 * 30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	if (last_retry_all < DateTime.Now.AddHours (-6)) {  		last_retry_all = DateTime.Now;  		RetryAll ();  		continue;  	}  	if (last_top30 < DateTime.Now.AddMinutes (-60)) {  		last_top30 = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.Latest30);  		continue;  	}  	if (last_top_link < DateTime.Now.AddMinutes (-120)) {  		last_top_link = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopLinkBattles);  		continue;  	}  	if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  		last_top_subway = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  		continue;  	} else if (RunSearch (pid)) {  		continue;  	}  } catch (Exception ex) {  	LogError (ex);  	Thread.Sleep (1000 * 30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	if (last_retry_all < DateTime.Now.AddHours (-6)) {  		last_retry_all = DateTime.Now;  		RetryAll ();  		continue;  	}  	if (last_top30 < DateTime.Now.AddMinutes (-60)) {  		last_top30 = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.Latest30);  		continue;  	}  	if (last_top_link < DateTime.Now.AddMinutes (-120)) {  		last_top_link = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopLinkBattles);  		continue;  	}  	if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  		last_top_subway = DateTime.Now;  		QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  		continue;  	} else if (RunSearch (pid)) {  		continue;  	}  } catch (Exception ex) {  	LogError (ex);  	Thread.Sleep (1000 * 30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (last_retry_all < DateTime.Now.AddHours (-6)) {  	last_retry_all = DateTime.Now;  	RetryAll ();  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (last_top30 < DateTime.Now.AddMinutes (-60)) {  	last_top30 = DateTime.Now;  	QueueSpecial (pid' SearchSpecial.Latest30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (last_top_link < DateTime.Now.AddMinutes (-120)) {  	last_top_link = DateTime.Now;  	QueueSpecial (pid' SearchSpecial.TopLinkBattles);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (last_top_subway < DateTime.Now.AddMinutes (-120)) {  	last_top_subway = DateTime.Now;  	QueueSpecial (pid' SearchSpecial.TopSubwayBattles);  	continue;  } else if (RunSearch (pid)) {  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 30);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 30);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 60);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 60);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: if (File.Exists (filename)) {  	Console.WriteLine ("Skipped video {0}. Already present on disk."' formatted);  	Thread.Sleep (1000 * 1);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 1);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	data = GetBattleVideo (pid' videoId);  	using (FileStream file = File.Create (filename)) {  		file.Write (data' 0' data.Length);  		file.Close ();  	}  } catch (Exception ex) {  	LogError (ex);  	Thread.Sleep (1000 * 30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: try {  	data = GetBattleVideo (pid' videoId);  	using (FileStream file = File.Create (filename)) {  		file.Write (data' 0' data.Length);  		file.Close ();  	}  } catch (Exception ex) {  	LogError (ex);  	Thread.Sleep (1000 * 30);  	continue;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 30);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 30);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 30);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000 * 30);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,FormatVideoId,The following statement contains a magic number: split [0] = number.Substring (0' number.Length - 10);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,FormatVideoId,The following statement contains a magic number: split [1] = number.Substring (number.Length - 10' 5);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,FormatVideoId,The following statement contains a magic number: split [1] = number.Substring (number.Length - 10' 5);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,FormatVideoId,The following statement contains a magic number: split [2] = number.Substring (number.Length - 5' 5);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,FormatVideoId,The following statement contains a magic number: split [2] = number.Substring (number.Length - 5' 5);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,FormatVideoId,The following statement contains a magic number: split [2] = number.Substring (number.Length - 5' 5);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,WriteBase64shit,The following statement contains a magic number: if (m_session_str == null || m_session_time.AddMinutes (60) < DateTime.Now) {  	m_session_time = DateTime.Now;  	Random rnd = new Random ();  	byte[] data = new byte[32];  	rnd.NextBytes (data);  	// hack in   	data = new byte[] {  		0xBE'  		0xAB'  		0x15'  		0x8B'  		0x25'  		0x17'  		0x02'  		0x00'  		0xBE'  		0xEB'  		0xD9'  		0xC4'  		0x56'  		0xCD'  		0x5B'  		0xE0'  		0x0A'  		0x19'  		0xA3'  		0xC4'  		0xF6'  		0x9F'  		0x47'  		0x49'  		0xDE'  		0xD6'  		0x42'  		0x7A'  		0xD1'  		0x73'  		0x83'  		0x4E  	};  	Array.Copy (data' 0' m_session_key' 32' 32);  	m_session_str = Convert.ToBase64String (m_session_key);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,WriteBase64shit,The following statement contains a magic number: if (m_session_str == null || m_session_time.AddMinutes (60) < DateTime.Now) {  	m_session_time = DateTime.Now;  	Random rnd = new Random ();  	byte[] data = new byte[32];  	rnd.NextBytes (data);  	// hack in   	data = new byte[] {  		0xBE'  		0xAB'  		0x15'  		0x8B'  		0x25'  		0x17'  		0x02'  		0x00'  		0xBE'  		0xEB'  		0xD9'  		0xC4'  		0x56'  		0xCD'  		0x5B'  		0xE0'  		0x0A'  		0x19'  		0xA3'  		0xC4'  		0xF6'  		0x9F'  		0x47'  		0x49'  		0xDE'  		0xD6'  		0x42'  		0x7A'  		0xD1'  		0x73'  		0x83'  		0x4E  	};  	Array.Copy (data' 0' m_session_key' 32' 32);  	m_session_str = Convert.ToBase64String (m_session_key);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,WriteBase64shit,The following statement contains a magic number: if (m_session_str == null || m_session_time.AddMinutes (60) < DateTime.Now) {  	m_session_time = DateTime.Now;  	Random rnd = new Random ();  	byte[] data = new byte[32];  	rnd.NextBytes (data);  	// hack in   	data = new byte[] {  		0xBE'  		0xAB'  		0x15'  		0x8B'  		0x25'  		0x17'  		0x02'  		0x00'  		0xBE'  		0xEB'  		0xD9'  		0xC4'  		0x56'  		0xCD'  		0x5B'  		0xE0'  		0x0A'  		0x19'  		0xA3'  		0xC4'  		0xF6'  		0x9F'  		0x47'  		0x49'  		0xDE'  		0xD6'  		0x42'  		0x7A'  		0xD1'  		0x73'  		0x83'  		0x4E  	};  	Array.Copy (data' 0' m_session_key' 32' 32);  	m_session_str = Convert.ToBase64String (m_session_key);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,WriteBase64shit,The following statement contains a magic number: if (m_session_str == null || m_session_time.AddMinutes (60) < DateTime.Now) {  	m_session_time = DateTime.Now;  	Random rnd = new Random ();  	byte[] data = new byte[32];  	rnd.NextBytes (data);  	// hack in   	data = new byte[] {  		0xBE'  		0xAB'  		0x15'  		0x8B'  		0x25'  		0x17'  		0x02'  		0x00'  		0xBE'  		0xEB'  		0xD9'  		0xC4'  		0x56'  		0xCD'  		0x5B'  		0xE0'  		0x0A'  		0x19'  		0xA3'  		0xC4'  		0xF6'  		0x9F'  		0x47'  		0x49'  		0xDE'  		0xD6'  		0x42'  		0x7A'  		0xD1'  		0x73'  		0x83'  		0x4E  	};  	Array.Copy (data' 0' m_session_key' 32' 32);  	m_session_str = Convert.ToBase64String (m_session_key);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,WriteBase64shit,The following statement contains a magic number: Array.Copy (data' 0' m_session_key' 32' 32);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,WriteBase64shit,The following statement contains a magic number: Array.Copy (data' 0' m_session_key' 32' 32);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write (new byte[4]' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write (new byte[4]' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write (new byte[] {  	0xf2'  	0x55'  	0x00'  	0x00  }' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write (BitConverter.GetBytes (pid)' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write (new byte[] {  	0x17'  	0x02  }' 0' 2);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write (BitConverter.GetBytes (videoId)' 0' 8);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write (new byte[] {  	0x64'  	0x00'  	0x00'  	0x00  }' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,GetBattleVideo,The following statement contains a magic number: if (response.Length < 9)  	throw new InvalidDataException ("Battle video was not retrieved.");  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The following statement contains a magic number: using (MySqlConnection db = CreateConnection ()) {  	db.Open ();  	if ((long)db.ExecuteScalar ("SELECT Count(*) FROM BattleVideoSearchHistory5 WHERE Metagame = @metagame " + "AND Species = @species AND Country = @country AND Region = @region AND Special = 0"' new MySqlParameter ("@metagame"' (int)metagame)' new MySqlParameter ("@species"' (int)species)' new MySqlParameter ("@country"' (int)country)' new MySqlParameter ("@region"' (int)region)) == 0) {  		// exact match  		QueueSearch (pid' SearchSpecial.None' species' metagame' country' region);  		return true;  	}  	DataTable dt;  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Metagame = @metagame AND Special = 0 ORDER BY Species"' new MySqlParameter ("@metagame"' (int)metagame));  	if (dt.Rows.Count < 649) {  		int prevSpecies = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Species"] != prevSpecies) {  				QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagame' country' region);  				return true;  			}  			prevSpecies++;  		}  	}  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Species = @species AND Special = 0 ORDER BY Metagame"' new MySqlParameter ("@species"' (int)species));  	if (dt.Rows.Count < metaCount) {  		int prevMeta = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Metagame"] != (int)metagames [prevMeta]) {  				QueueSearch (pid' SearchSpecial.None' species' metagames [prevMeta]' country' region);  				return true;  			}  			prevMeta++;  		}  	}  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Special = 0 ORDER BY Metagame' Species");  	if (dt.Rows.Count < 649 * metaCount) {  		int prevSpecies = 1;  		int prevMeta = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Species"] != prevSpecies || (int)row ["Metagame"] != (int)metagames [prevMeta]) {  				QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagames [prevMeta]' country' region);  				return true;  			}  			prevSpecies++;  			if (prevSpecies > 649) {  				prevSpecies = 1;  				prevMeta++;  			}  		}  	}  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The following statement contains a magic number: using (MySqlConnection db = CreateConnection ()) {  	db.Open ();  	if ((long)db.ExecuteScalar ("SELECT Count(*) FROM BattleVideoSearchHistory5 WHERE Metagame = @metagame " + "AND Species = @species AND Country = @country AND Region = @region AND Special = 0"' new MySqlParameter ("@metagame"' (int)metagame)' new MySqlParameter ("@species"' (int)species)' new MySqlParameter ("@country"' (int)country)' new MySqlParameter ("@region"' (int)region)) == 0) {  		// exact match  		QueueSearch (pid' SearchSpecial.None' species' metagame' country' region);  		return true;  	}  	DataTable dt;  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Metagame = @metagame AND Special = 0 ORDER BY Species"' new MySqlParameter ("@metagame"' (int)metagame));  	if (dt.Rows.Count < 649) {  		int prevSpecies = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Species"] != prevSpecies) {  				QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagame' country' region);  				return true;  			}  			prevSpecies++;  		}  	}  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Species = @species AND Special = 0 ORDER BY Metagame"' new MySqlParameter ("@species"' (int)species));  	if (dt.Rows.Count < metaCount) {  		int prevMeta = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Metagame"] != (int)metagames [prevMeta]) {  				QueueSearch (pid' SearchSpecial.None' species' metagames [prevMeta]' country' region);  				return true;  			}  			prevMeta++;  		}  	}  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Special = 0 ORDER BY Metagame' Species");  	if (dt.Rows.Count < 649 * metaCount) {  		int prevSpecies = 1;  		int prevMeta = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Species"] != prevSpecies || (int)row ["Metagame"] != (int)metagames [prevMeta]) {  				QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagames [prevMeta]' country' region);  				return true;  			}  			prevSpecies++;  			if (prevSpecies > 649) {  				prevSpecies = 1;  				prevMeta++;  			}  		}  	}  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The following statement contains a magic number: using (MySqlConnection db = CreateConnection ()) {  	db.Open ();  	if ((long)db.ExecuteScalar ("SELECT Count(*) FROM BattleVideoSearchHistory5 WHERE Metagame = @metagame " + "AND Species = @species AND Country = @country AND Region = @region AND Special = 0"' new MySqlParameter ("@metagame"' (int)metagame)' new MySqlParameter ("@species"' (int)species)' new MySqlParameter ("@country"' (int)country)' new MySqlParameter ("@region"' (int)region)) == 0) {  		// exact match  		QueueSearch (pid' SearchSpecial.None' species' metagame' country' region);  		return true;  	}  	DataTable dt;  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Metagame = @metagame AND Special = 0 ORDER BY Species"' new MySqlParameter ("@metagame"' (int)metagame));  	if (dt.Rows.Count < 649) {  		int prevSpecies = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Species"] != prevSpecies) {  				QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagame' country' region);  				return true;  			}  			prevSpecies++;  		}  	}  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Species = @species AND Special = 0 ORDER BY Metagame"' new MySqlParameter ("@species"' (int)species));  	if (dt.Rows.Count < metaCount) {  		int prevMeta = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Metagame"] != (int)metagames [prevMeta]) {  				QueueSearch (pid' SearchSpecial.None' species' metagames [prevMeta]' country' region);  				return true;  			}  			prevMeta++;  		}  	}  	dt = db.ExecuteDataTable ("SELECT DISTINCT Metagame' Species' Country' Region " + "FROM BattleVideoSearchHistory5 WHERE Special = 0 ORDER BY Metagame' Species");  	if (dt.Rows.Count < 649 * metaCount) {  		int prevSpecies = 1;  		int prevMeta = 1;  		foreach (DataRow row in dt.Rows) {  			if ((int)row ["Species"] != prevSpecies || (int)row ["Metagame"] != (int)metagames [prevMeta]) {  				QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagames [prevMeta]' country' region);  				return true;  			}  			prevSpecies++;  			if (prevSpecies > 649) {  				prevSpecies = 1;  				prevMeta++;  			}  		}  	}  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The following statement contains a magic number: if (dt.Rows.Count < 649) {  	int prevSpecies = 1;  	foreach (DataRow row in dt.Rows) {  		if ((int)row ["Species"] != prevSpecies) {  			QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagame' country' region);  			return true;  		}  		prevSpecies++;  	}  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The following statement contains a magic number: if (dt.Rows.Count < 649 * metaCount) {  	int prevSpecies = 1;  	int prevMeta = 1;  	foreach (DataRow row in dt.Rows) {  		if ((int)row ["Species"] != prevSpecies || (int)row ["Metagame"] != (int)metagames [prevMeta]) {  			QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagames [prevMeta]' country' region);  			return true;  		}  		prevSpecies++;  		if (prevSpecies > 649) {  			prevSpecies = 1;  			prevMeta++;  		}  	}  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The following statement contains a magic number: if (dt.Rows.Count < 649 * metaCount) {  	int prevSpecies = 1;  	int prevMeta = 1;  	foreach (DataRow row in dt.Rows) {  		if ((int)row ["Species"] != prevSpecies || (int)row ["Metagame"] != (int)metagames [prevMeta]) {  			QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagames [prevMeta]' country' region);  			return true;  		}  		prevSpecies++;  		if (prevSpecies > 649) {  			prevSpecies = 1;  			prevMeta++;  		}  	}  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The following statement contains a magic number: foreach (DataRow row in dt.Rows) {  	if ((int)row ["Species"] != prevSpecies || (int)row ["Metagame"] != (int)metagames [prevMeta]) {  		QueueSearch (pid' SearchSpecial.None' (ushort)(prevSpecies)' metagames [prevMeta]' country' region);  		return true;  	}  	prevSpecies++;  	if (prevSpecies > 649) {  		prevSpecies = 1;  		prevMeta++;  	}  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,RunSearch,The following statement contains a magic number: if (prevSpecies > 649) {  	prevSpecies = 1;  	prevMeta++;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (new byte[4]' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (new byte[4]' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (new byte[] {  	0xf1'  	0x55'  	0x00'  	0x00  }' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (BitConverter.GetBytes (pid)' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (new byte[] {  	0x14'  	0x02  }' 0' 2);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (BitConverter.GetBytes ((uint)special)' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (BitConverter.GetBytes (species)' 0' 2);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (BitConverter.GetBytes ((uint)meta)' 0' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearch,The following statement contains a magic number: request.Write (new byte[] {  	0x64'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00'  	0x00  }' 0' 16);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: if (data.Length % 208 != 12)  	throw new InvalidDataException ("Search results blob should be 12 bytes + 208 per result.");  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: if (data.Length % 208 != 12)  	throw new InvalidDataException ("Search results blob should be 12 bytes + 208 per result.");  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: if (count == 0) {  	// Nothing found. Sleep as to not spam the server with lots of empty searches  	Thread.Sleep (1000 * 15);  	return;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: if (count == 0) {  	// Nothing found. Sleep as to not spam the server with lots of empty searches  	Thread.Sleep (1000 * 15);  	return;  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: Thread.Sleep (1000 * 15);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: Thread.Sleep (1000 * 15);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: using (MySqlConnection db = CreateConnection ()) {  	db.Open ();  	for (int x = 0; x < count; x++) {  		ulong videoId = BitConverter.ToUInt64 (data' 208 + x * 208);  		QueueVideoId (db' videoId);  	}  	db.Close ();  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: using (MySqlConnection db = CreateConnection ()) {  	db.Open ();  	for (int x = 0; x < count; x++) {  		ulong videoId = BitConverter.ToUInt64 (data' 208 + x * 208);  		QueueVideoId (db' videoId);  	}  	db.Close ();  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: for (int x = 0; x < count; x++) {  	ulong videoId = BitConverter.ToUInt64 (data' 208 + x * 208);  	QueueVideoId (db' videoId);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,QueueSearchResults,The following statement contains a magic number: for (int x = 0; x < count; x++) {  	ulong videoId = BitConverter.ToUInt64 (data' 208 + x * 208);  	QueueVideoId (db' videoId);  }  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,PutLength,The following statement contains a magic number: Array.Copy (length' data' 4);  
Magic Number,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Conversation,The following statement contains a magic number: using (TcpClient client = new TcpClient ("pkgdsprod.nintendo.co.jp"' 12401)) {  	SslStream sslClient = new SslStream (client.GetStream ()' false' delegate (object s' X509Certificate certificate' X509Chain chain' SslPolicyErrors sslPolicyErrors) {  		return true;  	});  	sslClient.AuthenticateAsClient ("pkgdsprod.nintendo.co.jp");  	sslClient.Write (request' 0' request.Length);  	sslClient.CopyTo (response);  	sslClient.Close ();  }  
Duplicate Code,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The method contains a code clone-set at the following line numbers (starting from the method definition): ((44' 63)' (45' 64)' (46' 65)' (47' 66)' (48' 67)' (49' 68)' (50' 69)' (51' 70)' (52' 71)' (53' 72)' (54' 73)' (55' 74))
Duplicate Code,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The method contains a code clone-set at the following line numbers (starting from the method definition): ((44' 73)' (45' 74))
Duplicate Code,PkmnFoundations,BvCrawler5,D:\newReposJune17\mm201_pkmnFoundations\bvCrawler5\Program.cs,Main,The method contains a code clone-set at the following line numbers (starting from the method definition): ((44' 63)' (46' 65)' (47' 66)' (48' 67)' (49' 68)' (50' 69)' (51' 70)' (52' 71)' (53' 72)' (54' 73)' (55' 74))
