Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The method has 5 parameters. Parameters: pid' species' meta' country' region
Long Statement,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The length of the statement  "            if (data.Length % 240 != 12) throw new InvalidDataException("Search results blob should be 12 bytes + 240 per result."); " is 120.
Long Statement,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueVideoId,The length of the statement  "                long count = (long)tran.ExecuteScalar("SELECT Count(*) FROM BattleVideoCrawlQueue WHERE SerialNumber = @serial_number"' new MySqlParameter("@serial_number"' id)); " is 162.
Long Statement,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueVideoId,The length of the statement  "                tran.ExecuteNonQuery("INSERT INTO BattleVideoCrawlQueue (SerialNumber' `Timestamp`) VALUES (@serial_number' NOW())"' new MySqlParameter("@serial_number"' id)); " is 159.
Long Statement,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,DequeueVideo,The length of the statement  "                object o = tran.ExecuteScalar("SELECT SerialNumber FROM BattleVideoCrawlQueue WHERE Complete = 0 ORDER BY `Timestamp` LIMIT 1"); " is 128.
Long Statement,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,DequeueVideo,The length of the statement  "                tran.ExecuteNonQuery("UPDATE BattleVideoCrawlQueue SET Complete = 1 WHERE SerialNumber = @serial_number"' new MySqlParameter("@serial_number"' id)); " is 148.
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: m_pad = new byte[256];
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: int pid = 207823279;
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Main,The following statement contains a magic number: while (true)              {                  ulong videoId;                  try                  {                      using (MySqlConnection db = CreateConnection())                      {                          db.Open();                          videoId = DequeueVideo(db);                          db.Close();                      }                  }                  catch (Exception ex)                  {                      // haven't touched the server' sleep short                      LogError(ex);                      Thread.Sleep(1000 * 1);                      continue;                  }                    if (videoId == 0)                  {                      try                      {                          if (last_retry_all < DateTime.Now.AddHours(-6))                          {                              last_retry_all = DateTime.Now;                              RetryAll();                              continue;                          }                          if (last_top30 < DateTime.Now.AddMinutes(-60))                          {                              last_top30 = DateTime.Now;                              QueueTop30(pid);                              continue;                          }                          else if (RunSearch(pid))                          {                              continue;                          }                      }                      catch (Exception ex)                      {                          LogError(ex);                          Thread.Sleep(1000 * 30);                          continue;                      }                        Console.WriteLine("Nothing to do. Idling 1 minute.");                      Thread.Sleep(1000 * 60);                      continue;                  }                    String formatted = FormatVideoId(videoId);                  String filename = String.Format("{0}\\{1}.bin"' m_upload_dir' formatted);                    if (File.Exists(filename))                  {                      Console.WriteLine("Skipped video {0}. Already present on disk."' formatted);                      Thread.Sleep(1000 * 1);                      continue;                  }                    byte[] data;                  try                  {                      data = GetBattleVideo(pid' videoId);                        using (FileStream file = File.Create(filename))                      {                          file.Write(data' 0' data.Length);                          file.Close();                      }                  }                  catch (Exception ex)                  {                      LogError(ex);                      Thread.Sleep(1000 * 30);                      continue;                  }                    Console.WriteLine("Successfully saved battle video {0}."' formatted);                  Thread.Sleep(1000 * 30);              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,FormatVideoId,The following statement contains a magic number: String[] split = new String[3];
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,FormatVideoId,The following statement contains a magic number: split[0] = number.Substring(0' number.Length - 10);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,FormatVideoId,The following statement contains a magic number: split[1] = number.Substring(number.Length - 10' 5);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,FormatVideoId,The following statement contains a magic number: split[1] = number.Substring(number.Length - 10' 5);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,FormatVideoId,The following statement contains a magic number: split[2] = number.Substring(number.Length - 5' 5);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,FormatVideoId,The following statement contains a magic number: split[2] = number.Substring(number.Length - 5' 5);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,FormatVideoId,The following statement contains a magic number: split[2] = number.Substring(number.Length - 5' 5);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write(new byte[4]' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write(new byte[4]' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write(new byte[] { 0xda' 0xae' 0x00' 0x00 }' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write(BitConverter.GetBytes(pid)' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write(new byte[] { 0x07' 0x02 }' 0' 2);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write(BitConverter.GetBytes(videoId)' 0' 8);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,GetBattleVideo,The following statement contains a magic number: request.Write(new byte[] { 0x40' 0x01' 0x00' 0x00 }' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,GetBattleVideo,The following statement contains a magic number: if (response.Length < 9) throw new InvalidDataException("Battle video was not retrieved.");
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,RunSearch,The following statement contains a magic number: ushort species = (ushort)rand.Next(0' 493);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,RunSearch,The following statement contains a magic number: using (MySqlConnection db = CreateConnection())              {                  db.Open();                  if ((long)db.ExecuteScalar(                          "SELECT Count(*) FROM BattleVideoSearchHistory WHERE Metagame = @metagame " +                          "AND Species = @species AND Country = @country AND Region = @region"'                          new MySqlParameter("@metagame"' (int)metagame)'                          new MySqlParameter("@species"' (int)species)'                          new MySqlParameter("@country"' (int)country)'                          new MySqlParameter("@region"' (int)region))                      == 0)                  {                      // exact match                      QueueSearch(pid' species' metagame' country' region);                      return true;                  }                    DataTable dt;                  dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory WHERE Metagame = @metagame ORDER BY Species"'                      new MySqlParameter("@metagame"' (int)metagame));                  if (dt.Rows.Count < 493)                  {                      int prevSpecies = 1;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Species"] != prevSpecies)                          {                              QueueSearch(pid' (ushort)(prevSpecies)' metagame' country' region);                              return true;                          }                          prevSpecies++;                      }                  }                    dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory WHERE Species = @species ORDER BY Metagame"'                      new MySqlParameter("@species"' (int)species));                  if (dt.Rows.Count < metaCount)                  {                      int prevMeta = 0;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Metagame"] != (int)metagames[prevMeta])                          {                              QueueSearch(pid' species' metagames[prevMeta]' country' region);                              return true;                          }                          prevMeta++;                      }                  }                    dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory ORDER BY Metagame' Species");                  if (dt.Rows.Count < 493 * metaCount)                  {                      int prevSpecies = 1;                      int prevMeta = 0;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Species"] != prevSpecies || (int)row["Metagame"] != (int)metagames[prevMeta])                          {                              QueueSearch(pid' (ushort)(prevSpecies)' metagames[prevMeta]' country' region);                              return true;                          }                          prevSpecies++;                          if (prevSpecies > 493)                          {                              prevSpecies = 1;                              prevMeta++;                          }                      }                  }              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,RunSearch,The following statement contains a magic number: using (MySqlConnection db = CreateConnection())              {                  db.Open();                  if ((long)db.ExecuteScalar(                          "SELECT Count(*) FROM BattleVideoSearchHistory WHERE Metagame = @metagame " +                          "AND Species = @species AND Country = @country AND Region = @region"'                          new MySqlParameter("@metagame"' (int)metagame)'                          new MySqlParameter("@species"' (int)species)'                          new MySqlParameter("@country"' (int)country)'                          new MySqlParameter("@region"' (int)region))                      == 0)                  {                      // exact match                      QueueSearch(pid' species' metagame' country' region);                      return true;                  }                    DataTable dt;                  dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory WHERE Metagame = @metagame ORDER BY Species"'                      new MySqlParameter("@metagame"' (int)metagame));                  if (dt.Rows.Count < 493)                  {                      int prevSpecies = 1;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Species"] != prevSpecies)                          {                              QueueSearch(pid' (ushort)(prevSpecies)' metagame' country' region);                              return true;                          }                          prevSpecies++;                      }                  }                    dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory WHERE Species = @species ORDER BY Metagame"'                      new MySqlParameter("@species"' (int)species));                  if (dt.Rows.Count < metaCount)                  {                      int prevMeta = 0;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Metagame"] != (int)metagames[prevMeta])                          {                              QueueSearch(pid' species' metagames[prevMeta]' country' region);                              return true;                          }                          prevMeta++;                      }                  }                    dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory ORDER BY Metagame' Species");                  if (dt.Rows.Count < 493 * metaCount)                  {                      int prevSpecies = 1;                      int prevMeta = 0;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Species"] != prevSpecies || (int)row["Metagame"] != (int)metagames[prevMeta])                          {                              QueueSearch(pid' (ushort)(prevSpecies)' metagames[prevMeta]' country' region);                              return true;                          }                          prevSpecies++;                          if (prevSpecies > 493)                          {                              prevSpecies = 1;                              prevMeta++;                          }                      }                  }              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,RunSearch,The following statement contains a magic number: using (MySqlConnection db = CreateConnection())              {                  db.Open();                  if ((long)db.ExecuteScalar(                          "SELECT Count(*) FROM BattleVideoSearchHistory WHERE Metagame = @metagame " +                          "AND Species = @species AND Country = @country AND Region = @region"'                          new MySqlParameter("@metagame"' (int)metagame)'                          new MySqlParameter("@species"' (int)species)'                          new MySqlParameter("@country"' (int)country)'                          new MySqlParameter("@region"' (int)region))                      == 0)                  {                      // exact match                      QueueSearch(pid' species' metagame' country' region);                      return true;                  }                    DataTable dt;                  dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory WHERE Metagame = @metagame ORDER BY Species"'                      new MySqlParameter("@metagame"' (int)metagame));                  if (dt.Rows.Count < 493)                  {                      int prevSpecies = 1;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Species"] != prevSpecies)                          {                              QueueSearch(pid' (ushort)(prevSpecies)' metagame' country' region);                              return true;                          }                          prevSpecies++;                      }                  }                    dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory WHERE Species = @species ORDER BY Metagame"'                      new MySqlParameter("@species"' (int)species));                  if (dt.Rows.Count < metaCount)                  {                      int prevMeta = 0;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Metagame"] != (int)metagames[prevMeta])                          {                              QueueSearch(pid' species' metagames[prevMeta]' country' region);                              return true;                          }                          prevMeta++;                      }                  }                    dt = db.ExecuteDataTable("SELECT DISTINCT Metagame' Species' Country' Region " +                      "FROM BattleVideoSearchHistory ORDER BY Metagame' Species");                  if (dt.Rows.Count < 493 * metaCount)                  {                      int prevSpecies = 1;                      int prevMeta = 0;                      foreach (DataRow row in dt.Rows)                      {                          if ((int)row["Species"] != prevSpecies || (int)row["Metagame"] != (int)metagames[prevMeta])                          {                              QueueSearch(pid' (ushort)(prevSpecies)' metagames[prevMeta]' country' region);                              return true;                          }                          prevSpecies++;                          if (prevSpecies > 493)                          {                              prevSpecies = 1;                              prevMeta++;                          }                      }                  }              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The following statement contains a magic number: request.Write(new byte[4]' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The following statement contains a magic number: request.Write(new byte[4]' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The following statement contains a magic number: request.Write(new byte[] { 0xd9' 0xc4' 0x00' 0x00 }' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The following statement contains a magic number: request.Write(BitConverter.GetBytes(pid)' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The following statement contains a magic number: request.Write(new byte[] { 0x0c' 0x02 }' 0' 2);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The following statement contains a magic number: request.Write(new byte[] {                  0x00' 0x00' 0x00' 0x00              }' 0' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The following statement contains a magic number: request.Write(BitConverter.GetBytes(species)' 0' 2);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearch,The following statement contains a magic number: request.Write(new byte[] {                        0x00' 0x00' 0x00' 0x40' 0x01' 0x00' 0x00'                  0x00' 0x00' 0x00' 0x00' 0xdc' 0xf6' 0x1b' 0x02'                  0x0c' 0x03' 0x00' 0x00              }' 0' 19);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: if (data.Length % 240 != 12) throw new InvalidDataException("Search results blob should be 12 bytes + 240 per result.");
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: if (data.Length % 240 != 12) throw new InvalidDataException("Search results blob should be 12 bytes + 240 per result.");
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: AssertHelper.Assert(data[6] == 0x00);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: AssertHelper.Assert(data[7] == 0x00);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: int count = data.Length / 240;
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: if (count == 0)              {                  // Nothing found. Sleep as to not spam the server with lots of empty searches                  Thread.Sleep(1000 * 15);                  return;              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: if (count == 0)              {                  // Nothing found. Sleep as to not spam the server with lots of empty searches                  Thread.Sleep(1000 * 15);                  return;              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: using (MySqlConnection db = CreateConnection())              {                  db.Open();                  for (int x = 0; x < count; x++)                  {                      ulong videoId = BitConverter.ToUInt64(data' 16 + x * 240);                      QueueVideoId(db' videoId);                  }                  db.Close();              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,QueueSearchResults,The following statement contains a magic number: using (MySqlConnection db = CreateConnection())              {                  db.Open();                  for (int x = 0; x < count; x++)                  {                      ulong videoId = BitConverter.ToUInt64(data' 16 + x * 240);                      QueueVideoId(db' videoId);                  }                  db.Close();              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,PutLength,The following statement contains a magic number: Array.Copy(length' data' 4);
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Conversation,The following statement contains a magic number: using (TcpClient client = new TcpClient("pkgdsprod.nintendo.co.jp"' 12400))              {                  NetworkStream s = client.GetStream();                  s.Write(request' 0' request.Length);                  s.CopyTo(response);                  s.Close();              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Encrypt,The following statement contains a magic number: for (int x = 6; x < data.Length; x++)              {                  data[x] ^= m_pad[(x + padOffset) % 256];              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Encrypt,The following statement contains a magic number: for (int x = 6; x < data.Length; x++)              {                  data[x] ^= m_pad[(x + padOffset) % 256];              }
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Decrypt,The following statement contains a magic number: int padOffset = (Array.IndexOf(m_pad' data[6]) + 250) % 256;
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Decrypt,The following statement contains a magic number: int padOffset = (Array.IndexOf(m_pad' data[6]) + 250) % 256;
Magic Number,PkmnFoundations,BvCrawler4,C:\repos\mm201_pkmnFoundations\bvCrawler4\Program.cs,Decrypt,The following statement contains a magic number: int padOffset = (Array.IndexOf(m_pad' data[6]) + 250) % 256;
