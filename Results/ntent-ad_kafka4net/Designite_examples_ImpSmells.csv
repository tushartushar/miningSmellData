Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,examples,ConsumerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ConsumerExample.cs,ConsumeMessages,The method has 4 parameters.
Long Parameter List,examples,ProducerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ProducerExample.cs,ProduceMessages,The method has 6 parameters.
Long Statement,examples,ConsumerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ConsumerExample.cs,TakeForOneMinute,The length of the statement  "	// Connecting starts when subscribing to OnMessageArrived. If you need to know when connection is actually one' wait for IsConnected task completion " is 148.
Long Statement,examples,ConsumerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ConsumerExample.cs,SubscribeToMultipleTopics,The length of the statement  "	var consumers = wantedTopics.Select (topic => new Consumer (new ConsumerConfiguration (_connectionString' topic' new StartPositionTopicEnd ()))).ToArray (); " is 156.
Long Statement,examples,ConsumerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ConsumerExample.cs,ConsumeMessages,The length of the statement  "	// Connecting starts when subscribing to OnMessageArrived. If you need to know when connection is actually one' wait for IsConnected task completion " is 148.
Long Statement,examples,ProducerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ProducerExample.cs,Produce100RandomMessages,The length of the statement  "	// Technically not mandatory' but good idea to listen to possible errors and act accordingly to your application requirements " is 125.
Long Statement,examples,ProducerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ProducerExample.cs,Produce100RandomMessages,The length of the statement  "	// When message is confirmed by kafka broker to be persisted' OnSuccess is called. Can be used if upstream requires acknowlegement for extra reliability. " is 153.
Long Statement,examples,ProducerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ProducerExample.cs,Produce100RandomMessages,The length of the statement  "		// Message.Key is optional. If not set' then driver will partition messages at random. In this case' for sake of example' partition by 1st character of the string " is 162.
Long Statement,examples,ProducerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ProducerExample.cs,Produce100RandomMessages,The length of the statement  "	// Await for every producer to complete. Note' that calling CloseAsync is safe: all bessages currently in buffers will be awaited until flushed. " is 144.
Long Statement,examples,ProducerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ProducerExample.cs,ProduceMessages,The length of the statement  "	// Technically not mandatory' but good idea to listen to possible errors and act accordingly to your application requirements " is 125.
Long Statement,examples,ProducerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ProducerExample.cs,ProduceMessages,The length of the statement  "	// When message is confirmed by kafka broker to be persisted' OnSuccess is called. Can be used if upstream requires acknowlegement for extra reliability. " is 153.
Magic Number,examples,ProducerExample,D:\newReposJune17\ntent-ad_kafka4net\examples\ProducerExample.cs,ProduceMessages,The following statement contains a magic number: await producer.CloseAsync (TimeSpan.FromSeconds (10));  
