Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ImageCompressor.Job,ImageCompressor,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressor.cs,GetArguments,The length of the statement  "		return string.Format (CultureInfo.CurrentCulture' "/c jpegtran -copy none -optimize -progressive \"{0}\" \"{1}\""' sourceFile' targetFile); " is 139.
Long Statement,ImageCompressor.Job,ImageCompressor,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressor.cs,GetArguments,The length of the statement  "		return string.Format (CultureInfo.CurrentCulture' "/c gifsicle --crop-transparency --no-comments --no-extensions --no-names --optimize=3 --batch \"{0}\" --output=\"{1}\""' sourceFile' targetFile); " is 196.
Long Statement,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The length of the statement  "		cmdLineOptions.ItemsToProcessDirectory = Environment.GetEnvironmentVariable ("AZURE_IMAGE_OPTIMIZER_PATH") ?? @"D:\home\site\wwwroot\"; " is 135.
Long Statement,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The length of the statement  "		cmdLineOptions.OptimizerCacheFile = Path.Combine (cmdLineOptions.ItemsToProcessDirectory' @"app_data\ImageOptimizerHashTable.xml"); " is 131.
Long Statement,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The length of the statement  "		//cmdLineOptions.ItemsToProcessDirectory = @"C:\Users\madsk\Documents\GitHub\AzureJobs\Azurejobs.Web\ImageOptimization\img"; " is 124.
Empty Catch Block,ImageCompressor.Job,ImageCompressor,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressor.cs,RunProcess,The method has an empty catch block.
Empty Catch Block,ImageCompressor.Job,ImageCompressor,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressor.cs,HandleResult,The method has an empty catch block.
Empty Catch Block,ImageCompressor.Job,ImageCompressorManager,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressorManager.cs,ProcessQueue,The method has an empty catch block.
Magic Number,ImageCompressor.Job,ImageCompressor,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressor.cs,RunProcess,The following statement contains a magic number: try {  	using (var process = Process.Start (start)) {  		process.WaitForExit (7000);  		var result = new CompressionResult (sourceFile' targetFile);  		HandleResult (result);  	}  } catch {  }  
Magic Number,ImageCompressor.Job,ImageCompressor,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressor.cs,RunProcess,The following statement contains a magic number: using (var process = Process.Start (start)) {  	process.WaitForExit (7000);  	var result = new CompressionResult (sourceFile' targetFile);  	HandleResult (result);  }  
Magic Number,ImageCompressor.Job,ImageCompressor,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressor.cs,RunProcess,The following statement contains a magic number: process.WaitForExit (7000);  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The following statement contains a magic number: try {  	cmdLineOptions = new CommandLineOptions ();  	cmdLineOptions.ItemsToProcessDirectory = Environment.GetEnvironmentVariable ("AZURE_IMAGE_OPTIMIZER_PATH") ?? @"D:\home\site\wwwroot\";  	cmdLineOptions.FileExtensionsToCompress = new string[] {  		"*.png"'  		"*.jpg"'  		"*.jpeg"'  		"*.gif"  	};  	cmdLineOptions.OptimizerCacheFile = Path.Combine (cmdLineOptions.ItemsToProcessDirectory' @"app_data\ImageOptimizerHashTable.xml");  	//cmdLineOptions.ItemsToProcessDirectory = @"C:\Users\madsk\Documents\GitHub\AzureJobs\Azurejobs.Web\ImageOptimization\img";  	var imgCompressorMgr = new ImageCompressorManager (cmdLineOptions);  	imgCompressorMgr.Run ();  	Timer timer = new Timer (o => imgCompressorMgr.ProcessQueue ());  	timer.Change (1000' 5000);  	while (true) {  		Thread.Sleep (2000);  	}  } catch (Exception ex) {  	System.Diagnostics.Trace.TraceError (ex.ToString ());  	throw ex;  }  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The following statement contains a magic number: try {  	cmdLineOptions = new CommandLineOptions ();  	cmdLineOptions.ItemsToProcessDirectory = Environment.GetEnvironmentVariable ("AZURE_IMAGE_OPTIMIZER_PATH") ?? @"D:\home\site\wwwroot\";  	cmdLineOptions.FileExtensionsToCompress = new string[] {  		"*.png"'  		"*.jpg"'  		"*.jpeg"'  		"*.gif"  	};  	cmdLineOptions.OptimizerCacheFile = Path.Combine (cmdLineOptions.ItemsToProcessDirectory' @"app_data\ImageOptimizerHashTable.xml");  	//cmdLineOptions.ItemsToProcessDirectory = @"C:\Users\madsk\Documents\GitHub\AzureJobs\Azurejobs.Web\ImageOptimization\img";  	var imgCompressorMgr = new ImageCompressorManager (cmdLineOptions);  	imgCompressorMgr.Run ();  	Timer timer = new Timer (o => imgCompressorMgr.ProcessQueue ());  	timer.Change (1000' 5000);  	while (true) {  		Thread.Sleep (2000);  	}  } catch (Exception ex) {  	System.Diagnostics.Trace.TraceError (ex.ToString ());  	throw ex;  }  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The following statement contains a magic number: try {  	cmdLineOptions = new CommandLineOptions ();  	cmdLineOptions.ItemsToProcessDirectory = Environment.GetEnvironmentVariable ("AZURE_IMAGE_OPTIMIZER_PATH") ?? @"D:\home\site\wwwroot\";  	cmdLineOptions.FileExtensionsToCompress = new string[] {  		"*.png"'  		"*.jpg"'  		"*.jpeg"'  		"*.gif"  	};  	cmdLineOptions.OptimizerCacheFile = Path.Combine (cmdLineOptions.ItemsToProcessDirectory' @"app_data\ImageOptimizerHashTable.xml");  	//cmdLineOptions.ItemsToProcessDirectory = @"C:\Users\madsk\Documents\GitHub\AzureJobs\Azurejobs.Web\ImageOptimization\img";  	var imgCompressorMgr = new ImageCompressorManager (cmdLineOptions);  	imgCompressorMgr.Run ();  	Timer timer = new Timer (o => imgCompressorMgr.ProcessQueue ());  	timer.Change (1000' 5000);  	while (true) {  		Thread.Sleep (2000);  	}  } catch (Exception ex) {  	System.Diagnostics.Trace.TraceError (ex.ToString ());  	throw ex;  }  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The following statement contains a magic number: timer.Change (1000' 5000);  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The following statement contains a magic number: timer.Change (1000' 5000);  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The following statement contains a magic number: while (true) {  	Thread.Sleep (2000);  }  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,StartAsAzureJob,The following statement contains a magic number: Thread.Sleep (2000);  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,RunCompressor,The following statement contains a magic number: if (cmdLineOptions.StartListener) {  	Console.WriteLine ("Press Enter to quit at any time.");  	do {  		while (Console.KeyAvailable) {  			System.Threading.Thread.Sleep (1000);  			imgCompressorMgr.ProcessQueue ();  		}  	} while (Console.ReadKey (true).Key != ConsoleKey.Enter);  }  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,RunCompressor,The following statement contains a magic number: do {  	while (Console.KeyAvailable) {  		System.Threading.Thread.Sleep (1000);  		imgCompressorMgr.ProcessQueue ();  	}  } while (Console.ReadKey (true).Key != ConsoleKey.Enter);  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,RunCompressor,The following statement contains a magic number: while (Console.KeyAvailable) {  	System.Threading.Thread.Sleep (1000);  	imgCompressorMgr.ProcessQueue ();  }  
Magic Number,ImageCompressor.Job,Program,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\Program.cs,RunCompressor,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Missing Default,ImageCompressor.Job,ImageCompressor,F:\newReposMay17\ligershark_AzureJobs\ImageCompressor.Job\ImageCompressor.cs,GetArguments,The following switch statement is missing a default case: switch (ext) {  case ".png":  	return string.Format (CultureInfo.CurrentCulture' "/c png.cmd \"{0}\" \"{1}\""' sourceFile' targetFile);  case ".jpg":  case ".jpeg":  	return string.Format (CultureInfo.CurrentCulture' "/c jpegtran -copy none -optimize -progressive \"{0}\" \"{1}\""' sourceFile' targetFile);  case ".gif":  	return string.Format (CultureInfo.CurrentCulture' "/c gifsicle --crop-transparency --no-comments --no-extensions --no-names --optimize=3 --batch \"{0}\" --output=\"{1}\""' sourceFile' targetFile);  }  
