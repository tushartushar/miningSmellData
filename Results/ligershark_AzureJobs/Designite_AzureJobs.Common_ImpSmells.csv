Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AzureJobs.Common,CommandArgsParser,C:\repos\ligershark_AzureJobs\AzureJobs.Common\CommandArgsParser.cs,BuildCommandLineOptions,The length of the statement  "            options.ItemsToProcessDirectory = GetFirstMatchInDictionaryOrEmpty(argsDict' GetAliasesOnProperty("ItemsToProcessDirectory")); " is 126.
Long Statement,AzureJobs.Common,CommandArgsParser,C:\repos\ligershark_AzureJobs\AzureJobs.Common\CommandArgsParser.cs,GetAliasesOnProperty,The length of the statement  "            return new[] { cmdLineConfig.ShortAlias' cmdLineConfig.Alias }.Where(x => x.Length > 0); //ensure non-empty string values from the attribute " is 140.
Long Statement,AzureJobs.Common,CommandLineOptions,C:\repos\ligershark_AzureJobs\AzureJobs.Common\CommandLineOptions.cs,ListAllCommandLineArgs,The length of the statement  "                var cmdLineArg = prop.GetCustomAttributes(typeof(CommandLineArgAttribute)).OfType<CommandLineArgAttribute>().FirstOrDefault(); " is 126.
Long Statement,AzureJobs.Common,CompressorBase,C:\repos\ligershark_AzureJobs\AzureJobs.Common\CompressorBase.cs,QueueExistingFiles,The length of the statement  "                foreach (string file in Directory.EnumerateFiles(_cmdLineOptions.ItemsToProcessDirectory' filter' SearchOption.AllDirectories)) { " is 129.
Long Statement,AzureJobs.Common,CompressorBase,C:\repos\ligershark_AzureJobs\AzureJobs.Common\CompressorBase.cs,StartListener,The length of the statement  "                w.NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite | NotifyFilters.CreationTime | NotifyFilters.FileName; " is 122.
Long Statement,AzureJobs.Common,LogItem,C:\repos\ligershark_AzureJobs\AzureJobs.Common\LogItem.cs,ToString,The length of the statement  "            return string.Join("'"' helper.EscapeAll(this.OnDate' this.FileName' this.OriginalSizeBytes' this.NewSizeBytes' this.CalcPercentageSavings())); " is 143.
Empty Catch Block,AzureJobs.Common,FileHashStore,C:\repos\ligershark_AzureJobs\AzureJobs.Common\FileHashStore.cs,Load,The method has an empty catch block.
Empty Catch Block,AzureJobs.Common,FileHashStore,C:\repos\ligershark_AzureJobs\AzureJobs.Common\FileHashStore.cs,Save,The method has an empty catch block.
Magic Number,AzureJobs.Common,FileHashStore,C:\repos\ligershark_AzureJobs\AzureJobs.Common\FileHashStore.cs,Load,The following statement contains a magic number: try {                  // If the file hasn't been created yet' just ignore it.                  if (!File.Exists(_filePath))                      return;                    foreach (string line in File.ReadAllLines(_filePath)) {                      string[] args = line.Split('|');                        if (args.Length == 2 && !_store.ContainsKey(args[0]))                          _store.Add(args[0]' args[1]);                  }              }              catch {                  // Do nothing. The file format has changed and will be overwritten next time Save() is called.              }
Magic Number,AzureJobs.Common,LogItem,C:\repos\ligershark_AzureJobs\AzureJobs.Common\LogItem.cs,CalcPercentageSavings,The following statement contains a magic number: return (Math.Round(100 - (savings * 100)' 1)).ToString();
Magic Number,AzureJobs.Common,LogItem,C:\repos\ligershark_AzureJobs\AzureJobs.Common\LogItem.cs,CalcPercentageSavings,The following statement contains a magic number: return (Math.Round(100 - (savings * 100)' 1)).ToString();
