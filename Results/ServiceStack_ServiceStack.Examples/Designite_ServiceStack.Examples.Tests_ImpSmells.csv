Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ServiceStack.Examples.Tests,GetUsersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetUsersTests.cs,GetUsers_Test,The following statement contains a magic number: var request = new GetUsers                  {                      UserIds = new ArrayOfLong(1' 2)'                      UserNames = new ArrayOfString("User3"' "User4")                  };
Magic Number,ServiceStack.Examples.Tests,GetUsersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetUsersTests.cs,GetUsers_Test,The following statement contains a magic number: db.Insert(new User { Id = 2' UserName = "User2" });
Magic Number,ServiceStack.Examples.Tests,GetUsersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetUsersTests.cs,GetUsers_Test,The following statement contains a magic number: db.Insert(new User { Id = 3' UserName = "User3" });
Magic Number,ServiceStack.Examples.Tests,GetUsersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetUsersTests.cs,GetUsers_Test,The following statement contains a magic number: db.Insert(new User { Id = 4' UserName = "User4" });
Magic Number,ServiceStack.Examples.Tests,GetUsersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetUsersTests.cs,GetUsers_Test,The following statement contains a magic number: Assert.That(response.Users.Count' Is.EqualTo(4));
Magic Number,ServiceStack.Examples.Tests,LoggerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\LoggerTests.cs,Create_test_data,The following statement contains a magic number: var loggers = new ArrayOfLogger  			{  				new Logger  				{  					Id = 786'  					Devices = new ArrayOfDevice  					{  						new Device                        	{                        		Id = 5955'  							Type = "Panel"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{new Channel("Temperature"' "58")}'  				           		{new Channel("Status"' "On")}'  				           	}                        	}'  						new Device                        	{                        		Id = 5956'  							Type = "Tank"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{ new Channel("Volume"' "10035") }'  				           		{ new Channel("Status"' "Full") }'  				           	}                        	}'  					}  				}  			};
Magic Number,ServiceStack.Examples.Tests,LoggerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\LoggerTests.cs,Create_test_data,The following statement contains a magic number: var loggers = new ArrayOfLogger  			{  				new Logger  				{  					Id = 786'  					Devices = new ArrayOfDevice  					{  						new Device                        	{                        		Id = 5955'  							Type = "Panel"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{new Channel("Temperature"' "58")}'  				           		{new Channel("Status"' "On")}'  				           	}                        	}'  						new Device                        	{                        		Id = 5956'  							Type = "Tank"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{ new Channel("Volume"' "10035") }'  				           		{ new Channel("Status"' "Full") }'  				           	}                        	}'  					}  				}  			};
Magic Number,ServiceStack.Examples.Tests,LoggerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\LoggerTests.cs,Create_test_data,The following statement contains a magic number: var loggers = new ArrayOfLogger  			{  				new Logger  				{  					Id = 786'  					Devices = new ArrayOfDevice  					{  						new Device                        	{                        		Id = 5955'  							Type = "Panel"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{new Channel("Temperature"' "58")}'  				           		{new Channel("Status"' "On")}'  				           	}                        	}'  						new Device                        	{                        		Id = 5956'  							Type = "Tank"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{ new Channel("Volume"' "10035") }'  				           		{ new Channel("Status"' "Full") }'  				           	}                        	}'  					}  				}  			};
Magic Number,ServiceStack.Examples.Tests,LoggerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\LoggerTests.cs,Create_test_data,The following statement contains a magic number: var loggers = new ArrayOfLogger  			{  				new Logger  				{  					Id = 786'  					Devices = new ArrayOfDevice  					{  						new Device                        	{                        		Id = 5955'  							Type = "Panel"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{new Channel("Temperature"' "58")}'  				           		{new Channel("Status"' "On")}'  				           	}                        	}'  						new Device                        	{                        		Id = 5956'  							Type = "Tank"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{ new Channel("Volume"' "10035") }'  				           		{ new Channel("Status"' "Full") }'  				           	}                        	}'  					}  				}  			};
Magic Number,ServiceStack.Examples.Tests,LoggerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\LoggerTests.cs,Create_test_data,The following statement contains a magic number: var loggers = new ArrayOfLogger  			{  				new Logger  				{  					Id = 786'  					Devices = new ArrayOfDevice  					{  						new Device                        	{                        		Id = 5955'  							Type = "Panel"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{new Channel("Temperature"' "58")}'  				           		{new Channel("Status"' "On")}'  				           	}                        	}'  						new Device                        	{                        		Id = 5956'  							Type = "Tank"'  							TimeStamp = 1199303309'  							Channels = new ArrayOfChannel  				           	{  				           		{ new Channel("Volume"' "10035") }'  				           		{ new Channel("Status"' "Full") }'  				           	}                        	}'  					}  				}  			};
Magic Number,ServiceStack.Examples.Tests,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new Movie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.Examples.Tests,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new Movie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.Examples.Tests,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new Movie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.Examples.Tests,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new Movie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.Examples.Tests,GetFibonacciNumbersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFibonacciNumbersTests.cs,GetFibonacciNumbers_Test,The following statement contains a magic number: var request = new GetFibonacciNumbers { Take = 5 };
Magic Number,ServiceStack.Examples.Tests,GetFibonacciNumbersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFibonacciNumbersTests.cs,GetFibonacciNumbers_Test,The following statement contains a magic number: var handler = new GetFibonacciNumbersService(  				new ExampleConfig { DefaultFibonacciLimit = 10 });
Magic Number,ServiceStack.Examples.Tests,GetFibonacciNumbersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFibonacciNumbersTests.cs,GetFibonacciNumbers_Test,The following statement contains a magic number: Assert.That(response.Results' Is.EqualTo(new[] { 1' 2' 3' 5' 8 }));
Magic Number,ServiceStack.Examples.Tests,GetFibonacciNumbersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFibonacciNumbersTests.cs,GetFibonacciNumbers_Test,The following statement contains a magic number: Assert.That(response.Results' Is.EqualTo(new[] { 1' 2' 3' 5' 8 }));
Magic Number,ServiceStack.Examples.Tests,GetFibonacciNumbersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFibonacciNumbersTests.cs,GetFibonacciNumbers_Test,The following statement contains a magic number: Assert.That(response.Results' Is.EqualTo(new[] { 1' 2' 3' 5' 8 }));
Magic Number,ServiceStack.Examples.Tests,GetFibonacciNumbersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFibonacciNumbersTests.cs,GetFibonacciNumbers_Test,The following statement contains a magic number: Assert.That(response.Results' Is.EqualTo(new[] { 1' 2' 3' 5' 8 }));
Magic Number,ServiceStack.Examples.Tests,GetFactorialTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFactorialTests.cs,GetFactorial_Test,The following statement contains a magic number: var request = new GetFactorial { ForNumber = 4 };
Magic Number,ServiceStack.Examples.Tests,GetFactorialTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFactorialTests.cs,GetFactorial_Test,The following statement contains a magic number: Assert.That(response.Result' Is.EqualTo(4 * 3 * 2 * 1));
Magic Number,ServiceStack.Examples.Tests,GetFactorialTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFactorialTests.cs,GetFactorial_Test,The following statement contains a magic number: Assert.That(response.Result' Is.EqualTo(4 * 3 * 2 * 1));
Magic Number,ServiceStack.Examples.Tests,GetFactorialTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests\GetFactorialTests.cs,GetFactorial_Test,The following statement contains a magic number: Assert.That(response.Result' Is.EqualTo(4 * 3 * 2 * 1));
