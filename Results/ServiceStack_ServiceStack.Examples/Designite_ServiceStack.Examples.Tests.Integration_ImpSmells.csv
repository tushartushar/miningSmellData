Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFactorial,The following statement contains a magic number: var request = new GetFactorial { ForNumber = 4 };
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFactorial,The following statement contains a magic number: SendToEachEndpoint<GetFactorialResponse>(request' response =>  				Assert.That(response.Result' Is.EqualTo(24)));
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFibonacciNumbers,The following statement contains a magic number: var request = new GetFibonacciNumbers { Skip = 3' Take = 5 };
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFibonacciNumbers,The following statement contains a magic number: var request = new GetFibonacciNumbers { Skip = 3' Take = 5 };
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFibonacciNumbers,The following statement contains a magic number: SendToEachEndpoint<GetFibonacciNumbersResponse>(request' response =>  				Assert.That(response.Results' Is.EquivalentTo(new List<long> { 5' 8' 13' 21' 34 })));
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFibonacciNumbers,The following statement contains a magic number: SendToEachEndpoint<GetFibonacciNumbersResponse>(request' response =>  				Assert.That(response.Results' Is.EquivalentTo(new List<long> { 5' 8' 13' 21' 34 })));
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFibonacciNumbers,The following statement contains a magic number: SendToEachEndpoint<GetFibonacciNumbersResponse>(request' response =>  				Assert.That(response.Results' Is.EquivalentTo(new List<long> { 5' 8' 13' 21' 34 })));
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFibonacciNumbers,The following statement contains a magic number: SendToEachEndpoint<GetFibonacciNumbersResponse>(request' response =>  				Assert.That(response.Results' Is.EquivalentTo(new List<long> { 5' 8' 13' 21' 34 })));
Magic Number,ServiceStack.Examples.Tests.Integration,IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\IntegrationTests.cs,Can_GetFibonacciNumbers,The following statement contains a magic number: SendToEachEndpoint<GetFibonacciNumbersResponse>(request' response =>  				Assert.That(response.Results' Is.EquivalentTo(new List<long> { 5' 8' 13' 21' 34 })));
Magic Number,ServiceStack.Examples.Tests.Integration,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new Movie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.Examples.Tests.Integration,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new Movie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.Examples.Tests.Integration,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new Movie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.Examples.Tests.Integration,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Examples\tests\ServiceStack.Examples.Tests.Integration\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new Movie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
