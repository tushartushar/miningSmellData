Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetCountryPostalcodes,The length of the statement  "            var countries = new Regex("href=\"([A-Z]{2}.zip)"' RegexOptions.Compiled | RegexOptions.CultureInvariant | RegexOptions.IgnoreCase)" is 131.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetCountryPostalcodes,The length of the statement  "                .Select(m => new GeoFile { Filename = m.Groups[1].Value' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadPostalcodes(fn).Count(); }) });" is 152.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetCountryPostalcodes,The length of the statement  "                new GeoFile { Filename = "allCountries.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadPostalcodes(fn).Count(); }) }" is 138.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "admin1CodesASCII.txt"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadAdmin1Codes(fn).Count(); }) }'" is 143.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "admin2Codes.txt"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadAdmin2Codes(fn).Count(); }) }'" is 138.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "allCountries.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadExtendedGeoNames(fn).Count(); }) }'" is 144.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "alternateNames.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadAlternateNames(fn).Count(); }) }'" is 144.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "alternateNamesV2.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadAlternateNamesV2(fn).Count(); }) }'" is 148.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "cities1000.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadExtendedGeoNames(fn).Count(); }) }'" is 142.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "cities15000.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadExtendedGeoNames(fn).Count(); }) }'" is 143.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "cities5000.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadExtendedGeoNames(fn).Count(); }) }'" is 142.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "countryInfo.txt"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadCountryInfo(fn).Count(); }) }'" is 138.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "hierarchy.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadHierarchy(fn).Count(); }) }'" is 134.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "iso-languagecodes.txt"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadISOLanguageCodes(fn).Count(); }) }'" is 149.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "no-country.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadExtendedGeoNames(fn).Count(); }) }'" is 142.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "timeZones.txt"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadTimeZones(fn).Count(); }) }'" is 134.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetDumps,The length of the statement  "                new GeoFile { Filename = "userTags.zip"' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadUserTags(fn).Count(); }) }'" is 132.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetCountryDumps,The length of the statement  "            var countries = new Regex("href=\"([A-Z]{2}.zip)"' RegexOptions.Compiled | RegexOptions.CultureInvariant | RegexOptions.IgnoreCase)" is 131.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetCountryDumps,The length of the statement  "                .Select(m => new GeoFile { Filename = m.Groups[1].Value' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadExtendedGeoNames(fn).Count(); }) });" is 157.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetCountryDumps,The length of the statement  "            var featurecodes = new Regex("href=\"(featureCodes_[A-Z]{2}.txt)"' RegexOptions.Compiled | RegexOptions.CultureInvariant | RegexOptions.IgnoreCase)" is 147.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,GetCountryDumps,The length of the statement  "                .Select(m => new GeoFile { Filename = m.Groups[1].Value' Test = (f) => ExecuteTest(f' (fn) => { return GeoFileReader.ReadFeatureCodes(fn).Count(); }) });" is 153.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,DumpASCIILies,The length of the statement  "                var nonasciifilter = new Regex("[^\x20-\x7F]"' RegexOptions.Compiled | RegexOptions.CultureInvariant | RegexOptions.IgnoreCase);" is 128.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,DumpASCIILies,The length of the statement  "                var geofilefilter = new Regex("^[A-Z]{2}.txt$"' RegexOptions.Compiled | RegexOptions.CultureInvariant | RegexOptions.IgnoreCase);" is 129.
Long Statement,DumpTester,Program,C:\research\architectureSmells\repos\RobThree_NGeoNames\DumpTester\Program.cs,DumpASCIILies,The length of the statement  "                lw.WriteLine("The following files contain entries that claim to contain ASCII only but contain non-ASCII data anyways:");" is 121.
