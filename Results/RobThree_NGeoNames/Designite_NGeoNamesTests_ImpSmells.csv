Implementation smell,Namespace,Class,File,Method,Description
Long Method,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The method has 395 lines of code.
Long Parameter List,NGeoNamesTests,CustomParser,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\CustomParser.cs,CustomParser,The method has 5 parameters. Parameters: expectedfields' skiplines' fieldseparators' encoding' hascomments
Long Parameter List,NGeoNamesTests,FileUtil,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\FileUtil.cs,EnsureFilesAreFunctionallyEqual,The method has 7 parameters. Parameters: src' dst' expectedfields' skiplines' fieldseparators' encoding' hascomments
Long Parameter List,NGeoNamesTests,GenericParser,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\FileUtil.cs,GenericParser,The method has 5 parameters. Parameters: expectedfields' skiplines' fieldseparators' encoding' hascomments
Long Statement,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,CustomComposer_ComposesFileCorrectly,The length of the statement  "            new GeoFileWriter().WriteRecords(dst' new GeoFileReader().ReadRecords(src' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true))' new CustomComposer(Encoding.UTF7' '☃'));" is 177.
Long Statement,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The length of the statement  "            var a = new GeoName { Latitude = 36.1172' Longitude = -86.6672 };   //Nashville International Airport (BNA) in Nashville' TN' USA: N 36°7.2'' W 86°40.2'" is 152.
Long Statement,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The length of the statement  "            var b = new GeoName { Latitude = 33.9344' Longitude = -118.4 };     //Los Angeles International Airport (LAX) in Los Angeles' CA' USA: N 33°56.4'' W 118°24.0'" is 158.
Long Statement,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The length of the statement  "            //We use a slightly different radius of the earth than the wikipedia example uses (6372.8 in wikipedia vs. 6371 which is most commonly used)" is 140.
Long Statement,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The length of the statement  "            Assert.AreEqual(actual' x1' actual * .0005);     // All we want is to be within .05% of the "actual" (according to wikipedia) value" is 131.
Long Statement,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The length of the statement  "            Assert.AreEqual(actual' x2' actual * .0005);     // All we want is to be within .05% of the "actual" (according to wikipedia) value" is 131.
Long Statement,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WrapsAroundLongitudeCorrectly,The length of the statement  "            var actual = 100300;   // +/- a bit; checked with http://www.freemaptools.com/measure-distance.htm and (classic) google maps measure tool" is 137.
Long Statement,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WrapsAroundLongitudeCorrectly,The length of the statement  "            Assert.AreEqual(actual' result' actual * .0005);    // All we want is to be within .05% of the "actual" (according to our own measurements) value" is 145.
Long Statement,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ParsesFileCorrectly1,The length of the statement  "            var target = gf.ReadRecords(@"testdata\test_geofilereadercustom1.txt"' new CustomParser(9' 1' new[] { ''' }' Encoding.UTF8' true)).ToArray();" is 141.
Long Statement,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ParsesFileCorrectly2,The length of the statement  "            var target = gf.ReadRecords(@"testdata\test_geofilereadercustom2.txt"' new CustomParser(4' 0' new[] { '!' }' Encoding.UTF8' false)).ToArray();" is 142.
Long Statement,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ThrowsOnFailureWhenAutodetectingFileType,The length of the statement  "            var target = gf.ReadRecords(@"testdata\invalid.ext"' new CustomParser(5' 0' new[] { '\t' }' Encoding.UTF8' false)).ToArray();" is 125.
Long Statement,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_DoesNotThrowOnInvalidExtensionButSpecifiedFileType,The length of the statement  "            var target = gf.ReadRecords(@"testdata\invalid.ext"' FileType.Plain' new CustomParser(5' 0' new[] { '\t' }' Encoding.UTF8' false)).ToArray();" is 141.
Long Statement,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ThrowsOnUnknownSpecifiedFileType,The length of the statement  "            var target = gf.ReadRecords(@"testdata\invalid.ext"' (FileType)999' new CustomParser(5' 0' new[] { '\t' }' Encoding.UTF8' false)).ToArray();" is 140.
Long Statement,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ComposesFileCorrectly1,The length of the statement  "            new GeoFileWriter().WriteRecords(@"testdata\test_geofilewritercustom1.txt"' testvalues' new CustomComposer(Encoding.UTF8' '''));" is 128.
Long Statement,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ComposesFileCorrectly1,The length of the statement  "            var target = gf.ReadRecords(@"testdata\test_geofilewritercustom1.txt"' new CustomParser(3' 0' new[] { ''' }' Encoding.UTF8' false)).ToArray();" is 142.
Long Statement,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ComposesFileCorrectly2,The length of the statement  "            new GeoFileWriter().WriteRecords(@"testdata\test_geofilewritercustom2.txt"' testvalues' new CustomComposer(Encoding.UTF7' '!'));" is 128.
Long Statement,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ComposesFileCorrectly2,The length of the statement  "            var target = gf.ReadRecords(@"testdata\test_geofilewritercustom2.txt"' new CustomParser(3' 0' new[] { '!' }' Encoding.UTF7' false)).ToArray();" is 142.
Long Statement,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_DoesNotThrowOnInvalidExtensionButSpecifiedFileType,The length of the statement  "            new GeoFileWriter().WriteRecords(@"testdata\invalid.out.ext"' testvalues' new CustomComposer(Encoding.UTF8' '\t')' FileType.Plain);" is 131.
Long Statement,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ThrowsOnUnknownSpecifiedFileType,The length of the statement  "            new GeoFileWriter().WriteRecords(@"testdata\invalid.out.ext"' testvalues' new CustomComposer(Encoding.UTF8' '\t')' (FileType)999);" is 130.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The length of the statement  "            Assert.IsNull(target[1].ISOLanguage);           //Should be null when a type is specified (e.g. length of ISO code field > 3)" is 125.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CountryInfoParser_ParsesFileCorrectly,The length of the statement  "            Assert.AreEqual("+501"' target[0].Phone);       //Intl. dialingcodes should be prefixed with a + even though they're not in the file" is 132.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CountryInfoParser_ParsesFileCorrectly,The length of the statement  "            Assert.AreEqual("+1"' target[1].Phone);       //Intl. dialingcodes should be prefixed with a + even though they're not in the file" is 130.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CountryInfoParser_ParsesFileCorrectly,The length of the statement  "            Assert.AreEqual(@"^(([A-Z]\d{2}[A-Z]{2})|([A-Z]\d{3}[A-Z]{2})|([A-Z]{2}\d{2}[A-Z]{2})|([A-Z]{2}\d{3}[A-Z]{2})|([A-Z]\d[A-Z]\d[A-Z]{2})|([A-Z]{2}\d[A-Z]\d[A-Z]{2})|(GIR0AA))$"' target[1].PostalCodeRegex);" is 203.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The length of the statement  "            CollectionAssert.AreEqual(new[] { "DZ"' "LY"' "MR"' "TN"' "EG"' "MA"' "EH"' "ML"' "NE"' "TD"' "SD" }' target[2].AlternateCountryCodes);" is 135.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FeatureCodeParser_ParsesFileCorrectly,The length of the statement  "            Assert.AreEqual("a primary administrative division of a country' such as a state in the United States"' target[0].Description);" is 127.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FeatureCodeParser_ParsesFileCorrectly,The length of the statement  "            ///When no dot in the featurecode is found' the class property should contain the entire string and code property should be null" is 128.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CustomParser_IsUsedCorrectly,The length of the statement  "            var target = new GeoFileReader().ReadRecords(@"testdata\test_custom.txt"' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true)).ToArray();" is 145.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FileReader_HandlesEmptyFilesCorrectly,The length of the statement  "            var target1 = new GeoFileReader().ReadRecords(@"testdata\emptyfile.txt"' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true)).ToArray();" is 144.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FileReader_CanReadBuiltInContinentsCorrectly,The length of the statement  "            CollectionAssert.AreEqual(target.OrderBy(c => c.Code).Select(c => c.Code).ToArray()' new[] { "AF"' "AN"' "AS"' "EU"' "NA"' "OC"' "SA" });" is 137.
Long Statement,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FileReader_CanReadBuiltInFeatureClassesCorrectly,The length of the statement  "            CollectionAssert.AreEqual(target.OrderBy(c => c.Class).Select(c => c.Class).ToArray()' new[] { "A"' "H"' "L"' "P"' "R"' "S"' "T"' "U"' "V" });" is 142.
Long Statement,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The length of the statement  "            var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };" is 244.
Long Statement,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The length of the statement  "            var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };" is 244.
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,Admin1CodesComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 4' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,Admin2CodesComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 4' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,AlternateNamesComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 8' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,AlternateNamesComposerV2_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 10' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,ContinentComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 3' 0' new[] { '\t' }' Encoding.UTF8' true);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,CountryInfoComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 19' 0' new[] { '\t' }' Encoding.UTF8' true);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,ExtendedGeoNamesComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 19' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,FeatureClassComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 2' 0' new[] { '\t' }' Encoding.UTF8' true);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,FeatureCodeComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 3' 0' new[] { '\t' }' Encoding.UTF8' true);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,GeoNamesComposerSimple_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 4' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,GeoNamesComposerExtended_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 19' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,HierarchyComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 3' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,ISOLanguageCodeComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 4' 1' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,TimeZoneComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 5' 1' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,UserTagComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 2' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,PostalcodeComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 12' 0' new[] { '\t' }' Encoding.UTF8' false);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,CustomComposer_ComposesFileCorrectly,The following statement contains a magic number: new GeoFileWriter().WriteRecords(dst' new GeoFileReader().ReadRecords(src' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true))' new CustomComposer(Encoding.UTF7' '☃'));
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,CustomComposer_ComposesFileCorrectly,The following statement contains a magic number: new GeoFileWriter().WriteRecords(dst' new GeoFileReader().ReadRecords(src' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true))' new CustomComposer(Encoding.UTF7' '☃'));
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,CustomComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 19' 5' new[] { '☃' }' Encoding.UTF7' true);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,CustomComposer_ComposesFileCorrectly,The following statement contains a magic number: FileUtil.EnsureFilesAreFunctionallyEqual(src' dst' 19' 5' new[] { '☃' }' Encoding.UTF7' true);
Magic Number,NGeoNamesTests,ComposerTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ComposerTests.cs,Composer_HandlesGZippedFilesCorrectly,The following statement contains a magic number: Assert.AreEqual(7' GeoFileReader.ReadExtendedGeoNames(dst).Count());
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The following statement contains a magic number: var a = new GeoName { Latitude = 36.1172' Longitude = -86.6672 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The following statement contains a magic number: var a = new GeoName { Latitude = 36.1172' Longitude = -86.6672 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The following statement contains a magic number: var b = new GeoName { Latitude = 33.9344' Longitude = -118.4 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The following statement contains a magic number: var b = new GeoName { Latitude = 33.9344' Longitude = -118.4 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The following statement contains a magic number: var actual = 2887260;
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The following statement contains a magic number: Assert.AreEqual(actual' x1' actual * .0005);
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_ReturnsCorrectResult,The following statement contains a magic number: Assert.AreEqual(actual' x2' actual * .0005);
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WrapsAroundLongitudeCorrectly,The following statement contains a magic number: var a = new GeoName { Latitude = 51.377020' Longitude = 179.431888' Name = "Amchitka Island" };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WrapsAroundLongitudeCorrectly,The following statement contains a magic number: var a = new GeoName { Latitude = 51.377020' Longitude = 179.431888' Name = "Amchitka Island" };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WrapsAroundLongitudeCorrectly,The following statement contains a magic number: var b = new GeoName { Latitude = 51.272322' Longitude = -179.134396' Name = "Amatignak Island" };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WrapsAroundLongitudeCorrectly,The following statement contains a magic number: var b = new GeoName { Latitude = 51.272322' Longitude = -179.134396' Name = "Amatignak Island" };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WrapsAroundLongitudeCorrectly,The following statement contains a magic number: var actual = 100300;
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WrapsAroundLongitudeCorrectly,The following statement contains a magic number: Assert.AreEqual(actual' result' actual * .0005);
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WorksOnAllIGeoLocationObjects,The following statement contains a magic number: var gn = new GeoName { Latitude = 50.0333' Longitude = 16.2833 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WorksOnAllIGeoLocationObjects,The following statement contains a magic number: var gn = new GeoName { Latitude = 50.0333' Longitude = 16.2833 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WorksOnAllIGeoLocationObjects,The following statement contains a magic number: var en = new ExtendedGeoName { Latitude = 55.5075' Longitude = 31.85 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WorksOnAllIGeoLocationObjects,The following statement contains a magic number: var en = new ExtendedGeoName { Latitude = 55.5075' Longitude = 31.85 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WorksOnAllIGeoLocationObjects,The following statement contains a magic number: var pc = new Postalcode { Latitude = 51.5558' Longitude = 5.6903 };
Magic Number,NGeoNamesTests,EntitiesTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\EntitiesTests.cs,DistanceTo_WorksOnAllIGeoLocationObjects,The following statement contains a magic number: var pc = new Postalcode { Latitude = 51.5558' Longitude = 5.6903 };
Magic Number,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ParsesFileCorrectly1,The following statement contains a magic number: var target = gf.ReadRecords(@"testdata\test_geofilereadercustom1.txt"' new CustomParser(9' 1' new[] { ''' }' Encoding.UTF8' true)).ToArray();
Magic Number,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ParsesFileCorrectly1,The following statement contains a magic number: Assert.AreEqual(2' target.Length);
Magic Number,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ParsesFileCorrectly2,The following statement contains a magic number: var target = gf.ReadRecords(@"testdata\test_geofilereadercustom2.txt"' new CustomParser(4' 0' new[] { '!' }' Encoding.UTF8' false)).ToArray();
Magic Number,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ParsesFileCorrectly2,The following statement contains a magic number: Assert.AreEqual(3' target.Length);
Magic Number,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ThrowsOnFailureWhenAutodetectingFileType,The following statement contains a magic number: var target = gf.ReadRecords(@"testdata\invalid.ext"' new CustomParser(5' 0' new[] { '\t' }' Encoding.UTF8' false)).ToArray();
Magic Number,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_DoesNotThrowOnInvalidExtensionButSpecifiedFileType,The following statement contains a magic number: var target = gf.ReadRecords(@"testdata\invalid.ext"' FileType.Plain' new CustomParser(5' 0' new[] { '\t' }' Encoding.UTF8' false)).ToArray();
Magic Number,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ThrowsOnUnknownSpecifiedFileType,The following statement contains a magic number: var target = gf.ReadRecords(@"testdata\invalid.ext"' (FileType)999' new CustomParser(5' 0' new[] { '\t' }' Encoding.UTF8' false)).ToArray();
Magic Number,NGeoNamesTests,GeoFileReaderTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileReaderTests.cs,GeoFileReader_ThrowsOnUnknownSpecifiedFileType,The following statement contains a magic number: var target = gf.ReadRecords(@"testdata\invalid.ext"' (FileType)999' new CustomParser(5' 0' new[] { '\t' }' Encoding.UTF8' false)).ToArray();
Magic Number,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ComposesFileCorrectly1,The following statement contains a magic number: var target = gf.ReadRecords(@"testdata\test_geofilewritercustom1.txt"' new CustomParser(3' 0' new[] { ''' }' Encoding.UTF8' false)).ToArray();
Magic Number,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ComposesFileCorrectly1,The following statement contains a magic number: Assert.AreEqual(3' target.Length);
Magic Number,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ComposesFileCorrectly2,The following statement contains a magic number: var target = gf.ReadRecords(@"testdata\test_geofilewritercustom2.txt"' new CustomParser(3' 0' new[] { '!' }' Encoding.UTF7' false)).ToArray();
Magic Number,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ComposesFileCorrectly2,The following statement contains a magic number: Assert.AreEqual(3' target.Length);
Magic Number,NGeoNamesTests,GeoFileWriterTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoFileWriterTests.cs,GeoFileWriter_ThrowsOnUnknownSpecifiedFileType,The following statement contains a magic number: new GeoFileWriter().WriteRecords(@"testdata\invalid.out.ext"' testvalues' new CustomComposer(Encoding.UTF8' '\t')' (FileType)999);
Magic Number,NGeoNamesTests,GeoUtilTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoUtilTests.cs,GeoUtil_ConvertsMilesToMetersCorrecly,The following statement contains a magic number: var target = GeoUtil.MilesToMeters(200);
Magic Number,NGeoNamesTests,GeoUtilTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoUtilTests.cs,GeoUtil_ConvertsMilesToMetersCorrecly,The following statement contains a magic number: Assert.AreEqual(321868.8' target' float.Epsilon);
Magic Number,NGeoNamesTests,GeoUtilTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoUtilTests.cs,GeoUtil_ConvertsMetersToMilesCorrecly,The following statement contains a magic number: var target = GeoUtil.MetersToMiles(500);
Magic Number,NGeoNamesTests,GeoUtilTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoUtilTests.cs,GeoUtil_ConvertsMetersToMilesCorrecly,The following statement contains a magic number: Assert.AreEqual(0.310685596118667' target' float.Epsilon);
Magic Number,NGeoNamesTests,GeoUtilTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoUtilTests.cs,GeoUtil_ConvertsYardsToMetersCorrecly,The following statement contains a magic number: var target = GeoUtil.YardsToMeters(200);
Magic Number,NGeoNamesTests,GeoUtilTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoUtilTests.cs,GeoUtil_ConvertsYardsToMetersCorrecly,The following statement contains a magic number: Assert.AreEqual(182.88' target' float.Epsilon);
Magic Number,NGeoNamesTests,GeoUtilTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoUtilTests.cs,GeoUtil_ConvertsMetersToYardsCorrecly,The following statement contains a magic number: var target = GeoUtil.MetersToYards(500);
Magic Number,NGeoNamesTests,GeoUtilTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\GeoUtilTests.cs,GeoUtil_ConvertsMetersToYardsCorrecly,The following statement contains a magic number: Assert.AreEqual(546.80664916885394' target' float.Epsilon);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(4' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(2386161' target[0].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("TR.80"' target[2].Code);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Şırnak"' target[2].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Sirnak"' target[2].NameASCII);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(443189' target[2].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(443189' target[2].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("UA.26"' target[3].Code);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Zaporiz’ka Oblast’"' target[3].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Zaporiz'ka Oblast'"' target[3].NameASCII);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(687699' target[3].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin1CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(687699' target[3].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin2CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(2' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,Admin2CodesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(7052666' target[0].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(17' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(2488123' target[0].Id);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(4' target[0].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Нагольная"' target[2].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("บ้านน้ำฉ่า"' target[3].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("th"' target[3].ISOLanguage);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("글렌로시스"' target[4].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("ko"' target[4].ISOLanguage);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("TW13"' target[5].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("post"' target[5].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("FAB"' target[6].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("iata"' target[6].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("LSGG"' target[7].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("icao"' target[7].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("GSN"' target[8].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("faac"' target[8].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Saipan International Airport"' target[9].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(""' target[9].ISOLanguage);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsNull(target[9].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("http://en.wikipedia.org/wiki/Saipan_International_Airport"' target[10].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("link"' target[10].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Ile-de-la-Liberté"' target[11].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("fr_1793"' target[11].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("ཞིང་རི"' target[12].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("bo"' target[12].ISOLanguage);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("TRTO"' target[13].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("abbr"' target[13].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("The Jekyll & Hyde Pub"' target[14].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsTrue(target[14].IsPreferredName);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsFalse(target[14].IsColloquial);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsTrue(target[14].IsShortName);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsFalse(target[14].IsHistoric);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Torre Fiumicelli"' target[15].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsFalse(target[15].IsPreferredName);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsTrue(target[15].IsColloquial);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsFalse(target[15].IsShortName);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsFalse(target[15].IsHistoric);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Abbaye Saint-Antoine-des-Champs"' target[16].Name);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsFalse(target[16].IsPreferredName);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsFalse(target[16].IsColloquial);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsFalse(target[16].IsShortName);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsTrue(target[16].IsHistoric);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(5' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(12453592' target[0].Id);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(7258581' target[0].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("قولەی کانی ماران"' target[2].From);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Qulai Kanimaran"' target[2].To);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("19150903"' target[3].From);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(string.Empty' target[3].To);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("1589"' target[4].From);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,AlternateNamesParserV2_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("1925"' target[4].To);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CountryInfoParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(2' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CountryInfoParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(22966' target[0].Area);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CountryInfoParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(314522' target[0].Population);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CountryInfoParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(3582678' target[0].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(7' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(string.Empty' target[0].Admincodes[2]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(string.Empty' target[0].Admincodes[3]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("923"' target[1].Admincodes[2]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("2771781"' target[1].Admincodes[3]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(2' target[1].AlternateNames.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { "DZ"' "LY"' "MR"' "TN"' "EG"' "MA"' "EH"' "ML"' "NE"' "TD"' "SD" }' target[2].AlternateCountryCodes);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: CollectionAssert.AreEqual(new[] {                 "An Bhoisnia agus Heirseagovein"'                 "An Bhoisnia agus Heirseagóvéin"'                 "An Bhoisnia-Heirseagaivein"'                 "An Bhoisnia-Heirseagaivéin"'                 "Bhosnia le Herzegovina"'                 "Bo-xni-a Hec-xe-go-vi-na"'                 "Bo-xni-a Hec-xe-go-vi-na (Bosnia va Herzegovina)"'                 "Bos'nija i Gercagavina"'                 "Bosenia me Hesegowina"'                 "Bosini mpe Hezegovine"'                 "Bosini mpé Hezegovine"'                 "Bosiniya na Herigozevine"'                 "Bosiniya na Herizegovina"'                 "Bosmudin boln Khercegudin Orn"'                 "Bosna"'                 "Bosna Hersek"'                 "Bosna a Hercegovina"'                 "Bosna a Hercegowina"'                 "Bosna agus Hearsagobhana"'                 "Bosna doo Hetsog Bikeyah"'                 "Bosna dóó Hetsog Bikéyah"'                 "Bosna i Hercegovina"'                 "Bosna i Khercegovina"'                 "Bosna in Hercegovina"'                 "Bosna kap Hercegovina"'                 "Bosna u Hersek"'                 "Bosna va Hercegovina"'                 "Bosna ve Hersek"'                 "Bosna và Hercegovina"'                 "Bosna-Gercegovina"'                 "Bosna-Hersek"'                 "Bosnaen e Haerzegovaen"'                 "Bosneja i Hercegovina"'                 "Bosneje er Hercuogovena"'                 "Bosni"'                 "Bosni a Gercegovina a"'                 "Bosni aemae Gercegovinae"'                 "Bosni ak Erzegovin"'                 "Bosni ba Gercegovina"'                 "Bosni ba Khercegovina"'                 "Bosni tata Gercegovina"'                 "Bosnia"'                 "Bosnia & Herzegovina"'                 "Bosnia - Erzegobine"'                 "Bosnia - Hercegovina - Bosna i Khercegovina"'                 "Bosnia - Hercegovina - Босна и Херцеговина"'                 "Bosnia Ercegovina"'                 "Bosnia Erzegovina"'                 "Bosnia Herzegovina"'                 "Bosnia Herzogovina"'                 "Bosnia Hèrzègovina"'                 "Bosnia a Hercegovina"'                 "Bosnia a Herzegovina"'                 "Bosnia aamma Herzegovina"'                 "Bosnia and Hercegovina"'                 "Bosnia and Herzegovina"'                 "Bosnia as Herzegovina"'                 "Bosnia at Herzegovina"'                 "Bosnia ati Herjegofina"'                 "Bosnia dan Herzegovina"'                 "Bosnia e Ercegovina"'                 "Bosnia e Erzegovina"'                 "Bosnia e Erzegòvina"'                 "Bosnia e Hercegovina"'                 "Bosnia e Hertsegovina"'                 "Bosnia e Herzegovina"'                 "Bosnia ed Erzegovina"'                 "Bosnia et Herzegovina"'                 "Bosnia ev Hercʻegovina"'                 "Bosnia ha Herzegovina"'                 "Bosnia i Gercagavina"'                 "Bosnia i Gercogovina"'                 "Bosnia i Hercegovina"'                 "Bosnia i Hercegowina"'                 "Bosnia i Hersegovina"'                 "Bosnia ihuan Hertzegovina"'                 "Bosnia ja Hercegovina"'                 "Bosnia ja Hertsegoviina"'                 "Bosnia ja Hertsegovina"'                 "Bosnia ja Herzegovina"'                 "Bosnia jeung Herzegovina"'                 "Bosnia jeung Hérzégovina"'                 "Bosnia kai Erzegobine"'                 "Bosnia ken Herzegovina"'                 "Bosnia kple Herzergovina nutome"'                 "Bosnia ma Herzegovina"'                 "Bosnia na Erzegovina"'                 "Bosnia na Herzegovina"'                 "Bosnia na Hezegovina"'                 "Bosnia ne Hɛzegovina"'                 "Bosnia og Hercegovina"'                 "Bosnia og Hersegovina"'                 "Bosnia si Hertegovina"'                 "Bosnia sy Herzegovina"'                 "Bosnia ta Gercogovina"'                 "Bosnia tan Hersegobina"'                 "Bosnia ug Herzegovina"'                 "Bosnia y Hercegovina"'                 "Bosnia y Herzegovina"'                 "Bosnia è Erzegovina"'                 "Bosnia īhuān Hertzegovina"'                 "Bosnia și Herțegovina"'                 "Bosnia-Ercegovina"'                 "Bosnia-Erzegovina"'                 "Bosnia-Hercegovina"'                 "Bosnia-Hersegovina"'                 "Bosnia-Hertsegovina"'                 "Bosnia-Herzegovina"'                 "Bosnia-ha-Herzegovina"'                 "Bosnie Herzegovina"'                 "Bosnie an Herzegovinae"'                 "Bosnie en Herzegovina"'                 "Bosnie en Herzegowina"'                 "Bosnie-Erzegovine"'                 "Bosnie-Hercegovina"'                 "Bosnie-Herzegovena"'                 "Bosnie-Herzegovina"'                 "Bosnie-Herzegovine"'                 "Bosnie-Herzegowina"'                 "Bosnie-Herzégovine"'                 "Bosnie-Hèrzègovena"'                 "Bosnie-Érzégovine"'                 "Bosniehreh Gercegovinehreh"'                 "Bosnien an Herzegowina"'                 "Bosnien och Hercegovina"'                 "Bosnien un Herzegowina"'                 "Bosnien und Herzegowina"'                 "Bosnien-Hercegovina"'                 "Bosnien-Herzegowina"'                 "Bosnii Hersegowiin"'                 "Bosnii da Gercegovin"'                 "Bosnii na Herzegovinni"'                 "Bosnij da Gercegovina"'                 "Bosnija"'                 "Bosnija bla Gercegovina"'                 "Bosnija da Gercegovina"'                 "Bosnija di Khercegovina"'                 "Bosnija i Gercegovina"'                 "Bosnija ir Hercegovina"'                 "Bosnija no Gercegovina"'                 "Bosnija un Hercegovina"'                 "Bosnija uonna Khercegovina"'                 "Bosnijo e Hercegowina"'                 "Bosnikondre"'                 "Bosnio kaj Hercegovino"'                 "Bosnio-Hercegovino"'                 "Bosniska a Hercegowina"'                 "Bosniska-Hercegowinska"'                 "Bosniya"'                 "Bosniya Harzagobina"'                 "Bosniya Hersigoviina"'                 "Bosniya ham Gertsegovina"'                 "Bosniya hem Hertegovina"'                 "Bosniya hem Herțegovina"'                 "Bosniya u Herzegovina"'                 "Bosniya va Gersegovina"'                 "Bosniya və Herseqovina"'                 "Bosniya və Herzokovina"'                 "Bosniya we Gersegowina"'                 "Bosniya û Herzegovîna"'                 "Bosnië Herzegovina"'                 "Bosnië en Herzegovina"'                 "Bosnië en Herzegowina"'                 "Bosnië-Hercegovina"'                 "Bosnië-Herzegovina"'                 "Bosnië-Herzegowina"'                 "Bosniýa we Gersegowina"'                 "Bosni–Hercegovina"'                 "Bosnja dhe Hercegovina"'                 "Bosnje"'                 "Bosnya a Hersegowina"'                 "Bosnya asin Hersegobina"'                 "Bosnya ngan Hersegovina"'                 "Bosnän e Härzegovän"'                 "Bosnía og Hersegóvína"'                 "Bosnïi na Herzegovînni"'                 "Bosnėjė ėr Hercuogovėna"'                 "Bossnije-Haezzejovina"'                 "Bosznia es Hercegovina"'                 "Bosznia és Hercegovina"'                 "Bosznia-Hercegovina"'                 "Boteniya me Erdegobina"'                 "Boziniya Hezegovina"'                 "Bozni-Ɛrizigovini"'                 "Boznia ne Herzegovina"'                 "Boznija Herzegovina"'                 "Boznija u Herzegovina"'                 "Boßnije-Häzzejovina"'                 "Bośnia i Hercegowina"'                 "Bośńa a Hercegowina"'                 "Bożnija u Ħerżegovina"'                 "Bożnija Ħerżegovina"'                 "Busna-Hirsiquwina"'                 "Bòsnia Erzegovina"'                 "Bòsnia e Ercegovina"'                 "Bòsnia e Erzegòvina"'                 "Bòsnia i Hercegovina"'                 "Bòsnia-Erçegòvina"'                 "Bòsnijô ë Hercegòwina"'                 "Bósnia Ercegovina"'                 "Bósnia e Herzegovina"'                 "Bósnia-Herzegóvina"'                 "Bósníà àti Hẹrjẹgòfínà"'                 "Bô-xni-a Héc-xê-gô-vi-na"'                 "Bô-xni-a Héc-xê-gô-vi-na (Bosnia và Herzegovina)"'                 "IBhosinya ne Hezegovi"'                 "Mbosini ne Hezegovine"'                 "Narodna Republika Bosna i Hercegovina"'                 "Orileede Bosinia ati Etisegofina"'                 "Orílẹ́ède Bọ̀síníà àti Ẹtisẹgófínà"'                 "People's Republic of Bosnia and Hercegovina"'                 "People’s Republic of Bosnia and Hercegovina"'                 "Po-su-ni-a lau Het-set-ko-vi-na"'                 "Pongia-Herekomina"'                 "Posinia mo Hesikovinia"'                 "Posinia mo Hesikōvinia"'                 "Pô-sṳ-nì-â lâu Het-set-kô-vì-ná"'                 "Pōngia-Herekōmina"'                 "Republic of Bosnia and Herzegovina"'                 "Republika Bosna i Hercegovina"'                 "Socialist Republic of Bosnia and Hercegovina"'                 "Socijalisticka Republika Bosna i Hercegovina"'                 "Socijalistička Republika Bosna i Hercegovina"'                 "Vonia ha Hesegovina"'                 "Vosnia kai Erzegovini"'                 "albwsnh w alhrsk"'                 "albwsnt w alhrsk"'                 "albwsnt walhrsk"'                 "basaniya baro harjegobhina"'                 "basaniya o harjegobhina"'                 "basaniya'o harjegobhina"'                 "basniya"'                 "basniya mariyu hirjigovina"'                 "bo si ni ya"'                 "bo si ni ya he hei sai ge wei na"'                 "bo si ni ya he hei shan gong he guo"'                 "bosani'a ate harazegovina"'                 "bosani'a ebam harjagobhina"'                 "bosani'a o harjagobhina"'                 "bosaniya harjigovina"'                 "boseunia heleuchegobina"'                 "boseuniaheleuchegobina"'                 "bosnia da hertsegovina"'                 "bosnia do hertsegovina"'                 "bosniya ane harjhegovina"'                 "bosniya ani harjegovina"'                 "bosniya ani harjhagovhina"'                 "bosniya aura harazegovina"'                 "bosniya aura harzegovina"'                 "bosniya mariyu herjegovina"'                 "bosniya mattu harjegovina"'                 "bosniya mattu herjegovina"'                 "bosniya ra harjagobhina"'                 "bosniya ra harjagobhiniya"'                 "bosniya va harjagovina"'                 "bsny w hrzgwyn"'                 "bwsny hrzgwwyn"'                 "bwsny w hrzgwyn"'                 "bwsnyh whrzgwbynh"'                 "bwsnyyە vە ھېrsېgwvyna"'                 "bwsnʾ whrtsgwbynʾ"'                 "i-Bosnia ne-Herzegovina"'                 "pocuniya ercekovina"'                 "posniya marrum hersikovina"'                 "Βοσνία - Ερζεγοβίνη"'                 "Βοσνία και Ερζεγοβίνη"'                 "Босмудин болн Херцегудин Орн"'                 "Босна"'                 "Босна и Херцеговина"'                 "Босна-Герцеговина"'                 "Босни æмæ Герцеговинæ"'                 "Босни а Герцеговина а"'                 "Босни ба Герцеговина"'                 "Босни ба Херцеговина"'                 "Босни тата Герцеговина"'                 "Босний да Герцеговина"'                 "Босниэрэ Герцеговинэрэ"'                 "Босния"'                 "Босния бла Герцеговина"'                 "Босния ва Ҳерсеговина"'                 "Босния да Герцеговина"'                 "Босния ди Херцеговина"'                 "Босния және Герцеговина"'                 "Босния и Герцеговина"'                 "Босния но Герцеговина"'                 "Босния уонна Херцеговина"'                 "Босния һәм Герцеговина"'                 "Боснія та Герцоговина"'                 "Боснія і Герцагавіна"'                 "Боснія і Герцеговина"'                 "Боснія і Герцеґовина"'                 "Боснія і Герцоговина"'                 "Босьнія і Герцагавіна"'                 "Բոսնիա և Հերցեգովինա"'                 "Բոսնիա-Հերցեգովինա"'                 "באסניע און הערצעגאווינע"'                 "בוסניה והרצגובינה"'                 "البوسنة و الهرسك"'                 "البوسنة والهرسك"'                 "البوسنه و الهرسك"'                 "بسنی و هرزگوین"'                 "بوسنىيە ۋە ھېرسېگوۋىنا"'                 "بوسنی هرزگووین"'                 "بوسنی و هرزگوین"'                 "بوسنیا اور ہرزیگووینا"'                 "بوسنیا تے ہرزیگووینا"'                 "بوسنیا و ہرزیگووینا"'                 "بۆسنیا و ھەرزەگۆڤینا"'                 "ܒܘܣܢܐ ܘ ܗܪܣܟ"'                 "ܒܘܣܢܐ ܘܗܪܬܣܓܘܒܝܢܐ"'                 "ބޮސްނިޔާ އެންޑް ހެރްޒިގޮވީނާ"'                 "बास्निया"'                 "बॉस्निया आणि हर्झगोव्हिना"'                 "बॉस्निया और हर्ज़ेगोविना"'                 "बोसनिया हर्जिगोविना"'                 "बोस्निया अणि हर्जेगोविना"'                 "बोस्निया और हरज़ेगोविना"'                 "बोस्निया र हर्जगोभिना"'                 "बोस्निया र हर्जगोभिनिया"'                 "बोस्निया व हर्जगोविना"'                 "বসনিয়া ও হার্জেগোভিনা"'                 "বসনিয়া বারো হার্জেগোভিনা"'                 "বসনিয়াও হার্জেগোভিনা"'                 "ਬੋਸਨੀਆ ਅਤੇ ਹਰਜ਼ੇਗੋਵੀਨਾ"'                 "બોસ્નિયા અને હર્ઝેગોવિના"'                 "ବୋସନିଆ ଏବଂ ହର୍ଜଗୋଭିନା"'                 "ବୋସନିଆ ଓ ହର୍ଜଗୋଭିନା"'                 "பொசுனியா எர்செகோவினா"'                 "போஸ்னியா மற்றும் ஹெர்ஸிகோவினா"'                 "బాస్నియా మరియు హీర్జిగోవినా"'                 "బోస్నియా మరియు హెర్జెగొవీనా"'                 "ಬೊಸ್ನಿಯ ಮತ್ತು ಹೆರ್ಜೆಗೊವಿನ"'                 "ಬೋಸ್ನಿಯಾ ಮತ್ತು ಹರ್ಜೆಗೋವಿನಾ"'                 "ബോസ്നിയ ഹെർസെഗോവിന"'                 "ബോസ്നിയയും ഹെര്‍സഗോവിനയും"'                 "බොස්නියා සහ හර්සගෝවිනා"'                 "බොස්නියාව සහ හර්සගොවීනාව"'                 "บอสเนียและเฮอร์เซโกวีนา"'                 "ประเทศบอสเนียและเฮอร์เซโกวีนา"'                 "ບັອດສເນຍ ແລະ ເຮີດໂກວິເນຍ"'                 "ປະເທດບົດສະນີແຮກເຊໂກວີນ"'                 "བོསྣི་ཡ་དང་ཧརྫོ་གོ་ཝི་ན།"'                 "བྷོསུ་ནིཡ་དང་ཧར་ཛེ་གྷོ་ཝི་ན།"'                 "ဘော့စနီးယား နှင့် ဟာဇီဂိုဘီးနား"'                 "ဘော့စနီးယားနှင့် ဟာဇီဂိုဗီးနားနိုင်ငံ"'                 "ბოსნია და ჰერცეგოვინა"'                 "ბოსნია დო ჰერცეგოვინა"'                 "ቦስኒያ እና ሄርዞጎቪኒያ"'                 "ቦስኒያና ሄርጸጎቪና"'                 "ᏆᏍᏂᏯ ᎠᎴ ᎲᏤᎪᏫᎾ"'                 "បូស្ន៉ី"'                 "ボスニア・ヘルツェゴビナ"'                 "ボスニア・ヘルツェゴビナ共和国"'                 "波斯尼亚"'                 "波斯尼亚和黑塞哥维那"'                 "波斯尼亚和黑山共和国"'                 "波斯尼亞"'                 "보스니아 헤르체고비나"'                 "보스니아헤르체고비나"             }' target[3].AlternateNames);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("America/Argentina/Buenos Aires"' target[4].Timezone);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 6' 28)' target[0].ModificationDate);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 6' 28)' target[0].ModificationDate);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 6' 28)' target[0].ModificationDate);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(3812366000' target[5].Population);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(3812366000' target[5].Population);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(8848' target[6].Elevation);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ExtendedGeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(8848' target[6].Elevation);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FeatureCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(3' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FeatureCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsNull(target[2].Class);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FeatureCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.IsNull(target[2].Code);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,GeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(2' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,GeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(1136469' target[0].Id);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,GeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(33.33951' target[0].Latitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,GeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(69.92041' target[0].Longitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,GeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(3865840' target[1].Id);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,GeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(-28.46064' target[1].Latitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,GeoNameParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(-62.83472' target[1].Longitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(4' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(6295630' target[0].ParentId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(6255146' target[0].ChildId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(6255149' target[1].ParentId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(672027' target[2].ParentId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(672027' target[2].ParentId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(663875' target[2].ChildId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(663875' target[2].ChildId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(string.Empty' target[2].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(-1' target[3].ParentId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(3623365' target[3].ChildId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(3623365' target[3].ChildId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,HierarchyParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(string.Empty' target[3].Type);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,IsoLanguageCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(2' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(5' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(-10' target[1].GMTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(-9' target[1].DSTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(-10' target[1].RawOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("AU"' target[2].CountryCode);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Australia/Darwin"' target[2].TimeZoneId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(9.5' target[2].GMTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(9.5' target[2].GMTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(9.5' target[2].DSTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(9.5' target[2].DSTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(9.5' target[2].RawOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(9.5' target[2].RawOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("AU"' target[3].CountryCode);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Australia/Eucla"' target[3].TimeZoneId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(8.75' target[3].GMTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(8.75' target[3].GMTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(8.75' target[3].DSTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(8.75' target[3].DSTOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(8.75' target[3].RawOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(8.75' target[3].RawOffset);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,TimeZonesParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Africa/Dar es Salaam"' target[4].TimeZoneId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,UserTagParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(3' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,UserTagParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(2599253' target[0].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,UserTagParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(6255065' target[1].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,UserTagParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(6941058' target[2].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,UserTagParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(6941058' target[2].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,UserTagParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("lyžařské"' target[2].Tag);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,ContinentParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(6255148' target[0].GeoNameId);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(4' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(50.0333' target[1].Latitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(16.2833' target[1].Longitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("RU"' target[2].CountryCode);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("216270"' target[2].PostalCode);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Пржевальское"' target[2].PlaceName);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(55.5075' target[2].Latitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(55.5075' target[2].Latitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(31.85' target[2].Longitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(31.85' target[2].Longitude);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(4' target[2].Accuracy);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual(4' target[2].Accuracy);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("CH"' target[3].CountryCode);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("2023"' target[3].PostalCode);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Gorgier"' target[3].PlaceName);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("NE"' target[3].AdminCode[0]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("2401"' target[3].AdminCode[1]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("6410"' target[3].AdminCode[2]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("6410"' target[3].AdminCode[2]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Canton de Neuchâtel"' target[3].AdminName[0]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("District de Boudry"' target[3].AdminName[1]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Gorgier"' target[3].AdminName[2]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,PostalCodeParser_ParsesFileCorrectly,The following statement contains a magic number: Assert.AreEqual("Gorgier"' target[3].AdminName[2]);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CustomParser_IsUsedCorrectly,The following statement contains a magic number: var target = new GeoFileReader().ReadRecords(@"testdata\test_custom.txt"' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true)).ToArray();
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CustomParser_IsUsedCorrectly,The following statement contains a magic number: var target = new GeoFileReader().ReadRecords(@"testdata\test_custom.txt"' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true)).ToArray();
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,CustomParser_IsUsedCorrectly,The following statement contains a magic number: Assert.AreEqual(2' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FileReader_HandlesEmptyFilesCorrectly,The following statement contains a magic number: var target1 = new GeoFileReader().ReadRecords(@"testdata\emptyfile.txt"' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true)).ToArray();
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FileReader_HandlesEmptyFilesCorrectly,The following statement contains a magic number: var target1 = new GeoFileReader().ReadRecords(@"testdata\emptyfile.txt"' new CustomParser(19' 5' new[] { '☃' }' Encoding.UTF7' true)).ToArray();
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FileReader_HandlesGZippedFilesCorrectly,The following statement contains a magic number: Assert.AreEqual(2' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FileReader_CanReadBuiltInContinentsCorrectly,The following statement contains a magic number: Assert.AreEqual(7' target.Length);
Magic Number,NGeoNamesTests,ParserTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ParserTests.cs,FileReader_CanReadBuiltInFeatureClassesCorrectly,The following statement contains a magic number: Assert.AreEqual(9' target.Length);
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var center = rg.CreateFromLatLong(51.5286416' 0);
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: Assert.AreEqual(47' data.Length);
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsCorrectResults,The following statement contains a magic number: var searchresults = rg.RadialSearch(center' 100000.0).ToArray();
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var center = rg.CreateFromLatLong(51.5286416' 0);
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var maxresults = 10;
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: Assert.AreEqual(47' data.Length);
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var expected_ids = new[] { 2643741' 2646003' 2643743' 6690870' 2651621' 2655775' 2636503' 2634677' 2656194' 2653266 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_RadialSearch_ReturnsMaxCountResults,The following statement contains a magic number: var searchresults = rg.RadialSearch(center' 100000.0' maxresults).ToArray();
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var center = rg.CreateFromLatLong(51.5286416' 0);
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: Assert.AreEqual(47' data.Length);
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
Magic Number,NGeoNamesTests,ReverseGeoCodeTests,C:\research\architectureSmells\repos\RobThree_NGeoNames\NGeoNamesTests\ReverseGeoCodeTests.cs,ReverseGeoCode_NearestNeighbourSearch_ReturnsCorrectResults,The following statement contains a magic number: var expected_ids = new[] { 2640729' 2639577' 2642465' 2637627' 2633709' 2643339' 2634677' 2636503' 2652053' 2654710' 2643743' 2646003' 2643741' 2653941' 6690870' 2655775' 2651621' 2650497' 2656194' 2653266' 2648657' 2637433' 2652618' 2646057 };
