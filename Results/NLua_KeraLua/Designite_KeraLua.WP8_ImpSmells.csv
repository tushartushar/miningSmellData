Implementation smell,Namespace,Class,File,Method,Description
Long Statement,KeraLua,Lua,C:\repos\NLua_KeraLua\src\KeraLua\Lua.cs,LuaToCFunction,The length of the statement  "			LuaNativeFunction function = Marshal.GetDelegateForFunctionPointer (ptr' typeof (LuaNativeFunction)) as LuaNativeFunction;" is 122.
Complex Conditional,KeraLua,CharPtr,C:\repos\NLua_KeraLua\src\KeraLua\CharPtr.cs,ToString,The conditional expression  "length > 3 && buff [0] == 0x1B && buff [1] == 0x4C && buff [2] == 0x75 && buff [3] == 0x61"  is complex.
Magic Number,KeraLua,CharPtr,C:\repos\NLua_KeraLua\src\KeraLua\CharPtr.cs,ToString,The following statement contains a magic number: if (length > 3 && buff [0] == 0x1B && buff [1] == 0x4C && buff [2] == 0x75 && buff [3] == 0x61) {  				// It is a binary chunk  				StringBuilder s = new StringBuilder (length);  				foreach (byte b in buff)  					s.Append ((char)b);  				return s.ToString ();  			} else  #if WSTRING  #if WINDOWS_PHONE || NETFX_CORE  				return Encoding.UTF8.GetString (buff' 0' buff.Length);
Magic Number,KeraLua,CharPtr,C:\repos\NLua_KeraLua\src\KeraLua\CharPtr.cs,ToString,The following statement contains a magic number: if (length > 3 && buff [0] == 0x1B && buff [1] == 0x4C && buff [2] == 0x75 && buff [3] == 0x61) {  				// It is a binary chunk  				StringBuilder s = new StringBuilder (length);  				foreach (byte b in buff)  					s.Append ((char)b);  				return s.ToString ();  			} else  #if WSTRING  #if WINDOWS_PHONE || NETFX_CORE  				return Encoding.UTF8.GetString (buff' 0' buff.Length);
Magic Number,KeraLua,CharPtr,C:\repos\NLua_KeraLua\src\KeraLua\CharPtr.cs,ToString,The following statement contains a magic number: if (length > 3 && buff [0] == 0x1B && buff [1] == 0x4C && buff [2] == 0x75 && buff [3] == 0x61) {  				// It is a binary chunk  				StringBuilder s = new StringBuilder (length);  				foreach (byte b in buff)  					s.Append ((char)b);  				return s.ToString ();  			} else  #if WSTRING  #if WINDOWS_PHONE || NETFX_CORE  				return Encoding.UTF8.GetString (buff' 0' buff.Length);
