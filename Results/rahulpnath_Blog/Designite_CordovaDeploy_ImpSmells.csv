Implementation smell,Namespace,Class,File,Method,Description
Long Method,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Main,The method has 162 lines of code.
Complex Method,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Main,Cyclomatic complexity of the method is 10
Long Statement,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Usage,The length of the statement  "            Log("    -uninstall : will uninstall the application before re-installing it' removing all app documents and temp files");  " is 122.
Long Statement,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,ReadAppId,The length of the statement  "                    Log(string.Format("Unable to find appID' expected to find an App.ProductID property defined in the file {0}"' manifestFilePath)' true); " is 135.
Long Statement,CordovaDeploy,Program,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,ReadAppId,The length of the statement  "                    Log(string.Format("Unable to find appID' expected to find an App.ProductID property defined in the file {0}"' manifestFilePath)' true); " is 135.
Empty Catch Block,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Main,The method has an empty catch block.
Magic Number,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Main,The following statement contains a magic number: if (args.Length < 1)              {                  Usage();                  ReadWait();                  return;              }              else if (args.Contains("-devices"))              {                  ListDevices();                  ReadWait();                  return;              }              else if (args.Length > 1 && args[1].StartsWith("-d:"))              {                  deviceIndex = int.Parse(args[1].Substring(3));              }
Magic Number,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Main,The following statement contains a magic number: try              {                  IDevice device = deviceConn.Connect();                  IRemoteApplication app = null;                  if (device.IsApplicationInstalled(appID))                  {                      app = device.GetApplication(appID);                      if (uninstallFirst)                      {                          Log("Uninstalling app on " + deviceConn.Name);                          app.Uninstall();                          Log("Installing app on " + deviceConn.Name);                          app = device.InstallApplication(appID' appID' "NormalApp"' iconFilePath' xapFilePath);                      }                      else                      {                          Log("Updating app on " + deviceConn.Name);                          app.UpdateApplication("NormalApp"' iconFilePath' xapFilePath);                      }                                        }                  else                  {                      Log("Installing app on " + deviceConn.Name);                      app = device.InstallApplication(appID' appID' "NormalApp"' iconFilePath' xapFilePath);                  }                    Log("Launching app on " + deviceConn.Name);                  app.Launch();                    // wait for the app to launch                  Thread.Sleep(4000);                    bool isExiting = false;                    string tempFileName = Path.GetTempFileName();                    try                  {                      IRemoteIsolatedStorageFile isoFile = app.GetIsolatedStore();                      int index = 0;                      while (!isExiting) //app.IsRunning()) // not implemented ... wtf?                      {                            char[] buffer = new char[1000];                            isoFile.ReceiveFile((object)Path.DirectorySeparatorChar + "debugOutput.txt"' tempFileName' true);                          using (StreamReader reader = System.IO.File.OpenText(tempFileName))                          {                              try                              {                                  int newLinesRead = 0;                                  for (int lineNum = 0;; lineNum++)                                  {                                      if (reader.Peek() > -1)                                      {                                          string str = reader.ReadLine();                                          if (lineNum >= index)                                          {                                              newLinesRead++;                                              if (str == "EXIT")                                              {                                                  isExiting = true;                                              }                                              Log(str);                                          }                                      }                                      else                                      {                                          break;                                      }                                  }                                  index += newLinesRead;                              }                              catch (Exception ex)                              {                                  // at end of stream most likely' no worries' ... move along.                              }                          }                            Thread.Sleep(1000);                      }                        System.IO.File.Delete(tempFileName);                  }                  catch (Exception ex)                  {                      Log(ex.Message);                  }                    // To Stop :                  //app.TerminateRunningInstances();                    device.Disconnect();                    ReadWait();                }              catch (Exception ex)              {                  Log("Error :: " + ex.Message' true);              }
Magic Number,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Main,The following statement contains a magic number: try              {                  IDevice device = deviceConn.Connect();                  IRemoteApplication app = null;                  if (device.IsApplicationInstalled(appID))                  {                      app = device.GetApplication(appID);                      if (uninstallFirst)                      {                          Log("Uninstalling app on " + deviceConn.Name);                          app.Uninstall();                          Log("Installing app on " + deviceConn.Name);                          app = device.InstallApplication(appID' appID' "NormalApp"' iconFilePath' xapFilePath);                      }                      else                      {                          Log("Updating app on " + deviceConn.Name);                          app.UpdateApplication("NormalApp"' iconFilePath' xapFilePath);                      }                                        }                  else                  {                      Log("Installing app on " + deviceConn.Name);                      app = device.InstallApplication(appID' appID' "NormalApp"' iconFilePath' xapFilePath);                  }                    Log("Launching app on " + deviceConn.Name);                  app.Launch();                    // wait for the app to launch                  Thread.Sleep(4000);                    bool isExiting = false;                    string tempFileName = Path.GetTempFileName();                    try                  {                      IRemoteIsolatedStorageFile isoFile = app.GetIsolatedStore();                      int index = 0;                      while (!isExiting) //app.IsRunning()) // not implemented ... wtf?                      {                            char[] buffer = new char[1000];                            isoFile.ReceiveFile((object)Path.DirectorySeparatorChar + "debugOutput.txt"' tempFileName' true);                          using (StreamReader reader = System.IO.File.OpenText(tempFileName))                          {                              try                              {                                  int newLinesRead = 0;                                  for (int lineNum = 0;; lineNum++)                                  {                                      if (reader.Peek() > -1)                                      {                                          string str = reader.ReadLine();                                          if (lineNum >= index)                                          {                                              newLinesRead++;                                              if (str == "EXIT")                                              {                                                  isExiting = true;                                              }                                              Log(str);                                          }                                      }                                      else                                      {                                          break;                                      }                                  }                                  index += newLinesRead;                              }                              catch (Exception ex)                              {                                  // at end of stream most likely' no worries' ... move along.                              }                          }                            Thread.Sleep(1000);                      }                        System.IO.File.Delete(tempFileName);                  }                  catch (Exception ex)                  {                      Log(ex.Message);                  }                    // To Stop :                  //app.TerminateRunningInstances();                    device.Disconnect();                    ReadWait();                }              catch (Exception ex)              {                  Log("Error :: " + ex.Message' true);              }
Magic Number,CordovaDeploy,DeployTool,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Main,The following statement contains a magic number: try              {                  IDevice device = deviceConn.Connect();                  IRemoteApplication app = null;                  if (device.IsApplicationInstalled(appID))                  {                      app = device.GetApplication(appID);                      if (uninstallFirst)                      {                          Log("Uninstalling app on " + deviceConn.Name);                          app.Uninstall();                          Log("Installing app on " + deviceConn.Name);                          app = device.InstallApplication(appID' appID' "NormalApp"' iconFilePath' xapFilePath);                      }                      else                      {                          Log("Updating app on " + deviceConn.Name);                          app.UpdateApplication("NormalApp"' iconFilePath' xapFilePath);                      }                                        }                  else                  {                      Log("Installing app on " + deviceConn.Name);                      app = device.InstallApplication(appID' appID' "NormalApp"' iconFilePath' xapFilePath);                  }                    Log("Launching app on " + deviceConn.Name);                  app.Launch();                    // wait for the app to launch                  Thread.Sleep(4000);                    bool isExiting = false;                    string tempFileName = Path.GetTempFileName();                    try                  {                      IRemoteIsolatedStorageFile isoFile = app.GetIsolatedStore();                      int index = 0;                      while (!isExiting) //app.IsRunning()) // not implemented ... wtf?                      {                            char[] buffer = new char[1000];                            isoFile.ReceiveFile((object)Path.DirectorySeparatorChar + "debugOutput.txt"' tempFileName' true);                          using (StreamReader reader = System.IO.File.OpenText(tempFileName))                          {                              try                              {                                  int newLinesRead = 0;                                  for (int lineNum = 0;; lineNum++)                                  {                                      if (reader.Peek() > -1)                                      {                                          string str = reader.ReadLine();                                          if (lineNum >= index)                                          {                                              newLinesRead++;                                              if (str == "EXIT")                                              {                                                  isExiting = true;                                              }                                              Log(str);                                          }                                      }                                      else                                      {                                          break;                                      }                                  }                                  index += newLinesRead;                              }                              catch (Exception ex)                              {                                  // at end of stream most likely' no worries' ... move along.                              }                          }                            Thread.Sleep(1000);                      }                        System.IO.File.Delete(tempFileName);                  }                  catch (Exception ex)                  {                      Log(ex.Message);                  }                    // To Stop :                  //app.TerminateRunningInstances();                    device.Disconnect();                    ReadWait();                }              catch (Exception ex)              {                  Log("Error :: " + ex.Message' true);              }
Magic Number,CordovaDeploy,Program,C:\repos\rahulpnath_Blog\GettingStartedOnPhoneGap\SimpleApp\platforms\wp8\cordova\lib\CordovaDeploy\CordovaDeploy\Program.cs,Main,The following statement contains a magic number: if (args.Length < 1)              {                  Usage();                  ReadWait();                  return;              }              else if (args[0] == "-devices")              {                  ListDevices();                  ReadWait();                  return;              }              else if (args.Length > 1 && args[1].StartsWith("-d:"))              {                  deviceIndex = int.Parse(args[1].Substring(3));              }
