Implementation smell,Namespace,Class,File,Method,Description
Long Method,IrcD.Modes,ChannelModeList,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModeList.cs,Update,The method has 190 lines of code.
Complex Method,IrcD.Commands,Capabilities,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Capabilities.cs,PrivateHandle,Cyclomatic complexity of the method is 8
Complex Method,IrcD.Commands,CommandList,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\CommandList.cs,Handle,Cyclomatic complexity of the method is 8
Complex Method,IrcD.Commands,Notice,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Notice.cs,PrivateHandle,Cyclomatic complexity of the method is 9
Complex Method,IrcD.Commands,PrivateMessage,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\PrivateMessage.cs,PrivateHandle,Cyclomatic complexity of the method is 9
Complex Method,IrcD.Commands,Stats,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Stats.cs,PrivateHandle,Cyclomatic complexity of the method is 8
Complex Method,IrcD.Commands,Who,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Who.cs,PrivateHandle,Cyclomatic complexity of the method is 8
Complex Method,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,MainLoop,Cyclomatic complexity of the method is 11
Complex Method,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,Parser,Cyclomatic complexity of the method is 14
Complex Method,IrcD.Modes,ChannelModeList,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModeList.cs,Update,Cyclomatic complexity of the method is 35
Complex Method,IrcD.Modes,UserModeList,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\UserModeList.cs,Update,Cyclomatic complexity of the method is 9
Complex Method,IrcD.ServerReplies,ServerReplies,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\ServerReplies\ServerReplies.cs,SendSplitted,Cyclomatic complexity of the method is 10
Long Parameter List,IrcD.Commands,CommandList,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\CommandList.cs,Handle,The method has 5 parameters. Parameters: info' prefix' replyCode' args' bytes
Long Parameter List,IrcD.Commands,CommandList,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\CommandList.cs,Handle,The method has 5 parameters. Parameters: info' prefix' command' args' bytes
Long Parameter List,IrcD.Commands.Arguments,KickArgument,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Arguments\KickArgument.cs,KickArgument,The method has 5 parameters. Parameters: sender' receiver' channel' user' message
Long Parameter List,IrcD.Core,UserInfo,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\UserInfo.cs,UserInfo,The method has 5 parameters. Parameters: ircDaemon' socket' host' isAcceptSocket' passAccepted
Long Statement,IrcD.Commands,CommandList,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\CommandList.cs,Handle,The length of the statement  "                var checkRegistered = Attribute.GetCustomAttribute(handleMethodInfo' typeof(CheckRegisteredAttribute)) as CheckRegisteredAttribute; " is 131.
Long Statement,IrcD.Commands,CommandList,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\CommandList.cs,Handle,The length of the statement  "                var checkParamCount = Attribute.GetCustomAttribute(handleMethodInfo' typeof(CheckParamCountAttribute)) as CheckParamCountAttribute; " is 131.
Long Statement,IrcD.Commands,Join,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Join.cs,PrivateHandle,The length of the statement  "                // ToDo: this probably should get delegated to the Channel Type specific "NormalChannel" class' because it depends on the channel type. " is 135.
Long Statement,IrcD.Commands,Knock,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Knock.cs,PrivateHandle,The length of the statement  "                Send(new NoticeArgument(chan' chan.Name' "[KNOCK] by " + info.Usermask + "(" + ((args.Count > 1) ? args[1] : "no reason specified") + ")")); " is 140.
Long Statement,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,MainLoop,The length of the statement  "                                Sockets.Add(temp' new UserInfo(this' temp' ((IPEndPoint)temp.RemoteEndPoint).Address.ToString()' false' String.IsNullOrEmpty(Options.ServerPass))); " is 147.
Long Statement,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,MainLoop,The length of the statement  "                                    foreach (string line in Encoding.UTF8.GetString(_buffer' 0' numBytes).Split(new[] { '\r'' '\n' }' StringSplitOptions.RemoveEmptyEntries)) " is 137.
Long Statement,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,ValidNick,The length of the statement  "                if (nick.Any(c => c == ' ' || c == ''' || c == '\x7' || c == '!' || c == '@' || c == '*' || c == '?' || c == '+' || c == '%' || c == '#')) " is 138.
Long Statement,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,ValidNick,The length of the statement  "                if (!nick.All(c => (c >= '\x5B' && c <= '\x60') || (c >= '\x7B' && c <= '\x7D') || (c >= 'a' && c < 'z') || (c >= 'A' && c < 'Z') || (c >= '0' && c < '9') " is 154.
Long Statement,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,ValidChannel,The length of the statement  "            return SupportedChannelTypes.Any(t => t.Value.Prefix == channel[0]) && (!channel.Any(c => c == ' ' || c == ''' || c == '\x7' || c == ':')); " is 139.
Long Statement,IrcD.Modes,ModeList<TMode>,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ModeList.cs,Add,The length of the statement  "            bool exists = (bool)typeof(ModeList<TMode>).GetMethod("Exist").MakeGenericMethod(new[] { element.GetType() }).Invoke(this' null); " is 129.
Long Statement,IrcD.Modes.ChannelModes,ModeColorless,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModes\ModeColorless.cs,HandleEvent,The length of the statement  "                if (args[1].Any(c => c == IrcConstants.IrcBold || c == IrcConstants.IrcNormal || c == IrcConstants.IrcUnderline || c == IrcConstants.IrcReverse)) " is 145.
Long Statement,IrcD.Modes.ChannelModes,ModeColorless,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModes\ModeColorless.cs,HandleEvent,The length of the statement  "                    channel.IrcDaemon.Replies.SendCannotSendToChannel(user' channel.Name' "Control codes (bold/underline/reverse) are not permitted in this channel"); " is 146.
Long Statement,IrcD.Modes.ChannelModes,ModeTranslate,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModes\ModeTranslate.cs,HandleEvent,The length of the statement  "                user.IrcDaemon.Commands.Send(new NoticeArgument(user' user' channel.Name' "This channel automatically translates your messages' use the LANGUAGE command to set your preferred language")); " is 187.
Long Statement,IrcD.ServerReplies,ServerReplies,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\ServerReplies\ServerReplies.cs,SendISupport,The length of the statement  "            features.Add("CHANLIMIT=" + daemon.SupportedChannelTypes.Select(c => c.Value.Prefix + ":" + c.Value.MaxJoinedAllowed).Concatenate("'")); " is 136.
Long Statement,IrcD.ServerReplies,ServerReplies,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\ServerReplies\ServerReplies.cs,SendWhoIsChannels,The length of the statement  "            SendSplitted(_response.ToString()' info' who.UserPerChannelInfos.Select(ucpi => ucpi.Modes.NickPrefix + ucpi.ChannelInfo.Name)' null); " is 134.
Long Statement,IrcD.ServerReplies,ServerReplies,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\ServerReplies\ServerReplies.cs,SendInviting,The length of the statement  "            // The RFC Tells the order should be <channel> <nick> however xchat and the servers I tested say it is: <nick> <channel> " is 120.
Long Statement,IrcD.ServerReplies,ServerReplies,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\ServerReplies\ServerReplies.cs,SendWhoReply,The length of the statement  "            _response.Append(who.UserInfo.Modes.Exist<ModeOperator>() || who.UserInfo.Modes.Exist<ModeLocalOperator>() ? "*" : string.Empty); " is 129.
Long Statement,IrcD.ServerReplies,ServerReplies,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\ServerReplies\ServerReplies.cs,SendNamesReply,The length of the statement  "            SendSplitted(_response.ToString()' info' chan.UserPerChannelInfos.Values.Select(upci => upci.Modes.NickPrefix + upci.UserInfo.Nick)' null); " is 139.
Long Statement,IrcD.ServerReplies,ServerReplies,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\ServerReplies\ServerReplies.cs,SendMotd,The length of the statement  "            foreach (var motdLine in _ircDaemon.Options.MessageOfTheDay.Split(new[] { '\r'' '\n' }' StringSplitOptions.RemoveEmptyEntries)) " is 127.
Complex Conditional,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,ValidNick,The conditional expression  "nick.Any(c => c == ' ' || c == ''' || c == '\x7' || c == '!' || c == '@' || c == '*' || c == '?' || c == '+' || c == '%' || c == '#')"  is complex.
Complex Conditional,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,ValidNick,The conditional expression  "!nick.All(c => (c >= '\x5B' && c <= '\x60') || (c >= '\x7B' && c <= '\x7D') || (c >= 'a' && c < 'z') || (c >= 'A' && c < 'Z') || (c >= '0' && c < '9')                                      || c == '[' || c == ']' || c == '\\' || c == '`' || c == '_' || c == '^' || c == '{' || c == '|' || c == '}')"  is complex.
Complex Conditional,IrcD.Modes.ChannelModes,ModeColorless,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModes\ModeColorless.cs,HandleEvent,The conditional expression  "args[1].Any(c => c == IrcConstants.IrcBold || c == IrcConstants.IrcNormal || c == IrcConstants.IrcUnderline || c == IrcConstants.IrcReverse)"  is complex.
Magic Number,IrcD.Commands,Kick,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Kick.cs,PrivateHandle,The following statement contains a magic number: var message = (args.Count > 2) ? args[2] : null;
Magic Number,IrcD.Commands,Kick,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Kick.cs,PrivateHandle,The following statement contains a magic number: var message = (args.Count > 2) ? args[2] : null;
Magic Number,IrcD.Commands,Notice,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\Notice.cs,PrivateHandle,The following statement contains a magic number: args.Count < 2
Magic Number,IrcD.Commands,PrivateMessage,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\PrivateMessage.cs,PrivateHandle,The following statement contains a magic number: args.Count < 2
Magic Number,IrcD.Commands,User,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\User.cs,PrivateHandle,The following statement contains a magic number: (flags & 8) > 0
Magic Number,IrcD.Commands,User,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\User.cs,PrivateHandle,The following statement contains a magic number: (flags & 4) > 0
Magic Number,IrcD.Commands,User,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Commands\User.cs,PrivateHandle,The following statement contains a magic number: info.InitUser(args[0]' args[3]);
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,MainLoop,The following statement contains a magic number: connectSocket.Listen(20);
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,MainLoop,The following statement contains a magic number: Socket.Select(activeSockets' null' null' 2000000);
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,MainLoop,The following statement contains a magic number: Logger.Log("New Client connected!"' 4' "MainLoop");
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,MainLoop,The following statement contains a magic number: user.LastAlive < DateTime.Now.AddMinutes(-5)
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,MainLoop,The following statement contains a magic number: serverSocket.Socket.Close(5);
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,Parser,The following statement contains a magic number: replyCode = (ReplyCode)int.Parse(line.Substring(i + 1' 3));
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,Parser,The following statement contains a magic number: i += 4;
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,Parser,The following statement contains a magic number: char.IsDigit(line[i + 1]) && char.IsDigit(line[i + 2]) && char.IsDigit(line[i + 3])
Magic Number,IrcD.Core,IrcDaemon,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\IrcDaemon.cs,Parser,The following statement contains a magic number: char.IsDigit(line[i + 1]) && char.IsDigit(line[i + 2]) && char.IsDigit(line[i + 3])
Magic Number,IrcD.Core.Utils,P10Numeric,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\Utils\P10Numerics.cs,CreateString,The following statement contains a magic number: NumericString(_serverNumeric' 2);
Magic Number,IrcD.Core.Utils,P10Numeric,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Core\Utils\P10Numerics.cs,CreateString,The following statement contains a magic number: NumericString(_clientNumeric.Value' 3);
Magic Number,IrcD.Modes.ChannelModes,ModeInvite,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModes\ModeInvite.cs,HandleEvent,The following statement contains a magic number: upci.Modes.Level < 30
Magic Number,IrcD.Modes.ChannelModes,ModeModerated,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModes\ModeModerated.cs,HandleEvent,The following statement contains a magic number: !channel.UserPerChannelInfos.TryGetValue(user.Nick' out upci) || upci.Modes.Level < 10
Magic Number,IrcD.Modes.ChannelModes,ModeTopic,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Modes\ChannelModes\ModeTopic.cs,HandleEvent,The following statement contains a magic number: upci.Modes.Level < 30
Magic Number,IrcD.ServerReplies,ServerReplies,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\ServerReplies\ServerReplies.cs,SendSplitted,The following statement contains a magic number: var postfixlength = 2 + postfix?.Length ?? 0;
Magic Number,IrcD.Tools,DateTimeUtils,D:\research\architectureSmells\repos\FreeApophis_ircddotnet\IrcD.Net\Tools\DateTimeUtils.cs,ToUnixTime,The following statement contains a magic number: var span = dateTime - new DateTime(1970' 1' 1);
